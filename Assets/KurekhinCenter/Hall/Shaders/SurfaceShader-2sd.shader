// Compiled shader for PC, Mac & Linux Standalone

//////////////////////////////////////////////////////////////////////////
// 
// NOTE: This is *not* a valid shader file, the contents are provided just
// for information and for debugging purposes only.
// 
//////////////////////////////////////////////////////////////////////////
// Skipping shader variants that would not be included into build of current scene.

Shader "Standard (Specular setup)" {
Properties {
 _Color ("Color", Color) = (1.000000,1.000000,1.000000,1.000000)
 _MainTex ("Albedo", 2D) = "white" { }
 _Cutoff ("Alpha Cutoff", Range(0.000000,1.000000)) = 0.500000
 _Glossiness ("Smoothness", Range(0.000000,1.000000)) = 0.500000
 _GlossMapScale ("Smoothness Factor", Range(0.000000,1.000000)) = 1.000000
[Enum(Specular Alpha,0,Albedo Alpha,1)]  _SmoothnessTextureChannel ("Smoothness texture channel", Float) = 0.000000
 _SpecColor ("Specular", Color) = (0.200000,0.200000,0.200000,1.000000)
 _SpecGlossMap ("Specular", 2D) = "white" { }
[ToggleOff]  _SpecularHighlights ("Specular Highlights", Float) = 1.000000
[ToggleOff]  _GlossyReflections ("Glossy Reflections", Float) = 1.000000
 _BumpScale ("Scale", Float) = 1.000000
[Normal]  _BumpMap ("Normal Map", 2D) = "bump" { }
 _Parallax ("Height Scale", Range(0.005000,0.080000)) = 0.020000
 _ParallaxMap ("Height Map", 2D) = "black" { }
 _OcclusionStrength ("Strength", Range(0.000000,1.000000)) = 1.000000
 _OcclusionMap ("Occlusion", 2D) = "white" { }
 _EmissionColor ("Color", Color) = (0.000000,0.000000,0.000000,1.000000)
 _EmissionMap ("Emission", 2D) = "white" { }
 _DetailMask ("Detail Mask", 2D) = "white" { }
 _DetailAlbedoMap ("Detail Albedo x2", 2D) = "grey" { }
 _DetailNormalMapScale ("Scale", Float) = 1.000000
[Normal]  _DetailNormalMap ("Normal Map", 2D) = "bump" { }
[Enum(UV0,0,UV1,1)]  _UVSec ("UV Set for secondary textures", Float) = 0.000000
[HideInInspector]  _Mode ("__mode", Float) = 0.000000
[HideInInspector]  _SrcBlend ("__src", Float) = 1.000000
[HideInInspector]  _DstBlend ("__dst", Float) = 0.000000
[HideInInspector]  _ZWrite ("__zw", Float) = 1.000000
}
SubShader { 
 LOD 300

 Cull Off
 Tags { "RenderType"="Opaque" "PerformanceChecks"="False" }


 // Stats for Vertex shader:
 //        d3d11: 34 avg math (22..66)
 // Stats for Fragment shader:
 //        d3d11: 157 avg math (129..186), 6 avg texture (3..9), 6 avg branch (4..8)
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="FORWARDBASE" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite [_ZWrite]
  Blend [_SrcBlend] [_DstBlend]
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov r0.w, l(0)
  19: mov o3.xyzw, r0.wwwx
  20: mov o4.xyzw, r0.wwwy
  21: mov o5.w, r0.z
  22: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  23: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  24: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  25: dp3 r0.w, r0.xyzx, r0.xyzx
  26: rsq r0.w, r0.w
  27: mul o5.xyz, r0.wwww, r0.xyzx
  28: mov o6.xyzw, l(0,0,0,0)
  29: mov o7.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 141 math, 13 temp registers, 3 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 2 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 3 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r2.xyz, r1.wwww, v2.xyzx
  12: eq r2.w, cb3[0].x, l(1.000000)
  13: if_nz r2.w
  14:   eq r2.w, cb3[0].y, l(1.000000)
  15:   mul r3.xyz, v4.wwww, cb3[2].xyzx
  16:   mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  17:   mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  18:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  19:   mov r4.y, v3.w
  20:   mov r4.z, v4.w
  21:   mov r4.w, v5.w
  22:   movc r3.xyz, r2.wwww, r3.xyzx, r4.yzwy
  23:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  24:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  25:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  26:   mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
  27:   max r3.x, r2.w, r3.y
  28:   sample r3.xyzw, r3.xzwx, t4.xyzw, s1
  29: else 
  30:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  31: endif 
  32: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  33: sample r3.xyzw, v1.xyxx, t1.xyzw, s3
  34: add r3.x, -cb0[9].y, l(1.000000)
  35: mad r3.x, r3.y, cb0[9].y, r3.x
  36: add r3.y, -cb0[8].w, l(1.000000)
  37: dp3 r3.z, r2.xyzx, r1.xyzx
  38: add r3.z, r3.z, r3.z
  39: mad r4.xyz, r1.xyzx, -r3.zzzz, r2.xyzx
  40: mul r5.xyz, r2.wwww, cb0[2].xyzx
  41: lt r2.w, l(0.000000), cb2[2].w
  42: if_nz r2.w
  43:   dp3 r2.w, r4.xyzx, r4.xyzx
  44:   rsq r2.w, r2.w
  45:   mul r6.xyz, r2.wwww, r4.xyzx
  46:   mov r7.x, v3.w
  47:   mov r7.y, v4.w
  48:   mov r7.z, v5.w
  49:   add r8.xyz, -r7.xyzx, cb2[0].xyzx
  50:   div r8.xyz, r8.xyzx, r6.xyzx
  51:   add r9.xyz, -r7.xyzx, cb2[1].xyzx
  52:   div r9.xyz, r9.xyzx, r6.xyzx
  53:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  54:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  55:   min r2.w, r8.y, r8.x
  56:   min r2.w, r8.z, r2.w
  57:   add r7.xyz, r7.xyzx, -cb2[2].xyzx
  58:   mad r6.xyz, r6.xyzx, r2.wwww, r7.xyzx
  59: else 
  60:   mov r6.xyz, r4.xyzx
  61: endif 
  62: mad r2.w, -r3.y, l(0.700000), l(1.700000)
  63: mul r2.w, r2.w, r3.y
  64: mul r2.w, r2.w, l(6.000000)
  65: sample_l r6.xyzw, r6.xyzx, t2.xyzw, s0, r2.w
  66: add r3.z, r6.w, l(-1.000000)
  67: mad r3.z, cb2[3].w, r3.z, l(1.000000)
  68: log r3.z, r3.z
  69: mul r3.z, r3.z, cb2[3].y
  70: exp r3.z, r3.z
  71: mul r3.z, r3.z, cb2[3].x
  72: mul r7.xyz, r6.xyzx, r3.zzzz
  73: lt r3.w, cb2[1].w, l(0.999990)
  74: if_nz r3.w
  75:   lt r3.w, l(0.000000), cb2[6].w
  76:   if_nz r3.w
  77:     dp3 r3.w, r4.xyzx, r4.xyzx
  78:     rsq r3.w, r3.w
  79:     mul r8.xyz, r3.wwww, r4.xyzx
  80:     mov r9.x, v3.w
  81:     mov r9.y, v4.w
  82:     mov r9.z, v5.w
  83:     add r10.xyz, -r9.xyzx, cb2[4].xyzx
  84:     div r10.xyz, r10.xyzx, r8.xyzx
  85:     add r11.xyz, -r9.xyzx, cb2[5].xyzx
  86:     div r11.xyz, r11.xyzx, r8.xyzx
  87:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  88:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  89:     min r3.w, r10.y, r10.x
  90:     min r3.w, r10.z, r3.w
  91:     add r9.xyz, r9.xyzx, -cb2[6].xyzx
  92:     mad r4.xyz, r8.xyzx, r3.wwww, r9.xyzx
  93:   endif 
  94:   sample_l r4.xyzw, r4.xyzx, t3.xyzw, s0, r2.w
  95:   add r2.w, r4.w, l(-1.000000)
  96:   mad r2.w, cb2[7].w, r2.w, l(1.000000)
  97:   log r2.w, r2.w
  98:   mul r2.w, r2.w, cb2[7].y
  99:   exp r2.w, r2.w
 100:   mul r2.w, r2.w, cb2[7].x
 101:   mul r4.xyz, r4.xyzx, r2.wwww
 102:   mad r6.xyz, r3.zzzz, r6.xyzx, -r4.xyzx
 103:   mad r7.xyz, cb2[1].wwww, r6.xyzx, r4.xyzx
 104: endif 
 105: mul r3.xzw, r3.xxxx, r7.xxyz
 106: mad r4.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
 107: dp3 r1.w, r4.xyzx, r4.xyzx
 108: max r1.w, r1.w, l(0.001000)
 109: rsq r1.w, r1.w
 110: mul r4.xyz, r1.wwww, r4.xyzx
 111: dp3 r1.w, r1.xyzx, -r2.xyzx
 112: dp3_sat r2.x, r1.xyzx, cb1[0].xyzx
 113: dp3_sat r1.x, r1.xyzx, r4.xyzx
 114: dp3_sat r1.y, cb1[0].xyzx, r4.xyzx
 115: mul r1.z, r1.y, r1.y
 116: dp2 r1.z, r1.zzzz, r3.yyyy
 117: add r1.z, r1.z, l(-0.500000)
 118: add r2.y, -r2.x, l(1.000000)
 119: mul r2.z, r2.y, r2.y
 120: mul r2.z, r2.z, r2.z
 121: mul r2.y, r2.y, r2.z
 122: mad r2.y, r1.z, r2.y, l(1.000000)
 123: add r2.z, -|r1.w|, l(1.000000)
 124: mul r2.w, r2.z, r2.z
 125: mul r2.w, r2.w, r2.w
 126: mul r2.z, r2.z, r2.w
 127: mad r1.z, r1.z, r2.z, l(1.000000)
 128: mul r1.z, r1.z, r2.y
 129: mul r2.y, r3.y, r3.y
 130: max r2.y, r2.y, l(0.002000)
 131: add r2.w, -r2.y, l(1.000000)
 132: mad r3.y, |r1.w|, r2.w, r2.y
 133: mad r2.w, r2.x, r2.w, r2.y
 134: mul r1.w, |r1.w|, r2.w
 135: mad r1.w, r2.x, r3.y, r1.w
 136: add r1.w, r1.w, l(0.000010)
 137: div r1.w, l(0.500000), r1.w
 138: mul r2.w, r2.y, r2.y
 139: mad r3.y, r1.x, r2.w, -r1.x
 140: mad r1.x, r3.y, r1.x, l(1.000000)
 141: mul r2.w, r2.w, l(0.318310)
 142: mad r1.x, r1.x, r1.x, l(0.000000)
 143: div r1.x, r2.w, r1.x
 144: mul r1.x, r1.x, r1.w
 145: mul r1.x, r1.x, l(3.141593)
 146: mul r1.xz, r2.xxxx, r1.xxzx
 147: max r1.x, r1.x, l(0.000000)
 148: mad r1.w, r2.y, r2.y, l(1.000000)
 149: div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
 150: dp3 r2.x, cb0[3].xyzx, cb0[3].xyzx
 151: ne r2.x, r2.x, l(0.000000)
 152: and r2.x, r2.x, l(0x3f800000)
 153: mul r1.x, r1.x, r2.x
 154: add r0.w, -r0.w, l(1.000000)
 155: add_sat r0.w, r0.w, cb0[8].w
 156: mul r2.xyw, r1.zzzz, r5.xyxz
 157: mul r4.xyz, r5.xyzx, r1.xxxx
 158: add r1.x, -r1.y, l(1.000000)
 159: mul r1.y, r1.x, r1.x
 160: mul r1.y, r1.y, r1.y
 161: mul r1.x, r1.x, r1.y
 162: add r5.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 163: mad r1.xyz, r5.xyzx, r1.xxxx, cb0[3].xyzx
 164: mul r1.xyz, r1.xyzx, r4.xyzx
 165: mad r0.xyz, r0.xyzx, r2.xywx, r1.xyzx
 166: mul r1.xyz, r3.xzwx, r1.wwww
 167: add r2.xyw, r0.wwww, -cb0[3].xyxz
 168: mad r2.xyz, r2.zzzz, r2.xywx, cb0[3].xyzx
 169: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
 170: mov o0.w, l(1.000000)
 171: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mov r0.x, cb3[0].x
  15: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  16: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  17: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  18: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  19: add o2.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  20: mov r1.w, l(0)
  21: mov o3.xyzw, r1.wwwx
  22: mov o4.xyzw, r1.wwwy
  23: mov o5.w, r1.z
  24: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  25: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  26: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul o5.xyz, r0.wwww, r0.xyzx
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 141 math, 13 temp registers, 3 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 2 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 3 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r2.xyz, r1.wwww, v2.xyzx
  12: eq r2.w, cb3[0].x, l(1.000000)
  13: if_nz r2.w
  14:   eq r2.w, cb3[0].y, l(1.000000)
  15:   mul r3.xyz, v4.wwww, cb3[2].xyzx
  16:   mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  17:   mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  18:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  19:   mov r4.y, v3.w
  20:   mov r4.z, v4.w
  21:   mov r4.w, v5.w
  22:   movc r3.xyz, r2.wwww, r3.xyzx, r4.yzwy
  23:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  24:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  25:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  26:   mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
  27:   max r3.x, r2.w, r3.y
  28:   sample r3.xyzw, r3.xzwx, t4.xyzw, s1
  29: else 
  30:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  31: endif 
  32: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  33: sample r3.xyzw, v1.xyxx, t1.xyzw, s3
  34: add r3.x, -cb0[9].y, l(1.000000)
  35: mad r3.x, r3.y, cb0[9].y, r3.x
  36: add r3.y, -cb0[8].w, l(1.000000)
  37: dp3 r3.z, r2.xyzx, r1.xyzx
  38: add r3.z, r3.z, r3.z
  39: mad r4.xyz, r1.xyzx, -r3.zzzz, r2.xyzx
  40: mul r5.xyz, r2.wwww, cb0[2].xyzx
  41: lt r2.w, l(0.000000), cb2[2].w
  42: if_nz r2.w
  43:   dp3 r2.w, r4.xyzx, r4.xyzx
  44:   rsq r2.w, r2.w
  45:   mul r6.xyz, r2.wwww, r4.xyzx
  46:   mov r7.x, v3.w
  47:   mov r7.y, v4.w
  48:   mov r7.z, v5.w
  49:   add r8.xyz, -r7.xyzx, cb2[0].xyzx
  50:   div r8.xyz, r8.xyzx, r6.xyzx
  51:   add r9.xyz, -r7.xyzx, cb2[1].xyzx
  52:   div r9.xyz, r9.xyzx, r6.xyzx
  53:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  54:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  55:   min r2.w, r8.y, r8.x
  56:   min r2.w, r8.z, r2.w
  57:   add r7.xyz, r7.xyzx, -cb2[2].xyzx
  58:   mad r6.xyz, r6.xyzx, r2.wwww, r7.xyzx
  59: else 
  60:   mov r6.xyz, r4.xyzx
  61: endif 
  62: mad r2.w, -r3.y, l(0.700000), l(1.700000)
  63: mul r2.w, r2.w, r3.y
  64: mul r2.w, r2.w, l(6.000000)
  65: sample_l r6.xyzw, r6.xyzx, t2.xyzw, s0, r2.w
  66: add r3.z, r6.w, l(-1.000000)
  67: mad r3.z, cb2[3].w, r3.z, l(1.000000)
  68: log r3.z, r3.z
  69: mul r3.z, r3.z, cb2[3].y
  70: exp r3.z, r3.z
  71: mul r3.z, r3.z, cb2[3].x
  72: mul r7.xyz, r6.xyzx, r3.zzzz
  73: lt r3.w, cb2[1].w, l(0.999990)
  74: if_nz r3.w
  75:   lt r3.w, l(0.000000), cb2[6].w
  76:   if_nz r3.w
  77:     dp3 r3.w, r4.xyzx, r4.xyzx
  78:     rsq r3.w, r3.w
  79:     mul r8.xyz, r3.wwww, r4.xyzx
  80:     mov r9.x, v3.w
  81:     mov r9.y, v4.w
  82:     mov r9.z, v5.w
  83:     add r10.xyz, -r9.xyzx, cb2[4].xyzx
  84:     div r10.xyz, r10.xyzx, r8.xyzx
  85:     add r11.xyz, -r9.xyzx, cb2[5].xyzx
  86:     div r11.xyz, r11.xyzx, r8.xyzx
  87:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  88:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  89:     min r3.w, r10.y, r10.x
  90:     min r3.w, r10.z, r3.w
  91:     add r9.xyz, r9.xyzx, -cb2[6].xyzx
  92:     mad r4.xyz, r8.xyzx, r3.wwww, r9.xyzx
  93:   endif 
  94:   sample_l r4.xyzw, r4.xyzx, t3.xyzw, s0, r2.w
  95:   add r2.w, r4.w, l(-1.000000)
  96:   mad r2.w, cb2[7].w, r2.w, l(1.000000)
  97:   log r2.w, r2.w
  98:   mul r2.w, r2.w, cb2[7].y
  99:   exp r2.w, r2.w
 100:   mul r2.w, r2.w, cb2[7].x
 101:   mul r4.xyz, r4.xyzx, r2.wwww
 102:   mad r6.xyz, r3.zzzz, r6.xyzx, -r4.xyzx
 103:   mad r7.xyz, cb2[1].wwww, r6.xyzx, r4.xyzx
 104: endif 
 105: mul r3.xzw, r3.xxxx, r7.xxyz
 106: mad r4.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
 107: dp3 r1.w, r4.xyzx, r4.xyzx
 108: max r1.w, r1.w, l(0.001000)
 109: rsq r1.w, r1.w
 110: mul r4.xyz, r1.wwww, r4.xyzx
 111: dp3 r1.w, r1.xyzx, -r2.xyzx
 112: dp3_sat r2.x, r1.xyzx, cb1[0].xyzx
 113: dp3_sat r1.x, r1.xyzx, r4.xyzx
 114: dp3_sat r1.y, cb1[0].xyzx, r4.xyzx
 115: mul r1.z, r1.y, r1.y
 116: dp2 r1.z, r1.zzzz, r3.yyyy
 117: add r1.z, r1.z, l(-0.500000)
 118: add r2.y, -r2.x, l(1.000000)
 119: mul r2.z, r2.y, r2.y
 120: mul r2.z, r2.z, r2.z
 121: mul r2.y, r2.y, r2.z
 122: mad r2.y, r1.z, r2.y, l(1.000000)
 123: add r2.z, -|r1.w|, l(1.000000)
 124: mul r2.w, r2.z, r2.z
 125: mul r2.w, r2.w, r2.w
 126: mul r2.z, r2.z, r2.w
 127: mad r1.z, r1.z, r2.z, l(1.000000)
 128: mul r1.z, r1.z, r2.y
 129: mul r2.y, r3.y, r3.y
 130: max r2.y, r2.y, l(0.002000)
 131: add r2.w, -r2.y, l(1.000000)
 132: mad r3.y, |r1.w|, r2.w, r2.y
 133: mad r2.w, r2.x, r2.w, r2.y
 134: mul r1.w, |r1.w|, r2.w
 135: mad r1.w, r2.x, r3.y, r1.w
 136: add r1.w, r1.w, l(0.000010)
 137: div r1.w, l(0.500000), r1.w
 138: mul r2.w, r2.y, r2.y
 139: mad r3.y, r1.x, r2.w, -r1.x
 140: mad r1.x, r3.y, r1.x, l(1.000000)
 141: mul r2.w, r2.w, l(0.318310)
 142: mad r1.x, r1.x, r1.x, l(0.000000)
 143: div r1.x, r2.w, r1.x
 144: mul r1.x, r1.x, r1.w
 145: mul r1.x, r1.x, l(3.141593)
 146: mul r1.xz, r2.xxxx, r1.xxzx
 147: max r1.x, r1.x, l(0.000000)
 148: mad r1.w, r2.y, r2.y, l(1.000000)
 149: div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
 150: dp3 r2.x, cb0[3].xyzx, cb0[3].xyzx
 151: ne r2.x, r2.x, l(0.000000)
 152: and r2.x, r2.x, l(0x3f800000)
 153: mul r1.x, r1.x, r2.x
 154: add r0.w, -r0.w, l(1.000000)
 155: add_sat r0.w, r0.w, cb0[8].w
 156: mul r2.xyw, r1.zzzz, r5.xyxz
 157: mul r4.xyz, r5.xyzx, r1.xxxx
 158: add r1.x, -r1.y, l(1.000000)
 159: mul r1.y, r1.x, r1.x
 160: mul r1.y, r1.y, r1.y
 161: mul r1.x, r1.x, r1.y
 162: add r5.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 163: mad r1.xyz, r5.xyzx, r1.xxxx, cb0[3].xyzx
 164: mul r1.xyz, r1.xyzx, r4.xyzx
 165: mad r0.xyz, r0.xyzx, r2.xywx, r1.xyzx
 166: mul r1.xyz, r3.xzwx, r1.wwww
 167: add r2.xyw, r0.wwww, -cb0[3].xyxz
 168: mad r2.xyz, r2.zzzz, r2.xywx, cb0[3].xyzx
 169: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
 170: mov o0.w, l(1.000000)
 171: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov r0.w, l(0)
  19: mov o3.xyzw, r0.wwwx
  20: mov o4.xyzw, r0.wwwy
  21: mov o5.w, r0.z
  22: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  23: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  24: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  25: dp3 r0.w, r0.xyzx, r0.xyzx
  26: rsq r0.w, r0.w
  27: mul r0.xyz, r0.wwww, r0.xyzx
  28: mov o5.xyz, r0.xyzx
  29: mul r0.w, r0.y, r0.y
  30: mad r0.w, r0.x, r0.x, -r0.w
  31: mul r1.xyzw, r0.yzzx, r0.xyzz
  32: dp4 r0.x, cb2[42].xyzw, r1.xyzw
  33: dp4 r0.y, cb2[43].xyzw, r1.xyzw
  34: dp4 r0.z, cb2[44].xyzw, r1.xyzw
  35: mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  36: mov o6.w, l(0)
  37: mov o7.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 164 math, 15 temp registers, 7 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 4
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r3.x, v2.xyzx, v2.xyzx
  11: rsq r3.x, r3.x
  12: mul r3.yzw, r3.xxxx, v2.xxyz
  13: eq r4.x, cb3[0].x, l(1.000000)
  14: if_nz r4.x
  15:   eq r4.y, cb3[0].y, l(1.000000)
  16:   mul r5.xyz, v4.wwww, cb3[2].xyzx
  17:   mad r5.xyz, cb3[1].xyzx, v3.wwww, r5.xyzx
  18:   mad r5.xyz, cb3[3].xyzx, v5.wwww, r5.xyzx
  19:   add r5.xyz, r5.xyzx, cb3[4].xyzx
  20:   mov r6.y, v3.w
  21:   mov r6.z, v4.w
  22:   mov r6.w, v5.w
  23:   movc r4.yzw, r4.yyyy, r5.xxyz, r6.yyzw
  24:   add r4.yzw, r4.yyzw, -cb3[6].xxyz
  25:   mul r5.yzw, r4.yyzw, cb3[5].xxyz
  26:   mad r4.y, r5.y, l(0.250000), l(0.750000)
  27:   mad r4.z, cb3[0].z, l(0.500000), l(0.750000)
  28:   max r5.x, r4.z, r4.y
  29:   sample r5.xyzw, r5.xzwx, t5.xyzw, s1
  30: else 
  31:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r4.y, r5.xyzw, cb1[46].xyzw
  34: sample r5.xyzw, v1.xyxx, t2.xyzw, s4
  35: add r4.z, -cb0[9].y, l(1.000000)
  36: mad r4.z, r5.y, cb0[9].y, r4.z
  37: mad r4.w, -r0.w, cb0[9].x, l(1.000000)
  38: dp3 r5.x, r3.yzwy, r2.xyzx
  39: add r5.x, r5.x, r5.x
  40: mad r5.xyz, r2.xyzx, -r5.xxxx, r3.yzwy
  41: mul r6.xyz, r4.yyyy, cb0[2].xyzx
  42: if_nz r4.x
  43:   eq r4.x, cb3[0].y, l(1.000000)
  44:   mul r7.xyz, v4.wwww, cb3[2].xyzx
  45:   mad r7.xyz, cb3[1].xyzx, v3.wwww, r7.xyzx
  46:   mad r7.xyz, cb3[3].xyzx, v5.wwww, r7.xyzx
  47:   add r7.xyz, r7.xyzx, cb3[4].xyzx
  48:   mov r8.y, v3.w
  49:   mov r8.z, v4.w
  50:   mov r8.w, v5.w
  51:   movc r7.xyz, r4.xxxx, r7.xyzx, r8.yzwy
  52:   add r7.xyz, r7.xyzx, -cb3[6].xyzx
  53:   mul r7.yzw, r7.xxyz, cb3[5].xxyz
  54:   mul r4.x, r7.y, l(0.250000)
  55:   mul r4.y, cb3[0].z, l(0.500000)
  56:   mad r5.w, -cb3[0].z, l(0.500000), l(0.250000)
  57:   max r4.x, r4.y, r4.x
  58:   min r7.x, r5.w, r4.x
  59:   sample r8.xyzw, r7.xzwx, t5.xyzw, s1
  60:   add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  61:   sample r9.xyzw, r9.xyzx, t5.xyzw, s1
  62:   add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  63:   sample r7.xyzw, r7.xyzx, t5.xyzw, s1
  64:   mov r2.w, l(1.000000)
  65:   dp4 r8.x, r8.xyzw, r2.xyzw
  66:   dp4 r8.y, r9.xyzw, r2.xyzw
  67:   dp4 r8.z, r7.xyzw, r2.xyzw
  68: else 
  69:   mov r2.w, l(1.000000)
  70:   dp4 r8.x, cb1[39].xyzw, r2.xyzw
  71:   dp4 r8.y, cb1[40].xyzw, r2.xyzw
  72:   dp4 r8.z, cb1[41].xyzw, r2.xyzw
  73: endif 
  74: add r7.xyz, r8.xyzx, v6.xyzx
  75: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  76: lt r2.w, l(0.000000), cb2[2].w
  77: if_nz r2.w
  78:   dp3 r2.w, r5.xyzx, r5.xyzx
  79:   rsq r2.w, r2.w
  80:   mul r8.xyz, r2.wwww, r5.xyzx
  81:   mov r9.x, v3.w
  82:   mov r9.y, v4.w
  83:   mov r9.z, v5.w
  84:   add r10.xyz, -r9.xyzx, cb2[0].xyzx
  85:   div r10.xyz, r10.xyzx, r8.xyzx
  86:   add r11.xyz, -r9.xyzx, cb2[1].xyzx
  87:   div r11.xyz, r11.xyzx, r8.xyzx
  88:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  89:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  90:   min r2.w, r10.y, r10.x
  91:   min r2.w, r10.z, r2.w
  92:   add r9.xyz, r9.xyzx, -cb2[2].xyzx
  93:   mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
  94: else 
  95:   mov r8.xyz, r5.xyzx
  96: endif 
  97: mad r2.w, -r4.w, l(0.700000), l(1.700000)
  98: mul r2.w, r2.w, r4.w
  99: mul r2.w, r2.w, l(6.000000)
 100: sample_l r8.xyzw, r8.xyzx, t3.xyzw, s0, r2.w
 101: add r4.x, r8.w, l(-1.000000)
 102: mad r4.x, cb2[3].w, r4.x, l(1.000000)
 103: log r4.x, r4.x
 104: mul r4.x, r4.x, cb2[3].y
 105: exp r4.x, r4.x
 106: mul r4.x, r4.x, cb2[3].x
 107: mul r9.xyz, r8.xyzx, r4.xxxx
 108: lt r4.y, cb2[1].w, l(0.999990)
 109: if_nz r4.y
 110:   lt r4.y, l(0.000000), cb2[6].w
 111:   if_nz r4.y
 112:     dp3 r4.y, r5.xyzx, r5.xyzx
 113:     rsq r4.y, r4.y
 114:     mul r10.xyz, r4.yyyy, r5.xyzx
 115:     mov r11.x, v3.w
 116:     mov r11.y, v4.w
 117:     mov r11.z, v5.w
 118:     add r12.xyz, -r11.xyzx, cb2[4].xyzx
 119:     div r12.xyz, r12.xyzx, r10.xyzx
 120:     add r13.xyz, -r11.xyzx, cb2[5].xyzx
 121:     div r13.xyz, r13.xyzx, r10.xyzx
 122:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 123:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 124:     min r4.y, r12.y, r12.x
 125:     min r4.y, r12.z, r4.y
 126:     add r11.xyz, r11.xyzx, -cb2[6].xyzx
 127:     mad r5.xyz, r10.xyzx, r4.yyyy, r11.xyzx
 128:   endif 
 129:   sample_l r5.xyzw, r5.xyzx, t4.xyzw, s0, r2.w
 130:   add r2.w, r5.w, l(-1.000000)
 131:   mad r2.w, cb2[7].w, r2.w, l(1.000000)
 132:   log r2.w, r2.w
 133:   mul r2.w, r2.w, cb2[7].y
 134:   exp r2.w, r2.w
 135:   mul r2.w, r2.w, cb2[7].x
 136:   mul r5.xyz, r5.xyzx, r2.wwww
 137:   mad r8.xyz, r4.xxxx, r8.xyzx, -r5.xyzx
 138:   mad r9.xyz, cb2[1].wwww, r8.xyzx, r5.xyzx
 139: endif 
 140: mul r5.xyz, r4.zzzz, r9.xyzx
 141: mad r8.xyz, -v2.xyzx, r3.xxxx, cb1[0].xyzx
 142: dp3 r2.w, r8.xyzx, r8.xyzx
 143: max r2.w, r2.w, l(0.001000)
 144: rsq r2.w, r2.w
 145: mul r8.xyz, r2.wwww, r8.xyzx
 146: dp3 r2.w, r2.xyzx, -r3.yzwy
 147: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 148: dp3_sat r2.x, r2.xyzx, r8.xyzx
 149: dp3_sat r2.y, cb1[0].xyzx, r8.xyzx
 150: mul r2.z, r2.y, r2.y
 151: dp2 r2.z, r2.zzzz, r4.wwww
 152: add r2.z, r2.z, l(-0.500000)
 153: add r3.y, -r3.x, l(1.000000)
 154: mul r3.z, r3.y, r3.y
 155: mul r3.z, r3.z, r3.z
 156: mul r3.y, r3.y, r3.z
 157: mad r3.y, r2.z, r3.y, l(1.000000)
 158: add r3.z, -|r2.w|, l(1.000000)
 159: mul r3.w, r3.z, r3.z
 160: mul r3.w, r3.w, r3.w
 161: mul r3.z, r3.z, r3.w
 162: mad r2.z, r2.z, r3.z, l(1.000000)
 163: mul r2.z, r2.z, r3.y
 164: mul r3.y, r4.w, r4.w
 165: max r3.y, r3.y, l(0.002000)
 166: add r3.w, -r3.y, l(1.000000)
 167: mad r4.x, |r2.w|, r3.w, r3.y
 168: mad r3.w, r3.x, r3.w, r3.y
 169: mul r2.w, |r2.w|, r3.w
 170: mad r2.w, r3.x, r4.x, r2.w
 171: add r2.w, r2.w, l(0.000010)
 172: div r2.w, l(0.500000), r2.w
 173: mul r3.w, r3.y, r3.y
 174: mad r4.x, r2.x, r3.w, -r2.x
 175: mad r2.x, r4.x, r2.x, l(1.000000)
 176: mul r3.w, r3.w, l(0.318310)
 177: mad r2.x, r2.x, r2.x, l(0.000000)
 178: div r2.x, r3.w, r2.x
 179: mul r2.x, r2.x, r2.w
 180: mul r2.x, r2.x, l(3.141593)
 181: mul r2.xz, r3.xxxx, r2.xxzx
 182: max r2.x, r2.x, l(0.000000)
 183: mad r2.w, r3.y, r3.y, l(1.000000)
 184: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 185: dp3 r3.x, r0.xyzx, r0.xyzx
 186: ne r3.x, r3.x, l(0.000000)
 187: and r3.x, r3.x, l(0x3f800000)
 188: mul r2.x, r2.x, r3.x
 189: mad r0.w, r0.w, cb0[9].x, -r1.w
 190: add_sat r0.w, r0.w, l(1.000000)
 191: mul r3.xyw, r2.zzzz, r6.xyxz
 192: mad r3.xyw, r7.xyxz, r4.zzzz, r3.xyxw
 193: mul r4.xyz, r6.xyzx, r2.xxxx
 194: add r1.w, -r2.y, l(1.000000)
 195: mul r2.x, r1.w, r1.w
 196: mul r2.x, r2.x, r2.x
 197: mul r1.w, r1.w, r2.x
 198: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 199: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 200: mul r2.xyz, r2.xyzx, r4.xyzx
 201: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 202: mul r2.xyz, r5.xyzx, r2.wwww
 203: add r3.xyw, -r0.xyxz, r0.wwww
 204: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 205: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 206: mov o0.w, l(1.000000)
 207: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mov r0.x, cb4[0].x
  15: mul r0.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r0.yzw, cb2[0].xxyz, v0.xxxx, r0.yyzw
  17: mad r0.yzw, cb2[2].xxyz, v0.zzzz, r0.yyzw
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r0.yzwy
  19: add o2.xyz, r1.xyzx, -cb3[r0.x + 64].xyzx
  20: mov r1.w, l(0)
  21: mov o3.xyzw, r1.wwwx
  22: mov o4.xyzw, r1.wwwy
  23: mov o5.w, r1.z
  24: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  25: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  26: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mov o5.xyz, r0.xyzx
  31: mul r0.w, r0.y, r0.y
  32: mad r0.w, r0.x, r0.x, -r0.w
  33: mul r1.xyzw, r0.yzzx, r0.xyzz
  34: dp4 r0.x, cb1[42].xyzw, r1.xyzw
  35: dp4 r0.y, cb1[43].xyzw, r1.xyzw
  36: dp4 r0.z, cb1[44].xyzw, r1.xyzw
  37: mad o6.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
  38: mov o6.w, l(0)
  39: mov o7.xyzw, l(0,0,0,0)
  40: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 164 math, 15 temp registers, 7 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 4
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r3.x, v2.xyzx, v2.xyzx
  11: rsq r3.x, r3.x
  12: mul r3.yzw, r3.xxxx, v2.xxyz
  13: eq r4.x, cb3[0].x, l(1.000000)
  14: if_nz r4.x
  15:   eq r4.y, cb3[0].y, l(1.000000)
  16:   mul r5.xyz, v4.wwww, cb3[2].xyzx
  17:   mad r5.xyz, cb3[1].xyzx, v3.wwww, r5.xyzx
  18:   mad r5.xyz, cb3[3].xyzx, v5.wwww, r5.xyzx
  19:   add r5.xyz, r5.xyzx, cb3[4].xyzx
  20:   mov r6.y, v3.w
  21:   mov r6.z, v4.w
  22:   mov r6.w, v5.w
  23:   movc r4.yzw, r4.yyyy, r5.xxyz, r6.yyzw
  24:   add r4.yzw, r4.yyzw, -cb3[6].xxyz
  25:   mul r5.yzw, r4.yyzw, cb3[5].xxyz
  26:   mad r4.y, r5.y, l(0.250000), l(0.750000)
  27:   mad r4.z, cb3[0].z, l(0.500000), l(0.750000)
  28:   max r5.x, r4.z, r4.y
  29:   sample r5.xyzw, r5.xzwx, t5.xyzw, s1
  30: else 
  31:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r4.y, r5.xyzw, cb1[46].xyzw
  34: sample r5.xyzw, v1.xyxx, t2.xyzw, s4
  35: add r4.z, -cb0[9].y, l(1.000000)
  36: mad r4.z, r5.y, cb0[9].y, r4.z
  37: mad r4.w, -r0.w, cb0[9].x, l(1.000000)
  38: dp3 r5.x, r3.yzwy, r2.xyzx
  39: add r5.x, r5.x, r5.x
  40: mad r5.xyz, r2.xyzx, -r5.xxxx, r3.yzwy
  41: mul r6.xyz, r4.yyyy, cb0[2].xyzx
  42: if_nz r4.x
  43:   eq r4.x, cb3[0].y, l(1.000000)
  44:   mul r7.xyz, v4.wwww, cb3[2].xyzx
  45:   mad r7.xyz, cb3[1].xyzx, v3.wwww, r7.xyzx
  46:   mad r7.xyz, cb3[3].xyzx, v5.wwww, r7.xyzx
  47:   add r7.xyz, r7.xyzx, cb3[4].xyzx
  48:   mov r8.y, v3.w
  49:   mov r8.z, v4.w
  50:   mov r8.w, v5.w
  51:   movc r7.xyz, r4.xxxx, r7.xyzx, r8.yzwy
  52:   add r7.xyz, r7.xyzx, -cb3[6].xyzx
  53:   mul r7.yzw, r7.xxyz, cb3[5].xxyz
  54:   mul r4.x, r7.y, l(0.250000)
  55:   mul r4.y, cb3[0].z, l(0.500000)
  56:   mad r5.w, -cb3[0].z, l(0.500000), l(0.250000)
  57:   max r4.x, r4.y, r4.x
  58:   min r7.x, r5.w, r4.x
  59:   sample r8.xyzw, r7.xzwx, t5.xyzw, s1
  60:   add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  61:   sample r9.xyzw, r9.xyzx, t5.xyzw, s1
  62:   add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  63:   sample r7.xyzw, r7.xyzx, t5.xyzw, s1
  64:   mov r2.w, l(1.000000)
  65:   dp4 r8.x, r8.xyzw, r2.xyzw
  66:   dp4 r8.y, r9.xyzw, r2.xyzw
  67:   dp4 r8.z, r7.xyzw, r2.xyzw
  68: else 
  69:   mov r2.w, l(1.000000)
  70:   dp4 r8.x, cb1[39].xyzw, r2.xyzw
  71:   dp4 r8.y, cb1[40].xyzw, r2.xyzw
  72:   dp4 r8.z, cb1[41].xyzw, r2.xyzw
  73: endif 
  74: add r7.xyz, r8.xyzx, v6.xyzx
  75: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  76: lt r2.w, l(0.000000), cb2[2].w
  77: if_nz r2.w
  78:   dp3 r2.w, r5.xyzx, r5.xyzx
  79:   rsq r2.w, r2.w
  80:   mul r8.xyz, r2.wwww, r5.xyzx
  81:   mov r9.x, v3.w
  82:   mov r9.y, v4.w
  83:   mov r9.z, v5.w
  84:   add r10.xyz, -r9.xyzx, cb2[0].xyzx
  85:   div r10.xyz, r10.xyzx, r8.xyzx
  86:   add r11.xyz, -r9.xyzx, cb2[1].xyzx
  87:   div r11.xyz, r11.xyzx, r8.xyzx
  88:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  89:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  90:   min r2.w, r10.y, r10.x
  91:   min r2.w, r10.z, r2.w
  92:   add r9.xyz, r9.xyzx, -cb2[2].xyzx
  93:   mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
  94: else 
  95:   mov r8.xyz, r5.xyzx
  96: endif 
  97: mad r2.w, -r4.w, l(0.700000), l(1.700000)
  98: mul r2.w, r2.w, r4.w
  99: mul r2.w, r2.w, l(6.000000)
 100: sample_l r8.xyzw, r8.xyzx, t3.xyzw, s0, r2.w
 101: add r4.x, r8.w, l(-1.000000)
 102: mad r4.x, cb2[3].w, r4.x, l(1.000000)
 103: log r4.x, r4.x
 104: mul r4.x, r4.x, cb2[3].y
 105: exp r4.x, r4.x
 106: mul r4.x, r4.x, cb2[3].x
 107: mul r9.xyz, r8.xyzx, r4.xxxx
 108: lt r4.y, cb2[1].w, l(0.999990)
 109: if_nz r4.y
 110:   lt r4.y, l(0.000000), cb2[6].w
 111:   if_nz r4.y
 112:     dp3 r4.y, r5.xyzx, r5.xyzx
 113:     rsq r4.y, r4.y
 114:     mul r10.xyz, r4.yyyy, r5.xyzx
 115:     mov r11.x, v3.w
 116:     mov r11.y, v4.w
 117:     mov r11.z, v5.w
 118:     add r12.xyz, -r11.xyzx, cb2[4].xyzx
 119:     div r12.xyz, r12.xyzx, r10.xyzx
 120:     add r13.xyz, -r11.xyzx, cb2[5].xyzx
 121:     div r13.xyz, r13.xyzx, r10.xyzx
 122:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 123:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 124:     min r4.y, r12.y, r12.x
 125:     min r4.y, r12.z, r4.y
 126:     add r11.xyz, r11.xyzx, -cb2[6].xyzx
 127:     mad r5.xyz, r10.xyzx, r4.yyyy, r11.xyzx
 128:   endif 
 129:   sample_l r5.xyzw, r5.xyzx, t4.xyzw, s0, r2.w
 130:   add r2.w, r5.w, l(-1.000000)
 131:   mad r2.w, cb2[7].w, r2.w, l(1.000000)
 132:   log r2.w, r2.w
 133:   mul r2.w, r2.w, cb2[7].y
 134:   exp r2.w, r2.w
 135:   mul r2.w, r2.w, cb2[7].x
 136:   mul r5.xyz, r5.xyzx, r2.wwww
 137:   mad r8.xyz, r4.xxxx, r8.xyzx, -r5.xyzx
 138:   mad r9.xyz, cb2[1].wwww, r8.xyzx, r5.xyzx
 139: endif 
 140: mul r5.xyz, r4.zzzz, r9.xyzx
 141: mad r8.xyz, -v2.xyzx, r3.xxxx, cb1[0].xyzx
 142: dp3 r2.w, r8.xyzx, r8.xyzx
 143: max r2.w, r2.w, l(0.001000)
 144: rsq r2.w, r2.w
 145: mul r8.xyz, r2.wwww, r8.xyzx
 146: dp3 r2.w, r2.xyzx, -r3.yzwy
 147: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 148: dp3_sat r2.x, r2.xyzx, r8.xyzx
 149: dp3_sat r2.y, cb1[0].xyzx, r8.xyzx
 150: mul r2.z, r2.y, r2.y
 151: dp2 r2.z, r2.zzzz, r4.wwww
 152: add r2.z, r2.z, l(-0.500000)
 153: add r3.y, -r3.x, l(1.000000)
 154: mul r3.z, r3.y, r3.y
 155: mul r3.z, r3.z, r3.z
 156: mul r3.y, r3.y, r3.z
 157: mad r3.y, r2.z, r3.y, l(1.000000)
 158: add r3.z, -|r2.w|, l(1.000000)
 159: mul r3.w, r3.z, r3.z
 160: mul r3.w, r3.w, r3.w
 161: mul r3.z, r3.z, r3.w
 162: mad r2.z, r2.z, r3.z, l(1.000000)
 163: mul r2.z, r2.z, r3.y
 164: mul r3.y, r4.w, r4.w
 165: max r3.y, r3.y, l(0.002000)
 166: add r3.w, -r3.y, l(1.000000)
 167: mad r4.x, |r2.w|, r3.w, r3.y
 168: mad r3.w, r3.x, r3.w, r3.y
 169: mul r2.w, |r2.w|, r3.w
 170: mad r2.w, r3.x, r4.x, r2.w
 171: add r2.w, r2.w, l(0.000010)
 172: div r2.w, l(0.500000), r2.w
 173: mul r3.w, r3.y, r3.y
 174: mad r4.x, r2.x, r3.w, -r2.x
 175: mad r2.x, r4.x, r2.x, l(1.000000)
 176: mul r3.w, r3.w, l(0.318310)
 177: mad r2.x, r2.x, r2.x, l(0.000000)
 178: div r2.x, r3.w, r2.x
 179: mul r2.x, r2.x, r2.w
 180: mul r2.x, r2.x, l(3.141593)
 181: mul r2.xz, r3.xxxx, r2.xxzx
 182: max r2.x, r2.x, l(0.000000)
 183: mad r2.w, r3.y, r3.y, l(1.000000)
 184: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 185: dp3 r3.x, r0.xyzx, r0.xyzx
 186: ne r3.x, r3.x, l(0.000000)
 187: and r3.x, r3.x, l(0x3f800000)
 188: mul r2.x, r2.x, r3.x
 189: mad r0.w, r0.w, cb0[9].x, -r1.w
 190: add_sat r0.w, r0.w, l(1.000000)
 191: mul r3.xyw, r2.zzzz, r6.xyxz
 192: mad r3.xyw, r7.xyxz, r4.zzzz, r3.xyxw
 193: mul r4.xyz, r6.xyzx, r2.xxxx
 194: add r1.w, -r2.y, l(1.000000)
 195: mul r2.x, r1.w, r1.w
 196: mul r2.x, r2.x, r2.x
 197: mul r1.w, r1.w, r2.x
 198: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 199: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 200: mul r2.xyz, r2.xyzx, r4.xyzx
 201: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 202: mul r2.xyz, r5.xyzx, r2.wwww
 203: add r3.xyw, -r0.xyxz, r0.wwww
 204: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 205: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 206: mov o0.w, l(1.000000)
 207: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov o3.w, r0.x
  19: mul r1.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
  21: mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r1.xyz, r0.xxxx, r1.xyzx
  25: mov o3.xyz, r1.xyzx
  26: mov o4.w, r0.y
  27: mov o5.w, r0.z
  28: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  29: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  30: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  31: dp3 r0.w, r0.xyzx, r0.xyzx
  32: rsq r0.w, r0.w
  33: mul r0.xyz, r0.wwww, r0.xyzx
  34: mul r2.xyz, r1.yzxy, r0.zxyz
  35: mad r1.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
  36: mul r0.w, v4.w, cb3[9].w
  37: mul o4.xyz, r0.wwww, r1.xyzx
  38: mov o5.xyz, r0.xyzx
  39: mul r0.w, r0.y, r0.y
  40: mad r0.w, r0.x, r0.x, -r0.w
  41: mul r1.xyzw, r0.yzzx, r0.xyzz
  42: dp4 r0.x, cb2[42].xyzw, r1.xyzw
  43: dp4 r0.y, cb2[43].xyzw, r1.xyzw
  44: dp4 r0.z, cb2[44].xyzw, r1.xyzw
  45: mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  46: mov o6.w, l(0)
  47: mov o7.xyzw, l(0,0,0,0)
  48: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 174 math, 15 temp registers, 8 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 5
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r2.z, r2.xyxx, r2.xyxx
  12: min r2.z, r2.z, l(1.000000)
  13: add r2.z, -r2.z, l(1.000000)
  14: sqrt r2.z, r2.z
  15: mul r3.xyz, r2.yyyy, v4.xyzx
  16: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  17: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  18: dp3 r2.w, r2.xyzx, r2.xyzx
  19: rsq r2.w, r2.w
  20: mul r2.xyz, r2.wwww, r2.xyzx
  21: dp3 r3.x, v2.xyzx, v2.xyzx
  22: rsq r3.x, r3.x
  23: mul r3.yzw, r3.xxxx, v2.xxyz
  24: eq r4.x, cb3[0].x, l(1.000000)
  25: if_nz r4.x
  26:   eq r4.y, cb3[0].y, l(1.000000)
  27:   mul r5.xyz, v4.wwww, cb3[2].xyzx
  28:   mad r5.xyz, cb3[1].xyzx, v3.wwww, r5.xyzx
  29:   mad r5.xyz, cb3[3].xyzx, v5.wwww, r5.xyzx
  30:   add r5.xyz, r5.xyzx, cb3[4].xyzx
  31:   mov r6.y, v3.w
  32:   mov r6.z, v4.w
  33:   mov r6.w, v5.w
  34:   movc r4.yzw, r4.yyyy, r5.xxyz, r6.yyzw
  35:   add r4.yzw, r4.yyzw, -cb3[6].xxyz
  36:   mul r5.yzw, r4.yyzw, cb3[5].xxyz
  37:   mad r4.y, r5.y, l(0.250000), l(0.750000)
  38:   mad r4.z, cb3[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r4.z, r4.y
  40:   sample r5.xyzw, r5.xzwx, t6.xyzw, s1
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r4.y, r5.xyzw, cb1[46].xyzw
  45: sample r5.xyzw, v1.xyxx, t3.xyzw, s5
  46: add r4.z, -cb0[9].y, l(1.000000)
  47: mad r4.z, r5.y, cb0[9].y, r4.z
  48: mad r4.w, -r0.w, cb0[9].x, l(1.000000)
  49: dp3 r5.x, r3.yzwy, r2.xyzx
  50: add r5.x, r5.x, r5.x
  51: mad r5.xyz, r2.xyzx, -r5.xxxx, r3.yzwy
  52: mul r6.xyz, r4.yyyy, cb0[2].xyzx
  53: if_nz r4.x
  54:   eq r4.x, cb3[0].y, l(1.000000)
  55:   mul r7.xyz, v4.wwww, cb3[2].xyzx
  56:   mad r7.xyz, cb3[1].xyzx, v3.wwww, r7.xyzx
  57:   mad r7.xyz, cb3[3].xyzx, v5.wwww, r7.xyzx
  58:   add r7.xyz, r7.xyzx, cb3[4].xyzx
  59:   mov r8.y, v3.w
  60:   mov r8.z, v4.w
  61:   mov r8.w, v5.w
  62:   movc r7.xyz, r4.xxxx, r7.xyzx, r8.yzwy
  63:   add r7.xyz, r7.xyzx, -cb3[6].xyzx
  64:   mul r7.yzw, r7.xxyz, cb3[5].xxyz
  65:   mul r4.x, r7.y, l(0.250000)
  66:   mul r4.y, cb3[0].z, l(0.500000)
  67:   mad r5.w, -cb3[0].z, l(0.500000), l(0.250000)
  68:   max r4.x, r4.y, r4.x
  69:   min r7.x, r5.w, r4.x
  70:   sample r8.xyzw, r7.xzwx, t6.xyzw, s1
  71:   add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  72:   sample r9.xyzw, r9.xyzx, t6.xyzw, s1
  73:   add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  74:   sample r7.xyzw, r7.xyzx, t6.xyzw, s1
  75:   mov r2.w, l(1.000000)
  76:   dp4 r8.x, r8.xyzw, r2.xyzw
  77:   dp4 r8.y, r9.xyzw, r2.xyzw
  78:   dp4 r8.z, r7.xyzw, r2.xyzw
  79: else 
  80:   mov r2.w, l(1.000000)
  81:   dp4 r8.x, cb1[39].xyzw, r2.xyzw
  82:   dp4 r8.y, cb1[40].xyzw, r2.xyzw
  83:   dp4 r8.z, cb1[41].xyzw, r2.xyzw
  84: endif 
  85: add r7.xyz, r8.xyzx, v6.xyzx
  86: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  87: lt r2.w, l(0.000000), cb2[2].w
  88: if_nz r2.w
  89:   dp3 r2.w, r5.xyzx, r5.xyzx
  90:   rsq r2.w, r2.w
  91:   mul r8.xyz, r2.wwww, r5.xyzx
  92:   mov r9.x, v3.w
  93:   mov r9.y, v4.w
  94:   mov r9.z, v5.w
  95:   add r10.xyz, -r9.xyzx, cb2[0].xyzx
  96:   div r10.xyz, r10.xyzx, r8.xyzx
  97:   add r11.xyz, -r9.xyzx, cb2[1].xyzx
  98:   div r11.xyz, r11.xyzx, r8.xyzx
  99:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
 100:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 101:   min r2.w, r10.y, r10.x
 102:   min r2.w, r10.z, r2.w
 103:   add r9.xyz, r9.xyzx, -cb2[2].xyzx
 104:   mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
 105: else 
 106:   mov r8.xyz, r5.xyzx
 107: endif 
 108: mad r2.w, -r4.w, l(0.700000), l(1.700000)
 109: mul r2.w, r2.w, r4.w
 110: mul r2.w, r2.w, l(6.000000)
 111: sample_l r8.xyzw, r8.xyzx, t4.xyzw, s0, r2.w
 112: add r4.x, r8.w, l(-1.000000)
 113: mad r4.x, cb2[3].w, r4.x, l(1.000000)
 114: log r4.x, r4.x
 115: mul r4.x, r4.x, cb2[3].y
 116: exp r4.x, r4.x
 117: mul r4.x, r4.x, cb2[3].x
 118: mul r9.xyz, r8.xyzx, r4.xxxx
 119: lt r4.y, cb2[1].w, l(0.999990)
 120: if_nz r4.y
 121:   lt r4.y, l(0.000000), cb2[6].w
 122:   if_nz r4.y
 123:     dp3 r4.y, r5.xyzx, r5.xyzx
 124:     rsq r4.y, r4.y
 125:     mul r10.xyz, r4.yyyy, r5.xyzx
 126:     mov r11.x, v3.w
 127:     mov r11.y, v4.w
 128:     mov r11.z, v5.w
 129:     add r12.xyz, -r11.xyzx, cb2[4].xyzx
 130:     div r12.xyz, r12.xyzx, r10.xyzx
 131:     add r13.xyz, -r11.xyzx, cb2[5].xyzx
 132:     div r13.xyz, r13.xyzx, r10.xyzx
 133:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 134:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 135:     min r4.y, r12.y, r12.x
 136:     min r4.y, r12.z, r4.y
 137:     add r11.xyz, r11.xyzx, -cb2[6].xyzx
 138:     mad r5.xyz, r10.xyzx, r4.yyyy, r11.xyzx
 139:   endif 
 140:   sample_l r5.xyzw, r5.xyzx, t5.xyzw, s0, r2.w
 141:   add r2.w, r5.w, l(-1.000000)
 142:   mad r2.w, cb2[7].w, r2.w, l(1.000000)
 143:   log r2.w, r2.w
 144:   mul r2.w, r2.w, cb2[7].y
 145:   exp r2.w, r2.w
 146:   mul r2.w, r2.w, cb2[7].x
 147:   mul r5.xyz, r5.xyzx, r2.wwww
 148:   mad r8.xyz, r4.xxxx, r8.xyzx, -r5.xyzx
 149:   mad r9.xyz, cb2[1].wwww, r8.xyzx, r5.xyzx
 150: endif 
 151: mul r5.xyz, r4.zzzz, r9.xyzx
 152: mad r8.xyz, -v2.xyzx, r3.xxxx, cb1[0].xyzx
 153: dp3 r2.w, r8.xyzx, r8.xyzx
 154: max r2.w, r2.w, l(0.001000)
 155: rsq r2.w, r2.w
 156: mul r8.xyz, r2.wwww, r8.xyzx
 157: dp3 r2.w, r2.xyzx, -r3.yzwy
 158: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 159: dp3_sat r2.x, r2.xyzx, r8.xyzx
 160: dp3_sat r2.y, cb1[0].xyzx, r8.xyzx
 161: mul r2.z, r2.y, r2.y
 162: dp2 r2.z, r2.zzzz, r4.wwww
 163: add r2.z, r2.z, l(-0.500000)
 164: add r3.y, -r3.x, l(1.000000)
 165: mul r3.z, r3.y, r3.y
 166: mul r3.z, r3.z, r3.z
 167: mul r3.y, r3.y, r3.z
 168: mad r3.y, r2.z, r3.y, l(1.000000)
 169: add r3.z, -|r2.w|, l(1.000000)
 170: mul r3.w, r3.z, r3.z
 171: mul r3.w, r3.w, r3.w
 172: mul r3.z, r3.z, r3.w
 173: mad r2.z, r2.z, r3.z, l(1.000000)
 174: mul r2.z, r2.z, r3.y
 175: mul r3.y, r4.w, r4.w
 176: max r3.y, r3.y, l(0.002000)
 177: add r3.w, -r3.y, l(1.000000)
 178: mad r4.x, |r2.w|, r3.w, r3.y
 179: mad r3.w, r3.x, r3.w, r3.y
 180: mul r2.w, |r2.w|, r3.w
 181: mad r2.w, r3.x, r4.x, r2.w
 182: add r2.w, r2.w, l(0.000010)
 183: div r2.w, l(0.500000), r2.w
 184: mul r3.w, r3.y, r3.y
 185: mad r4.x, r2.x, r3.w, -r2.x
 186: mad r2.x, r4.x, r2.x, l(1.000000)
 187: mul r3.w, r3.w, l(0.318310)
 188: mad r2.x, r2.x, r2.x, l(0.000000)
 189: div r2.x, r3.w, r2.x
 190: mul r2.x, r2.x, r2.w
 191: mul r2.x, r2.x, l(3.141593)
 192: mul r2.xz, r3.xxxx, r2.xxzx
 193: max r2.x, r2.x, l(0.000000)
 194: mad r2.w, r3.y, r3.y, l(1.000000)
 195: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 196: dp3 r3.x, r0.xyzx, r0.xyzx
 197: ne r3.x, r3.x, l(0.000000)
 198: and r3.x, r3.x, l(0x3f800000)
 199: mul r2.x, r2.x, r3.x
 200: mad r0.w, r0.w, cb0[9].x, -r1.w
 201: add_sat r0.w, r0.w, l(1.000000)
 202: mul r3.xyw, r2.zzzz, r6.xyxz
 203: mad r3.xyw, r7.xyxz, r4.zzzz, r3.xyxw
 204: mul r4.xyz, r6.xyzx, r2.xxxx
 205: add r1.w, -r2.y, l(1.000000)
 206: mul r2.x, r1.w, r1.w
 207: mul r2.x, r2.x, r2.x
 208: mul r1.w, r1.w, r2.x
 209: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 210: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 211: mul r2.xyz, r2.xyzx, r4.xyzx
 212: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 213: mul r2.xyz, r5.xyzx, r2.wwww
 214: add r3.xyw, -r0.xyxz, r0.wwww
 215: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 216: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 217: mov o0.w, l(1.000000)
 218: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 40 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mov r0.x, cb4[0].x
  15: mul r0.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r0.yzw, cb2[0].xxyz, v0.xxxx, r0.yyzw
  17: mad r0.yzw, cb2[2].xxyz, v0.zzzz, r0.yyzw
  18: mad r0.yzw, cb2[3].xxyz, v0.wwww, r0.yyzw
  19: add o2.xyz, r0.yzwy, -cb3[r0.x + 64].xyzx
  20: mov o3.w, r0.y
  21: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  22: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  23: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  24: dp3 r0.x, r1.xyzx, r1.xyzx
  25: rsq r0.x, r0.x
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mov o3.xyz, r1.xyzx
  28: mov o4.w, r0.z
  29: mov o5.w, r0.w
  30: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  31: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  32: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  33: dp3 r0.w, r0.xyzx, r0.xyzx
  34: rsq r0.w, r0.w
  35: mul r0.xyz, r0.wwww, r0.xyzx
  36: mul r2.xyz, r1.yzxy, r0.zxyz
  37: mad r1.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
  38: mul r0.w, v4.w, cb2[9].w
  39: mul o4.xyz, r0.wwww, r1.xyzx
  40: mov o5.xyz, r0.xyzx
  41: mul r0.w, r0.y, r0.y
  42: mad r0.w, r0.x, r0.x, -r0.w
  43: mul r1.xyzw, r0.yzzx, r0.xyzz
  44: dp4 r0.x, cb1[42].xyzw, r1.xyzw
  45: dp4 r0.y, cb1[43].xyzw, r1.xyzw
  46: dp4 r0.z, cb1[44].xyzw, r1.xyzw
  47: mad o6.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
  48: mov o6.w, l(0)
  49: mov o7.xyzw, l(0,0,0,0)
  50: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 174 math, 15 temp registers, 8 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 5
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r2.z, r2.xyxx, r2.xyxx
  12: min r2.z, r2.z, l(1.000000)
  13: add r2.z, -r2.z, l(1.000000)
  14: sqrt r2.z, r2.z
  15: mul r3.xyz, r2.yyyy, v4.xyzx
  16: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  17: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  18: dp3 r2.w, r2.xyzx, r2.xyzx
  19: rsq r2.w, r2.w
  20: mul r2.xyz, r2.wwww, r2.xyzx
  21: dp3 r3.x, v2.xyzx, v2.xyzx
  22: rsq r3.x, r3.x
  23: mul r3.yzw, r3.xxxx, v2.xxyz
  24: eq r4.x, cb3[0].x, l(1.000000)
  25: if_nz r4.x
  26:   eq r4.y, cb3[0].y, l(1.000000)
  27:   mul r5.xyz, v4.wwww, cb3[2].xyzx
  28:   mad r5.xyz, cb3[1].xyzx, v3.wwww, r5.xyzx
  29:   mad r5.xyz, cb3[3].xyzx, v5.wwww, r5.xyzx
  30:   add r5.xyz, r5.xyzx, cb3[4].xyzx
  31:   mov r6.y, v3.w
  32:   mov r6.z, v4.w
  33:   mov r6.w, v5.w
  34:   movc r4.yzw, r4.yyyy, r5.xxyz, r6.yyzw
  35:   add r4.yzw, r4.yyzw, -cb3[6].xxyz
  36:   mul r5.yzw, r4.yyzw, cb3[5].xxyz
  37:   mad r4.y, r5.y, l(0.250000), l(0.750000)
  38:   mad r4.z, cb3[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r4.z, r4.y
  40:   sample r5.xyzw, r5.xzwx, t6.xyzw, s1
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r4.y, r5.xyzw, cb1[46].xyzw
  45: sample r5.xyzw, v1.xyxx, t3.xyzw, s5
  46: add r4.z, -cb0[9].y, l(1.000000)
  47: mad r4.z, r5.y, cb0[9].y, r4.z
  48: mad r4.w, -r0.w, cb0[9].x, l(1.000000)
  49: dp3 r5.x, r3.yzwy, r2.xyzx
  50: add r5.x, r5.x, r5.x
  51: mad r5.xyz, r2.xyzx, -r5.xxxx, r3.yzwy
  52: mul r6.xyz, r4.yyyy, cb0[2].xyzx
  53: if_nz r4.x
  54:   eq r4.x, cb3[0].y, l(1.000000)
  55:   mul r7.xyz, v4.wwww, cb3[2].xyzx
  56:   mad r7.xyz, cb3[1].xyzx, v3.wwww, r7.xyzx
  57:   mad r7.xyz, cb3[3].xyzx, v5.wwww, r7.xyzx
  58:   add r7.xyz, r7.xyzx, cb3[4].xyzx
  59:   mov r8.y, v3.w
  60:   mov r8.z, v4.w
  61:   mov r8.w, v5.w
  62:   movc r7.xyz, r4.xxxx, r7.xyzx, r8.yzwy
  63:   add r7.xyz, r7.xyzx, -cb3[6].xyzx
  64:   mul r7.yzw, r7.xxyz, cb3[5].xxyz
  65:   mul r4.x, r7.y, l(0.250000)
  66:   mul r4.y, cb3[0].z, l(0.500000)
  67:   mad r5.w, -cb3[0].z, l(0.500000), l(0.250000)
  68:   max r4.x, r4.y, r4.x
  69:   min r7.x, r5.w, r4.x
  70:   sample r8.xyzw, r7.xzwx, t6.xyzw, s1
  71:   add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  72:   sample r9.xyzw, r9.xyzx, t6.xyzw, s1
  73:   add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  74:   sample r7.xyzw, r7.xyzx, t6.xyzw, s1
  75:   mov r2.w, l(1.000000)
  76:   dp4 r8.x, r8.xyzw, r2.xyzw
  77:   dp4 r8.y, r9.xyzw, r2.xyzw
  78:   dp4 r8.z, r7.xyzw, r2.xyzw
  79: else 
  80:   mov r2.w, l(1.000000)
  81:   dp4 r8.x, cb1[39].xyzw, r2.xyzw
  82:   dp4 r8.y, cb1[40].xyzw, r2.xyzw
  83:   dp4 r8.z, cb1[41].xyzw, r2.xyzw
  84: endif 
  85: add r7.xyz, r8.xyzx, v6.xyzx
  86: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  87: lt r2.w, l(0.000000), cb2[2].w
  88: if_nz r2.w
  89:   dp3 r2.w, r5.xyzx, r5.xyzx
  90:   rsq r2.w, r2.w
  91:   mul r8.xyz, r2.wwww, r5.xyzx
  92:   mov r9.x, v3.w
  93:   mov r9.y, v4.w
  94:   mov r9.z, v5.w
  95:   add r10.xyz, -r9.xyzx, cb2[0].xyzx
  96:   div r10.xyz, r10.xyzx, r8.xyzx
  97:   add r11.xyz, -r9.xyzx, cb2[1].xyzx
  98:   div r11.xyz, r11.xyzx, r8.xyzx
  99:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
 100:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 101:   min r2.w, r10.y, r10.x
 102:   min r2.w, r10.z, r2.w
 103:   add r9.xyz, r9.xyzx, -cb2[2].xyzx
 104:   mad r8.xyz, r8.xyzx, r2.wwww, r9.xyzx
 105: else 
 106:   mov r8.xyz, r5.xyzx
 107: endif 
 108: mad r2.w, -r4.w, l(0.700000), l(1.700000)
 109: mul r2.w, r2.w, r4.w
 110: mul r2.w, r2.w, l(6.000000)
 111: sample_l r8.xyzw, r8.xyzx, t4.xyzw, s0, r2.w
 112: add r4.x, r8.w, l(-1.000000)
 113: mad r4.x, cb2[3].w, r4.x, l(1.000000)
 114: log r4.x, r4.x
 115: mul r4.x, r4.x, cb2[3].y
 116: exp r4.x, r4.x
 117: mul r4.x, r4.x, cb2[3].x
 118: mul r9.xyz, r8.xyzx, r4.xxxx
 119: lt r4.y, cb2[1].w, l(0.999990)
 120: if_nz r4.y
 121:   lt r4.y, l(0.000000), cb2[6].w
 122:   if_nz r4.y
 123:     dp3 r4.y, r5.xyzx, r5.xyzx
 124:     rsq r4.y, r4.y
 125:     mul r10.xyz, r4.yyyy, r5.xyzx
 126:     mov r11.x, v3.w
 127:     mov r11.y, v4.w
 128:     mov r11.z, v5.w
 129:     add r12.xyz, -r11.xyzx, cb2[4].xyzx
 130:     div r12.xyz, r12.xyzx, r10.xyzx
 131:     add r13.xyz, -r11.xyzx, cb2[5].xyzx
 132:     div r13.xyz, r13.xyzx, r10.xyzx
 133:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 134:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 135:     min r4.y, r12.y, r12.x
 136:     min r4.y, r12.z, r4.y
 137:     add r11.xyz, r11.xyzx, -cb2[6].xyzx
 138:     mad r5.xyz, r10.xyzx, r4.yyyy, r11.xyzx
 139:   endif 
 140:   sample_l r5.xyzw, r5.xyzx, t5.xyzw, s0, r2.w
 141:   add r2.w, r5.w, l(-1.000000)
 142:   mad r2.w, cb2[7].w, r2.w, l(1.000000)
 143:   log r2.w, r2.w
 144:   mul r2.w, r2.w, cb2[7].y
 145:   exp r2.w, r2.w
 146:   mul r2.w, r2.w, cb2[7].x
 147:   mul r5.xyz, r5.xyzx, r2.wwww
 148:   mad r8.xyz, r4.xxxx, r8.xyzx, -r5.xyzx
 149:   mad r9.xyz, cb2[1].wwww, r8.xyzx, r5.xyzx
 150: endif 
 151: mul r5.xyz, r4.zzzz, r9.xyzx
 152: mad r8.xyz, -v2.xyzx, r3.xxxx, cb1[0].xyzx
 153: dp3 r2.w, r8.xyzx, r8.xyzx
 154: max r2.w, r2.w, l(0.001000)
 155: rsq r2.w, r2.w
 156: mul r8.xyz, r2.wwww, r8.xyzx
 157: dp3 r2.w, r2.xyzx, -r3.yzwy
 158: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 159: dp3_sat r2.x, r2.xyzx, r8.xyzx
 160: dp3_sat r2.y, cb1[0].xyzx, r8.xyzx
 161: mul r2.z, r2.y, r2.y
 162: dp2 r2.z, r2.zzzz, r4.wwww
 163: add r2.z, r2.z, l(-0.500000)
 164: add r3.y, -r3.x, l(1.000000)
 165: mul r3.z, r3.y, r3.y
 166: mul r3.z, r3.z, r3.z
 167: mul r3.y, r3.y, r3.z
 168: mad r3.y, r2.z, r3.y, l(1.000000)
 169: add r3.z, -|r2.w|, l(1.000000)
 170: mul r3.w, r3.z, r3.z
 171: mul r3.w, r3.w, r3.w
 172: mul r3.z, r3.z, r3.w
 173: mad r2.z, r2.z, r3.z, l(1.000000)
 174: mul r2.z, r2.z, r3.y
 175: mul r3.y, r4.w, r4.w
 176: max r3.y, r3.y, l(0.002000)
 177: add r3.w, -r3.y, l(1.000000)
 178: mad r4.x, |r2.w|, r3.w, r3.y
 179: mad r3.w, r3.x, r3.w, r3.y
 180: mul r2.w, |r2.w|, r3.w
 181: mad r2.w, r3.x, r4.x, r2.w
 182: add r2.w, r2.w, l(0.000010)
 183: div r2.w, l(0.500000), r2.w
 184: mul r3.w, r3.y, r3.y
 185: mad r4.x, r2.x, r3.w, -r2.x
 186: mad r2.x, r4.x, r2.x, l(1.000000)
 187: mul r3.w, r3.w, l(0.318310)
 188: mad r2.x, r2.x, r2.x, l(0.000000)
 189: div r2.x, r3.w, r2.x
 190: mul r2.x, r2.x, r2.w
 191: mul r2.x, r2.x, l(3.141593)
 192: mul r2.xz, r3.xxxx, r2.xxzx
 193: max r2.x, r2.x, l(0.000000)
 194: mad r2.w, r3.y, r3.y, l(1.000000)
 195: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 196: dp3 r3.x, r0.xyzx, r0.xyzx
 197: ne r3.x, r3.x, l(0.000000)
 198: and r3.x, r3.x, l(0x3f800000)
 199: mul r2.x, r2.x, r3.x
 200: mad r0.w, r0.w, cb0[9].x, -r1.w
 201: add_sat r0.w, r0.w, l(1.000000)
 202: mul r3.xyw, r2.zzzz, r6.xyxz
 203: mad r3.xyw, r7.xyxz, r4.zzzz, r3.xyxw
 204: mul r4.xyz, r6.xyzx, r2.xxxx
 205: add r1.w, -r2.y, l(1.000000)
 206: mul r2.x, r1.w, r1.w
 207: mul r2.x, r2.x, r2.x
 208: mul r1.w, r1.w, r2.x
 209: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 210: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 211: mul r2.xyz, r2.xyzx, r4.xyzx
 212: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 213: mul r2.xyz, r5.xyzx, r2.wwww
 214: add r3.xyw, -r0.xyxz, r0.wwww
 215: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 216: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 217: mov o0.w, l(1.000000)
 218: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov r0.w, l(0)
  19: mov o3.xyzw, r0.wwwx
  20: mov o4.xyzw, r0.wwwy
  21: mov o5.w, r0.z
  22: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  23: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  24: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  25: dp3 r0.w, r0.xyzx, r0.xyzx
  26: rsq r0.w, r0.w
  27: mul r0.xyz, r0.wwww, r0.xyzx
  28: mov o5.xyz, r0.xyzx
  29: mul r0.w, r0.y, r0.y
  30: mad r0.w, r0.x, r0.x, -r0.w
  31: mul r1.xyzw, r0.yzzx, r0.xyzz
  32: dp4 r0.x, cb2[42].xyzw, r1.xyzw
  33: dp4 r0.y, cb2[43].xyzw, r1.xyzw
  34: dp4 r0.z, cb2[44].xyzw, r1.xyzw
  35: mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  36: mov o6.w, l(0)
  37: mov o7.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 164 math, 14 temp registers, 6 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 2 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 3 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: dp3 r2.x, v2.xyzx, v2.xyzx
  10: rsq r2.x, r2.x
  11: mul r2.yzw, r2.xxxx, v2.xxyz
  12: eq r3.x, cb3[0].x, l(1.000000)
  13: if_nz r3.x
  14:   eq r3.y, cb3[0].y, l(1.000000)
  15:   mul r4.xyz, v4.wwww, cb3[2].xyzx
  16:   mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
  17:   mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  19:   mov r5.y, v3.w
  20:   mov r5.z, v4.w
  21:   mov r5.w, v5.w
  22:   movc r3.yzw, r3.yyyy, r4.xxyz, r5.yyzw
  23:   add r3.yzw, r3.yyzw, -cb3[6].xxyz
  24:   mul r4.yzw, r3.yyzw, cb3[5].xxyz
  25:   mad r3.y, r4.y, l(0.250000), l(0.750000)
  26:   mad r3.z, cb3[0].z, l(0.500000), l(0.750000)
  27:   max r4.x, r3.z, r3.y
  28:   sample r4.xyzw, r4.xzwx, t4.xyzw, s1
  29: else 
  30:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  31: endif 
  32: dp4_sat r3.y, r4.xyzw, cb1[46].xyzw
  33: sample r4.xyzw, v1.xyxx, t1.xyzw, s3
  34: add r3.z, -cb0[9].y, l(1.000000)
  35: mad r3.z, r4.y, cb0[9].y, r3.z
  36: add r3.w, -cb0[8].w, l(1.000000)
  37: dp3 r4.x, r2.yzwy, r1.xyzx
  38: add r4.x, r4.x, r4.x
  39: mad r4.xyz, r1.xyzx, -r4.xxxx, r2.yzwy
  40: mul r5.xyz, r3.yyyy, cb0[2].xyzx
  41: if_nz r3.x
  42:   eq r3.x, cb3[0].y, l(1.000000)
  43:   mul r6.xyz, v4.wwww, cb3[2].xyzx
  44:   mad r6.xyz, cb3[1].xyzx, v3.wwww, r6.xyzx
  45:   mad r6.xyz, cb3[3].xyzx, v5.wwww, r6.xyzx
  46:   add r6.xyz, r6.xyzx, cb3[4].xyzx
  47:   mov r7.y, v3.w
  48:   mov r7.z, v4.w
  49:   mov r7.w, v5.w
  50:   movc r6.xyz, r3.xxxx, r6.xyzx, r7.yzwy
  51:   add r6.xyz, r6.xyzx, -cb3[6].xyzx
  52:   mul r6.yzw, r6.xxyz, cb3[5].xxyz
  53:   mul r3.x, r6.y, l(0.250000)
  54:   mul r3.y, cb3[0].z, l(0.500000)
  55:   mad r4.w, -cb3[0].z, l(0.500000), l(0.250000)
  56:   max r3.x, r3.y, r3.x
  57:   min r6.x, r4.w, r3.x
  58:   sample r7.xyzw, r6.xzwx, t4.xyzw, s1
  59:   add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  60:   sample r8.xyzw, r8.xyzx, t4.xyzw, s1
  61:   add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  62:   sample r6.xyzw, r6.xyzx, t4.xyzw, s1
  63:   mov r1.w, l(1.000000)
  64:   dp4 r7.x, r7.xyzw, r1.xyzw
  65:   dp4 r7.y, r8.xyzw, r1.xyzw
  66:   dp4 r7.z, r6.xyzw, r1.xyzw
  67: else 
  68:   mov r1.w, l(1.000000)
  69:   dp4 r7.x, cb1[39].xyzw, r1.xyzw
  70:   dp4 r7.y, cb1[40].xyzw, r1.xyzw
  71:   dp4 r7.z, cb1[41].xyzw, r1.xyzw
  72: endif 
  73: add r6.xyz, r7.xyzx, v6.xyzx
  74: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  75: lt r1.w, l(0.000000), cb2[2].w
  76: if_nz r1.w
  77:   dp3 r1.w, r4.xyzx, r4.xyzx
  78:   rsq r1.w, r1.w
  79:   mul r7.xyz, r1.wwww, r4.xyzx
  80:   mov r8.x, v3.w
  81:   mov r8.y, v4.w
  82:   mov r8.z, v5.w
  83:   add r9.xyz, -r8.xyzx, cb2[0].xyzx
  84:   div r9.xyz, r9.xyzx, r7.xyzx
  85:   add r10.xyz, -r8.xyzx, cb2[1].xyzx
  86:   div r10.xyz, r10.xyzx, r7.xyzx
  87:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  88:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  89:   min r1.w, r9.y, r9.x
  90:   min r1.w, r9.z, r1.w
  91:   add r8.xyz, r8.xyzx, -cb2[2].xyzx
  92:   mad r7.xyz, r7.xyzx, r1.wwww, r8.xyzx
  93: else 
  94:   mov r7.xyz, r4.xyzx
  95: endif 
  96: mad r1.w, -r3.w, l(0.700000), l(1.700000)
  97: mul r1.w, r1.w, r3.w
  98: mul r1.w, r1.w, l(6.000000)
  99: sample_l r7.xyzw, r7.xyzx, t2.xyzw, s0, r1.w
 100: add r3.x, r7.w, l(-1.000000)
 101: mad r3.x, cb2[3].w, r3.x, l(1.000000)
 102: log r3.x, r3.x
 103: mul r3.x, r3.x, cb2[3].y
 104: exp r3.x, r3.x
 105: mul r3.x, r3.x, cb2[3].x
 106: mul r8.xyz, r7.xyzx, r3.xxxx
 107: lt r3.y, cb2[1].w, l(0.999990)
 108: if_nz r3.y
 109:   lt r3.y, l(0.000000), cb2[6].w
 110:   if_nz r3.y
 111:     dp3 r3.y, r4.xyzx, r4.xyzx
 112:     rsq r3.y, r3.y
 113:     mul r9.xyz, r3.yyyy, r4.xyzx
 114:     mov r10.x, v3.w
 115:     mov r10.y, v4.w
 116:     mov r10.z, v5.w
 117:     add r11.xyz, -r10.xyzx, cb2[4].xyzx
 118:     div r11.xyz, r11.xyzx, r9.xyzx
 119:     add r12.xyz, -r10.xyzx, cb2[5].xyzx
 120:     div r12.xyz, r12.xyzx, r9.xyzx
 121:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 122:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 123:     min r3.y, r11.y, r11.x
 124:     min r3.y, r11.z, r3.y
 125:     add r10.xyz, r10.xyzx, -cb2[6].xyzx
 126:     mad r4.xyz, r9.xyzx, r3.yyyy, r10.xyzx
 127:   endif 
 128:   sample_l r4.xyzw, r4.xyzx, t3.xyzw, s0, r1.w
 129:   add r1.w, r4.w, l(-1.000000)
 130:   mad r1.w, cb2[7].w, r1.w, l(1.000000)
 131:   log r1.w, r1.w
 132:   mul r1.w, r1.w, cb2[7].y
 133:   exp r1.w, r1.w
 134:   mul r1.w, r1.w, cb2[7].x
 135:   mul r4.xyz, r4.xyzx, r1.wwww
 136:   mad r7.xyz, r3.xxxx, r7.xyzx, -r4.xyzx
 137:   mad r8.xyz, cb2[1].wwww, r7.xyzx, r4.xyzx
 138: endif 
 139: mul r4.xyz, r3.zzzz, r8.xyzx
 140: mad r7.xyz, -v2.xyzx, r2.xxxx, cb1[0].xyzx
 141: dp3 r1.w, r7.xyzx, r7.xyzx
 142: max r1.w, r1.w, l(0.001000)
 143: rsq r1.w, r1.w
 144: mul r7.xyz, r1.wwww, r7.xyzx
 145: dp3 r1.w, r1.xyzx, -r2.yzwy
 146: dp3_sat r2.x, r1.xyzx, cb1[0].xyzx
 147: dp3_sat r1.x, r1.xyzx, r7.xyzx
 148: dp3_sat r1.y, cb1[0].xyzx, r7.xyzx
 149: mul r1.z, r1.y, r1.y
 150: dp2 r1.z, r1.zzzz, r3.wwww
 151: add r1.z, r1.z, l(-0.500000)
 152: add r2.y, -r2.x, l(1.000000)
 153: mul r2.z, r2.y, r2.y
 154: mul r2.z, r2.z, r2.z
 155: mul r2.y, r2.y, r2.z
 156: mad r2.y, r1.z, r2.y, l(1.000000)
 157: add r2.z, -|r1.w|, l(1.000000)
 158: mul r2.w, r2.z, r2.z
 159: mul r2.w, r2.w, r2.w
 160: mul r2.z, r2.z, r2.w
 161: mad r1.z, r1.z, r2.z, l(1.000000)
 162: mul r1.z, r1.z, r2.y
 163: mul r2.y, r3.w, r3.w
 164: max r2.y, r2.y, l(0.002000)
 165: add r2.w, -r2.y, l(1.000000)
 166: mad r3.x, |r1.w|, r2.w, r2.y
 167: mad r2.w, r2.x, r2.w, r2.y
 168: mul r1.w, |r1.w|, r2.w
 169: mad r1.w, r2.x, r3.x, r1.w
 170: add r1.w, r1.w, l(0.000010)
 171: div r1.w, l(0.500000), r1.w
 172: mul r2.w, r2.y, r2.y
 173: mad r3.x, r1.x, r2.w, -r1.x
 174: mad r1.x, r3.x, r1.x, l(1.000000)
 175: mul r2.w, r2.w, l(0.318310)
 176: mad r1.x, r1.x, r1.x, l(0.000000)
 177: div r1.x, r2.w, r1.x
 178: mul r1.x, r1.x, r1.w
 179: mul r1.x, r1.x, l(3.141593)
 180: mul r1.xz, r2.xxxx, r1.xxzx
 181: max r1.x, r1.x, l(0.000000)
 182: mad r1.w, r2.y, r2.y, l(1.000000)
 183: div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
 184: dp3 r2.x, cb0[3].xyzx, cb0[3].xyzx
 185: ne r2.x, r2.x, l(0.000000)
 186: and r2.x, r2.x, l(0x3f800000)
 187: mul r1.x, r1.x, r2.x
 188: add r0.w, -r0.w, l(1.000000)
 189: add_sat r0.w, r0.w, cb0[8].w
 190: mul r2.xyw, r1.zzzz, r5.xyxz
 191: mad r2.xyw, r6.xyxz, r3.zzzz, r2.xyxw
 192: mul r3.xyz, r5.xyzx, r1.xxxx
 193: add r1.x, -r1.y, l(1.000000)
 194: mul r1.y, r1.x, r1.x
 195: mul r1.y, r1.y, r1.y
 196: mul r1.x, r1.x, r1.y
 197: add r5.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 198: mad r1.xyz, r5.xyzx, r1.xxxx, cb0[3].xyzx
 199: mul r1.xyz, r1.xyzx, r3.xyzx
 200: mad r0.xyz, r0.xyzx, r2.xywx, r1.xyzx
 201: mul r1.xyz, r4.xyzx, r1.wwww
 202: add r2.xyw, r0.wwww, -cb0[3].xyxz
 203: mad r2.xyz, r2.zzzz, r2.xywx, cb0[3].xyzx
 204: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
 205: mov o0.w, l(1.000000)
 206: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mov r0.x, cb4[0].x
  15: mul r0.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r0.yzw, cb2[0].xxyz, v0.xxxx, r0.yyzw
  17: mad r0.yzw, cb2[2].xxyz, v0.zzzz, r0.yyzw
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r0.yzwy
  19: add o2.xyz, r1.xyzx, -cb3[r0.x + 64].xyzx
  20: mov r1.w, l(0)
  21: mov o3.xyzw, r1.wwwx
  22: mov o4.xyzw, r1.wwwy
  23: mov o5.w, r1.z
  24: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  25: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  26: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mov o5.xyz, r0.xyzx
  31: mul r0.w, r0.y, r0.y
  32: mad r0.w, r0.x, r0.x, -r0.w
  33: mul r1.xyzw, r0.yzzx, r0.xyzz
  34: dp4 r0.x, cb1[42].xyzw, r1.xyzw
  35: dp4 r0.y, cb1[43].xyzw, r1.xyzw
  36: dp4 r0.z, cb1[44].xyzw, r1.xyzw
  37: mad o6.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
  38: mov o6.w, l(0)
  39: mov o7.xyzw, l(0,0,0,0)
  40: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 164 math, 14 temp registers, 6 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 2 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 3 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: dp3 r2.x, v2.xyzx, v2.xyzx
  10: rsq r2.x, r2.x
  11: mul r2.yzw, r2.xxxx, v2.xxyz
  12: eq r3.x, cb3[0].x, l(1.000000)
  13: if_nz r3.x
  14:   eq r3.y, cb3[0].y, l(1.000000)
  15:   mul r4.xyz, v4.wwww, cb3[2].xyzx
  16:   mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
  17:   mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
  18:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  19:   mov r5.y, v3.w
  20:   mov r5.z, v4.w
  21:   mov r5.w, v5.w
  22:   movc r3.yzw, r3.yyyy, r4.xxyz, r5.yyzw
  23:   add r3.yzw, r3.yyzw, -cb3[6].xxyz
  24:   mul r4.yzw, r3.yyzw, cb3[5].xxyz
  25:   mad r3.y, r4.y, l(0.250000), l(0.750000)
  26:   mad r3.z, cb3[0].z, l(0.500000), l(0.750000)
  27:   max r4.x, r3.z, r3.y
  28:   sample r4.xyzw, r4.xzwx, t4.xyzw, s1
  29: else 
  30:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  31: endif 
  32: dp4_sat r3.y, r4.xyzw, cb1[46].xyzw
  33: sample r4.xyzw, v1.xyxx, t1.xyzw, s3
  34: add r3.z, -cb0[9].y, l(1.000000)
  35: mad r3.z, r4.y, cb0[9].y, r3.z
  36: add r3.w, -cb0[8].w, l(1.000000)
  37: dp3 r4.x, r2.yzwy, r1.xyzx
  38: add r4.x, r4.x, r4.x
  39: mad r4.xyz, r1.xyzx, -r4.xxxx, r2.yzwy
  40: mul r5.xyz, r3.yyyy, cb0[2].xyzx
  41: if_nz r3.x
  42:   eq r3.x, cb3[0].y, l(1.000000)
  43:   mul r6.xyz, v4.wwww, cb3[2].xyzx
  44:   mad r6.xyz, cb3[1].xyzx, v3.wwww, r6.xyzx
  45:   mad r6.xyz, cb3[3].xyzx, v5.wwww, r6.xyzx
  46:   add r6.xyz, r6.xyzx, cb3[4].xyzx
  47:   mov r7.y, v3.w
  48:   mov r7.z, v4.w
  49:   mov r7.w, v5.w
  50:   movc r6.xyz, r3.xxxx, r6.xyzx, r7.yzwy
  51:   add r6.xyz, r6.xyzx, -cb3[6].xyzx
  52:   mul r6.yzw, r6.xxyz, cb3[5].xxyz
  53:   mul r3.x, r6.y, l(0.250000)
  54:   mul r3.y, cb3[0].z, l(0.500000)
  55:   mad r4.w, -cb3[0].z, l(0.500000), l(0.250000)
  56:   max r3.x, r3.y, r3.x
  57:   min r6.x, r4.w, r3.x
  58:   sample r7.xyzw, r6.xzwx, t4.xyzw, s1
  59:   add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  60:   sample r8.xyzw, r8.xyzx, t4.xyzw, s1
  61:   add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  62:   sample r6.xyzw, r6.xyzx, t4.xyzw, s1
  63:   mov r1.w, l(1.000000)
  64:   dp4 r7.x, r7.xyzw, r1.xyzw
  65:   dp4 r7.y, r8.xyzw, r1.xyzw
  66:   dp4 r7.z, r6.xyzw, r1.xyzw
  67: else 
  68:   mov r1.w, l(1.000000)
  69:   dp4 r7.x, cb1[39].xyzw, r1.xyzw
  70:   dp4 r7.y, cb1[40].xyzw, r1.xyzw
  71:   dp4 r7.z, cb1[41].xyzw, r1.xyzw
  72: endif 
  73: add r6.xyz, r7.xyzx, v6.xyzx
  74: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  75: lt r1.w, l(0.000000), cb2[2].w
  76: if_nz r1.w
  77:   dp3 r1.w, r4.xyzx, r4.xyzx
  78:   rsq r1.w, r1.w
  79:   mul r7.xyz, r1.wwww, r4.xyzx
  80:   mov r8.x, v3.w
  81:   mov r8.y, v4.w
  82:   mov r8.z, v5.w
  83:   add r9.xyz, -r8.xyzx, cb2[0].xyzx
  84:   div r9.xyz, r9.xyzx, r7.xyzx
  85:   add r10.xyz, -r8.xyzx, cb2[1].xyzx
  86:   div r10.xyz, r10.xyzx, r7.xyzx
  87:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  88:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  89:   min r1.w, r9.y, r9.x
  90:   min r1.w, r9.z, r1.w
  91:   add r8.xyz, r8.xyzx, -cb2[2].xyzx
  92:   mad r7.xyz, r7.xyzx, r1.wwww, r8.xyzx
  93: else 
  94:   mov r7.xyz, r4.xyzx
  95: endif 
  96: mad r1.w, -r3.w, l(0.700000), l(1.700000)
  97: mul r1.w, r1.w, r3.w
  98: mul r1.w, r1.w, l(6.000000)
  99: sample_l r7.xyzw, r7.xyzx, t2.xyzw, s0, r1.w
 100: add r3.x, r7.w, l(-1.000000)
 101: mad r3.x, cb2[3].w, r3.x, l(1.000000)
 102: log r3.x, r3.x
 103: mul r3.x, r3.x, cb2[3].y
 104: exp r3.x, r3.x
 105: mul r3.x, r3.x, cb2[3].x
 106: mul r8.xyz, r7.xyzx, r3.xxxx
 107: lt r3.y, cb2[1].w, l(0.999990)
 108: if_nz r3.y
 109:   lt r3.y, l(0.000000), cb2[6].w
 110:   if_nz r3.y
 111:     dp3 r3.y, r4.xyzx, r4.xyzx
 112:     rsq r3.y, r3.y
 113:     mul r9.xyz, r3.yyyy, r4.xyzx
 114:     mov r10.x, v3.w
 115:     mov r10.y, v4.w
 116:     mov r10.z, v5.w
 117:     add r11.xyz, -r10.xyzx, cb2[4].xyzx
 118:     div r11.xyz, r11.xyzx, r9.xyzx
 119:     add r12.xyz, -r10.xyzx, cb2[5].xyzx
 120:     div r12.xyz, r12.xyzx, r9.xyzx
 121:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 122:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 123:     min r3.y, r11.y, r11.x
 124:     min r3.y, r11.z, r3.y
 125:     add r10.xyz, r10.xyzx, -cb2[6].xyzx
 126:     mad r4.xyz, r9.xyzx, r3.yyyy, r10.xyzx
 127:   endif 
 128:   sample_l r4.xyzw, r4.xyzx, t3.xyzw, s0, r1.w
 129:   add r1.w, r4.w, l(-1.000000)
 130:   mad r1.w, cb2[7].w, r1.w, l(1.000000)
 131:   log r1.w, r1.w
 132:   mul r1.w, r1.w, cb2[7].y
 133:   exp r1.w, r1.w
 134:   mul r1.w, r1.w, cb2[7].x
 135:   mul r4.xyz, r4.xyzx, r1.wwww
 136:   mad r7.xyz, r3.xxxx, r7.xyzx, -r4.xyzx
 137:   mad r8.xyz, cb2[1].wwww, r7.xyzx, r4.xyzx
 138: endif 
 139: mul r4.xyz, r3.zzzz, r8.xyzx
 140: mad r7.xyz, -v2.xyzx, r2.xxxx, cb1[0].xyzx
 141: dp3 r1.w, r7.xyzx, r7.xyzx
 142: max r1.w, r1.w, l(0.001000)
 143: rsq r1.w, r1.w
 144: mul r7.xyz, r1.wwww, r7.xyzx
 145: dp3 r1.w, r1.xyzx, -r2.yzwy
 146: dp3_sat r2.x, r1.xyzx, cb1[0].xyzx
 147: dp3_sat r1.x, r1.xyzx, r7.xyzx
 148: dp3_sat r1.y, cb1[0].xyzx, r7.xyzx
 149: mul r1.z, r1.y, r1.y
 150: dp2 r1.z, r1.zzzz, r3.wwww
 151: add r1.z, r1.z, l(-0.500000)
 152: add r2.y, -r2.x, l(1.000000)
 153: mul r2.z, r2.y, r2.y
 154: mul r2.z, r2.z, r2.z
 155: mul r2.y, r2.y, r2.z
 156: mad r2.y, r1.z, r2.y, l(1.000000)
 157: add r2.z, -|r1.w|, l(1.000000)
 158: mul r2.w, r2.z, r2.z
 159: mul r2.w, r2.w, r2.w
 160: mul r2.z, r2.z, r2.w
 161: mad r1.z, r1.z, r2.z, l(1.000000)
 162: mul r1.z, r1.z, r2.y
 163: mul r2.y, r3.w, r3.w
 164: max r2.y, r2.y, l(0.002000)
 165: add r2.w, -r2.y, l(1.000000)
 166: mad r3.x, |r1.w|, r2.w, r2.y
 167: mad r2.w, r2.x, r2.w, r2.y
 168: mul r1.w, |r1.w|, r2.w
 169: mad r1.w, r2.x, r3.x, r1.w
 170: add r1.w, r1.w, l(0.000010)
 171: div r1.w, l(0.500000), r1.w
 172: mul r2.w, r2.y, r2.y
 173: mad r3.x, r1.x, r2.w, -r1.x
 174: mad r1.x, r3.x, r1.x, l(1.000000)
 175: mul r2.w, r2.w, l(0.318310)
 176: mad r1.x, r1.x, r1.x, l(0.000000)
 177: div r1.x, r2.w, r1.x
 178: mul r1.x, r1.x, r1.w
 179: mul r1.x, r1.x, l(3.141593)
 180: mul r1.xz, r2.xxxx, r1.xxzx
 181: max r1.x, r1.x, l(0.000000)
 182: mad r1.w, r2.y, r2.y, l(1.000000)
 183: div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
 184: dp3 r2.x, cb0[3].xyzx, cb0[3].xyzx
 185: ne r2.x, r2.x, l(0.000000)
 186: and r2.x, r2.x, l(0x3f800000)
 187: mul r1.x, r1.x, r2.x
 188: add r0.w, -r0.w, l(1.000000)
 189: add_sat r0.w, r0.w, cb0[8].w
 190: mul r2.xyw, r1.zzzz, r5.xyxz
 191: mad r2.xyw, r6.xyxz, r3.zzzz, r2.xyxw
 192: mul r3.xyz, r5.xyzx, r1.xxxx
 193: add r1.x, -r1.y, l(1.000000)
 194: mul r1.y, r1.x, r1.x
 195: mul r1.y, r1.y, r1.y
 196: mul r1.x, r1.x, r1.y
 197: add r5.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 198: mad r1.xyz, r5.xyzx, r1.xxxx, cb0[3].xyzx
 199: mul r1.xyz, r1.xyzx, r3.xyzx
 200: mad r0.xyz, r0.xyzx, r2.xywx, r1.xyzx
 201: mul r1.xyz, r4.xyzx, r1.wwww
 202: add r2.xyw, r0.wwww, -cb0[3].xyxz
 203: mad r2.xyz, r2.zzzz, r2.xywx, cb0[3].xyzx
 204: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
 205: mov o0.w, l(1.000000)
 206: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov r0.w, l(0)
  19: mov o3.xyzw, r0.wwwx
  20: mov o4.xyzw, r0.wwwy
  21: mov o5.w, r0.z
  22: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  23: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  24: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  25: dp3 r0.w, r0.xyzx, r0.xyzx
  26: rsq r0.w, r0.w
  27: mul o5.xyz, r0.wwww, r0.xyzx
  28: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  29: mov o6.zw, l(0,0,0,0)
  30: mov o7.xyzw, l(0,0,0,0)
  31: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 129 math, 13 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 4
Set 2D Texture "unity_Lightmap" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r2.w, v2.xyzx, v2.xyzx
  11: rsq r2.w, r2.w
  12: mul r3.xyz, r2.wwww, v2.xyzx
  13: sample r4.xyzw, v1.xyxx, t2.xyzw, s4
  14: add r3.w, -cb0[9].y, l(1.000000)
  15: mad r3.w, r4.y, cb0[9].y, r3.w
  16: mad r4.x, -r0.w, cb0[9].x, l(1.000000)
  17: dp3 r4.y, r3.xyzx, r2.xyzx
  18: add r4.y, r4.y, r4.y
  19: mad r4.yzw, r2.xxyz, -r4.yyyy, r3.xxyz
  20: sample r5.xyzw, v6.xyxx, t3.xyzw, s0
  21: lt r5.w, l(0.000000), cb2[2].w
  22: if_nz r5.w
  23:   dp3 r5.w, r4.yzwy, r4.yzwy
  24:   rsq r5.w, r5.w
  25:   mul r6.xyz, r4.yzwy, r5.wwww
  26:   mov r7.x, v3.w
  27:   mov r7.y, v4.w
  28:   mov r7.z, v5.w
  29:   add r8.xyz, -r7.xyzx, cb2[0].xyzx
  30:   div r8.xyz, r8.xyzx, r6.xyzx
  31:   add r9.xyz, -r7.xyzx, cb2[1].xyzx
  32:   div r9.xyz, r9.xyzx, r6.xyzx
  33:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  34:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  35:   min r5.w, r8.y, r8.x
  36:   min r5.w, r8.z, r5.w
  37:   add r7.xyz, r7.xyzx, -cb2[2].xyzx
  38:   mad r6.xyz, r6.xyzx, r5.wwww, r7.xyzx
  39: else 
  40:   mov r6.xyz, r4.yzwy
  41: endif 
  42: mad r5.w, -r4.x, l(0.700000), l(1.700000)
  43: mul r5.w, r4.x, r5.w
  44: mul r5.w, r5.w, l(6.000000)
  45: sample_l r6.xyzw, r6.xyzx, t4.xyzw, s1, r5.w
  46: add r6.w, r6.w, l(-1.000000)
  47: mad r6.w, cb2[3].w, r6.w, l(1.000000)
  48: log r6.w, r6.w
  49: mul r6.w, r6.w, cb2[3].y
  50: exp r6.w, r6.w
  51: mul r6.w, r6.w, cb2[3].x
  52: mul r7.xyz, r6.xyzx, r6.wwww
  53: lt r7.w, cb2[1].w, l(0.999990)
  54: if_nz r7.w
  55:   lt r7.w, l(0.000000), cb2[6].w
  56:   if_nz r7.w
  57:     dp3 r7.w, r4.yzwy, r4.yzwy
  58:     rsq r7.w, r7.w
  59:     mul r8.xyz, r4.yzwy, r7.wwww
  60:     mov r9.x, v3.w
  61:     mov r9.y, v4.w
  62:     mov r9.z, v5.w
  63:     add r10.xyz, -r9.xyzx, cb2[4].xyzx
  64:     div r10.xyz, r10.xyzx, r8.xyzx
  65:     add r11.xyz, -r9.xyzx, cb2[5].xyzx
  66:     div r11.xyz, r11.xyzx, r8.xyzx
  67:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  68:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  69:     min r7.w, r10.y, r10.x
  70:     min r7.w, r10.z, r7.w
  71:     add r9.xyz, r9.xyzx, -cb2[6].xyzx
  72:     mad r4.yzw, r8.xxyz, r7.wwww, r9.xxyz
  73:   endif 
  74:   sample_l r8.xyzw, r4.yzwy, t5.xyzw, s1, r5.w
  75:   add r4.y, r8.w, l(-1.000000)
  76:   mad r4.y, cb2[7].w, r4.y, l(1.000000)
  77:   log r4.y, r4.y
  78:   mul r4.y, r4.y, cb2[7].y
  79:   exp r4.y, r4.y
  80:   mul r4.y, r4.y, cb2[7].x
  81:   mul r4.yzw, r8.xxyz, r4.yyyy
  82:   mad r6.xyz, r6.wwww, r6.xyzx, -r4.yzwy
  83:   mad r7.xyz, cb2[1].wwww, r6.xyzx, r4.yzwy
  84: endif 
  85: mul r4.yzw, r3.wwww, r7.xxyz
  86: mad r6.xyz, -v2.xyzx, r2.wwww, cb1[0].xyzx
  87: dp3 r2.w, r6.xyzx, r6.xyzx
  88: max r2.w, r2.w, l(0.001000)
  89: rsq r2.w, r2.w
  90: mul r6.xyz, r2.wwww, r6.xyzx
  91: dp3 r2.w, r2.xyzx, -r3.xyzx
  92: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
  93: dp3_sat r2.x, r2.xyzx, r6.xyzx
  94: dp3_sat r2.y, cb1[0].xyzx, r6.xyzx
  95: mul r2.z, r2.y, r2.y
  96: dp2 r2.z, r2.zzzz, r4.xxxx
  97: add r2.z, r2.z, l(-0.500000)
  98: add r3.y, -r3.x, l(1.000000)
  99: mul r3.z, r3.y, r3.y
 100: mul r3.z, r3.z, r3.z
 101: mul r3.y, r3.y, r3.z
 102: mad r3.y, r2.z, r3.y, l(1.000000)
 103: add r3.z, -|r2.w|, l(1.000000)
 104: mul r5.w, r3.z, r3.z
 105: mul r5.w, r5.w, r5.w
 106: mul r3.z, r3.z, r5.w
 107: mad r2.z, r2.z, r3.z, l(1.000000)
 108: mul r2.z, r2.z, r3.y
 109: mul r3.y, r4.x, r4.x
 110: max r3.y, r3.y, l(0.002000)
 111: add r4.x, -r3.y, l(1.000000)
 112: mad r5.w, |r2.w|, r4.x, r3.y
 113: mad r4.x, r3.x, r4.x, r3.y
 114: mul r2.w, |r2.w|, r4.x
 115: mad r2.w, r3.x, r5.w, r2.w
 116: add r2.w, r2.w, l(0.000010)
 117: div r2.w, l(0.500000), r2.w
 118: mul r4.x, r3.y, r3.y
 119: mad r5.w, r2.x, r4.x, -r2.x
 120: mad r2.x, r5.w, r2.x, l(1.000000)
 121: mul r4.x, r4.x, l(0.318310)
 122: mad r2.x, r2.x, r2.x, l(0.000000)
 123: div r2.x, r4.x, r2.x
 124: mul r2.x, r2.x, r2.w
 125: mul r2.x, r2.x, l(3.141593)
 126: mul r2.xz, r3.xxxx, r2.xxzx
 127: max r2.x, r2.x, l(0.000000)
 128: mad r2.w, r3.y, r3.y, l(1.000000)
 129: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 130: dp3 r3.x, r0.xyzx, r0.xyzx
 131: ne r3.x, r3.x, l(0.000000)
 132: and r3.x, r3.x, l(0x3f800000)
 133: mul r2.x, r2.x, r3.x
 134: mad r0.w, r0.w, cb0[9].x, -r1.w
 135: add_sat r0.w, r0.w, l(1.000000)
 136: mul r6.xyz, r2.zzzz, cb0[2].xyzx
 137: mad r3.xyw, r5.xyxz, r3.wwww, r6.xyxz
 138: mul r5.xyz, r2.xxxx, cb0[2].xyzx
 139: add r1.w, -r2.y, l(1.000000)
 140: mul r2.x, r1.w, r1.w
 141: mul r2.x, r2.x, r2.x
 142: mul r1.w, r1.w, r2.x
 143: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 144: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 145: mul r2.xyz, r2.xyzx, r5.xyzx
 146: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 147: mul r2.xyz, r4.yzwy, r2.wwww
 148: add r3.xyw, -r0.xyxz, r0.wwww
 149: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 150: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 151: mov o0.w, l(1.000000)
 152: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mov r0.x, cb3[0].x
  15: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  16: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  17: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  18: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  19: add o2.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  20: mov r1.w, l(0)
  21: mov o3.xyzw, r1.wwwx
  22: mov o4.xyzw, r1.wwwy
  23: mov o5.w, r1.z
  24: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  25: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  26: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul o5.xyz, r0.wwww, r0.xyzx
  30: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  31: mov o6.zw, l(0,0,0,0)
  32: mov o7.xyzw, l(0,0,0,0)
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 129 math, 13 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 4
Set 2D Texture "unity_Lightmap" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r2.w, v2.xyzx, v2.xyzx
  11: rsq r2.w, r2.w
  12: mul r3.xyz, r2.wwww, v2.xyzx
  13: sample r4.xyzw, v1.xyxx, t2.xyzw, s4
  14: add r3.w, -cb0[9].y, l(1.000000)
  15: mad r3.w, r4.y, cb0[9].y, r3.w
  16: mad r4.x, -r0.w, cb0[9].x, l(1.000000)
  17: dp3 r4.y, r3.xyzx, r2.xyzx
  18: add r4.y, r4.y, r4.y
  19: mad r4.yzw, r2.xxyz, -r4.yyyy, r3.xxyz
  20: sample r5.xyzw, v6.xyxx, t3.xyzw, s0
  21: lt r5.w, l(0.000000), cb2[2].w
  22: if_nz r5.w
  23:   dp3 r5.w, r4.yzwy, r4.yzwy
  24:   rsq r5.w, r5.w
  25:   mul r6.xyz, r4.yzwy, r5.wwww
  26:   mov r7.x, v3.w
  27:   mov r7.y, v4.w
  28:   mov r7.z, v5.w
  29:   add r8.xyz, -r7.xyzx, cb2[0].xyzx
  30:   div r8.xyz, r8.xyzx, r6.xyzx
  31:   add r9.xyz, -r7.xyzx, cb2[1].xyzx
  32:   div r9.xyz, r9.xyzx, r6.xyzx
  33:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  34:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  35:   min r5.w, r8.y, r8.x
  36:   min r5.w, r8.z, r5.w
  37:   add r7.xyz, r7.xyzx, -cb2[2].xyzx
  38:   mad r6.xyz, r6.xyzx, r5.wwww, r7.xyzx
  39: else 
  40:   mov r6.xyz, r4.yzwy
  41: endif 
  42: mad r5.w, -r4.x, l(0.700000), l(1.700000)
  43: mul r5.w, r4.x, r5.w
  44: mul r5.w, r5.w, l(6.000000)
  45: sample_l r6.xyzw, r6.xyzx, t4.xyzw, s1, r5.w
  46: add r6.w, r6.w, l(-1.000000)
  47: mad r6.w, cb2[3].w, r6.w, l(1.000000)
  48: log r6.w, r6.w
  49: mul r6.w, r6.w, cb2[3].y
  50: exp r6.w, r6.w
  51: mul r6.w, r6.w, cb2[3].x
  52: mul r7.xyz, r6.xyzx, r6.wwww
  53: lt r7.w, cb2[1].w, l(0.999990)
  54: if_nz r7.w
  55:   lt r7.w, l(0.000000), cb2[6].w
  56:   if_nz r7.w
  57:     dp3 r7.w, r4.yzwy, r4.yzwy
  58:     rsq r7.w, r7.w
  59:     mul r8.xyz, r4.yzwy, r7.wwww
  60:     mov r9.x, v3.w
  61:     mov r9.y, v4.w
  62:     mov r9.z, v5.w
  63:     add r10.xyz, -r9.xyzx, cb2[4].xyzx
  64:     div r10.xyz, r10.xyzx, r8.xyzx
  65:     add r11.xyz, -r9.xyzx, cb2[5].xyzx
  66:     div r11.xyz, r11.xyzx, r8.xyzx
  67:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  68:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  69:     min r7.w, r10.y, r10.x
  70:     min r7.w, r10.z, r7.w
  71:     add r9.xyz, r9.xyzx, -cb2[6].xyzx
  72:     mad r4.yzw, r8.xxyz, r7.wwww, r9.xxyz
  73:   endif 
  74:   sample_l r8.xyzw, r4.yzwy, t5.xyzw, s1, r5.w
  75:   add r4.y, r8.w, l(-1.000000)
  76:   mad r4.y, cb2[7].w, r4.y, l(1.000000)
  77:   log r4.y, r4.y
  78:   mul r4.y, r4.y, cb2[7].y
  79:   exp r4.y, r4.y
  80:   mul r4.y, r4.y, cb2[7].x
  81:   mul r4.yzw, r8.xxyz, r4.yyyy
  82:   mad r6.xyz, r6.wwww, r6.xyzx, -r4.yzwy
  83:   mad r7.xyz, cb2[1].wwww, r6.xyzx, r4.yzwy
  84: endif 
  85: mul r4.yzw, r3.wwww, r7.xxyz
  86: mad r6.xyz, -v2.xyzx, r2.wwww, cb1[0].xyzx
  87: dp3 r2.w, r6.xyzx, r6.xyzx
  88: max r2.w, r2.w, l(0.001000)
  89: rsq r2.w, r2.w
  90: mul r6.xyz, r2.wwww, r6.xyzx
  91: dp3 r2.w, r2.xyzx, -r3.xyzx
  92: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
  93: dp3_sat r2.x, r2.xyzx, r6.xyzx
  94: dp3_sat r2.y, cb1[0].xyzx, r6.xyzx
  95: mul r2.z, r2.y, r2.y
  96: dp2 r2.z, r2.zzzz, r4.xxxx
  97: add r2.z, r2.z, l(-0.500000)
  98: add r3.y, -r3.x, l(1.000000)
  99: mul r3.z, r3.y, r3.y
 100: mul r3.z, r3.z, r3.z
 101: mul r3.y, r3.y, r3.z
 102: mad r3.y, r2.z, r3.y, l(1.000000)
 103: add r3.z, -|r2.w|, l(1.000000)
 104: mul r5.w, r3.z, r3.z
 105: mul r5.w, r5.w, r5.w
 106: mul r3.z, r3.z, r5.w
 107: mad r2.z, r2.z, r3.z, l(1.000000)
 108: mul r2.z, r2.z, r3.y
 109: mul r3.y, r4.x, r4.x
 110: max r3.y, r3.y, l(0.002000)
 111: add r4.x, -r3.y, l(1.000000)
 112: mad r5.w, |r2.w|, r4.x, r3.y
 113: mad r4.x, r3.x, r4.x, r3.y
 114: mul r2.w, |r2.w|, r4.x
 115: mad r2.w, r3.x, r5.w, r2.w
 116: add r2.w, r2.w, l(0.000010)
 117: div r2.w, l(0.500000), r2.w
 118: mul r4.x, r3.y, r3.y
 119: mad r5.w, r2.x, r4.x, -r2.x
 120: mad r2.x, r5.w, r2.x, l(1.000000)
 121: mul r4.x, r4.x, l(0.318310)
 122: mad r2.x, r2.x, r2.x, l(0.000000)
 123: div r2.x, r4.x, r2.x
 124: mul r2.x, r2.x, r2.w
 125: mul r2.x, r2.x, l(3.141593)
 126: mul r2.xz, r3.xxxx, r2.xxzx
 127: max r2.x, r2.x, l(0.000000)
 128: mad r2.w, r3.y, r3.y, l(1.000000)
 129: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 130: dp3 r3.x, r0.xyzx, r0.xyzx
 131: ne r3.x, r3.x, l(0.000000)
 132: and r3.x, r3.x, l(0x3f800000)
 133: mul r2.x, r2.x, r3.x
 134: mad r0.w, r0.w, cb0[9].x, -r1.w
 135: add_sat r0.w, r0.w, l(1.000000)
 136: mul r6.xyz, r2.zzzz, cb0[2].xyzx
 137: mad r3.xyw, r5.xyxz, r3.wwww, r6.xyxz
 138: mul r5.xyz, r2.xxxx, cb0[2].xyzx
 139: add r1.w, -r2.y, l(1.000000)
 140: mul r2.x, r1.w, r1.w
 141: mul r2.x, r2.x, r2.x
 142: mul r1.w, r1.w, r2.x
 143: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 144: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 145: mul r2.xyz, r2.xyzx, r5.xyzx
 146: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 147: mul r2.xyz, r4.yzwy, r2.wwww
 148: add r3.xyw, -r0.xyxz, r0.wwww
 149: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 150: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 151: mov o0.w, l(1.000000)
 152: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov o3.w, r0.x
  19: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  20: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  21: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r1.xyz, r0.xxxx, r1.xyzx
  25: mov o3.xyz, r1.xyzx
  26: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  27: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  28: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  29: dp3 r0.x, r2.xyzx, r2.xyzx
  30: rsq r0.x, r0.x
  31: mul r2.xyz, r0.xxxx, r2.xyzx
  32: mul r3.xyz, r1.yzxy, r2.zxyz
  33: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  34: mov o5.xyz, r2.xyzx
  35: mul r0.x, v4.w, cb2[9].w
  36: mul o4.xyz, r0.xxxx, r1.xyzx
  37: mov o4.w, r0.y
  38: mov o5.w, r0.z
  39: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  40: mov o6.zw, l(0,0,0,0)
  41: mov o7.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 139 math, 13 temp registers, 5 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 5
Set 2D Texture "unity_Lightmap" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r2.z, r2.xyxx, r2.xyxx
  12: min r2.z, r2.z, l(1.000000)
  13: add r2.z, -r2.z, l(1.000000)
  14: sqrt r2.z, r2.z
  15: mul r3.xyz, r2.yyyy, v4.xyzx
  16: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  17: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  18: dp3 r2.w, r2.xyzx, r2.xyzx
  19: rsq r2.w, r2.w
  20: mul r2.xyz, r2.wwww, r2.xyzx
  21: dp3 r2.w, v2.xyzx, v2.xyzx
  22: rsq r2.w, r2.w
  23: mul r3.xyz, r2.wwww, v2.xyzx
  24: sample r4.xyzw, v1.xyxx, t3.xyzw, s5
  25: add r3.w, -cb0[9].y, l(1.000000)
  26: mad r3.w, r4.y, cb0[9].y, r3.w
  27: mad r4.x, -r0.w, cb0[9].x, l(1.000000)
  28: dp3 r4.y, r3.xyzx, r2.xyzx
  29: add r4.y, r4.y, r4.y
  30: mad r4.yzw, r2.xxyz, -r4.yyyy, r3.xxyz
  31: sample r5.xyzw, v6.xyxx, t4.xyzw, s0
  32: lt r5.w, l(0.000000), cb2[2].w
  33: if_nz r5.w
  34:   dp3 r5.w, r4.yzwy, r4.yzwy
  35:   rsq r5.w, r5.w
  36:   mul r6.xyz, r4.yzwy, r5.wwww
  37:   mov r7.x, v3.w
  38:   mov r7.y, v4.w
  39:   mov r7.z, v5.w
  40:   add r8.xyz, -r7.xyzx, cb2[0].xyzx
  41:   div r8.xyz, r8.xyzx, r6.xyzx
  42:   add r9.xyz, -r7.xyzx, cb2[1].xyzx
  43:   div r9.xyz, r9.xyzx, r6.xyzx
  44:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  45:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  46:   min r5.w, r8.y, r8.x
  47:   min r5.w, r8.z, r5.w
  48:   add r7.xyz, r7.xyzx, -cb2[2].xyzx
  49:   mad r6.xyz, r6.xyzx, r5.wwww, r7.xyzx
  50: else 
  51:   mov r6.xyz, r4.yzwy
  52: endif 
  53: mad r5.w, -r4.x, l(0.700000), l(1.700000)
  54: mul r5.w, r4.x, r5.w
  55: mul r5.w, r5.w, l(6.000000)
  56: sample_l r6.xyzw, r6.xyzx, t5.xyzw, s1, r5.w
  57: add r6.w, r6.w, l(-1.000000)
  58: mad r6.w, cb2[3].w, r6.w, l(1.000000)
  59: log r6.w, r6.w
  60: mul r6.w, r6.w, cb2[3].y
  61: exp r6.w, r6.w
  62: mul r6.w, r6.w, cb2[3].x
  63: mul r7.xyz, r6.xyzx, r6.wwww
  64: lt r7.w, cb2[1].w, l(0.999990)
  65: if_nz r7.w
  66:   lt r7.w, l(0.000000), cb2[6].w
  67:   if_nz r7.w
  68:     dp3 r7.w, r4.yzwy, r4.yzwy
  69:     rsq r7.w, r7.w
  70:     mul r8.xyz, r4.yzwy, r7.wwww
  71:     mov r9.x, v3.w
  72:     mov r9.y, v4.w
  73:     mov r9.z, v5.w
  74:     add r10.xyz, -r9.xyzx, cb2[4].xyzx
  75:     div r10.xyz, r10.xyzx, r8.xyzx
  76:     add r11.xyz, -r9.xyzx, cb2[5].xyzx
  77:     div r11.xyz, r11.xyzx, r8.xyzx
  78:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  79:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  80:     min r7.w, r10.y, r10.x
  81:     min r7.w, r10.z, r7.w
  82:     add r9.xyz, r9.xyzx, -cb2[6].xyzx
  83:     mad r4.yzw, r8.xxyz, r7.wwww, r9.xxyz
  84:   endif 
  85:   sample_l r8.xyzw, r4.yzwy, t6.xyzw, s1, r5.w
  86:   add r4.y, r8.w, l(-1.000000)
  87:   mad r4.y, cb2[7].w, r4.y, l(1.000000)
  88:   log r4.y, r4.y
  89:   mul r4.y, r4.y, cb2[7].y
  90:   exp r4.y, r4.y
  91:   mul r4.y, r4.y, cb2[7].x
  92:   mul r4.yzw, r8.xxyz, r4.yyyy
  93:   mad r6.xyz, r6.wwww, r6.xyzx, -r4.yzwy
  94:   mad r7.xyz, cb2[1].wwww, r6.xyzx, r4.yzwy
  95: endif 
  96: mul r4.yzw, r3.wwww, r7.xxyz
  97: mad r6.xyz, -v2.xyzx, r2.wwww, cb1[0].xyzx
  98: dp3 r2.w, r6.xyzx, r6.xyzx
  99: max r2.w, r2.w, l(0.001000)
 100: rsq r2.w, r2.w
 101: mul r6.xyz, r2.wwww, r6.xyzx
 102: dp3 r2.w, r2.xyzx, -r3.xyzx
 103: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 104: dp3_sat r2.x, r2.xyzx, r6.xyzx
 105: dp3_sat r2.y, cb1[0].xyzx, r6.xyzx
 106: mul r2.z, r2.y, r2.y
 107: dp2 r2.z, r2.zzzz, r4.xxxx
 108: add r2.z, r2.z, l(-0.500000)
 109: add r3.y, -r3.x, l(1.000000)
 110: mul r3.z, r3.y, r3.y
 111: mul r3.z, r3.z, r3.z
 112: mul r3.y, r3.y, r3.z
 113: mad r3.y, r2.z, r3.y, l(1.000000)
 114: add r3.z, -|r2.w|, l(1.000000)
 115: mul r5.w, r3.z, r3.z
 116: mul r5.w, r5.w, r5.w
 117: mul r3.z, r3.z, r5.w
 118: mad r2.z, r2.z, r3.z, l(1.000000)
 119: mul r2.z, r2.z, r3.y
 120: mul r3.y, r4.x, r4.x
 121: max r3.y, r3.y, l(0.002000)
 122: add r4.x, -r3.y, l(1.000000)
 123: mad r5.w, |r2.w|, r4.x, r3.y
 124: mad r4.x, r3.x, r4.x, r3.y
 125: mul r2.w, |r2.w|, r4.x
 126: mad r2.w, r3.x, r5.w, r2.w
 127: add r2.w, r2.w, l(0.000010)
 128: div r2.w, l(0.500000), r2.w
 129: mul r4.x, r3.y, r3.y
 130: mad r5.w, r2.x, r4.x, -r2.x
 131: mad r2.x, r5.w, r2.x, l(1.000000)
 132: mul r4.x, r4.x, l(0.318310)
 133: mad r2.x, r2.x, r2.x, l(0.000000)
 134: div r2.x, r4.x, r2.x
 135: mul r2.x, r2.x, r2.w
 136: mul r2.x, r2.x, l(3.141593)
 137: mul r2.xz, r3.xxxx, r2.xxzx
 138: max r2.x, r2.x, l(0.000000)
 139: mad r2.w, r3.y, r3.y, l(1.000000)
 140: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 141: dp3 r3.x, r0.xyzx, r0.xyzx
 142: ne r3.x, r3.x, l(0.000000)
 143: and r3.x, r3.x, l(0x3f800000)
 144: mul r2.x, r2.x, r3.x
 145: mad r0.w, r0.w, cb0[9].x, -r1.w
 146: add_sat r0.w, r0.w, l(1.000000)
 147: mul r6.xyz, r2.zzzz, cb0[2].xyzx
 148: mad r3.xyw, r5.xyxz, r3.wwww, r6.xyxz
 149: mul r5.xyz, r2.xxxx, cb0[2].xyzx
 150: add r1.w, -r2.y, l(1.000000)
 151: mul r2.x, r1.w, r1.w
 152: mul r2.x, r2.x, r2.x
 153: mul r1.w, r1.w, r2.x
 154: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 155: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 156: mul r2.xyz, r2.xyzx, r5.xyzx
 157: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 158: mul r2.xyz, r4.yzwy, r2.wwww
 159: add r3.xyw, -r0.xyxz, r0.wwww
 160: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 161: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 162: mov o0.w, l(1.000000)
 163: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mov r0.x, cb3[0].x
  15: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  16: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  17: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  18: mad r0.yzw, cb1[3].xxyz, v0.wwww, r0.yyzw
  19: add o2.xyz, r0.yzwy, -cb2[r0.x + 64].xyzx
  20: mov o3.w, r0.y
  21: mul r1.xyz, v4.yyyy, cb1[1].xyzx
  22: mad r1.xyz, cb1[0].xyzx, v4.xxxx, r1.xyzx
  23: mad r1.xyz, cb1[2].xyzx, v4.zzzz, r1.xyzx
  24: dp3 r0.x, r1.xyzx, r1.xyzx
  25: rsq r0.x, r0.x
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mov o3.xyz, r1.xyzx
  28: dp3 r2.x, v1.xyzx, cb1[4].xyzx
  29: dp3 r2.y, v1.xyzx, cb1[5].xyzx
  30: dp3 r2.z, v1.xyzx, cb1[6].xyzx
  31: dp3 r0.x, r2.xyzx, r2.xyzx
  32: rsq r0.x, r0.x
  33: mul r2.xyz, r0.xxxx, r2.xyzx
  34: mul r3.xyz, r1.yzxy, r2.zxyz
  35: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  36: mov o5.xyz, r2.xyzx
  37: mul r0.x, v4.w, cb1[9].w
  38: mul o4.xyz, r0.xxxx, r1.xyzx
  39: mov o4.w, r0.z
  40: mov o5.w, r0.w
  41: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  42: mov o6.zw, l(0,0,0,0)
  43: mov o7.xyzw, l(0,0,0,0)
  44: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 139 math, 13 temp registers, 5 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 5
Set 2D Texture "unity_Lightmap" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r2.z, r2.xyxx, r2.xyxx
  12: min r2.z, r2.z, l(1.000000)
  13: add r2.z, -r2.z, l(1.000000)
  14: sqrt r2.z, r2.z
  15: mul r3.xyz, r2.yyyy, v4.xyzx
  16: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  17: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  18: dp3 r2.w, r2.xyzx, r2.xyzx
  19: rsq r2.w, r2.w
  20: mul r2.xyz, r2.wwww, r2.xyzx
  21: dp3 r2.w, v2.xyzx, v2.xyzx
  22: rsq r2.w, r2.w
  23: mul r3.xyz, r2.wwww, v2.xyzx
  24: sample r4.xyzw, v1.xyxx, t3.xyzw, s5
  25: add r3.w, -cb0[9].y, l(1.000000)
  26: mad r3.w, r4.y, cb0[9].y, r3.w
  27: mad r4.x, -r0.w, cb0[9].x, l(1.000000)
  28: dp3 r4.y, r3.xyzx, r2.xyzx
  29: add r4.y, r4.y, r4.y
  30: mad r4.yzw, r2.xxyz, -r4.yyyy, r3.xxyz
  31: sample r5.xyzw, v6.xyxx, t4.xyzw, s0
  32: lt r5.w, l(0.000000), cb2[2].w
  33: if_nz r5.w
  34:   dp3 r5.w, r4.yzwy, r4.yzwy
  35:   rsq r5.w, r5.w
  36:   mul r6.xyz, r4.yzwy, r5.wwww
  37:   mov r7.x, v3.w
  38:   mov r7.y, v4.w
  39:   mov r7.z, v5.w
  40:   add r8.xyz, -r7.xyzx, cb2[0].xyzx
  41:   div r8.xyz, r8.xyzx, r6.xyzx
  42:   add r9.xyz, -r7.xyzx, cb2[1].xyzx
  43:   div r9.xyz, r9.xyzx, r6.xyzx
  44:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  45:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  46:   min r5.w, r8.y, r8.x
  47:   min r5.w, r8.z, r5.w
  48:   add r7.xyz, r7.xyzx, -cb2[2].xyzx
  49:   mad r6.xyz, r6.xyzx, r5.wwww, r7.xyzx
  50: else 
  51:   mov r6.xyz, r4.yzwy
  52: endif 
  53: mad r5.w, -r4.x, l(0.700000), l(1.700000)
  54: mul r5.w, r4.x, r5.w
  55: mul r5.w, r5.w, l(6.000000)
  56: sample_l r6.xyzw, r6.xyzx, t5.xyzw, s1, r5.w
  57: add r6.w, r6.w, l(-1.000000)
  58: mad r6.w, cb2[3].w, r6.w, l(1.000000)
  59: log r6.w, r6.w
  60: mul r6.w, r6.w, cb2[3].y
  61: exp r6.w, r6.w
  62: mul r6.w, r6.w, cb2[3].x
  63: mul r7.xyz, r6.xyzx, r6.wwww
  64: lt r7.w, cb2[1].w, l(0.999990)
  65: if_nz r7.w
  66:   lt r7.w, l(0.000000), cb2[6].w
  67:   if_nz r7.w
  68:     dp3 r7.w, r4.yzwy, r4.yzwy
  69:     rsq r7.w, r7.w
  70:     mul r8.xyz, r4.yzwy, r7.wwww
  71:     mov r9.x, v3.w
  72:     mov r9.y, v4.w
  73:     mov r9.z, v5.w
  74:     add r10.xyz, -r9.xyzx, cb2[4].xyzx
  75:     div r10.xyz, r10.xyzx, r8.xyzx
  76:     add r11.xyz, -r9.xyzx, cb2[5].xyzx
  77:     div r11.xyz, r11.xyzx, r8.xyzx
  78:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  79:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  80:     min r7.w, r10.y, r10.x
  81:     min r7.w, r10.z, r7.w
  82:     add r9.xyz, r9.xyzx, -cb2[6].xyzx
  83:     mad r4.yzw, r8.xxyz, r7.wwww, r9.xxyz
  84:   endif 
  85:   sample_l r8.xyzw, r4.yzwy, t6.xyzw, s1, r5.w
  86:   add r4.y, r8.w, l(-1.000000)
  87:   mad r4.y, cb2[7].w, r4.y, l(1.000000)
  88:   log r4.y, r4.y
  89:   mul r4.y, r4.y, cb2[7].y
  90:   exp r4.y, r4.y
  91:   mul r4.y, r4.y, cb2[7].x
  92:   mul r4.yzw, r8.xxyz, r4.yyyy
  93:   mad r6.xyz, r6.wwww, r6.xyzx, -r4.yzwy
  94:   mad r7.xyz, cb2[1].wwww, r6.xyzx, r4.yzwy
  95: endif 
  96: mul r4.yzw, r3.wwww, r7.xxyz
  97: mad r6.xyz, -v2.xyzx, r2.wwww, cb1[0].xyzx
  98: dp3 r2.w, r6.xyzx, r6.xyzx
  99: max r2.w, r2.w, l(0.001000)
 100: rsq r2.w, r2.w
 101: mul r6.xyz, r2.wwww, r6.xyzx
 102: dp3 r2.w, r2.xyzx, -r3.xyzx
 103: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 104: dp3_sat r2.x, r2.xyzx, r6.xyzx
 105: dp3_sat r2.y, cb1[0].xyzx, r6.xyzx
 106: mul r2.z, r2.y, r2.y
 107: dp2 r2.z, r2.zzzz, r4.xxxx
 108: add r2.z, r2.z, l(-0.500000)
 109: add r3.y, -r3.x, l(1.000000)
 110: mul r3.z, r3.y, r3.y
 111: mul r3.z, r3.z, r3.z
 112: mul r3.y, r3.y, r3.z
 113: mad r3.y, r2.z, r3.y, l(1.000000)
 114: add r3.z, -|r2.w|, l(1.000000)
 115: mul r5.w, r3.z, r3.z
 116: mul r5.w, r5.w, r5.w
 117: mul r3.z, r3.z, r5.w
 118: mad r2.z, r2.z, r3.z, l(1.000000)
 119: mul r2.z, r2.z, r3.y
 120: mul r3.y, r4.x, r4.x
 121: max r3.y, r3.y, l(0.002000)
 122: add r4.x, -r3.y, l(1.000000)
 123: mad r5.w, |r2.w|, r4.x, r3.y
 124: mad r4.x, r3.x, r4.x, r3.y
 125: mul r2.w, |r2.w|, r4.x
 126: mad r2.w, r3.x, r5.w, r2.w
 127: add r2.w, r2.w, l(0.000010)
 128: div r2.w, l(0.500000), r2.w
 129: mul r4.x, r3.y, r3.y
 130: mad r5.w, r2.x, r4.x, -r2.x
 131: mad r2.x, r5.w, r2.x, l(1.000000)
 132: mul r4.x, r4.x, l(0.318310)
 133: mad r2.x, r2.x, r2.x, l(0.000000)
 134: div r2.x, r4.x, r2.x
 135: mul r2.x, r2.x, r2.w
 136: mul r2.x, r2.x, l(3.141593)
 137: mul r2.xz, r3.xxxx, r2.xxzx
 138: max r2.x, r2.x, l(0.000000)
 139: mad r2.w, r3.y, r3.y, l(1.000000)
 140: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 141: dp3 r3.x, r0.xyzx, r0.xyzx
 142: ne r3.x, r3.x, l(0.000000)
 143: and r3.x, r3.x, l(0x3f800000)
 144: mul r2.x, r2.x, r3.x
 145: mad r0.w, r0.w, cb0[9].x, -r1.w
 146: add_sat r0.w, r0.w, l(1.000000)
 147: mul r6.xyz, r2.zzzz, cb0[2].xyzx
 148: mad r3.xyw, r5.xyxz, r3.wwww, r6.xyxz
 149: mul r5.xyz, r2.xxxx, cb0[2].xyzx
 150: add r1.w, -r2.y, l(1.000000)
 151: mul r2.x, r1.w, r1.w
 152: mul r2.x, r2.x, r2.x
 153: mul r1.w, r1.w, r2.x
 154: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 155: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 156: mul r2.xyz, r2.xyzx, r5.xyzx
 157: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 158: mul r2.xyz, r4.yzwy, r2.wwww
 159: add r3.xyw, -r0.xyxz, r0.wwww
 160: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 161: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 162: mov o0.w, l(1.000000)
 163: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov r0.w, l(0)
  19: mov o3.xyzw, r0.wwwx
  20: mov o4.xyzw, r0.wwwy
  21: mov o5.w, r0.z
  22: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  23: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  24: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  25: dp3 r0.w, r0.xyzx, r0.xyzx
  26: rsq r0.w, r0.w
  27: mul o5.xyz, r0.wwww, r0.xyzx
  28: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  29: mov o6.zw, l(0,0,0,0)
  30: mov o7.xyzw, l(0,0,0,0)
  31: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 129 math, 12 temp registers, 3 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 3
Set 2D Texture "unity_Lightmap" to slot 2 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 12
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r2.xyz, r1.wwww, v2.xyzx
  12: sample r3.xyzw, v1.xyxx, t1.xyzw, s3
  13: add r2.w, -cb0[9].y, l(1.000000)
  14: mad r2.w, r3.y, cb0[9].y, r2.w
  15: add r3.x, -cb0[8].w, l(1.000000)
  16: dp3 r3.y, r2.xyzx, r1.xyzx
  17: add r3.y, r3.y, r3.y
  18: mad r3.yzw, r1.xxyz, -r3.yyyy, r2.xxyz
  19: sample r4.xyzw, v6.xyxx, t2.xyzw, s0
  20: lt r4.w, l(0.000000), cb2[2].w
  21: if_nz r4.w
  22:   dp3 r4.w, r3.yzwy, r3.yzwy
  23:   rsq r4.w, r4.w
  24:   mul r5.xyz, r3.yzwy, r4.wwww
  25:   mov r6.x, v3.w
  26:   mov r6.y, v4.w
  27:   mov r6.z, v5.w
  28:   add r7.xyz, -r6.xyzx, cb2[0].xyzx
  29:   div r7.xyz, r7.xyzx, r5.xyzx
  30:   add r8.xyz, -r6.xyzx, cb2[1].xyzx
  31:   div r8.xyz, r8.xyzx, r5.xyzx
  32:   lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
  33:   movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  34:   min r4.w, r7.y, r7.x
  35:   min r4.w, r7.z, r4.w
  36:   add r6.xyz, r6.xyzx, -cb2[2].xyzx
  37:   mad r5.xyz, r5.xyzx, r4.wwww, r6.xyzx
  38: else 
  39:   mov r5.xyz, r3.yzwy
  40: endif 
  41: mad r4.w, -r3.x, l(0.700000), l(1.700000)
  42: mul r4.w, r3.x, r4.w
  43: mul r4.w, r4.w, l(6.000000)
  44: sample_l r5.xyzw, r5.xyzx, t3.xyzw, s1, r4.w
  45: add r5.w, r5.w, l(-1.000000)
  46: mad r5.w, cb2[3].w, r5.w, l(1.000000)
  47: log r5.w, r5.w
  48: mul r5.w, r5.w, cb2[3].y
  49: exp r5.w, r5.w
  50: mul r5.w, r5.w, cb2[3].x
  51: mul r6.xyz, r5.xyzx, r5.wwww
  52: lt r6.w, cb2[1].w, l(0.999990)
  53: if_nz r6.w
  54:   lt r6.w, l(0.000000), cb2[6].w
  55:   if_nz r6.w
  56:     dp3 r6.w, r3.yzwy, r3.yzwy
  57:     rsq r6.w, r6.w
  58:     mul r7.xyz, r3.yzwy, r6.wwww
  59:     mov r8.x, v3.w
  60:     mov r8.y, v4.w
  61:     mov r8.z, v5.w
  62:     add r9.xyz, -r8.xyzx, cb2[4].xyzx
  63:     div r9.xyz, r9.xyzx, r7.xyzx
  64:     add r10.xyz, -r8.xyzx, cb2[5].xyzx
  65:     div r10.xyz, r10.xyzx, r7.xyzx
  66:     lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  67:     movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  68:     min r6.w, r9.y, r9.x
  69:     min r6.w, r9.z, r6.w
  70:     add r8.xyz, r8.xyzx, -cb2[6].xyzx
  71:     mad r3.yzw, r7.xxyz, r6.wwww, r8.xxyz
  72:   endif 
  73:   sample_l r7.xyzw, r3.yzwy, t4.xyzw, s1, r4.w
  74:   add r3.y, r7.w, l(-1.000000)
  75:   mad r3.y, cb2[7].w, r3.y, l(1.000000)
  76:   log r3.y, r3.y
  77:   mul r3.y, r3.y, cb2[7].y
  78:   exp r3.y, r3.y
  79:   mul r3.y, r3.y, cb2[7].x
  80:   mul r3.yzw, r7.xxyz, r3.yyyy
  81:   mad r5.xyz, r5.wwww, r5.xyzx, -r3.yzwy
  82:   mad r6.xyz, cb2[1].wwww, r5.xyzx, r3.yzwy
  83: endif 
  84: mul r3.yzw, r2.wwww, r6.xxyz
  85: mad r5.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
  86: dp3 r1.w, r5.xyzx, r5.xyzx
  87: max r1.w, r1.w, l(0.001000)
  88: rsq r1.w, r1.w
  89: mul r5.xyz, r1.wwww, r5.xyzx
  90: dp3 r1.w, r1.xyzx, -r2.xyzx
  91: dp3_sat r2.x, r1.xyzx, cb1[0].xyzx
  92: dp3_sat r1.x, r1.xyzx, r5.xyzx
  93: dp3_sat r1.y, cb1[0].xyzx, r5.xyzx
  94: mul r1.z, r1.y, r1.y
  95: dp2 r1.z, r1.zzzz, r3.xxxx
  96: add r1.z, r1.z, l(-0.500000)
  97: add r2.y, -r2.x, l(1.000000)
  98: mul r2.z, r2.y, r2.y
  99: mul r2.z, r2.z, r2.z
 100: mul r2.y, r2.y, r2.z
 101: mad r2.y, r1.z, r2.y, l(1.000000)
 102: add r2.z, -|r1.w|, l(1.000000)
 103: mul r4.w, r2.z, r2.z
 104: mul r4.w, r4.w, r4.w
 105: mul r2.z, r2.z, r4.w
 106: mad r1.z, r1.z, r2.z, l(1.000000)
 107: mul r1.z, r1.z, r2.y
 108: mul r2.y, r3.x, r3.x
 109: max r2.y, r2.y, l(0.002000)
 110: add r3.x, -r2.y, l(1.000000)
 111: mad r4.w, |r1.w|, r3.x, r2.y
 112: mad r3.x, r2.x, r3.x, r2.y
 113: mul r1.w, |r1.w|, r3.x
 114: mad r1.w, r2.x, r4.w, r1.w
 115: add r1.w, r1.w, l(0.000010)
 116: div r1.w, l(0.500000), r1.w
 117: mul r3.x, r2.y, r2.y
 118: mad r4.w, r1.x, r3.x, -r1.x
 119: mad r1.x, r4.w, r1.x, l(1.000000)
 120: mul r3.x, r3.x, l(0.318310)
 121: mad r1.x, r1.x, r1.x, l(0.000000)
 122: div r1.x, r3.x, r1.x
 123: mul r1.x, r1.x, r1.w
 124: mul r1.x, r1.x, l(3.141593)
 125: mul r1.xz, r2.xxxx, r1.xxzx
 126: max r1.x, r1.x, l(0.000000)
 127: mad r1.w, r2.y, r2.y, l(1.000000)
 128: div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
 129: dp3 r2.x, cb0[3].xyzx, cb0[3].xyzx
 130: ne r2.x, r2.x, l(0.000000)
 131: and r2.x, r2.x, l(0x3f800000)
 132: mul r1.x, r1.x, r2.x
 133: add r0.w, -r0.w, l(1.000000)
 134: add_sat r0.w, r0.w, cb0[8].w
 135: mul r5.xyz, r1.zzzz, cb0[2].xyzx
 136: mad r2.xyw, r4.xyxz, r2.wwww, r5.xyxz
 137: mul r4.xyz, r1.xxxx, cb0[2].xyzx
 138: add r1.x, -r1.y, l(1.000000)
 139: mul r1.y, r1.x, r1.x
 140: mul r1.y, r1.y, r1.y
 141: mul r1.x, r1.x, r1.y
 142: add r5.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 143: mad r1.xyz, r5.xyzx, r1.xxxx, cb0[3].xyzx
 144: mul r1.xyz, r1.xyzx, r4.xyzx
 145: mad r0.xyz, r0.xyzx, r2.xywx, r1.xyzx
 146: mul r1.xyz, r3.yzwy, r1.wwww
 147: add r2.xyw, r0.wwww, -cb0[3].xyxz
 148: mad r2.xyz, r2.zzzz, r2.xywx, cb0[3].xyzx
 149: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
 150: mov o0.w, l(1.000000)
 151: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mov r0.x, cb3[0].x
  15: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  16: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  17: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  18: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  19: add o2.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  20: mov r1.w, l(0)
  21: mov o3.xyzw, r1.wwwx
  22: mov o4.xyzw, r1.wwwy
  23: mov o5.w, r1.z
  24: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  25: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  26: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul o5.xyz, r0.wwww, r0.xyzx
  30: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  31: mov o6.zw, l(0,0,0,0)
  32: mov o7.xyzw, l(0,0,0,0)
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 129 math, 12 temp registers, 3 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 3
Set 2D Texture "unity_Lightmap" to slot 2 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 12
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r2.xyz, r1.wwww, v2.xyzx
  12: sample r3.xyzw, v1.xyxx, t1.xyzw, s3
  13: add r2.w, -cb0[9].y, l(1.000000)
  14: mad r2.w, r3.y, cb0[9].y, r2.w
  15: add r3.x, -cb0[8].w, l(1.000000)
  16: dp3 r3.y, r2.xyzx, r1.xyzx
  17: add r3.y, r3.y, r3.y
  18: mad r3.yzw, r1.xxyz, -r3.yyyy, r2.xxyz
  19: sample r4.xyzw, v6.xyxx, t2.xyzw, s0
  20: lt r4.w, l(0.000000), cb2[2].w
  21: if_nz r4.w
  22:   dp3 r4.w, r3.yzwy, r3.yzwy
  23:   rsq r4.w, r4.w
  24:   mul r5.xyz, r3.yzwy, r4.wwww
  25:   mov r6.x, v3.w
  26:   mov r6.y, v4.w
  27:   mov r6.z, v5.w
  28:   add r7.xyz, -r6.xyzx, cb2[0].xyzx
  29:   div r7.xyz, r7.xyzx, r5.xyzx
  30:   add r8.xyz, -r6.xyzx, cb2[1].xyzx
  31:   div r8.xyz, r8.xyzx, r5.xyzx
  32:   lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
  33:   movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  34:   min r4.w, r7.y, r7.x
  35:   min r4.w, r7.z, r4.w
  36:   add r6.xyz, r6.xyzx, -cb2[2].xyzx
  37:   mad r5.xyz, r5.xyzx, r4.wwww, r6.xyzx
  38: else 
  39:   mov r5.xyz, r3.yzwy
  40: endif 
  41: mad r4.w, -r3.x, l(0.700000), l(1.700000)
  42: mul r4.w, r3.x, r4.w
  43: mul r4.w, r4.w, l(6.000000)
  44: sample_l r5.xyzw, r5.xyzx, t3.xyzw, s1, r4.w
  45: add r5.w, r5.w, l(-1.000000)
  46: mad r5.w, cb2[3].w, r5.w, l(1.000000)
  47: log r5.w, r5.w
  48: mul r5.w, r5.w, cb2[3].y
  49: exp r5.w, r5.w
  50: mul r5.w, r5.w, cb2[3].x
  51: mul r6.xyz, r5.xyzx, r5.wwww
  52: lt r6.w, cb2[1].w, l(0.999990)
  53: if_nz r6.w
  54:   lt r6.w, l(0.000000), cb2[6].w
  55:   if_nz r6.w
  56:     dp3 r6.w, r3.yzwy, r3.yzwy
  57:     rsq r6.w, r6.w
  58:     mul r7.xyz, r3.yzwy, r6.wwww
  59:     mov r8.x, v3.w
  60:     mov r8.y, v4.w
  61:     mov r8.z, v5.w
  62:     add r9.xyz, -r8.xyzx, cb2[4].xyzx
  63:     div r9.xyz, r9.xyzx, r7.xyzx
  64:     add r10.xyz, -r8.xyzx, cb2[5].xyzx
  65:     div r10.xyz, r10.xyzx, r7.xyzx
  66:     lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  67:     movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  68:     min r6.w, r9.y, r9.x
  69:     min r6.w, r9.z, r6.w
  70:     add r8.xyz, r8.xyzx, -cb2[6].xyzx
  71:     mad r3.yzw, r7.xxyz, r6.wwww, r8.xxyz
  72:   endif 
  73:   sample_l r7.xyzw, r3.yzwy, t4.xyzw, s1, r4.w
  74:   add r3.y, r7.w, l(-1.000000)
  75:   mad r3.y, cb2[7].w, r3.y, l(1.000000)
  76:   log r3.y, r3.y
  77:   mul r3.y, r3.y, cb2[7].y
  78:   exp r3.y, r3.y
  79:   mul r3.y, r3.y, cb2[7].x
  80:   mul r3.yzw, r7.xxyz, r3.yyyy
  81:   mad r5.xyz, r5.wwww, r5.xyzx, -r3.yzwy
  82:   mad r6.xyz, cb2[1].wwww, r5.xyzx, r3.yzwy
  83: endif 
  84: mul r3.yzw, r2.wwww, r6.xxyz
  85: mad r5.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
  86: dp3 r1.w, r5.xyzx, r5.xyzx
  87: max r1.w, r1.w, l(0.001000)
  88: rsq r1.w, r1.w
  89: mul r5.xyz, r1.wwww, r5.xyzx
  90: dp3 r1.w, r1.xyzx, -r2.xyzx
  91: dp3_sat r2.x, r1.xyzx, cb1[0].xyzx
  92: dp3_sat r1.x, r1.xyzx, r5.xyzx
  93: dp3_sat r1.y, cb1[0].xyzx, r5.xyzx
  94: mul r1.z, r1.y, r1.y
  95: dp2 r1.z, r1.zzzz, r3.xxxx
  96: add r1.z, r1.z, l(-0.500000)
  97: add r2.y, -r2.x, l(1.000000)
  98: mul r2.z, r2.y, r2.y
  99: mul r2.z, r2.z, r2.z
 100: mul r2.y, r2.y, r2.z
 101: mad r2.y, r1.z, r2.y, l(1.000000)
 102: add r2.z, -|r1.w|, l(1.000000)
 103: mul r4.w, r2.z, r2.z
 104: mul r4.w, r4.w, r4.w
 105: mul r2.z, r2.z, r4.w
 106: mad r1.z, r1.z, r2.z, l(1.000000)
 107: mul r1.z, r1.z, r2.y
 108: mul r2.y, r3.x, r3.x
 109: max r2.y, r2.y, l(0.002000)
 110: add r3.x, -r2.y, l(1.000000)
 111: mad r4.w, |r1.w|, r3.x, r2.y
 112: mad r3.x, r2.x, r3.x, r2.y
 113: mul r1.w, |r1.w|, r3.x
 114: mad r1.w, r2.x, r4.w, r1.w
 115: add r1.w, r1.w, l(0.000010)
 116: div r1.w, l(0.500000), r1.w
 117: mul r3.x, r2.y, r2.y
 118: mad r4.w, r1.x, r3.x, -r1.x
 119: mad r1.x, r4.w, r1.x, l(1.000000)
 120: mul r3.x, r3.x, l(0.318310)
 121: mad r1.x, r1.x, r1.x, l(0.000000)
 122: div r1.x, r3.x, r1.x
 123: mul r1.x, r1.x, r1.w
 124: mul r1.x, r1.x, l(3.141593)
 125: mul r1.xz, r2.xxxx, r1.xxzx
 126: max r1.x, r1.x, l(0.000000)
 127: mad r1.w, r2.y, r2.y, l(1.000000)
 128: div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
 129: dp3 r2.x, cb0[3].xyzx, cb0[3].xyzx
 130: ne r2.x, r2.x, l(0.000000)
 131: and r2.x, r2.x, l(0x3f800000)
 132: mul r1.x, r1.x, r2.x
 133: add r0.w, -r0.w, l(1.000000)
 134: add_sat r0.w, r0.w, cb0[8].w
 135: mul r5.xyz, r1.zzzz, cb0[2].xyzx
 136: mad r2.xyw, r4.xyxz, r2.wwww, r5.xyxz
 137: mul r4.xyz, r1.xxxx, cb0[2].xyzx
 138: add r1.x, -r1.y, l(1.000000)
 139: mul r1.y, r1.x, r1.x
 140: mul r1.y, r1.y, r1.y
 141: mul r1.x, r1.x, r1.y
 142: add r5.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 143: mad r1.xyz, r5.xyzx, r1.xxxx, cb0[3].xyzx
 144: mul r1.xyz, r1.xyzx, r4.xyzx
 145: mad r0.xyz, r0.xyzx, r2.xywx, r1.xyzx
 146: mul r1.xyz, r3.yzwy, r1.wwww
 147: add r2.xyw, r0.wwww, -cb0[3].xyxz
 148: mad r2.xyz, r2.zzzz, r2.xywx, cb0[3].xyzx
 149: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
 150: mov o0.w, l(1.000000)
 151: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON LIGHTPROBE_SH 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov r0.w, l(0)
  19: mov o3.xyzw, r0.wwwx
  20: mov o4.xyzw, r0.wwwy
  21: mov o5.w, r0.z
  22: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  23: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  24: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  25: dp3 r0.w, r0.xyzx, r0.xyzx
  26: rsq r0.w, r0.w
  27: mul o5.xyz, r0.wwww, r0.xyzx
  28: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  29: mov o6.zw, l(0,0,0,0)
  30: mov o7.xyzw, l(0,0,0,0)
  31: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 160 math, 14 temp registers, 7 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 5
Set 2D Texture "unity_Lightmap" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r3.x, v2.xyzx, v2.xyzx
  11: rsq r3.x, r3.x
  12: mul r3.yzw, r3.xxxx, v2.xxyz
  13: sample r4.xyzw, v1.xyxx, t2.xyzw, s5
  14: add r4.x, -cb0[9].y, l(1.000000)
  15: mad r4.x, r4.y, cb0[9].y, r4.x
  16: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  17: dp3 r4.z, r3.yzwy, r2.xyzx
  18: add r4.z, r4.z, r4.z
  19: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.yzwy
  20: eq r4.z, cb3[0].x, l(1.000000)
  21: if_nz r4.z
  22:   eq r4.z, cb3[0].y, l(1.000000)
  23:   mul r6.xyz, v4.wwww, cb3[2].xyzx
  24:   mad r6.xyz, cb3[1].xyzx, v3.wwww, r6.xyzx
  25:   mad r6.xyz, cb3[3].xyzx, v5.wwww, r6.xyzx
  26:   add r6.xyz, r6.xyzx, cb3[4].xyzx
  27:   mov r7.y, v3.w
  28:   mov r7.z, v4.w
  29:   mov r7.w, v5.w
  30:   movc r6.xyz, r4.zzzz, r6.xyzx, r7.yzwy
  31:   add r6.xyz, r6.xyzx, -cb3[6].xyzx
  32:   mul r6.yzw, r6.xxyz, cb3[5].xxyz
  33:   mul r4.z, r6.y, l(0.250000)
  34:   mul r4.w, cb3[0].z, l(0.500000)
  35:   mad r5.w, -cb3[0].z, l(0.500000), l(0.250000)
  36:   max r4.z, r4.w, r4.z
  37:   min r6.x, r5.w, r4.z
  38:   sample r7.xyzw, r6.xzwx, t6.xyzw, s2
  39:   add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  40:   sample r8.xyzw, r8.xyzx, t6.xyzw, s2
  41:   add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  42:   sample r6.xyzw, r6.xyzx, t6.xyzw, s2
  43:   mov r2.w, l(1.000000)
  44:   dp4 r7.x, r7.xyzw, r2.xyzw
  45:   dp4 r7.y, r8.xyzw, r2.xyzw
  46:   dp4 r7.z, r6.xyzw, r2.xyzw
  47: else 
  48:   mov r2.w, l(1.000000)
  49:   dp4 r7.x, cb1[39].xyzw, r2.xyzw
  50:   dp4 r7.y, cb1[40].xyzw, r2.xyzw
  51:   dp4 r7.z, cb1[41].xyzw, r2.xyzw
  52: endif 
  53: mul r6.xyzw, r2.yzzx, r2.xyzz
  54: dp4 r8.x, cb1[42].xyzw, r6.xyzw
  55: dp4 r8.y, cb1[43].xyzw, r6.xyzw
  56: dp4 r8.z, cb1[44].xyzw, r6.xyzw
  57: mul r2.w, r2.y, r2.y
  58: mad r2.w, r2.x, r2.x, -r2.w
  59: mad r6.xyz, cb1[45].xyzx, r2.wwww, r8.xyzx
  60: add r6.xyz, r6.xyzx, r7.xyzx
  61: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  62: sample r7.xyzw, v6.xyxx, t3.xyzw, s0
  63: add r6.xyz, r6.xyzx, r7.xyzx
  64: lt r2.w, l(0.000000), cb2[2].w
  65: if_nz r2.w
  66:   dp3 r2.w, r5.xyzx, r5.xyzx
  67:   rsq r2.w, r2.w
  68:   mul r7.xyz, r2.wwww, r5.xyzx
  69:   mov r8.x, v3.w
  70:   mov r8.y, v4.w
  71:   mov r8.z, v5.w
  72:   add r9.xyz, -r8.xyzx, cb2[0].xyzx
  73:   div r9.xyz, r9.xyzx, r7.xyzx
  74:   add r10.xyz, -r8.xyzx, cb2[1].xyzx
  75:   div r10.xyz, r10.xyzx, r7.xyzx
  76:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  77:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  78:   min r2.w, r9.y, r9.x
  79:   min r2.w, r9.z, r2.w
  80:   add r8.xyz, r8.xyzx, -cb2[2].xyzx
  81:   mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
  82: else 
  83:   mov r7.xyz, r5.xyzx
  84: endif 
  85: mad r2.w, -r4.y, l(0.700000), l(1.700000)
  86: mul r2.w, r2.w, r4.y
  87: mul r2.w, r2.w, l(6.000000)
  88: sample_l r7.xyzw, r7.xyzx, t4.xyzw, s1, r2.w
  89: add r4.z, r7.w, l(-1.000000)
  90: mad r4.z, cb2[3].w, r4.z, l(1.000000)
  91: log r4.z, r4.z
  92: mul r4.z, r4.z, cb2[3].y
  93: exp r4.z, r4.z
  94: mul r4.z, r4.z, cb2[3].x
  95: mul r8.xyz, r7.xyzx, r4.zzzz
  96: lt r4.w, cb2[1].w, l(0.999990)
  97: if_nz r4.w
  98:   lt r4.w, l(0.000000), cb2[6].w
  99:   if_nz r4.w
 100:     dp3 r4.w, r5.xyzx, r5.xyzx
 101:     rsq r4.w, r4.w
 102:     mul r9.xyz, r4.wwww, r5.xyzx
 103:     mov r10.x, v3.w
 104:     mov r10.y, v4.w
 105:     mov r10.z, v5.w
 106:     add r11.xyz, -r10.xyzx, cb2[4].xyzx
 107:     div r11.xyz, r11.xyzx, r9.xyzx
 108:     add r12.xyz, -r10.xyzx, cb2[5].xyzx
 109:     div r12.xyz, r12.xyzx, r9.xyzx
 110:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 111:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 112:     min r4.w, r11.y, r11.x
 113:     min r4.w, r11.z, r4.w
 114:     add r10.xyz, r10.xyzx, -cb2[6].xyzx
 115:     mad r5.xyz, r9.xyzx, r4.wwww, r10.xyzx
 116:   endif 
 117:   sample_l r5.xyzw, r5.xyzx, t5.xyzw, s1, r2.w
 118:   add r2.w, r5.w, l(-1.000000)
 119:   mad r2.w, cb2[7].w, r2.w, l(1.000000)
 120:   log r2.w, r2.w
 121:   mul r2.w, r2.w, cb2[7].y
 122:   exp r2.w, r2.w
 123:   mul r2.w, r2.w, cb2[7].x
 124:   mul r5.xyz, r5.xyzx, r2.wwww
 125:   mad r7.xyz, r4.zzzz, r7.xyzx, -r5.xyzx
 126:   mad r8.xyz, cb2[1].wwww, r7.xyzx, r5.xyzx
 127: endif 
 128: mul r5.xyz, r4.xxxx, r8.xyzx
 129: mad r7.xyz, -v2.xyzx, r3.xxxx, cb1[0].xyzx
 130: dp3 r2.w, r7.xyzx, r7.xyzx
 131: max r2.w, r2.w, l(0.001000)
 132: rsq r2.w, r2.w
 133: mul r7.xyz, r2.wwww, r7.xyzx
 134: dp3 r2.w, r2.xyzx, -r3.yzwy
 135: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 136: dp3_sat r2.x, r2.xyzx, r7.xyzx
 137: dp3_sat r2.y, cb1[0].xyzx, r7.xyzx
 138: mul r2.z, r2.y, r2.y
 139: dp2 r2.z, r2.zzzz, r4.yyyy
 140: add r2.z, r2.z, l(-0.500000)
 141: add r3.y, -r3.x, l(1.000000)
 142: mul r3.z, r3.y, r3.y
 143: mul r3.z, r3.z, r3.z
 144: mul r3.y, r3.y, r3.z
 145: mad r3.y, r2.z, r3.y, l(1.000000)
 146: add r3.z, -|r2.w|, l(1.000000)
 147: mul r3.w, r3.z, r3.z
 148: mul r3.w, r3.w, r3.w
 149: mul r3.z, r3.z, r3.w
 150: mad r2.z, r2.z, r3.z, l(1.000000)
 151: mul r2.z, r2.z, r3.y
 152: mul r3.y, r4.y, r4.y
 153: max r3.y, r3.y, l(0.002000)
 154: add r3.w, -r3.y, l(1.000000)
 155: mad r4.y, |r2.w|, r3.w, r3.y
 156: mad r3.w, r3.x, r3.w, r3.y
 157: mul r2.w, |r2.w|, r3.w
 158: mad r2.w, r3.x, r4.y, r2.w
 159: add r2.w, r2.w, l(0.000010)
 160: div r2.w, l(0.500000), r2.w
 161: mul r3.w, r3.y, r3.y
 162: mad r4.y, r2.x, r3.w, -r2.x
 163: mad r2.x, r4.y, r2.x, l(1.000000)
 164: mul r3.w, r3.w, l(0.318310)
 165: mad r2.x, r2.x, r2.x, l(0.000000)
 166: div r2.x, r3.w, r2.x
 167: mul r2.x, r2.x, r2.w
 168: mul r2.x, r2.x, l(3.141593)
 169: mul r2.xz, r3.xxxx, r2.xxzx
 170: max r2.x, r2.x, l(0.000000)
 171: mad r2.w, r3.y, r3.y, l(1.000000)
 172: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 173: dp3 r3.x, r0.xyzx, r0.xyzx
 174: ne r3.x, r3.x, l(0.000000)
 175: and r3.x, r3.x, l(0x3f800000)
 176: mul r2.x, r2.x, r3.x
 177: mad r0.w, r0.w, cb0[9].x, -r1.w
 178: add_sat r0.w, r0.w, l(1.000000)
 179: mul r3.xyw, r2.zzzz, cb0[2].xyxz
 180: mad r3.xyw, r6.xyxz, r4.xxxx, r3.xyxw
 181: mul r4.xyz, r2.xxxx, cb0[2].xyzx
 182: add r1.w, -r2.y, l(1.000000)
 183: mul r2.x, r1.w, r1.w
 184: mul r2.x, r2.x, r2.x
 185: mul r1.w, r1.w, r2.x
 186: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 187: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 188: mul r2.xyz, r2.xyzx, r4.xyzx
 189: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 190: mul r2.xyz, r5.xyzx, r2.wwww
 191: add r3.xyw, -r0.xyxz, r0.wwww
 192: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 193: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 194: mov o0.w, l(1.000000)
 195: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON LIGHTPROBE_SH UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mov r0.x, cb3[0].x
  15: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  16: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  17: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  18: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  19: add o2.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  20: mov r1.w, l(0)
  21: mov o3.xyzw, r1.wwwx
  22: mov o4.xyzw, r1.wwwy
  23: mov o5.w, r1.z
  24: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  25: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  26: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul o5.xyz, r0.wwww, r0.xyzx
  30: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  31: mov o6.zw, l(0,0,0,0)
  32: mov o7.xyzw, l(0,0,0,0)
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 160 math, 14 temp registers, 7 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 5
Set 2D Texture "unity_Lightmap" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r3.x, v2.xyzx, v2.xyzx
  11: rsq r3.x, r3.x
  12: mul r3.yzw, r3.xxxx, v2.xxyz
  13: sample r4.xyzw, v1.xyxx, t2.xyzw, s5
  14: add r4.x, -cb0[9].y, l(1.000000)
  15: mad r4.x, r4.y, cb0[9].y, r4.x
  16: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  17: dp3 r4.z, r3.yzwy, r2.xyzx
  18: add r4.z, r4.z, r4.z
  19: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.yzwy
  20: eq r4.z, cb3[0].x, l(1.000000)
  21: if_nz r4.z
  22:   eq r4.z, cb3[0].y, l(1.000000)
  23:   mul r6.xyz, v4.wwww, cb3[2].xyzx
  24:   mad r6.xyz, cb3[1].xyzx, v3.wwww, r6.xyzx
  25:   mad r6.xyz, cb3[3].xyzx, v5.wwww, r6.xyzx
  26:   add r6.xyz, r6.xyzx, cb3[4].xyzx
  27:   mov r7.y, v3.w
  28:   mov r7.z, v4.w
  29:   mov r7.w, v5.w
  30:   movc r6.xyz, r4.zzzz, r6.xyzx, r7.yzwy
  31:   add r6.xyz, r6.xyzx, -cb3[6].xyzx
  32:   mul r6.yzw, r6.xxyz, cb3[5].xxyz
  33:   mul r4.z, r6.y, l(0.250000)
  34:   mul r4.w, cb3[0].z, l(0.500000)
  35:   mad r5.w, -cb3[0].z, l(0.500000), l(0.250000)
  36:   max r4.z, r4.w, r4.z
  37:   min r6.x, r5.w, r4.z
  38:   sample r7.xyzw, r6.xzwx, t6.xyzw, s2
  39:   add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  40:   sample r8.xyzw, r8.xyzx, t6.xyzw, s2
  41:   add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  42:   sample r6.xyzw, r6.xyzx, t6.xyzw, s2
  43:   mov r2.w, l(1.000000)
  44:   dp4 r7.x, r7.xyzw, r2.xyzw
  45:   dp4 r7.y, r8.xyzw, r2.xyzw
  46:   dp4 r7.z, r6.xyzw, r2.xyzw
  47: else 
  48:   mov r2.w, l(1.000000)
  49:   dp4 r7.x, cb1[39].xyzw, r2.xyzw
  50:   dp4 r7.y, cb1[40].xyzw, r2.xyzw
  51:   dp4 r7.z, cb1[41].xyzw, r2.xyzw
  52: endif 
  53: mul r6.xyzw, r2.yzzx, r2.xyzz
  54: dp4 r8.x, cb1[42].xyzw, r6.xyzw
  55: dp4 r8.y, cb1[43].xyzw, r6.xyzw
  56: dp4 r8.z, cb1[44].xyzw, r6.xyzw
  57: mul r2.w, r2.y, r2.y
  58: mad r2.w, r2.x, r2.x, -r2.w
  59: mad r6.xyz, cb1[45].xyzx, r2.wwww, r8.xyzx
  60: add r6.xyz, r6.xyzx, r7.xyzx
  61: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  62: sample r7.xyzw, v6.xyxx, t3.xyzw, s0
  63: add r6.xyz, r6.xyzx, r7.xyzx
  64: lt r2.w, l(0.000000), cb2[2].w
  65: if_nz r2.w
  66:   dp3 r2.w, r5.xyzx, r5.xyzx
  67:   rsq r2.w, r2.w
  68:   mul r7.xyz, r2.wwww, r5.xyzx
  69:   mov r8.x, v3.w
  70:   mov r8.y, v4.w
  71:   mov r8.z, v5.w
  72:   add r9.xyz, -r8.xyzx, cb2[0].xyzx
  73:   div r9.xyz, r9.xyzx, r7.xyzx
  74:   add r10.xyz, -r8.xyzx, cb2[1].xyzx
  75:   div r10.xyz, r10.xyzx, r7.xyzx
  76:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  77:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  78:   min r2.w, r9.y, r9.x
  79:   min r2.w, r9.z, r2.w
  80:   add r8.xyz, r8.xyzx, -cb2[2].xyzx
  81:   mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
  82: else 
  83:   mov r7.xyz, r5.xyzx
  84: endif 
  85: mad r2.w, -r4.y, l(0.700000), l(1.700000)
  86: mul r2.w, r2.w, r4.y
  87: mul r2.w, r2.w, l(6.000000)
  88: sample_l r7.xyzw, r7.xyzx, t4.xyzw, s1, r2.w
  89: add r4.z, r7.w, l(-1.000000)
  90: mad r4.z, cb2[3].w, r4.z, l(1.000000)
  91: log r4.z, r4.z
  92: mul r4.z, r4.z, cb2[3].y
  93: exp r4.z, r4.z
  94: mul r4.z, r4.z, cb2[3].x
  95: mul r8.xyz, r7.xyzx, r4.zzzz
  96: lt r4.w, cb2[1].w, l(0.999990)
  97: if_nz r4.w
  98:   lt r4.w, l(0.000000), cb2[6].w
  99:   if_nz r4.w
 100:     dp3 r4.w, r5.xyzx, r5.xyzx
 101:     rsq r4.w, r4.w
 102:     mul r9.xyz, r4.wwww, r5.xyzx
 103:     mov r10.x, v3.w
 104:     mov r10.y, v4.w
 105:     mov r10.z, v5.w
 106:     add r11.xyz, -r10.xyzx, cb2[4].xyzx
 107:     div r11.xyz, r11.xyzx, r9.xyzx
 108:     add r12.xyz, -r10.xyzx, cb2[5].xyzx
 109:     div r12.xyz, r12.xyzx, r9.xyzx
 110:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 111:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 112:     min r4.w, r11.y, r11.x
 113:     min r4.w, r11.z, r4.w
 114:     add r10.xyz, r10.xyzx, -cb2[6].xyzx
 115:     mad r5.xyz, r9.xyzx, r4.wwww, r10.xyzx
 116:   endif 
 117:   sample_l r5.xyzw, r5.xyzx, t5.xyzw, s1, r2.w
 118:   add r2.w, r5.w, l(-1.000000)
 119:   mad r2.w, cb2[7].w, r2.w, l(1.000000)
 120:   log r2.w, r2.w
 121:   mul r2.w, r2.w, cb2[7].y
 122:   exp r2.w, r2.w
 123:   mul r2.w, r2.w, cb2[7].x
 124:   mul r5.xyz, r5.xyzx, r2.wwww
 125:   mad r7.xyz, r4.zzzz, r7.xyzx, -r5.xyzx
 126:   mad r8.xyz, cb2[1].wwww, r7.xyzx, r5.xyzx
 127: endif 
 128: mul r5.xyz, r4.xxxx, r8.xyzx
 129: mad r7.xyz, -v2.xyzx, r3.xxxx, cb1[0].xyzx
 130: dp3 r2.w, r7.xyzx, r7.xyzx
 131: max r2.w, r2.w, l(0.001000)
 132: rsq r2.w, r2.w
 133: mul r7.xyz, r2.wwww, r7.xyzx
 134: dp3 r2.w, r2.xyzx, -r3.yzwy
 135: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 136: dp3_sat r2.x, r2.xyzx, r7.xyzx
 137: dp3_sat r2.y, cb1[0].xyzx, r7.xyzx
 138: mul r2.z, r2.y, r2.y
 139: dp2 r2.z, r2.zzzz, r4.yyyy
 140: add r2.z, r2.z, l(-0.500000)
 141: add r3.y, -r3.x, l(1.000000)
 142: mul r3.z, r3.y, r3.y
 143: mul r3.z, r3.z, r3.z
 144: mul r3.y, r3.y, r3.z
 145: mad r3.y, r2.z, r3.y, l(1.000000)
 146: add r3.z, -|r2.w|, l(1.000000)
 147: mul r3.w, r3.z, r3.z
 148: mul r3.w, r3.w, r3.w
 149: mul r3.z, r3.z, r3.w
 150: mad r2.z, r2.z, r3.z, l(1.000000)
 151: mul r2.z, r2.z, r3.y
 152: mul r3.y, r4.y, r4.y
 153: max r3.y, r3.y, l(0.002000)
 154: add r3.w, -r3.y, l(1.000000)
 155: mad r4.y, |r2.w|, r3.w, r3.y
 156: mad r3.w, r3.x, r3.w, r3.y
 157: mul r2.w, |r2.w|, r3.w
 158: mad r2.w, r3.x, r4.y, r2.w
 159: add r2.w, r2.w, l(0.000010)
 160: div r2.w, l(0.500000), r2.w
 161: mul r3.w, r3.y, r3.y
 162: mad r4.y, r2.x, r3.w, -r2.x
 163: mad r2.x, r4.y, r2.x, l(1.000000)
 164: mul r3.w, r3.w, l(0.318310)
 165: mad r2.x, r2.x, r2.x, l(0.000000)
 166: div r2.x, r3.w, r2.x
 167: mul r2.x, r2.x, r2.w
 168: mul r2.x, r2.x, l(3.141593)
 169: mul r2.xz, r3.xxxx, r2.xxzx
 170: max r2.x, r2.x, l(0.000000)
 171: mad r2.w, r3.y, r3.y, l(1.000000)
 172: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 173: dp3 r3.x, r0.xyzx, r0.xyzx
 174: ne r3.x, r3.x, l(0.000000)
 175: and r3.x, r3.x, l(0x3f800000)
 176: mul r2.x, r2.x, r3.x
 177: mad r0.w, r0.w, cb0[9].x, -r1.w
 178: add_sat r0.w, r0.w, l(1.000000)
 179: mul r3.xyw, r2.zzzz, cb0[2].xyxz
 180: mad r3.xyw, r6.xyxz, r4.xxxx, r3.xyxw
 181: mul r4.xyz, r2.xxxx, cb0[2].xyzx
 182: add r1.w, -r2.y, l(1.000000)
 183: mul r2.x, r1.w, r1.w
 184: mul r2.x, r2.x, r2.x
 185: mul r1.w, r1.w, r2.x
 186: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 187: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 188: mul r2.xyz, r2.xyzx, r4.xyzx
 189: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 190: mul r2.xyz, r5.xyzx, r2.wwww
 191: add r3.xyw, -r0.xyxz, r0.wwww
 192: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 193: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 194: mov o0.w, l(1.000000)
 195: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON LIGHTPROBE_SH 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov o3.w, r0.x
  19: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  20: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  21: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r1.xyz, r0.xxxx, r1.xyzx
  25: mov o3.xyz, r1.xyzx
  26: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  27: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  28: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  29: dp3 r0.x, r2.xyzx, r2.xyzx
  30: rsq r0.x, r0.x
  31: mul r2.xyz, r0.xxxx, r2.xyzx
  32: mul r3.xyz, r1.yzxy, r2.zxyz
  33: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  34: mov o5.xyz, r2.xyzx
  35: mul r0.x, v4.w, cb2[9].w
  36: mul o4.xyz, r0.xxxx, r1.xyzx
  37: mov o4.w, r0.y
  38: mov o5.w, r0.z
  39: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  40: mov o6.zw, l(0,0,0,0)
  41: mov o7.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 170 math, 14 temp registers, 8 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 5
Set 2D Texture "_BumpMap" to slot 2 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 6
Set 2D Texture "unity_Lightmap" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s5
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s4
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r2.z, r2.xyxx, r2.xyxx
  12: min r2.z, r2.z, l(1.000000)
  13: add r2.z, -r2.z, l(1.000000)
  14: sqrt r2.z, r2.z
  15: mul r3.xyz, r2.yyyy, v4.xyzx
  16: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  17: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  18: dp3 r2.w, r2.xyzx, r2.xyzx
  19: rsq r2.w, r2.w
  20: mul r2.xyz, r2.wwww, r2.xyzx
  21: dp3 r3.x, v2.xyzx, v2.xyzx
  22: rsq r3.x, r3.x
  23: mul r3.yzw, r3.xxxx, v2.xxyz
  24: sample r4.xyzw, v1.xyxx, t3.xyzw, s6
  25: add r4.x, -cb0[9].y, l(1.000000)
  26: mad r4.x, r4.y, cb0[9].y, r4.x
  27: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  28: dp3 r4.z, r3.yzwy, r2.xyzx
  29: add r4.z, r4.z, r4.z
  30: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.yzwy
  31: eq r4.z, cb3[0].x, l(1.000000)
  32: if_nz r4.z
  33:   eq r4.z, cb3[0].y, l(1.000000)
  34:   mul r6.xyz, v4.wwww, cb3[2].xyzx
  35:   mad r6.xyz, cb3[1].xyzx, v3.wwww, r6.xyzx
  36:   mad r6.xyz, cb3[3].xyzx, v5.wwww, r6.xyzx
  37:   add r6.xyz, r6.xyzx, cb3[4].xyzx
  38:   mov r7.y, v3.w
  39:   mov r7.z, v4.w
  40:   mov r7.w, v5.w
  41:   movc r6.xyz, r4.zzzz, r6.xyzx, r7.yzwy
  42:   add r6.xyz, r6.xyzx, -cb3[6].xyzx
  43:   mul r6.yzw, r6.xxyz, cb3[5].xxyz
  44:   mul r4.z, r6.y, l(0.250000)
  45:   mul r4.w, cb3[0].z, l(0.500000)
  46:   mad r5.w, -cb3[0].z, l(0.500000), l(0.250000)
  47:   max r4.z, r4.w, r4.z
  48:   min r6.x, r5.w, r4.z
  49:   sample r7.xyzw, r6.xzwx, t7.xyzw, s2
  50:   add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  51:   sample r8.xyzw, r8.xyzx, t7.xyzw, s2
  52:   add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  53:   sample r6.xyzw, r6.xyzx, t7.xyzw, s2
  54:   mov r2.w, l(1.000000)
  55:   dp4 r7.x, r7.xyzw, r2.xyzw
  56:   dp4 r7.y, r8.xyzw, r2.xyzw
  57:   dp4 r7.z, r6.xyzw, r2.xyzw
  58: else 
  59:   mov r2.w, l(1.000000)
  60:   dp4 r7.x, cb1[39].xyzw, r2.xyzw
  61:   dp4 r7.y, cb1[40].xyzw, r2.xyzw
  62:   dp4 r7.z, cb1[41].xyzw, r2.xyzw
  63: endif 
  64: mul r6.xyzw, r2.yzzx, r2.xyzz
  65: dp4 r8.x, cb1[42].xyzw, r6.xyzw
  66: dp4 r8.y, cb1[43].xyzw, r6.xyzw
  67: dp4 r8.z, cb1[44].xyzw, r6.xyzw
  68: mul r2.w, r2.y, r2.y
  69: mad r2.w, r2.x, r2.x, -r2.w
  70: mad r6.xyz, cb1[45].xyzx, r2.wwww, r8.xyzx
  71: add r6.xyz, r6.xyzx, r7.xyzx
  72: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  73: sample r7.xyzw, v6.xyxx, t4.xyzw, s0
  74: add r6.xyz, r6.xyzx, r7.xyzx
  75: lt r2.w, l(0.000000), cb2[2].w
  76: if_nz r2.w
  77:   dp3 r2.w, r5.xyzx, r5.xyzx
  78:   rsq r2.w, r2.w
  79:   mul r7.xyz, r2.wwww, r5.xyzx
  80:   mov r8.x, v3.w
  81:   mov r8.y, v4.w
  82:   mov r8.z, v5.w
  83:   add r9.xyz, -r8.xyzx, cb2[0].xyzx
  84:   div r9.xyz, r9.xyzx, r7.xyzx
  85:   add r10.xyz, -r8.xyzx, cb2[1].xyzx
  86:   div r10.xyz, r10.xyzx, r7.xyzx
  87:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  88:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  89:   min r2.w, r9.y, r9.x
  90:   min r2.w, r9.z, r2.w
  91:   add r8.xyz, r8.xyzx, -cb2[2].xyzx
  92:   mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
  93: else 
  94:   mov r7.xyz, r5.xyzx
  95: endif 
  96: mad r2.w, -r4.y, l(0.700000), l(1.700000)
  97: mul r2.w, r2.w, r4.y
  98: mul r2.w, r2.w, l(6.000000)
  99: sample_l r7.xyzw, r7.xyzx, t5.xyzw, s1, r2.w
 100: add r4.z, r7.w, l(-1.000000)
 101: mad r4.z, cb2[3].w, r4.z, l(1.000000)
 102: log r4.z, r4.z
 103: mul r4.z, r4.z, cb2[3].y
 104: exp r4.z, r4.z
 105: mul r4.z, r4.z, cb2[3].x
 106: mul r8.xyz, r7.xyzx, r4.zzzz
 107: lt r4.w, cb2[1].w, l(0.999990)
 108: if_nz r4.w
 109:   lt r4.w, l(0.000000), cb2[6].w
 110:   if_nz r4.w
 111:     dp3 r4.w, r5.xyzx, r5.xyzx
 112:     rsq r4.w, r4.w
 113:     mul r9.xyz, r4.wwww, r5.xyzx
 114:     mov r10.x, v3.w
 115:     mov r10.y, v4.w
 116:     mov r10.z, v5.w
 117:     add r11.xyz, -r10.xyzx, cb2[4].xyzx
 118:     div r11.xyz, r11.xyzx, r9.xyzx
 119:     add r12.xyz, -r10.xyzx, cb2[5].xyzx
 120:     div r12.xyz, r12.xyzx, r9.xyzx
 121:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 122:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 123:     min r4.w, r11.y, r11.x
 124:     min r4.w, r11.z, r4.w
 125:     add r10.xyz, r10.xyzx, -cb2[6].xyzx
 126:     mad r5.xyz, r9.xyzx, r4.wwww, r10.xyzx
 127:   endif 
 128:   sample_l r5.xyzw, r5.xyzx, t6.xyzw, s1, r2.w
 129:   add r2.w, r5.w, l(-1.000000)
 130:   mad r2.w, cb2[7].w, r2.w, l(1.000000)
 131:   log r2.w, r2.w
 132:   mul r2.w, r2.w, cb2[7].y
 133:   exp r2.w, r2.w
 134:   mul r2.w, r2.w, cb2[7].x
 135:   mul r5.xyz, r5.xyzx, r2.wwww
 136:   mad r7.xyz, r4.zzzz, r7.xyzx, -r5.xyzx
 137:   mad r8.xyz, cb2[1].wwww, r7.xyzx, r5.xyzx
 138: endif 
 139: mul r5.xyz, r4.xxxx, r8.xyzx
 140: mad r7.xyz, -v2.xyzx, r3.xxxx, cb1[0].xyzx
 141: dp3 r2.w, r7.xyzx, r7.xyzx
 142: max r2.w, r2.w, l(0.001000)
 143: rsq r2.w, r2.w
 144: mul r7.xyz, r2.wwww, r7.xyzx
 145: dp3 r2.w, r2.xyzx, -r3.yzwy
 146: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 147: dp3_sat r2.x, r2.xyzx, r7.xyzx
 148: dp3_sat r2.y, cb1[0].xyzx, r7.xyzx
 149: mul r2.z, r2.y, r2.y
 150: dp2 r2.z, r2.zzzz, r4.yyyy
 151: add r2.z, r2.z, l(-0.500000)
 152: add r3.y, -r3.x, l(1.000000)
 153: mul r3.z, r3.y, r3.y
 154: mul r3.z, r3.z, r3.z
 155: mul r3.y, r3.y, r3.z
 156: mad r3.y, r2.z, r3.y, l(1.000000)
 157: add r3.z, -|r2.w|, l(1.000000)
 158: mul r3.w, r3.z, r3.z
 159: mul r3.w, r3.w, r3.w
 160: mul r3.z, r3.z, r3.w
 161: mad r2.z, r2.z, r3.z, l(1.000000)
 162: mul r2.z, r2.z, r3.y
 163: mul r3.y, r4.y, r4.y
 164: max r3.y, r3.y, l(0.002000)
 165: add r3.w, -r3.y, l(1.000000)
 166: mad r4.y, |r2.w|, r3.w, r3.y
 167: mad r3.w, r3.x, r3.w, r3.y
 168: mul r2.w, |r2.w|, r3.w
 169: mad r2.w, r3.x, r4.y, r2.w
 170: add r2.w, r2.w, l(0.000010)
 171: div r2.w, l(0.500000), r2.w
 172: mul r3.w, r3.y, r3.y
 173: mad r4.y, r2.x, r3.w, -r2.x
 174: mad r2.x, r4.y, r2.x, l(1.000000)
 175: mul r3.w, r3.w, l(0.318310)
 176: mad r2.x, r2.x, r2.x, l(0.000000)
 177: div r2.x, r3.w, r2.x
 178: mul r2.x, r2.x, r2.w
 179: mul r2.x, r2.x, l(3.141593)
 180: mul r2.xz, r3.xxxx, r2.xxzx
 181: max r2.x, r2.x, l(0.000000)
 182: mad r2.w, r3.y, r3.y, l(1.000000)
 183: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 184: dp3 r3.x, r0.xyzx, r0.xyzx
 185: ne r3.x, r3.x, l(0.000000)
 186: and r3.x, r3.x, l(0x3f800000)
 187: mul r2.x, r2.x, r3.x
 188: mad r0.w, r0.w, cb0[9].x, -r1.w
 189: add_sat r0.w, r0.w, l(1.000000)
 190: mul r3.xyw, r2.zzzz, cb0[2].xyxz
 191: mad r3.xyw, r6.xyxz, r4.xxxx, r3.xyxw
 192: mul r4.xyz, r2.xxxx, cb0[2].xyzx
 193: add r1.w, -r2.y, l(1.000000)
 194: mul r2.x, r1.w, r1.w
 195: mul r2.x, r2.x, r2.x
 196: mul r1.w, r1.w, r2.x
 197: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 198: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 199: mul r2.xyz, r2.xyzx, r4.xyzx
 200: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 201: mul r2.xyz, r5.xyzx, r2.wwww
 202: add r3.xyw, -r0.xyxz, r0.wwww
 203: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 204: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 205: mov o0.w, l(1.000000)
 206: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON LIGHTPROBE_SH UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mov r0.x, cb3[0].x
  15: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  16: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  17: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  18: mad r0.yzw, cb1[3].xxyz, v0.wwww, r0.yyzw
  19: add o2.xyz, r0.yzwy, -cb2[r0.x + 64].xyzx
  20: mov o3.w, r0.y
  21: mul r1.xyz, v4.yyyy, cb1[1].xyzx
  22: mad r1.xyz, cb1[0].xyzx, v4.xxxx, r1.xyzx
  23: mad r1.xyz, cb1[2].xyzx, v4.zzzz, r1.xyzx
  24: dp3 r0.x, r1.xyzx, r1.xyzx
  25: rsq r0.x, r0.x
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mov o3.xyz, r1.xyzx
  28: dp3 r2.x, v1.xyzx, cb1[4].xyzx
  29: dp3 r2.y, v1.xyzx, cb1[5].xyzx
  30: dp3 r2.z, v1.xyzx, cb1[6].xyzx
  31: dp3 r0.x, r2.xyzx, r2.xyzx
  32: rsq r0.x, r0.x
  33: mul r2.xyz, r0.xxxx, r2.xyzx
  34: mul r3.xyz, r1.yzxy, r2.zxyz
  35: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  36: mov o5.xyz, r2.xyzx
  37: mul r0.x, v4.w, cb1[9].w
  38: mul o4.xyz, r0.xxxx, r1.xyzx
  39: mov o4.w, r0.z
  40: mov o5.w, r0.w
  41: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  42: mov o6.zw, l(0,0,0,0)
  43: mov o7.xyzw, l(0,0,0,0)
  44: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 170 math, 14 temp registers, 8 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 5
Set 2D Texture "_BumpMap" to slot 2 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 6
Set 2D Texture "unity_Lightmap" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s5
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s4
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r2.z, r2.xyxx, r2.xyxx
  12: min r2.z, r2.z, l(1.000000)
  13: add r2.z, -r2.z, l(1.000000)
  14: sqrt r2.z, r2.z
  15: mul r3.xyz, r2.yyyy, v4.xyzx
  16: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  17: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  18: dp3 r2.w, r2.xyzx, r2.xyzx
  19: rsq r2.w, r2.w
  20: mul r2.xyz, r2.wwww, r2.xyzx
  21: dp3 r3.x, v2.xyzx, v2.xyzx
  22: rsq r3.x, r3.x
  23: mul r3.yzw, r3.xxxx, v2.xxyz
  24: sample r4.xyzw, v1.xyxx, t3.xyzw, s6
  25: add r4.x, -cb0[9].y, l(1.000000)
  26: mad r4.x, r4.y, cb0[9].y, r4.x
  27: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  28: dp3 r4.z, r3.yzwy, r2.xyzx
  29: add r4.z, r4.z, r4.z
  30: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.yzwy
  31: eq r4.z, cb3[0].x, l(1.000000)
  32: if_nz r4.z
  33:   eq r4.z, cb3[0].y, l(1.000000)
  34:   mul r6.xyz, v4.wwww, cb3[2].xyzx
  35:   mad r6.xyz, cb3[1].xyzx, v3.wwww, r6.xyzx
  36:   mad r6.xyz, cb3[3].xyzx, v5.wwww, r6.xyzx
  37:   add r6.xyz, r6.xyzx, cb3[4].xyzx
  38:   mov r7.y, v3.w
  39:   mov r7.z, v4.w
  40:   mov r7.w, v5.w
  41:   movc r6.xyz, r4.zzzz, r6.xyzx, r7.yzwy
  42:   add r6.xyz, r6.xyzx, -cb3[6].xyzx
  43:   mul r6.yzw, r6.xxyz, cb3[5].xxyz
  44:   mul r4.z, r6.y, l(0.250000)
  45:   mul r4.w, cb3[0].z, l(0.500000)
  46:   mad r5.w, -cb3[0].z, l(0.500000), l(0.250000)
  47:   max r4.z, r4.w, r4.z
  48:   min r6.x, r5.w, r4.z
  49:   sample r7.xyzw, r6.xzwx, t7.xyzw, s2
  50:   add r8.xyz, r6.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  51:   sample r8.xyzw, r8.xyzx, t7.xyzw, s2
  52:   add r6.xyz, r6.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  53:   sample r6.xyzw, r6.xyzx, t7.xyzw, s2
  54:   mov r2.w, l(1.000000)
  55:   dp4 r7.x, r7.xyzw, r2.xyzw
  56:   dp4 r7.y, r8.xyzw, r2.xyzw
  57:   dp4 r7.z, r6.xyzw, r2.xyzw
  58: else 
  59:   mov r2.w, l(1.000000)
  60:   dp4 r7.x, cb1[39].xyzw, r2.xyzw
  61:   dp4 r7.y, cb1[40].xyzw, r2.xyzw
  62:   dp4 r7.z, cb1[41].xyzw, r2.xyzw
  63: endif 
  64: mul r6.xyzw, r2.yzzx, r2.xyzz
  65: dp4 r8.x, cb1[42].xyzw, r6.xyzw
  66: dp4 r8.y, cb1[43].xyzw, r6.xyzw
  67: dp4 r8.z, cb1[44].xyzw, r6.xyzw
  68: mul r2.w, r2.y, r2.y
  69: mad r2.w, r2.x, r2.x, -r2.w
  70: mad r6.xyz, cb1[45].xyzx, r2.wwww, r8.xyzx
  71: add r6.xyz, r6.xyzx, r7.xyzx
  72: max r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  73: sample r7.xyzw, v6.xyxx, t4.xyzw, s0
  74: add r6.xyz, r6.xyzx, r7.xyzx
  75: lt r2.w, l(0.000000), cb2[2].w
  76: if_nz r2.w
  77:   dp3 r2.w, r5.xyzx, r5.xyzx
  78:   rsq r2.w, r2.w
  79:   mul r7.xyz, r2.wwww, r5.xyzx
  80:   mov r8.x, v3.w
  81:   mov r8.y, v4.w
  82:   mov r8.z, v5.w
  83:   add r9.xyz, -r8.xyzx, cb2[0].xyzx
  84:   div r9.xyz, r9.xyzx, r7.xyzx
  85:   add r10.xyz, -r8.xyzx, cb2[1].xyzx
  86:   div r10.xyz, r10.xyzx, r7.xyzx
  87:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  88:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  89:   min r2.w, r9.y, r9.x
  90:   min r2.w, r9.z, r2.w
  91:   add r8.xyz, r8.xyzx, -cb2[2].xyzx
  92:   mad r7.xyz, r7.xyzx, r2.wwww, r8.xyzx
  93: else 
  94:   mov r7.xyz, r5.xyzx
  95: endif 
  96: mad r2.w, -r4.y, l(0.700000), l(1.700000)
  97: mul r2.w, r2.w, r4.y
  98: mul r2.w, r2.w, l(6.000000)
  99: sample_l r7.xyzw, r7.xyzx, t5.xyzw, s1, r2.w
 100: add r4.z, r7.w, l(-1.000000)
 101: mad r4.z, cb2[3].w, r4.z, l(1.000000)
 102: log r4.z, r4.z
 103: mul r4.z, r4.z, cb2[3].y
 104: exp r4.z, r4.z
 105: mul r4.z, r4.z, cb2[3].x
 106: mul r8.xyz, r7.xyzx, r4.zzzz
 107: lt r4.w, cb2[1].w, l(0.999990)
 108: if_nz r4.w
 109:   lt r4.w, l(0.000000), cb2[6].w
 110:   if_nz r4.w
 111:     dp3 r4.w, r5.xyzx, r5.xyzx
 112:     rsq r4.w, r4.w
 113:     mul r9.xyz, r4.wwww, r5.xyzx
 114:     mov r10.x, v3.w
 115:     mov r10.y, v4.w
 116:     mov r10.z, v5.w
 117:     add r11.xyz, -r10.xyzx, cb2[4].xyzx
 118:     div r11.xyz, r11.xyzx, r9.xyzx
 119:     add r12.xyz, -r10.xyzx, cb2[5].xyzx
 120:     div r12.xyz, r12.xyzx, r9.xyzx
 121:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 122:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 123:     min r4.w, r11.y, r11.x
 124:     min r4.w, r11.z, r4.w
 125:     add r10.xyz, r10.xyzx, -cb2[6].xyzx
 126:     mad r5.xyz, r9.xyzx, r4.wwww, r10.xyzx
 127:   endif 
 128:   sample_l r5.xyzw, r5.xyzx, t6.xyzw, s1, r2.w
 129:   add r2.w, r5.w, l(-1.000000)
 130:   mad r2.w, cb2[7].w, r2.w, l(1.000000)
 131:   log r2.w, r2.w
 132:   mul r2.w, r2.w, cb2[7].y
 133:   exp r2.w, r2.w
 134:   mul r2.w, r2.w, cb2[7].x
 135:   mul r5.xyz, r5.xyzx, r2.wwww
 136:   mad r7.xyz, r4.zzzz, r7.xyzx, -r5.xyzx
 137:   mad r8.xyz, cb2[1].wwww, r7.xyzx, r5.xyzx
 138: endif 
 139: mul r5.xyz, r4.xxxx, r8.xyzx
 140: mad r7.xyz, -v2.xyzx, r3.xxxx, cb1[0].xyzx
 141: dp3 r2.w, r7.xyzx, r7.xyzx
 142: max r2.w, r2.w, l(0.001000)
 143: rsq r2.w, r2.w
 144: mul r7.xyz, r2.wwww, r7.xyzx
 145: dp3 r2.w, r2.xyzx, -r3.yzwy
 146: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 147: dp3_sat r2.x, r2.xyzx, r7.xyzx
 148: dp3_sat r2.y, cb1[0].xyzx, r7.xyzx
 149: mul r2.z, r2.y, r2.y
 150: dp2 r2.z, r2.zzzz, r4.yyyy
 151: add r2.z, r2.z, l(-0.500000)
 152: add r3.y, -r3.x, l(1.000000)
 153: mul r3.z, r3.y, r3.y
 154: mul r3.z, r3.z, r3.z
 155: mul r3.y, r3.y, r3.z
 156: mad r3.y, r2.z, r3.y, l(1.000000)
 157: add r3.z, -|r2.w|, l(1.000000)
 158: mul r3.w, r3.z, r3.z
 159: mul r3.w, r3.w, r3.w
 160: mul r3.z, r3.z, r3.w
 161: mad r2.z, r2.z, r3.z, l(1.000000)
 162: mul r2.z, r2.z, r3.y
 163: mul r3.y, r4.y, r4.y
 164: max r3.y, r3.y, l(0.002000)
 165: add r3.w, -r3.y, l(1.000000)
 166: mad r4.y, |r2.w|, r3.w, r3.y
 167: mad r3.w, r3.x, r3.w, r3.y
 168: mul r2.w, |r2.w|, r3.w
 169: mad r2.w, r3.x, r4.y, r2.w
 170: add r2.w, r2.w, l(0.000010)
 171: div r2.w, l(0.500000), r2.w
 172: mul r3.w, r3.y, r3.y
 173: mad r4.y, r2.x, r3.w, -r2.x
 174: mad r2.x, r4.y, r2.x, l(1.000000)
 175: mul r3.w, r3.w, l(0.318310)
 176: mad r2.x, r2.x, r2.x, l(0.000000)
 177: div r2.x, r3.w, r2.x
 178: mul r2.x, r2.x, r2.w
 179: mul r2.x, r2.x, l(3.141593)
 180: mul r2.xz, r3.xxxx, r2.xxzx
 181: max r2.x, r2.x, l(0.000000)
 182: mad r2.w, r3.y, r3.y, l(1.000000)
 183: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 184: dp3 r3.x, r0.xyzx, r0.xyzx
 185: ne r3.x, r3.x, l(0.000000)
 186: and r3.x, r3.x, l(0x3f800000)
 187: mul r2.x, r2.x, r3.x
 188: add r1.w, -r1.w, l(1.000000)
 189: mad_sat r0.w, r0.w, cb0[9].x, r1.w
 190: mul r3.xyw, r2.zzzz, cb0[2].xyxz
 191: mad r3.xyw, r6.xyxz, r4.xxxx, r3.xyxw
 192: mul r4.xyz, r2.xxxx, cb0[2].xyzx
 193: add r1.w, -r2.y, l(1.000000)
 194: mul r2.x, r1.w, r1.w
 195: mul r2.x, r2.x, r2.x
 196: mul r1.w, r1.w, r2.x
 197: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 198: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 199: mul r2.xyz, r2.xyzx, r4.xyzx
 200: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 201: mul r2.xyz, r5.xyzx, r2.wwww
 202: add r3.xyw, -r0.xyxz, r0.wwww
 203: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 204: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 205: mov o0.w, l(1.000000)
 206: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON LIGHTPROBE_SH 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov r0.w, l(0)
  19: mov o3.xyzw, r0.wwwx
  20: mov o4.xyzw, r0.wwwy
  21: mov o5.w, r0.z
  22: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  23: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  24: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  25: dp3 r0.w, r0.xyzx, r0.xyzx
  26: rsq r0.w, r0.w
  27: mul o5.xyz, r0.wwww, r0.xyzx
  28: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  29: mov o6.zw, l(0,0,0,0)
  30: mov o7.xyzw, l(0,0,0,0)
  31: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 160 math, 13 temp registers, 6 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 4
Set 2D Texture "unity_Lightmap" to slot 2 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: dp3 r2.x, v2.xyzx, v2.xyzx
  10: rsq r2.x, r2.x
  11: mul r2.yzw, r2.xxxx, v2.xxyz
  12: sample r3.xyzw, v1.xyxx, t1.xyzw, s4
  13: add r3.x, -cb0[9].y, l(1.000000)
  14: mad r3.x, r3.y, cb0[9].y, r3.x
  15: add r3.y, -cb0[8].w, l(1.000000)
  16: dp3 r3.z, r2.yzwy, r1.xyzx
  17: add r3.z, r3.z, r3.z
  18: mad r4.xyz, r1.xyzx, -r3.zzzz, r2.yzwy
  19: eq r3.z, cb3[0].x, l(1.000000)
  20: if_nz r3.z
  21:   eq r3.z, cb3[0].y, l(1.000000)
  22:   mul r5.xyz, v4.wwww, cb3[2].xyzx
  23:   mad r5.xyz, cb3[1].xyzx, v3.wwww, r5.xyzx
  24:   mad r5.xyz, cb3[3].xyzx, v5.wwww, r5.xyzx
  25:   add r5.xyz, r5.xyzx, cb3[4].xyzx
  26:   mov r6.y, v3.w
  27:   mov r6.z, v4.w
  28:   mov r6.w, v5.w
  29:   movc r5.xyz, r3.zzzz, r5.xyzx, r6.yzwy
  30:   add r5.xyz, r5.xyzx, -cb3[6].xyzx
  31:   mul r5.yzw, r5.xxyz, cb3[5].xxyz
  32:   mul r3.z, r5.y, l(0.250000)
  33:   mul r3.w, cb3[0].z, l(0.500000)
  34:   mad r4.w, -cb3[0].z, l(0.500000), l(0.250000)
  35:   max r3.z, r3.w, r3.z
  36:   min r5.x, r4.w, r3.z
  37:   sample r6.xyzw, r5.xzwx, t5.xyzw, s2
  38:   add r7.xyz, r5.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  39:   sample r7.xyzw, r7.xyzx, t5.xyzw, s2
  40:   add r5.xyz, r5.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  41:   sample r5.xyzw, r5.xyzx, t5.xyzw, s2
  42:   mov r1.w, l(1.000000)
  43:   dp4 r6.x, r6.xyzw, r1.xyzw
  44:   dp4 r6.y, r7.xyzw, r1.xyzw
  45:   dp4 r6.z, r5.xyzw, r1.xyzw
  46: else 
  47:   mov r1.w, l(1.000000)
  48:   dp4 r6.x, cb1[39].xyzw, r1.xyzw
  49:   dp4 r6.y, cb1[40].xyzw, r1.xyzw
  50:   dp4 r6.z, cb1[41].xyzw, r1.xyzw
  51: endif 
  52: mul r5.xyzw, r1.yzzx, r1.xyzz
  53: dp4 r7.x, cb1[42].xyzw, r5.xyzw
  54: dp4 r7.y, cb1[43].xyzw, r5.xyzw
  55: dp4 r7.z, cb1[44].xyzw, r5.xyzw
  56: mul r1.w, r1.y, r1.y
  57: mad r1.w, r1.x, r1.x, -r1.w
  58: mad r5.xyz, cb1[45].xyzx, r1.wwww, r7.xyzx
  59: add r5.xyz, r5.xyzx, r6.xyzx
  60: max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  61: sample r6.xyzw, v6.xyxx, t2.xyzw, s0
  62: add r5.xyz, r5.xyzx, r6.xyzx
  63: lt r1.w, l(0.000000), cb2[2].w
  64: if_nz r1.w
  65:   dp3 r1.w, r4.xyzx, r4.xyzx
  66:   rsq r1.w, r1.w
  67:   mul r6.xyz, r1.wwww, r4.xyzx
  68:   mov r7.x, v3.w
  69:   mov r7.y, v4.w
  70:   mov r7.z, v5.w
  71:   add r8.xyz, -r7.xyzx, cb2[0].xyzx
  72:   div r8.xyz, r8.xyzx, r6.xyzx
  73:   add r9.xyz, -r7.xyzx, cb2[1].xyzx
  74:   div r9.xyz, r9.xyzx, r6.xyzx
  75:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  76:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  77:   min r1.w, r8.y, r8.x
  78:   min r1.w, r8.z, r1.w
  79:   add r7.xyz, r7.xyzx, -cb2[2].xyzx
  80:   mad r6.xyz, r6.xyzx, r1.wwww, r7.xyzx
  81: else 
  82:   mov r6.xyz, r4.xyzx
  83: endif 
  84: mad r1.w, -r3.y, l(0.700000), l(1.700000)
  85: mul r1.w, r1.w, r3.y
  86: mul r1.w, r1.w, l(6.000000)
  87: sample_l r6.xyzw, r6.xyzx, t3.xyzw, s1, r1.w
  88: add r3.z, r6.w, l(-1.000000)
  89: mad r3.z, cb2[3].w, r3.z, l(1.000000)
  90: log r3.z, r3.z
  91: mul r3.z, r3.z, cb2[3].y
  92: exp r3.z, r3.z
  93: mul r3.z, r3.z, cb2[3].x
  94: mul r7.xyz, r6.xyzx, r3.zzzz
  95: lt r3.w, cb2[1].w, l(0.999990)
  96: if_nz r3.w
  97:   lt r3.w, l(0.000000), cb2[6].w
  98:   if_nz r3.w
  99:     dp3 r3.w, r4.xyzx, r4.xyzx
 100:     rsq r3.w, r3.w
 101:     mul r8.xyz, r3.wwww, r4.xyzx
 102:     mov r9.x, v3.w
 103:     mov r9.y, v4.w
 104:     mov r9.z, v5.w
 105:     add r10.xyz, -r9.xyzx, cb2[4].xyzx
 106:     div r10.xyz, r10.xyzx, r8.xyzx
 107:     add r11.xyz, -r9.xyzx, cb2[5].xyzx
 108:     div r11.xyz, r11.xyzx, r8.xyzx
 109:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
 110:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 111:     min r3.w, r10.y, r10.x
 112:     min r3.w, r10.z, r3.w
 113:     add r9.xyz, r9.xyzx, -cb2[6].xyzx
 114:     mad r4.xyz, r8.xyzx, r3.wwww, r9.xyzx
 115:   endif 
 116:   sample_l r4.xyzw, r4.xyzx, t4.xyzw, s1, r1.w
 117:   add r1.w, r4.w, l(-1.000000)
 118:   mad r1.w, cb2[7].w, r1.w, l(1.000000)
 119:   log r1.w, r1.w
 120:   mul r1.w, r1.w, cb2[7].y
 121:   exp r1.w, r1.w
 122:   mul r1.w, r1.w, cb2[7].x
 123:   mul r4.xyz, r4.xyzx, r1.wwww
 124:   mad r6.xyz, r3.zzzz, r6.xyzx, -r4.xyzx
 125:   mad r7.xyz, cb2[1].wwww, r6.xyzx, r4.xyzx
 126: endif 
 127: mul r4.xyz, r3.xxxx, r7.xyzx
 128: mad r6.xyz, -v2.xyzx, r2.xxxx, cb1[0].xyzx
 129: dp3 r1.w, r6.xyzx, r6.xyzx
 130: max r1.w, r1.w, l(0.001000)
 131: rsq r1.w, r1.w
 132: mul r6.xyz, r1.wwww, r6.xyzx
 133: dp3 r1.w, r1.xyzx, -r2.yzwy
 134: dp3_sat r2.x, r1.xyzx, cb1[0].xyzx
 135: dp3_sat r1.x, r1.xyzx, r6.xyzx
 136: dp3_sat r1.y, cb1[0].xyzx, r6.xyzx
 137: mul r1.z, r1.y, r1.y
 138: dp2 r1.z, r1.zzzz, r3.yyyy
 139: add r1.z, r1.z, l(-0.500000)
 140: add r2.y, -r2.x, l(1.000000)
 141: mul r2.z, r2.y, r2.y
 142: mul r2.z, r2.z, r2.z
 143: mul r2.y, r2.y, r2.z
 144: mad r2.y, r1.z, r2.y, l(1.000000)
 145: add r2.z, -|r1.w|, l(1.000000)
 146: mul r2.w, r2.z, r2.z
 147: mul r2.w, r2.w, r2.w
 148: mul r2.z, r2.z, r2.w
 149: mad r1.z, r1.z, r2.z, l(1.000000)
 150: mul r1.z, r1.z, r2.y
 151: mul r2.y, r3.y, r3.y
 152: max r2.y, r2.y, l(0.002000)
 153: add r2.w, -r2.y, l(1.000000)
 154: mad r3.y, |r1.w|, r2.w, r2.y
 155: mad r2.w, r2.x, r2.w, r2.y
 156: mul r1.w, |r1.w|, r2.w
 157: mad r1.w, r2.x, r3.y, r1.w
 158: add r1.w, r1.w, l(0.000010)
 159: div r1.w, l(0.500000), r1.w
 160: mul r2.w, r2.y, r2.y
 161: mad r3.y, r1.x, r2.w, -r1.x
 162: mad r1.x, r3.y, r1.x, l(1.000000)
 163: mul r2.w, r2.w, l(0.318310)
 164: mad r1.x, r1.x, r1.x, l(0.000000)
 165: div r1.x, r2.w, r1.x
 166: mul r1.x, r1.x, r1.w
 167: mul r1.x, r1.x, l(3.141593)
 168: mul r1.xz, r2.xxxx, r1.xxzx
 169: max r1.x, r1.x, l(0.000000)
 170: mad r1.w, r2.y, r2.y, l(1.000000)
 171: div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
 172: dp3 r2.x, cb0[3].xyzx, cb0[3].xyzx
 173: ne r2.x, r2.x, l(0.000000)
 174: and r2.x, r2.x, l(0x3f800000)
 175: mul r1.x, r1.x, r2.x
 176: add r0.w, -r0.w, l(1.000000)
 177: add_sat r0.w, r0.w, cb0[8].w
 178: mul r2.xyw, r1.zzzz, cb0[2].xyxz
 179: mad r2.xyw, r5.xyxz, r3.xxxx, r2.xyxw
 180: mul r3.xyz, r1.xxxx, cb0[2].xyzx
 181: add r1.x, -r1.y, l(1.000000)
 182: mul r1.y, r1.x, r1.x
 183: mul r1.y, r1.y, r1.y
 184: mul r1.x, r1.x, r1.y
 185: add r5.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 186: mad r1.xyz, r5.xyzx, r1.xxxx, cb0[3].xyzx
 187: mul r1.xyz, r1.xyzx, r3.xyzx
 188: mad r0.xyz, r0.xyzx, r2.xywx, r1.xyzx
 189: mul r1.xyz, r4.xyzx, r1.wwww
 190: add r2.xyw, r0.wwww, -cb0[3].xyxz
 191: mad r2.xyz, r2.zzzz, r2.xywx, cb0[3].xyzx
 192: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
 193: mov o0.w, l(1.000000)
 194: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON LIGHTPROBE_SH UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mov r0.x, cb3[0].x
  15: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  16: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  17: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  18: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  19: add o2.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  20: mov r1.w, l(0)
  21: mov o3.xyzw, r1.wwwx
  22: mov o4.xyzw, r1.wwwy
  23: mov o5.w, r1.z
  24: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  25: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  26: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul o5.xyz, r0.wwww, r0.xyzx
  30: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  31: mov o6.zw, l(0,0,0,0)
  32: mov o7.xyzw, l(0,0,0,0)
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 160 math, 13 temp registers, 6 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 4
Set 2D Texture "unity_Lightmap" to slot 2 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: dp3 r2.x, v2.xyzx, v2.xyzx
  10: rsq r2.x, r2.x
  11: mul r2.yzw, r2.xxxx, v2.xxyz
  12: sample r3.xyzw, v1.xyxx, t1.xyzw, s4
  13: add r3.x, -cb0[9].y, l(1.000000)
  14: mad r3.x, r3.y, cb0[9].y, r3.x
  15: add r3.y, -cb0[8].w, l(1.000000)
  16: dp3 r3.z, r2.yzwy, r1.xyzx
  17: add r3.z, r3.z, r3.z
  18: mad r4.xyz, r1.xyzx, -r3.zzzz, r2.yzwy
  19: eq r3.z, cb3[0].x, l(1.000000)
  20: if_nz r3.z
  21:   eq r3.z, cb3[0].y, l(1.000000)
  22:   mul r5.xyz, v4.wwww, cb3[2].xyzx
  23:   mad r5.xyz, cb3[1].xyzx, v3.wwww, r5.xyzx
  24:   mad r5.xyz, cb3[3].xyzx, v5.wwww, r5.xyzx
  25:   add r5.xyz, r5.xyzx, cb3[4].xyzx
  26:   mov r6.y, v3.w
  27:   mov r6.z, v4.w
  28:   mov r6.w, v5.w
  29:   movc r5.xyz, r3.zzzz, r5.xyzx, r6.yzwy
  30:   add r5.xyz, r5.xyzx, -cb3[6].xyzx
  31:   mul r5.yzw, r5.xxyz, cb3[5].xxyz
  32:   mul r3.z, r5.y, l(0.250000)
  33:   mul r3.w, cb3[0].z, l(0.500000)
  34:   mad r4.w, -cb3[0].z, l(0.500000), l(0.250000)
  35:   max r3.z, r3.w, r3.z
  36:   min r5.x, r4.w, r3.z
  37:   sample r6.xyzw, r5.xzwx, t5.xyzw, s2
  38:   add r7.xyz, r5.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  39:   sample r7.xyzw, r7.xyzx, t5.xyzw, s2
  40:   add r5.xyz, r5.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  41:   sample r5.xyzw, r5.xyzx, t5.xyzw, s2
  42:   mov r1.w, l(1.000000)
  43:   dp4 r6.x, r6.xyzw, r1.xyzw
  44:   dp4 r6.y, r7.xyzw, r1.xyzw
  45:   dp4 r6.z, r5.xyzw, r1.xyzw
  46: else 
  47:   mov r1.w, l(1.000000)
  48:   dp4 r6.x, cb1[39].xyzw, r1.xyzw
  49:   dp4 r6.y, cb1[40].xyzw, r1.xyzw
  50:   dp4 r6.z, cb1[41].xyzw, r1.xyzw
  51: endif 
  52: mul r5.xyzw, r1.yzzx, r1.xyzz
  53: dp4 r7.x, cb1[42].xyzw, r5.xyzw
  54: dp4 r7.y, cb1[43].xyzw, r5.xyzw
  55: dp4 r7.z, cb1[44].xyzw, r5.xyzw
  56: mul r1.w, r1.y, r1.y
  57: mad r1.w, r1.x, r1.x, -r1.w
  58: mad r5.xyz, cb1[45].xyzx, r1.wwww, r7.xyzx
  59: add r5.xyz, r5.xyzx, r6.xyzx
  60: max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  61: sample r6.xyzw, v6.xyxx, t2.xyzw, s0
  62: add r5.xyz, r5.xyzx, r6.xyzx
  63: lt r1.w, l(0.000000), cb2[2].w
  64: if_nz r1.w
  65:   dp3 r1.w, r4.xyzx, r4.xyzx
  66:   rsq r1.w, r1.w
  67:   mul r6.xyz, r1.wwww, r4.xyzx
  68:   mov r7.x, v3.w
  69:   mov r7.y, v4.w
  70:   mov r7.z, v5.w
  71:   add r8.xyz, -r7.xyzx, cb2[0].xyzx
  72:   div r8.xyz, r8.xyzx, r6.xyzx
  73:   add r9.xyz, -r7.xyzx, cb2[1].xyzx
  74:   div r9.xyz, r9.xyzx, r6.xyzx
  75:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  76:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  77:   min r1.w, r8.y, r8.x
  78:   min r1.w, r8.z, r1.w
  79:   add r7.xyz, r7.xyzx, -cb2[2].xyzx
  80:   mad r6.xyz, r6.xyzx, r1.wwww, r7.xyzx
  81: else 
  82:   mov r6.xyz, r4.xyzx
  83: endif 
  84: mad r1.w, -r3.y, l(0.700000), l(1.700000)
  85: mul r1.w, r1.w, r3.y
  86: mul r1.w, r1.w, l(6.000000)
  87: sample_l r6.xyzw, r6.xyzx, t3.xyzw, s1, r1.w
  88: add r3.z, r6.w, l(-1.000000)
  89: mad r3.z, cb2[3].w, r3.z, l(1.000000)
  90: log r3.z, r3.z
  91: mul r3.z, r3.z, cb2[3].y
  92: exp r3.z, r3.z
  93: mul r3.z, r3.z, cb2[3].x
  94: mul r7.xyz, r6.xyzx, r3.zzzz
  95: lt r3.w, cb2[1].w, l(0.999990)
  96: if_nz r3.w
  97:   lt r3.w, l(0.000000), cb2[6].w
  98:   if_nz r3.w
  99:     dp3 r3.w, r4.xyzx, r4.xyzx
 100:     rsq r3.w, r3.w
 101:     mul r8.xyz, r3.wwww, r4.xyzx
 102:     mov r9.x, v3.w
 103:     mov r9.y, v4.w
 104:     mov r9.z, v5.w
 105:     add r10.xyz, -r9.xyzx, cb2[4].xyzx
 106:     div r10.xyz, r10.xyzx, r8.xyzx
 107:     add r11.xyz, -r9.xyzx, cb2[5].xyzx
 108:     div r11.xyz, r11.xyzx, r8.xyzx
 109:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
 110:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 111:     min r3.w, r10.y, r10.x
 112:     min r3.w, r10.z, r3.w
 113:     add r9.xyz, r9.xyzx, -cb2[6].xyzx
 114:     mad r4.xyz, r8.xyzx, r3.wwww, r9.xyzx
 115:   endif 
 116:   sample_l r4.xyzw, r4.xyzx, t4.xyzw, s1, r1.w
 117:   add r1.w, r4.w, l(-1.000000)
 118:   mad r1.w, cb2[7].w, r1.w, l(1.000000)
 119:   log r1.w, r1.w
 120:   mul r1.w, r1.w, cb2[7].y
 121:   exp r1.w, r1.w
 122:   mul r1.w, r1.w, cb2[7].x
 123:   mul r4.xyz, r4.xyzx, r1.wwww
 124:   mad r6.xyz, r3.zzzz, r6.xyzx, -r4.xyzx
 125:   mad r7.xyz, cb2[1].wwww, r6.xyzx, r4.xyzx
 126: endif 
 127: mul r4.xyz, r3.xxxx, r7.xyzx
 128: mad r6.xyz, -v2.xyzx, r2.xxxx, cb1[0].xyzx
 129: dp3 r1.w, r6.xyzx, r6.xyzx
 130: max r1.w, r1.w, l(0.001000)
 131: rsq r1.w, r1.w
 132: mul r6.xyz, r1.wwww, r6.xyzx
 133: dp3 r1.w, r1.xyzx, -r2.yzwy
 134: dp3_sat r2.x, r1.xyzx, cb1[0].xyzx
 135: dp3_sat r1.x, r1.xyzx, r6.xyzx
 136: dp3_sat r1.y, cb1[0].xyzx, r6.xyzx
 137: mul r1.z, r1.y, r1.y
 138: dp2 r1.z, r1.zzzz, r3.yyyy
 139: add r1.z, r1.z, l(-0.500000)
 140: add r2.y, -r2.x, l(1.000000)
 141: mul r2.z, r2.y, r2.y
 142: mul r2.z, r2.z, r2.z
 143: mul r2.y, r2.y, r2.z
 144: mad r2.y, r1.z, r2.y, l(1.000000)
 145: add r2.z, -|r1.w|, l(1.000000)
 146: mul r2.w, r2.z, r2.z
 147: mul r2.w, r2.w, r2.w
 148: mul r2.z, r2.z, r2.w
 149: mad r1.z, r1.z, r2.z, l(1.000000)
 150: mul r1.z, r1.z, r2.y
 151: mul r2.y, r3.y, r3.y
 152: max r2.y, r2.y, l(0.002000)
 153: add r2.w, -r2.y, l(1.000000)
 154: mad r3.y, |r1.w|, r2.w, r2.y
 155: mad r2.w, r2.x, r2.w, r2.y
 156: mul r1.w, |r1.w|, r2.w
 157: mad r1.w, r2.x, r3.y, r1.w
 158: add r1.w, r1.w, l(0.000010)
 159: div r1.w, l(0.500000), r1.w
 160: mul r2.w, r2.y, r2.y
 161: mad r3.y, r1.x, r2.w, -r1.x
 162: mad r1.x, r3.y, r1.x, l(1.000000)
 163: mul r2.w, r2.w, l(0.318310)
 164: mad r1.x, r1.x, r1.x, l(0.000000)
 165: div r1.x, r2.w, r1.x
 166: mul r1.x, r1.x, r1.w
 167: mul r1.x, r1.x, l(3.141593)
 168: mul r1.xz, r2.xxxx, r1.xxzx
 169: max r1.x, r1.x, l(0.000000)
 170: mad r1.w, r2.y, r2.y, l(1.000000)
 171: div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
 172: dp3 r2.x, cb0[3].xyzx, cb0[3].xyzx
 173: ne r2.x, r2.x, l(0.000000)
 174: and r2.x, r2.x, l(0x3f800000)
 175: mul r1.x, r1.x, r2.x
 176: add r0.w, -r0.w, l(1.000000)
 177: add_sat r0.w, r0.w, cb0[8].w
 178: mul r2.xyw, r1.zzzz, cb0[2].xyxz
 179: mad r2.xyw, r5.xyxz, r3.xxxx, r2.xyxw
 180: mul r3.xyz, r1.xxxx, cb0[2].xyzx
 181: add r1.x, -r1.y, l(1.000000)
 182: mul r1.y, r1.x, r1.x
 183: mul r1.y, r1.y, r1.y
 184: mul r1.x, r1.x, r1.y
 185: add r5.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 186: mad r1.xyz, r5.xyzx, r1.xxxx, cb0[3].xyzx
 187: mul r1.xyz, r1.xyzx, r3.xyzx
 188: mad r0.xyz, r0.xyzx, r2.xywx, r1.xyzx
 189: mul r1.xyz, r4.xyzx, r1.wwww
 190: add r2.xyw, r0.wwww, -cb0[3].xyxz
 191: mad r2.xyz, r2.zzzz, r2.xywx, cb0[3].xyzx
 192: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
 193: mov o0.w, l(1.000000)
 194: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul o5.xyz, r1.wwww, r1.xyzx
  29: mov o6.xyzw, l(0,0,0,0)
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 152 math, 13 temp registers, 5 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 5
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r2.w, v2.xyzx, v2.xyzx
  11: rsq r2.w, r2.w
  12: mul r3.xyz, r2.wwww, v2.xyzx
  13: mov r4.x, v3.w
  14: mov r4.y, v4.w
  15: mov r4.z, v5.w
  16: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r3.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  22: dp3 r4.w, r5.xyzx, r5.xyzx
  23: sqrt r4.w, r4.w
  24: add r4.w, -r3.w, r4.w
  25: mad r3.w, cb3[25].w, r4.w, r3.w
  26: mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
  27: eq r4.w, cb6[0].x, l(1.000000)
  28: if_nz r4.w
  29:   eq r4.w, cb6[0].y, l(1.000000)
  30:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  31:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  32:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  34:   movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
  35:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  37:   mad r4.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r4.w, r5.y
  40:   sample r5.xyzw, r5.xzwx, t6.xyzw, s1
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
  45: div r5.xy, v7.xyxx, v7.wwww
  46: sample r5.xyzw, r5.xyxx, t2.xyzw, s5
  47: add r4.w, r4.w, -r5.x
  48: mad r3.w, r3.w, r4.w, r5.x
  49: sample r5.xyzw, v1.xyxx, t3.xyzw, s4
  50: add r4.w, -cb0[9].y, l(1.000000)
  51: mad r4.w, r5.y, cb0[9].y, r4.w
  52: mad r5.x, -r0.w, cb0[9].x, l(1.000000)
  53: dp3 r5.y, r3.xyzx, r2.xyzx
  54: add r5.y, r5.y, r5.y
  55: mad r5.yzw, r2.xxyz, -r5.yyyy, r3.xxyz
  56: mul r6.xyz, r3.wwww, cb0[2].xyzx
  57: lt r3.w, l(0.000000), cb5[2].w
  58: if_nz r3.w
  59:   dp3 r3.w, r5.yzwy, r5.yzwy
  60:   rsq r3.w, r3.w
  61:   mul r7.xyz, r3.wwww, r5.yzwy
  62:   add r8.xyz, -r4.xyzx, cb5[0].xyzx
  63:   div r8.xyz, r8.xyzx, r7.xyzx
  64:   add r9.xyz, -r4.xyzx, cb5[1].xyzx
  65:   div r9.xyz, r9.xyzx, r7.xyzx
  66:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  67:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  68:   min r3.w, r8.y, r8.x
  69:   min r3.w, r8.z, r3.w
  70:   add r8.xyz, r4.xyzx, -cb5[2].xyzx
  71:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  72: else 
  73:   mov r7.xyz, r5.yzwy
  74: endif 
  75: mad r3.w, -r5.x, l(0.700000), l(1.700000)
  76: mul r3.w, r3.w, r5.x
  77: mul r3.w, r3.w, l(6.000000)
  78: sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, r3.w
  79: add r6.w, r7.w, l(-1.000000)
  80: mad r6.w, cb5[3].w, r6.w, l(1.000000)
  81: log r6.w, r6.w
  82: mul r6.w, r6.w, cb5[3].y
  83: exp r6.w, r6.w
  84: mul r6.w, r6.w, cb5[3].x
  85: mul r8.xyz, r7.xyzx, r6.wwww
  86: lt r7.w, cb5[1].w, l(0.999990)
  87: if_nz r7.w
  88:   lt r7.w, l(0.000000), cb5[6].w
  89:   if_nz r7.w
  90:     dp3 r7.w, r5.yzwy, r5.yzwy
  91:     rsq r7.w, r7.w
  92:     mul r9.xyz, r5.yzwy, r7.wwww
  93:     add r10.xyz, -r4.xyzx, cb5[4].xyzx
  94:     div r10.xyz, r10.xyzx, r9.xyzx
  95:     add r11.xyz, -r4.xyzx, cb5[5].xyzx
  96:     div r11.xyz, r11.xyzx, r9.xyzx
  97:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  98:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  99:     min r7.w, r10.y, r10.x
 100:     min r7.w, r10.z, r7.w
 101:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 102:     mad r5.yzw, r9.xxyz, r7.wwww, r4.xxyz
 103:   endif 
 104:   sample_l r9.xyzw, r5.yzwy, t5.xyzw, s0, r3.w
 105:   add r3.w, r9.w, l(-1.000000)
 106:   mad r3.w, cb5[7].w, r3.w, l(1.000000)
 107:   log r3.w, r3.w
 108:   mul r3.w, r3.w, cb5[7].y
 109:   exp r3.w, r3.w
 110:   mul r3.w, r3.w, cb5[7].x
 111:   mul r4.xyz, r9.xyzx, r3.wwww
 112:   mad r5.yzw, r6.wwww, r7.xxyz, -r4.xxyz
 113:   mad r8.xyz, cb5[1].wwww, r5.yzwy, r4.xyzx
 114: endif 
 115: mul r4.xyz, r4.wwww, r8.xyzx
 116: mad r5.yzw, -v2.xxyz, r2.wwww, cb2[0].xxyz
 117: dp3 r2.w, r5.yzwy, r5.yzwy
 118: max r2.w, r2.w, l(0.001000)
 119: rsq r2.w, r2.w
 120: mul r5.yzw, r2.wwww, r5.yyzw
 121: dp3 r2.w, r2.xyzx, -r3.xyzx
 122: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 123: dp3_sat r2.x, r2.xyzx, r5.yzwy
 124: dp3_sat r2.y, cb2[0].xyzx, r5.yzwy
 125: mul r2.z, r2.y, r2.y
 126: dp2 r2.z, r2.zzzz, r5.xxxx
 127: add r2.z, r2.z, l(-0.500000)
 128: add r3.y, -r3.x, l(1.000000)
 129: mul r3.z, r3.y, r3.y
 130: mul r3.z, r3.z, r3.z
 131: mul r3.y, r3.y, r3.z
 132: mad r3.y, r2.z, r3.y, l(1.000000)
 133: add r3.z, -|r2.w|, l(1.000000)
 134: mul r3.w, r3.z, r3.z
 135: mul r3.w, r3.w, r3.w
 136: mul r3.z, r3.z, r3.w
 137: mad r2.z, r2.z, r3.z, l(1.000000)
 138: mul r2.z, r2.z, r3.y
 139: mul r3.y, r5.x, r5.x
 140: max r3.y, r3.y, l(0.002000)
 141: add r3.w, -r3.y, l(1.000000)
 142: mad r4.w, |r2.w|, r3.w, r3.y
 143: mad r3.w, r3.x, r3.w, r3.y
 144: mul r2.w, |r2.w|, r3.w
 145: mad r2.w, r3.x, r4.w, r2.w
 146: add r2.w, r2.w, l(0.000010)
 147: div r2.w, l(0.500000), r2.w
 148: mul r3.w, r3.y, r3.y
 149: mad r4.w, r2.x, r3.w, -r2.x
 150: mad r2.x, r4.w, r2.x, l(1.000000)
 151: mul r3.w, r3.w, l(0.318310)
 152: mad r2.x, r2.x, r2.x, l(0.000000)
 153: div r2.x, r3.w, r2.x
 154: mul r2.x, r2.x, r2.w
 155: mul r2.x, r2.x, l(3.141593)
 156: mul r2.xz, r3.xxxx, r2.xxzx
 157: max r2.x, r2.x, l(0.000000)
 158: mad r2.w, r3.y, r3.y, l(1.000000)
 159: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 160: dp3 r3.x, r0.xyzx, r0.xyzx
 161: ne r3.x, r3.x, l(0.000000)
 162: and r3.x, r3.x, l(0x3f800000)
 163: mul r2.x, r2.x, r3.x
 164: mad r0.w, r0.w, cb0[9].x, -r1.w
 165: add_sat r0.w, r0.w, l(1.000000)
 166: mul r3.xyw, r2.zzzz, r6.xyxz
 167: mul r5.xyz, r6.xyzx, r2.xxxx
 168: add r1.w, -r2.y, l(1.000000)
 169: mul r2.x, r1.w, r1.w
 170: mul r2.x, r2.x, r2.x
 171: mul r1.w, r1.w, r2.x
 172: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 173: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 174: mul r2.xyz, r2.xyzx, r5.xyzx
 175: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 176: mul r2.xyz, r4.xyzx, r2.wwww
 177: add r3.xyw, -r0.xyxz, r0.wwww
 178: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 179: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 180: mov o0.w, l(1.000000)
 181: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[68], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  16: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  19: mov r2.x, cb4[0].x
  20: add o2.xyz, r1.xyzx, -cb3[r2.x + 64].xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mov o6.xyzw, l(0,0,0,0)
  32: mul r0.y, r0.y, cb1[4].x
  33: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  34: add r0.xy, r1.zzzz, r1.xwxx
  35: mul r1.xy, r0.wwww, cb3[r2.x + 66].zwzz
  36: mad o7.xy, r0.xyxx, cb3[r2.x + 66].xyxx, r1.xyxx
  37: mov o7.zw, r0.zzzw
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 153 math, 13 temp registers, 5 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 5
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r2.w, v2.xyzx, v2.xyzx
  11: rsq r2.w, r2.w
  12: mul r3.xyz, r2.wwww, v2.xyzx
  13: mov r4.x, v3.w
  14: mov r4.y, v4.w
  15: mov r4.z, v5.w
  16: mov r3.w, cb4[0].x
  17: add r5.xyz, -r4.xyzx, cb3[r3.w + 64].xyzx
  18: ishl r3.w, cb4[0].x, l(2)
  19: mov r6.x, cb3[r3.w + 8].z
  20: mov r6.y, cb3[r3.w + 9].z
  21: mov r6.z, cb3[r3.w + 10].z
  22: dp3 r3.w, r5.xyzx, r6.xyzx
  23: add r5.xyz, r4.xyzx, -cb2[25].xyzx
  24: dp3 r4.w, r5.xyzx, r5.xyzx
  25: sqrt r4.w, r4.w
  26: add r4.w, -r3.w, r4.w
  27: mad r3.w, cb2[25].w, r4.w, r3.w
  28: mad_sat r3.w, r3.w, cb2[24].z, cb2[24].w
  29: eq r4.w, cb6[0].x, l(1.000000)
  30: if_nz r4.w
  31:   eq r4.w, cb6[0].y, l(1.000000)
  32:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  33:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  34:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  35:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  36:   movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
  37:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  38:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  39:   mad r4.w, r5.y, l(0.250000), l(0.750000)
  40:   mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  41:   max r5.x, r4.w, r5.y
  42:   sample r5.xyzw, r5.xzwx, t6.xyzw, s1
  43: else 
  44:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  45: endif 
  46: dp4_sat r4.w, r5.xyzw, cb1[46].xyzw
  47: div r5.xy, v7.xyxx, v7.wwww
  48: sample r5.xyzw, r5.xyxx, t2.xyzw, s5
  49: add r4.w, r4.w, -r5.x
  50: mad r3.w, r3.w, r4.w, r5.x
  51: sample r5.xyzw, v1.xyxx, t3.xyzw, s4
  52: add r4.w, -cb0[9].y, l(1.000000)
  53: mad r4.w, r5.y, cb0[9].y, r4.w
  54: mad r5.x, -r0.w, cb0[9].x, l(1.000000)
  55: dp3 r5.y, r3.xyzx, r2.xyzx
  56: add r5.y, r5.y, r5.y
  57: mad r5.yzw, r2.xxyz, -r5.yyyy, r3.xxyz
  58: mul r6.xyz, r3.wwww, cb0[2].xyzx
  59: lt r3.w, l(0.000000), cb5[2].w
  60: if_nz r3.w
  61:   dp3 r3.w, r5.yzwy, r5.yzwy
  62:   rsq r3.w, r3.w
  63:   mul r7.xyz, r3.wwww, r5.yzwy
  64:   add r8.xyz, -r4.xyzx, cb5[0].xyzx
  65:   div r8.xyz, r8.xyzx, r7.xyzx
  66:   add r9.xyz, -r4.xyzx, cb5[1].xyzx
  67:   div r9.xyz, r9.xyzx, r7.xyzx
  68:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  69:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  70:   min r3.w, r8.y, r8.x
  71:   min r3.w, r8.z, r3.w
  72:   add r8.xyz, r4.xyzx, -cb5[2].xyzx
  73:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  74: else 
  75:   mov r7.xyz, r5.yzwy
  76: endif 
  77: mad r3.w, -r5.x, l(0.700000), l(1.700000)
  78: mul r3.w, r3.w, r5.x
  79: mul r3.w, r3.w, l(6.000000)
  80: sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, r3.w
  81: add r6.w, r7.w, l(-1.000000)
  82: mad r6.w, cb5[3].w, r6.w, l(1.000000)
  83: log r6.w, r6.w
  84: mul r6.w, r6.w, cb5[3].y
  85: exp r6.w, r6.w
  86: mul r6.w, r6.w, cb5[3].x
  87: mul r8.xyz, r7.xyzx, r6.wwww
  88: lt r7.w, cb5[1].w, l(0.999990)
  89: if_nz r7.w
  90:   lt r7.w, l(0.000000), cb5[6].w
  91:   if_nz r7.w
  92:     dp3 r7.w, r5.yzwy, r5.yzwy
  93:     rsq r7.w, r7.w
  94:     mul r9.xyz, r5.yzwy, r7.wwww
  95:     add r10.xyz, -r4.xyzx, cb5[4].xyzx
  96:     div r10.xyz, r10.xyzx, r9.xyzx
  97:     add r11.xyz, -r4.xyzx, cb5[5].xyzx
  98:     div r11.xyz, r11.xyzx, r9.xyzx
  99:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 100:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 101:     min r7.w, r10.y, r10.x
 102:     min r7.w, r10.z, r7.w
 103:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 104:     mad r5.yzw, r9.xxyz, r7.wwww, r4.xxyz
 105:   endif 
 106:   sample_l r9.xyzw, r5.yzwy, t5.xyzw, s0, r3.w
 107:   add r3.w, r9.w, l(-1.000000)
 108:   mad r3.w, cb5[7].w, r3.w, l(1.000000)
 109:   log r3.w, r3.w
 110:   mul r3.w, r3.w, cb5[7].y
 111:   exp r3.w, r3.w
 112:   mul r3.w, r3.w, cb5[7].x
 113:   mul r4.xyz, r9.xyzx, r3.wwww
 114:   mad r5.yzw, r6.wwww, r7.xxyz, -r4.xxyz
 115:   mad r8.xyz, cb5[1].wwww, r5.yzwy, r4.xyzx
 116: endif 
 117: mul r4.xyz, r4.wwww, r8.xyzx
 118: mad r5.yzw, -v2.xxyz, r2.wwww, cb1[0].xxyz
 119: dp3 r2.w, r5.yzwy, r5.yzwy
 120: max r2.w, r2.w, l(0.001000)
 121: rsq r2.w, r2.w
 122: mul r5.yzw, r2.wwww, r5.yyzw
 123: dp3 r2.w, r2.xyzx, -r3.xyzx
 124: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 125: dp3_sat r2.x, r2.xyzx, r5.yzwy
 126: dp3_sat r2.y, cb1[0].xyzx, r5.yzwy
 127: mul r2.z, r2.y, r2.y
 128: dp2 r2.z, r2.zzzz, r5.xxxx
 129: add r2.z, r2.z, l(-0.500000)
 130: add r3.y, -r3.x, l(1.000000)
 131: mul r3.z, r3.y, r3.y
 132: mul r3.z, r3.z, r3.z
 133: mul r3.y, r3.y, r3.z
 134: mad r3.y, r2.z, r3.y, l(1.000000)
 135: add r3.z, -|r2.w|, l(1.000000)
 136: mul r3.w, r3.z, r3.z
 137: mul r3.w, r3.w, r3.w
 138: mul r3.z, r3.z, r3.w
 139: mad r2.z, r2.z, r3.z, l(1.000000)
 140: mul r2.z, r2.z, r3.y
 141: mul r3.y, r5.x, r5.x
 142: max r3.y, r3.y, l(0.002000)
 143: add r3.w, -r3.y, l(1.000000)
 144: mad r4.w, |r2.w|, r3.w, r3.y
 145: mad r3.w, r3.x, r3.w, r3.y
 146: mul r2.w, |r2.w|, r3.w
 147: mad r2.w, r3.x, r4.w, r2.w
 148: add r2.w, r2.w, l(0.000010)
 149: div r2.w, l(0.500000), r2.w
 150: mul r3.w, r3.y, r3.y
 151: mad r4.w, r2.x, r3.w, -r2.x
 152: mad r2.x, r4.w, r2.x, l(1.000000)
 153: mul r3.w, r3.w, l(0.318310)
 154: mad r2.x, r2.x, r2.x, l(0.000000)
 155: div r2.x, r3.w, r2.x
 156: mul r2.x, r2.x, r2.w
 157: mul r2.x, r2.x, l(3.141593)
 158: mul r2.xz, r3.xxxx, r2.xxzx
 159: max r2.x, r2.x, l(0.000000)
 160: mad r2.w, r3.y, r3.y, l(1.000000)
 161: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 162: dp3 r3.x, r0.xyzx, r0.xyzx
 163: ne r3.x, r3.x, l(0.000000)
 164: and r3.x, r3.x, l(0x3f800000)
 165: mul r2.x, r2.x, r3.x
 166: mad r0.w, r0.w, cb0[9].x, -r1.w
 167: add_sat r0.w, r0.w, l(1.000000)
 168: mul r3.xyw, r2.zzzz, r6.xyxz
 169: mul r5.xyz, r6.xyzx, r2.xxxx
 170: add r1.w, -r2.y, l(1.000000)
 171: mul r2.x, r1.w, r1.w
 172: mul r2.x, r2.x, r2.x
 173: mul r1.w, r1.w, r2.x
 174: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 175: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 176: mul r2.xyz, r2.xyzx, r5.xyzx
 177: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 178: mul r2.xyz, r4.xyzx, r2.wwww
 179: add r3.xyw, -r0.xyxz, r0.wwww
 180: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 181: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 182: mov o0.w, l(1.000000)
 183: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov o3.w, r1.x
  20: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  21: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  22: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  23: dp3 r1.x, r2.xyzx, r2.xyzx
  24: rsq r1.x, r1.x
  25: mul r2.xyz, r1.xxxx, r2.xyzx
  26: mov o3.xyz, r2.xyzx
  27: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.x, r3.xyzx, r3.xyzx
  31: rsq r1.x, r1.x
  32: mul r3.xyz, r1.xxxx, r3.xyzx
  33: mul r4.xyz, r2.yzxy, r3.zxyz
  34: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  35: mov o5.xyz, r3.xyzx
  36: mul r1.x, v4.w, cb2[9].w
  37: mul o4.xyz, r1.xxxx, r2.xyzx
  38: mov o4.w, r1.y
  39: mov o5.w, r1.z
  40: mov o6.xyzw, l(0,0,0,0)
  41: mul r0.y, r0.y, cb1[5].x
  42: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  43: mov o7.zw, r0.zzzw
  44: add o7.xy, r1.zzzz, r1.xwxx
  45: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 162 math, 13 temp registers, 6 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 3 sampler slot 6
Set 2D Texture "_OcclusionMap" to slot 4 sampler slot 5
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r2.z, r2.xyxx, r2.xyxx
  12: min r2.z, r2.z, l(1.000000)
  13: add r2.z, -r2.z, l(1.000000)
  14: sqrt r2.z, r2.z
  15: mul r3.xyz, r2.yyyy, v4.xyzx
  16: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  17: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  18: dp3 r2.w, r2.xyzx, r2.xyzx
  19: rsq r2.w, r2.w
  20: mul r2.xyz, r2.wwww, r2.xyzx
  21: dp3 r2.w, v2.xyzx, v2.xyzx
  22: rsq r2.w, r2.w
  23: mul r3.xyz, r2.wwww, v2.xyzx
  24: mov r4.x, v3.w
  25: mov r4.y, v4.w
  26: mov r4.z, v5.w
  27: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  28: mov r6.x, cb4[9].z
  29: mov r6.y, cb4[10].z
  30: mov r6.z, cb4[11].z
  31: dp3 r3.w, r5.xyzx, r6.xyzx
  32: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  33: dp3 r4.w, r5.xyzx, r5.xyzx
  34: sqrt r4.w, r4.w
  35: add r4.w, -r3.w, r4.w
  36: mad r3.w, cb3[25].w, r4.w, r3.w
  37: mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
  38: eq r4.w, cb6[0].x, l(1.000000)
  39: if_nz r4.w
  40:   eq r4.w, cb6[0].y, l(1.000000)
  41:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  42:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  43:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  44:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  45:   movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
  46:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  47:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  48:   mad r4.w, r5.y, l(0.250000), l(0.750000)
  49:   mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  50:   max r5.x, r4.w, r5.y
  51:   sample r5.xyzw, r5.xzwx, t7.xyzw, s1
  52: else 
  53:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  54: endif 
  55: dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
  56: div r5.xy, v7.xyxx, v7.wwww
  57: sample r5.xyzw, r5.xyxx, t3.xyzw, s6
  58: add r4.w, r4.w, -r5.x
  59: mad r3.w, r3.w, r4.w, r5.x
  60: sample r5.xyzw, v1.xyxx, t4.xyzw, s5
  61: add r4.w, -cb0[9].y, l(1.000000)
  62: mad r4.w, r5.y, cb0[9].y, r4.w
  63: mad r5.x, -r0.w, cb0[9].x, l(1.000000)
  64: dp3 r5.y, r3.xyzx, r2.xyzx
  65: add r5.y, r5.y, r5.y
  66: mad r5.yzw, r2.xxyz, -r5.yyyy, r3.xxyz
  67: mul r6.xyz, r3.wwww, cb0[2].xyzx
  68: lt r3.w, l(0.000000), cb5[2].w
  69: if_nz r3.w
  70:   dp3 r3.w, r5.yzwy, r5.yzwy
  71:   rsq r3.w, r3.w
  72:   mul r7.xyz, r3.wwww, r5.yzwy
  73:   add r8.xyz, -r4.xyzx, cb5[0].xyzx
  74:   div r8.xyz, r8.xyzx, r7.xyzx
  75:   add r9.xyz, -r4.xyzx, cb5[1].xyzx
  76:   div r9.xyz, r9.xyzx, r7.xyzx
  77:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  78:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  79:   min r3.w, r8.y, r8.x
  80:   min r3.w, r8.z, r3.w
  81:   add r8.xyz, r4.xyzx, -cb5[2].xyzx
  82:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  83: else 
  84:   mov r7.xyz, r5.yzwy
  85: endif 
  86: mad r3.w, -r5.x, l(0.700000), l(1.700000)
  87: mul r3.w, r3.w, r5.x
  88: mul r3.w, r3.w, l(6.000000)
  89: sample_l r7.xyzw, r7.xyzx, t5.xyzw, s0, r3.w
  90: add r6.w, r7.w, l(-1.000000)
  91: mad r6.w, cb5[3].w, r6.w, l(1.000000)
  92: log r6.w, r6.w
  93: mul r6.w, r6.w, cb5[3].y
  94: exp r6.w, r6.w
  95: mul r6.w, r6.w, cb5[3].x
  96: mul r8.xyz, r7.xyzx, r6.wwww
  97: lt r7.w, cb5[1].w, l(0.999990)
  98: if_nz r7.w
  99:   lt r7.w, l(0.000000), cb5[6].w
 100:   if_nz r7.w
 101:     dp3 r7.w, r5.yzwy, r5.yzwy
 102:     rsq r7.w, r7.w
 103:     mul r9.xyz, r5.yzwy, r7.wwww
 104:     add r10.xyz, -r4.xyzx, cb5[4].xyzx
 105:     div r10.xyz, r10.xyzx, r9.xyzx
 106:     add r11.xyz, -r4.xyzx, cb5[5].xyzx
 107:     div r11.xyz, r11.xyzx, r9.xyzx
 108:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 109:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 110:     min r7.w, r10.y, r10.x
 111:     min r7.w, r10.z, r7.w
 112:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 113:     mad r5.yzw, r9.xxyz, r7.wwww, r4.xxyz
 114:   endif 
 115:   sample_l r9.xyzw, r5.yzwy, t6.xyzw, s0, r3.w
 116:   add r3.w, r9.w, l(-1.000000)
 117:   mad r3.w, cb5[7].w, r3.w, l(1.000000)
 118:   log r3.w, r3.w
 119:   mul r3.w, r3.w, cb5[7].y
 120:   exp r3.w, r3.w
 121:   mul r3.w, r3.w, cb5[7].x
 122:   mul r4.xyz, r9.xyzx, r3.wwww
 123:   mad r5.yzw, r6.wwww, r7.xxyz, -r4.xxyz
 124:   mad r8.xyz, cb5[1].wwww, r5.yzwy, r4.xyzx
 125: endif 
 126: mul r4.xyz, r4.wwww, r8.xyzx
 127: mad r5.yzw, -v2.xxyz, r2.wwww, cb2[0].xxyz
 128: dp3 r2.w, r5.yzwy, r5.yzwy
 129: max r2.w, r2.w, l(0.001000)
 130: rsq r2.w, r2.w
 131: mul r5.yzw, r2.wwww, r5.yyzw
 132: dp3 r2.w, r2.xyzx, -r3.xyzx
 133: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 134: dp3_sat r2.x, r2.xyzx, r5.yzwy
 135: dp3_sat r2.y, cb2[0].xyzx, r5.yzwy
 136: mul r2.z, r2.y, r2.y
 137: dp2 r2.z, r2.zzzz, r5.xxxx
 138: add r2.z, r2.z, l(-0.500000)
 139: add r3.y, -r3.x, l(1.000000)
 140: mul r3.z, r3.y, r3.y
 141: mul r3.z, r3.z, r3.z
 142: mul r3.y, r3.y, r3.z
 143: mad r3.y, r2.z, r3.y, l(1.000000)
 144: add r3.z, -|r2.w|, l(1.000000)
 145: mul r3.w, r3.z, r3.z
 146: mul r3.w, r3.w, r3.w
 147: mul r3.z, r3.z, r3.w
 148: mad r2.z, r2.z, r3.z, l(1.000000)
 149: mul r2.z, r2.z, r3.y
 150: mul r3.y, r5.x, r5.x
 151: max r3.y, r3.y, l(0.002000)
 152: add r3.w, -r3.y, l(1.000000)
 153: mad r4.w, |r2.w|, r3.w, r3.y
 154: mad r3.w, r3.x, r3.w, r3.y
 155: mul r2.w, |r2.w|, r3.w
 156: mad r2.w, r3.x, r4.w, r2.w
 157: add r2.w, r2.w, l(0.000010)
 158: div r2.w, l(0.500000), r2.w
 159: mul r3.w, r3.y, r3.y
 160: mad r4.w, r2.x, r3.w, -r2.x
 161: mad r2.x, r4.w, r2.x, l(1.000000)
 162: mul r3.w, r3.w, l(0.318310)
 163: mad r2.x, r2.x, r2.x, l(0.000000)
 164: div r2.x, r3.w, r2.x
 165: mul r2.x, r2.x, r2.w
 166: mul r2.x, r2.x, l(3.141593)
 167: mul r2.xz, r3.xxxx, r2.xxzx
 168: max r2.x, r2.x, l(0.000000)
 169: mad r2.w, r3.y, r3.y, l(1.000000)
 170: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 171: dp3 r3.x, r0.xyzx, r0.xyzx
 172: ne r3.x, r3.x, l(0.000000)
 173: and r3.x, r3.x, l(0x3f800000)
 174: mul r2.x, r2.x, r3.x
 175: mad r0.w, r0.w, cb0[9].x, -r1.w
 176: add_sat r0.w, r0.w, l(1.000000)
 177: mul r3.xyw, r2.zzzz, r6.xyxz
 178: mul r5.xyz, r6.xyzx, r2.xxxx
 179: add r1.w, -r2.y, l(1.000000)
 180: mul r2.x, r1.w, r1.w
 181: mul r2.x, r2.x, r2.x
 182: mul r1.w, r1.w, r2.x
 183: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 184: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 185: mul r2.xyz, r2.xyzx, r5.xyzx
 186: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 187: mul r2.xyz, r4.xyzx, r2.wwww
 188: add r3.xyw, -r0.xyxz, r0.wwww
 189: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 190: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 191: mov o0.w, l(1.000000)
 192: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[68], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  16: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  19: mov r1.w, cb4[0].x
  20: add o2.xyz, r1.xyzx, -cb3[r1.w + 64].xyzx
  21: mov o3.w, r1.x
  22: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  23: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  24: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  25: dp3 r1.x, r2.xyzx, r2.xyzx
  26: rsq r1.x, r1.x
  27: mul r2.xyz, r1.xxxx, r2.xyzx
  28: mov o3.xyz, r2.xyzx
  29: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  30: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  31: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  32: dp3 r1.x, r3.xyzx, r3.xyzx
  33: rsq r1.x, r1.x
  34: mul r3.xyz, r1.xxxx, r3.xyzx
  35: mul r4.xyz, r2.yzxy, r3.zxyz
  36: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r3.xyzx
  38: mul r1.x, v4.w, cb2[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r1.y
  41: mov o5.w, r1.z
  42: mov o6.xyzw, l(0,0,0,0)
  43: mul r0.y, r0.y, cb1[4].x
  44: mul r2.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  45: add r0.xy, r2.zzzz, r2.xwxx
  46: mul r1.xy, r0.wwww, cb3[r1.w + 66].zwzz
  47: mad o7.xy, r0.xyxx, cb3[r1.w + 66].xyxx, r1.xyxx
  48: mov o7.zw, r0.zzzw
  49: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 163 math, 13 temp registers, 6 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 3 sampler slot 6
Set 2D Texture "_OcclusionMap" to slot 4 sampler slot 5
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r2.z, r2.xyxx, r2.xyxx
  12: min r2.z, r2.z, l(1.000000)
  13: add r2.z, -r2.z, l(1.000000)
  14: sqrt r2.z, r2.z
  15: mul r3.xyz, r2.yyyy, v4.xyzx
  16: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  17: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  18: dp3 r2.w, r2.xyzx, r2.xyzx
  19: rsq r2.w, r2.w
  20: mul r2.xyz, r2.wwww, r2.xyzx
  21: dp3 r2.w, v2.xyzx, v2.xyzx
  22: rsq r2.w, r2.w
  23: mul r3.xyz, r2.wwww, v2.xyzx
  24: mov r4.x, v3.w
  25: mov r4.y, v4.w
  26: mov r4.z, v5.w
  27: mov r3.w, cb4[0].x
  28: add r5.xyz, -r4.xyzx, cb3[r3.w + 64].xyzx
  29: ishl r3.w, cb4[0].x, l(2)
  30: mov r6.x, cb3[r3.w + 8].z
  31: mov r6.y, cb3[r3.w + 9].z
  32: mov r6.z, cb3[r3.w + 10].z
  33: dp3 r3.w, r5.xyzx, r6.xyzx
  34: add r5.xyz, r4.xyzx, -cb2[25].xyzx
  35: dp3 r4.w, r5.xyzx, r5.xyzx
  36: sqrt r4.w, r4.w
  37: add r4.w, -r3.w, r4.w
  38: mad r3.w, cb2[25].w, r4.w, r3.w
  39: mad_sat r3.w, r3.w, cb2[24].z, cb2[24].w
  40: eq r4.w, cb6[0].x, l(1.000000)
  41: if_nz r4.w
  42:   eq r4.w, cb6[0].y, l(1.000000)
  43:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  44:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  45:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  46:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  47:   movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
  48:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  49:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  50:   mad r4.w, r5.y, l(0.250000), l(0.750000)
  51:   mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  52:   max r5.x, r4.w, r5.y
  53:   sample r5.xyzw, r5.xzwx, t7.xyzw, s1
  54: else 
  55:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  56: endif 
  57: dp4_sat r4.w, r5.xyzw, cb1[46].xyzw
  58: div r5.xy, v7.xyxx, v7.wwww
  59: sample r5.xyzw, r5.xyxx, t3.xyzw, s6
  60: add r4.w, r4.w, -r5.x
  61: mad r3.w, r3.w, r4.w, r5.x
  62: sample r5.xyzw, v1.xyxx, t4.xyzw, s5
  63: add r4.w, -cb0[9].y, l(1.000000)
  64: mad r4.w, r5.y, cb0[9].y, r4.w
  65: mad r5.x, -r0.w, cb0[9].x, l(1.000000)
  66: dp3 r5.y, r3.xyzx, r2.xyzx
  67: add r5.y, r5.y, r5.y
  68: mad r5.yzw, r2.xxyz, -r5.yyyy, r3.xxyz
  69: mul r6.xyz, r3.wwww, cb0[2].xyzx
  70: lt r3.w, l(0.000000), cb5[2].w
  71: if_nz r3.w
  72:   dp3 r3.w, r5.yzwy, r5.yzwy
  73:   rsq r3.w, r3.w
  74:   mul r7.xyz, r3.wwww, r5.yzwy
  75:   add r8.xyz, -r4.xyzx, cb5[0].xyzx
  76:   div r8.xyz, r8.xyzx, r7.xyzx
  77:   add r9.xyz, -r4.xyzx, cb5[1].xyzx
  78:   div r9.xyz, r9.xyzx, r7.xyzx
  79:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  80:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  81:   min r3.w, r8.y, r8.x
  82:   min r3.w, r8.z, r3.w
  83:   add r8.xyz, r4.xyzx, -cb5[2].xyzx
  84:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  85: else 
  86:   mov r7.xyz, r5.yzwy
  87: endif 
  88: mad r3.w, -r5.x, l(0.700000), l(1.700000)
  89: mul r3.w, r3.w, r5.x
  90: mul r3.w, r3.w, l(6.000000)
  91: sample_l r7.xyzw, r7.xyzx, t5.xyzw, s0, r3.w
  92: add r6.w, r7.w, l(-1.000000)
  93: mad r6.w, cb5[3].w, r6.w, l(1.000000)
  94: log r6.w, r6.w
  95: mul r6.w, r6.w, cb5[3].y
  96: exp r6.w, r6.w
  97: mul r6.w, r6.w, cb5[3].x
  98: mul r8.xyz, r7.xyzx, r6.wwww
  99: lt r7.w, cb5[1].w, l(0.999990)
 100: if_nz r7.w
 101:   lt r7.w, l(0.000000), cb5[6].w
 102:   if_nz r7.w
 103:     dp3 r7.w, r5.yzwy, r5.yzwy
 104:     rsq r7.w, r7.w
 105:     mul r9.xyz, r5.yzwy, r7.wwww
 106:     add r10.xyz, -r4.xyzx, cb5[4].xyzx
 107:     div r10.xyz, r10.xyzx, r9.xyzx
 108:     add r11.xyz, -r4.xyzx, cb5[5].xyzx
 109:     div r11.xyz, r11.xyzx, r9.xyzx
 110:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 111:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 112:     min r7.w, r10.y, r10.x
 113:     min r7.w, r10.z, r7.w
 114:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 115:     mad r5.yzw, r9.xxyz, r7.wwww, r4.xxyz
 116:   endif 
 117:   sample_l r9.xyzw, r5.yzwy, t6.xyzw, s0, r3.w
 118:   add r3.w, r9.w, l(-1.000000)
 119:   mad r3.w, cb5[7].w, r3.w, l(1.000000)
 120:   log r3.w, r3.w
 121:   mul r3.w, r3.w, cb5[7].y
 122:   exp r3.w, r3.w
 123:   mul r3.w, r3.w, cb5[7].x
 124:   mul r4.xyz, r9.xyzx, r3.wwww
 125:   mad r5.yzw, r6.wwww, r7.xxyz, -r4.xxyz
 126:   mad r8.xyz, cb5[1].wwww, r5.yzwy, r4.xyzx
 127: endif 
 128: mul r4.xyz, r4.wwww, r8.xyzx
 129: mad r5.yzw, -v2.xxyz, r2.wwww, cb1[0].xxyz
 130: dp3 r2.w, r5.yzwy, r5.yzwy
 131: max r2.w, r2.w, l(0.001000)
 132: rsq r2.w, r2.w
 133: mul r5.yzw, r2.wwww, r5.yyzw
 134: dp3 r2.w, r2.xyzx, -r3.xyzx
 135: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 136: dp3_sat r2.x, r2.xyzx, r5.yzwy
 137: dp3_sat r2.y, cb1[0].xyzx, r5.yzwy
 138: mul r2.z, r2.y, r2.y
 139: dp2 r2.z, r2.zzzz, r5.xxxx
 140: add r2.z, r2.z, l(-0.500000)
 141: add r3.y, -r3.x, l(1.000000)
 142: mul r3.z, r3.y, r3.y
 143: mul r3.z, r3.z, r3.z
 144: mul r3.y, r3.y, r3.z
 145: mad r3.y, r2.z, r3.y, l(1.000000)
 146: add r3.z, -|r2.w|, l(1.000000)
 147: mul r3.w, r3.z, r3.z
 148: mul r3.w, r3.w, r3.w
 149: mul r3.z, r3.z, r3.w
 150: mad r2.z, r2.z, r3.z, l(1.000000)
 151: mul r2.z, r2.z, r3.y
 152: mul r3.y, r5.x, r5.x
 153: max r3.y, r3.y, l(0.002000)
 154: add r3.w, -r3.y, l(1.000000)
 155: mad r4.w, |r2.w|, r3.w, r3.y
 156: mad r3.w, r3.x, r3.w, r3.y
 157: mul r2.w, |r2.w|, r3.w
 158: mad r2.w, r3.x, r4.w, r2.w
 159: add r2.w, r2.w, l(0.000010)
 160: div r2.w, l(0.500000), r2.w
 161: mul r3.w, r3.y, r3.y
 162: mad r4.w, r2.x, r3.w, -r2.x
 163: mad r2.x, r4.w, r2.x, l(1.000000)
 164: mul r3.w, r3.w, l(0.318310)
 165: mad r2.x, r2.x, r2.x, l(0.000000)
 166: div r2.x, r3.w, r2.x
 167: mul r2.x, r2.x, r2.w
 168: mul r2.x, r2.x, l(3.141593)
 169: mul r2.xz, r3.xxxx, r2.xxzx
 170: max r2.x, r2.x, l(0.000000)
 171: mad r2.w, r3.y, r3.y, l(1.000000)
 172: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 173: dp3 r3.x, r0.xyzx, r0.xyzx
 174: ne r3.x, r3.x, l(0.000000)
 175: and r3.x, r3.x, l(0x3f800000)
 176: mul r2.x, r2.x, r3.x
 177: mad r0.w, r0.w, cb0[9].x, -r1.w
 178: add_sat r0.w, r0.w, l(1.000000)
 179: mul r3.xyw, r2.zzzz, r6.xyxz
 180: mul r5.xyz, r6.xyzx, r2.xxxx
 181: add r1.w, -r2.y, l(1.000000)
 182: mul r2.x, r1.w, r1.w
 183: mul r2.x, r2.x, r2.x
 184: mul r1.w, r1.w, r2.x
 185: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 186: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 187: mul r2.xyz, r2.xyzx, r5.xyzx
 188: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 189: mul r2.xyz, r4.xyzx, r2.wwww
 190: add r3.xyw, -r0.xyxz, r0.wwww
 191: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 192: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 193: mov o0.w, l(1.000000)
 194: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul o5.xyz, r1.wwww, r1.xyzx
  29: mov o6.xyzw, l(0,0,0,0)
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 152 math, 12 temp registers, 4 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 12
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r2.xyz, r1.wwww, v2.xyzx
  12: mov r3.x, v3.w
  13: mov r3.y, v4.w
  14: mov r3.z, v5.w
  15: add r4.xyz, -r3.xyzx, cb1[4].xyzx
  16: mov r5.x, cb4[9].z
  17: mov r5.y, cb4[10].z
  18: mov r5.z, cb4[11].z
  19: dp3 r2.w, r4.xyzx, r5.xyzx
  20: add r4.xyz, r3.xyzx, -cb3[25].xyzx
  21: dp3 r3.w, r4.xyzx, r4.xyzx
  22: sqrt r3.w, r3.w
  23: add r3.w, -r2.w, r3.w
  24: mad r2.w, cb3[25].w, r3.w, r2.w
  25: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  26: eq r3.w, cb6[0].x, l(1.000000)
  27: if_nz r3.w
  28:   eq r3.w, cb6[0].y, l(1.000000)
  29:   mul r4.xyz, v4.wwww, cb6[2].xyzx
  30:   mad r4.xyz, cb6[1].xyzx, v3.wwww, r4.xyzx
  31:   mad r4.xyz, cb6[3].xyzx, v5.wwww, r4.xyzx
  32:   add r4.xyz, r4.xyzx, cb6[4].xyzx
  33:   movc r4.xyz, r3.wwww, r4.xyzx, r3.xyzx
  34:   add r4.xyz, r4.xyzx, -cb6[6].xyzx
  35:   mul r4.yzw, r4.xxyz, cb6[5].xxyz
  36:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  37:   mad r4.y, cb6[0].z, l(0.500000), l(0.750000)
  38:   max r4.x, r3.w, r4.y
  39:   sample r4.xyzw, r4.xzwx, t5.xyzw, s1
  40: else 
  41:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  42: endif 
  43: dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
  44: div r4.xy, v7.xyxx, v7.wwww
  45: sample r4.xyzw, r4.xyxx, t1.xyzw, s4
  46: add r3.w, r3.w, -r4.x
  47: mad r2.w, r2.w, r3.w, r4.x
  48: sample r4.xyzw, v1.xyxx, t2.xyzw, s3
  49: add r3.w, -cb0[9].y, l(1.000000)
  50: mad r3.w, r4.y, cb0[9].y, r3.w
  51: add r4.x, -cb0[8].w, l(1.000000)
  52: dp3 r4.y, r2.xyzx, r1.xyzx
  53: add r4.y, r4.y, r4.y
  54: mad r4.yzw, r1.xxyz, -r4.yyyy, r2.xxyz
  55: mul r5.xyz, r2.wwww, cb0[2].xyzx
  56: lt r2.w, l(0.000000), cb5[2].w
  57: if_nz r2.w
  58:   dp3 r2.w, r4.yzwy, r4.yzwy
  59:   rsq r2.w, r2.w
  60:   mul r6.xyz, r2.wwww, r4.yzwy
  61:   add r7.xyz, -r3.xyzx, cb5[0].xyzx
  62:   div r7.xyz, r7.xyzx, r6.xyzx
  63:   add r8.xyz, -r3.xyzx, cb5[1].xyzx
  64:   div r8.xyz, r8.xyzx, r6.xyzx
  65:   lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  66:   movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  67:   min r2.w, r7.y, r7.x
  68:   min r2.w, r7.z, r2.w
  69:   add r7.xyz, r3.xyzx, -cb5[2].xyzx
  70:   mad r6.xyz, r6.xyzx, r2.wwww, r7.xyzx
  71: else 
  72:   mov r6.xyz, r4.yzwy
  73: endif 
  74: mad r2.w, -r4.x, l(0.700000), l(1.700000)
  75: mul r2.w, r2.w, r4.x
  76: mul r2.w, r2.w, l(6.000000)
  77: sample_l r6.xyzw, r6.xyzx, t3.xyzw, s0, r2.w
  78: add r5.w, r6.w, l(-1.000000)
  79: mad r5.w, cb5[3].w, r5.w, l(1.000000)
  80: log r5.w, r5.w
  81: mul r5.w, r5.w, cb5[3].y
  82: exp r5.w, r5.w
  83: mul r5.w, r5.w, cb5[3].x
  84: mul r7.xyz, r6.xyzx, r5.wwww
  85: lt r6.w, cb5[1].w, l(0.999990)
  86: if_nz r6.w
  87:   lt r6.w, l(0.000000), cb5[6].w
  88:   if_nz r6.w
  89:     dp3 r6.w, r4.yzwy, r4.yzwy
  90:     rsq r6.w, r6.w
  91:     mul r8.xyz, r4.yzwy, r6.wwww
  92:     add r9.xyz, -r3.xyzx, cb5[4].xyzx
  93:     div r9.xyz, r9.xyzx, r8.xyzx
  94:     add r10.xyz, -r3.xyzx, cb5[5].xyzx
  95:     div r10.xyz, r10.xyzx, r8.xyzx
  96:     lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  97:     movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  98:     min r6.w, r9.y, r9.x
  99:     min r6.w, r9.z, r6.w
 100:     add r3.xyz, r3.xyzx, -cb5[6].xyzx
 101:     mad r4.yzw, r8.xxyz, r6.wwww, r3.xxyz
 102:   endif 
 103:   sample_l r8.xyzw, r4.yzwy, t4.xyzw, s0, r2.w
 104:   add r2.w, r8.w, l(-1.000000)
 105:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 106:   log r2.w, r2.w
 107:   mul r2.w, r2.w, cb5[7].y
 108:   exp r2.w, r2.w
 109:   mul r2.w, r2.w, cb5[7].x
 110:   mul r3.xyz, r8.xyzx, r2.wwww
 111:   mad r4.yzw, r5.wwww, r6.xxyz, -r3.xxyz
 112:   mad r7.xyz, cb5[1].wwww, r4.yzwy, r3.xyzx
 113: endif 
 114: mul r3.xyz, r3.wwww, r7.xyzx
 115: mad r4.yzw, -v2.xxyz, r1.wwww, cb2[0].xxyz
 116: dp3 r1.w, r4.yzwy, r4.yzwy
 117: max r1.w, r1.w, l(0.001000)
 118: rsq r1.w, r1.w
 119: mul r4.yzw, r1.wwww, r4.yyzw
 120: dp3 r1.w, r1.xyzx, -r2.xyzx
 121: dp3_sat r2.x, r1.xyzx, cb2[0].xyzx
 122: dp3_sat r1.x, r1.xyzx, r4.yzwy
 123: dp3_sat r1.y, cb2[0].xyzx, r4.yzwy
 124: mul r1.z, r1.y, r1.y
 125: dp2 r1.z, r1.zzzz, r4.xxxx
 126: add r1.z, r1.z, l(-0.500000)
 127: add r2.y, -r2.x, l(1.000000)
 128: mul r2.z, r2.y, r2.y
 129: mul r2.z, r2.z, r2.z
 130: mul r2.y, r2.y, r2.z
 131: mad r2.y, r1.z, r2.y, l(1.000000)
 132: add r2.z, -|r1.w|, l(1.000000)
 133: mul r2.w, r2.z, r2.z
 134: mul r2.w, r2.w, r2.w
 135: mul r2.z, r2.z, r2.w
 136: mad r1.z, r1.z, r2.z, l(1.000000)
 137: mul r1.z, r1.z, r2.y
 138: mul r2.y, r4.x, r4.x
 139: max r2.y, r2.y, l(0.002000)
 140: add r2.w, -r2.y, l(1.000000)
 141: mad r3.w, |r1.w|, r2.w, r2.y
 142: mad r2.w, r2.x, r2.w, r2.y
 143: mul r1.w, |r1.w|, r2.w
 144: mad r1.w, r2.x, r3.w, r1.w
 145: add r1.w, r1.w, l(0.000010)
 146: div r1.w, l(0.500000), r1.w
 147: mul r2.w, r2.y, r2.y
 148: mad r3.w, r1.x, r2.w, -r1.x
 149: mad r1.x, r3.w, r1.x, l(1.000000)
 150: mul r2.w, r2.w, l(0.318310)
 151: mad r1.x, r1.x, r1.x, l(0.000000)
 152: div r1.x, r2.w, r1.x
 153: mul r1.x, r1.x, r1.w
 154: mul r1.x, r1.x, l(3.141593)
 155: mul r1.xz, r2.xxxx, r1.xxzx
 156: max r1.x, r1.x, l(0.000000)
 157: mad r1.w, r2.y, r2.y, l(1.000000)
 158: div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
 159: dp3 r2.x, cb0[3].xyzx, cb0[3].xyzx
 160: ne r2.x, r2.x, l(0.000000)
 161: and r2.x, r2.x, l(0x3f800000)
 162: mul r1.x, r1.x, r2.x
 163: add r0.w, -r0.w, l(1.000000)
 164: add_sat r0.w, r0.w, cb0[8].w
 165: mul r2.xyw, r1.zzzz, r5.xyxz
 166: mul r4.xyz, r5.xyzx, r1.xxxx
 167: add r1.x, -r1.y, l(1.000000)
 168: mul r1.y, r1.x, r1.x
 169: mul r1.y, r1.y, r1.y
 170: mul r1.x, r1.x, r1.y
 171: add r5.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 172: mad r1.xyz, r5.xyzx, r1.xxxx, cb0[3].xyzx
 173: mul r1.xyz, r1.xyzx, r4.xyzx
 174: mad r0.xyz, r0.xyzx, r2.xywx, r1.xyzx
 175: mul r1.xyz, r3.xyzx, r1.wwww
 176: add r2.xyw, r0.wwww, -cb0[3].xyxz
 177: mad r2.xyz, r2.zzzz, r2.xywx, cb0[3].xyzx
 178: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
 179: mov o0.w, l(1.000000)
 180: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[68], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  16: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  19: mov r2.x, cb4[0].x
  20: add o2.xyz, r1.xyzx, -cb3[r2.x + 64].xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mov o6.xyzw, l(0,0,0,0)
  32: mul r0.y, r0.y, cb1[4].x
  33: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  34: add r0.xy, r1.zzzz, r1.xwxx
  35: mul r1.xy, r0.wwww, cb3[r2.x + 66].zwzz
  36: mad o7.xy, r0.xyxx, cb3[r2.x + 66].xyxx, r1.xyxx
  37: mov o7.zw, r0.zzzw
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 153 math, 12 temp registers, 4 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 12
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r2.xyz, r1.wwww, v2.xyzx
  12: mov r3.x, v3.w
  13: mov r3.y, v4.w
  14: mov r3.z, v5.w
  15: mov r2.w, cb4[0].x
  16: add r4.xyz, -r3.xyzx, cb3[r2.w + 64].xyzx
  17: ishl r2.w, cb4[0].x, l(2)
  18: mov r5.x, cb3[r2.w + 8].z
  19: mov r5.y, cb3[r2.w + 9].z
  20: mov r5.z, cb3[r2.w + 10].z
  21: dp3 r2.w, r4.xyzx, r5.xyzx
  22: add r4.xyz, r3.xyzx, -cb2[25].xyzx
  23: dp3 r3.w, r4.xyzx, r4.xyzx
  24: sqrt r3.w, r3.w
  25: add r3.w, -r2.w, r3.w
  26: mad r2.w, cb2[25].w, r3.w, r2.w
  27: mad_sat r2.w, r2.w, cb2[24].z, cb2[24].w
  28: eq r3.w, cb6[0].x, l(1.000000)
  29: if_nz r3.w
  30:   eq r3.w, cb6[0].y, l(1.000000)
  31:   mul r4.xyz, v4.wwww, cb6[2].xyzx
  32:   mad r4.xyz, cb6[1].xyzx, v3.wwww, r4.xyzx
  33:   mad r4.xyz, cb6[3].xyzx, v5.wwww, r4.xyzx
  34:   add r4.xyz, r4.xyzx, cb6[4].xyzx
  35:   movc r4.xyz, r3.wwww, r4.xyzx, r3.xyzx
  36:   add r4.xyz, r4.xyzx, -cb6[6].xyzx
  37:   mul r4.yzw, r4.xxyz, cb6[5].xxyz
  38:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  39:   mad r4.y, cb6[0].z, l(0.500000), l(0.750000)
  40:   max r4.x, r3.w, r4.y
  41:   sample r4.xyzw, r4.xzwx, t5.xyzw, s1
  42: else 
  43:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r3.w, r4.xyzw, cb1[46].xyzw
  46: div r4.xy, v7.xyxx, v7.wwww
  47: sample r4.xyzw, r4.xyxx, t1.xyzw, s4
  48: add r3.w, r3.w, -r4.x
  49: mad r2.w, r2.w, r3.w, r4.x
  50: sample r4.xyzw, v1.xyxx, t2.xyzw, s3
  51: add r3.w, -cb0[9].y, l(1.000000)
  52: mad r3.w, r4.y, cb0[9].y, r3.w
  53: add r4.x, -cb0[8].w, l(1.000000)
  54: dp3 r4.y, r2.xyzx, r1.xyzx
  55: add r4.y, r4.y, r4.y
  56: mad r4.yzw, r1.xxyz, -r4.yyyy, r2.xxyz
  57: mul r5.xyz, r2.wwww, cb0[2].xyzx
  58: lt r2.w, l(0.000000), cb5[2].w
  59: if_nz r2.w
  60:   dp3 r2.w, r4.yzwy, r4.yzwy
  61:   rsq r2.w, r2.w
  62:   mul r6.xyz, r2.wwww, r4.yzwy
  63:   add r7.xyz, -r3.xyzx, cb5[0].xyzx
  64:   div r7.xyz, r7.xyzx, r6.xyzx
  65:   add r8.xyz, -r3.xyzx, cb5[1].xyzx
  66:   div r8.xyz, r8.xyzx, r6.xyzx
  67:   lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  68:   movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  69:   min r2.w, r7.y, r7.x
  70:   min r2.w, r7.z, r2.w
  71:   add r7.xyz, r3.xyzx, -cb5[2].xyzx
  72:   mad r6.xyz, r6.xyzx, r2.wwww, r7.xyzx
  73: else 
  74:   mov r6.xyz, r4.yzwy
  75: endif 
  76: mad r2.w, -r4.x, l(0.700000), l(1.700000)
  77: mul r2.w, r2.w, r4.x
  78: mul r2.w, r2.w, l(6.000000)
  79: sample_l r6.xyzw, r6.xyzx, t3.xyzw, s0, r2.w
  80: add r5.w, r6.w, l(-1.000000)
  81: mad r5.w, cb5[3].w, r5.w, l(1.000000)
  82: log r5.w, r5.w
  83: mul r5.w, r5.w, cb5[3].y
  84: exp r5.w, r5.w
  85: mul r5.w, r5.w, cb5[3].x
  86: mul r7.xyz, r6.xyzx, r5.wwww
  87: lt r6.w, cb5[1].w, l(0.999990)
  88: if_nz r6.w
  89:   lt r6.w, l(0.000000), cb5[6].w
  90:   if_nz r6.w
  91:     dp3 r6.w, r4.yzwy, r4.yzwy
  92:     rsq r6.w, r6.w
  93:     mul r8.xyz, r4.yzwy, r6.wwww
  94:     add r9.xyz, -r3.xyzx, cb5[4].xyzx
  95:     div r9.xyz, r9.xyzx, r8.xyzx
  96:     add r10.xyz, -r3.xyzx, cb5[5].xyzx
  97:     div r10.xyz, r10.xyzx, r8.xyzx
  98:     lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  99:     movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
 100:     min r6.w, r9.y, r9.x
 101:     min r6.w, r9.z, r6.w
 102:     add r3.xyz, r3.xyzx, -cb5[6].xyzx
 103:     mad r4.yzw, r8.xxyz, r6.wwww, r3.xxyz
 104:   endif 
 105:   sample_l r8.xyzw, r4.yzwy, t4.xyzw, s0, r2.w
 106:   add r2.w, r8.w, l(-1.000000)
 107:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 108:   log r2.w, r2.w
 109:   mul r2.w, r2.w, cb5[7].y
 110:   exp r2.w, r2.w
 111:   mul r2.w, r2.w, cb5[7].x
 112:   mul r3.xyz, r8.xyzx, r2.wwww
 113:   mad r4.yzw, r5.wwww, r6.xxyz, -r3.xxyz
 114:   mad r7.xyz, cb5[1].wwww, r4.yzwy, r3.xyzx
 115: endif 
 116: mul r3.xyz, r3.wwww, r7.xyzx
 117: mad r4.yzw, -v2.xxyz, r1.wwww, cb1[0].xxyz
 118: dp3 r1.w, r4.yzwy, r4.yzwy
 119: max r1.w, r1.w, l(0.001000)
 120: rsq r1.w, r1.w
 121: mul r4.yzw, r1.wwww, r4.yyzw
 122: dp3 r1.w, r1.xyzx, -r2.xyzx
 123: dp3_sat r2.x, r1.xyzx, cb1[0].xyzx
 124: dp3_sat r1.x, r1.xyzx, r4.yzwy
 125: dp3_sat r1.y, cb1[0].xyzx, r4.yzwy
 126: mul r1.z, r1.y, r1.y
 127: dp2 r1.z, r1.zzzz, r4.xxxx
 128: add r1.z, r1.z, l(-0.500000)
 129: add r2.y, -r2.x, l(1.000000)
 130: mul r2.z, r2.y, r2.y
 131: mul r2.z, r2.z, r2.z
 132: mul r2.y, r2.y, r2.z
 133: mad r2.y, r1.z, r2.y, l(1.000000)
 134: add r2.z, -|r1.w|, l(1.000000)
 135: mul r2.w, r2.z, r2.z
 136: mul r2.w, r2.w, r2.w
 137: mul r2.z, r2.z, r2.w
 138: mad r1.z, r1.z, r2.z, l(1.000000)
 139: mul r1.z, r1.z, r2.y
 140: mul r2.y, r4.x, r4.x
 141: max r2.y, r2.y, l(0.002000)
 142: add r2.w, -r2.y, l(1.000000)
 143: mad r3.w, |r1.w|, r2.w, r2.y
 144: mad r2.w, r2.x, r2.w, r2.y
 145: mul r1.w, |r1.w|, r2.w
 146: mad r1.w, r2.x, r3.w, r1.w
 147: add r1.w, r1.w, l(0.000010)
 148: div r1.w, l(0.500000), r1.w
 149: mul r2.w, r2.y, r2.y
 150: mad r3.w, r1.x, r2.w, -r1.x
 151: mad r1.x, r3.w, r1.x, l(1.000000)
 152: mul r2.w, r2.w, l(0.318310)
 153: mad r1.x, r1.x, r1.x, l(0.000000)
 154: div r1.x, r2.w, r1.x
 155: mul r1.x, r1.x, r1.w
 156: mul r1.x, r1.x, l(3.141593)
 157: mul r1.xz, r2.xxxx, r1.xxzx
 158: max r1.x, r1.x, l(0.000000)
 159: mad r1.w, r2.y, r2.y, l(1.000000)
 160: div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
 161: dp3 r2.x, cb0[3].xyzx, cb0[3].xyzx
 162: ne r2.x, r2.x, l(0.000000)
 163: and r2.x, r2.x, l(0x3f800000)
 164: mul r1.x, r1.x, r2.x
 165: add r0.w, -r0.w, l(1.000000)
 166: add_sat r0.w, r0.w, cb0[8].w
 167: mul r2.xyw, r1.zzzz, r5.xyxz
 168: mul r4.xyz, r5.xyzx, r1.xxxx
 169: add r1.x, -r1.y, l(1.000000)
 170: mul r1.y, r1.x, r1.x
 171: mul r1.y, r1.y, r1.y
 172: mul r1.x, r1.x, r1.y
 173: add r5.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 174: mad r1.xyz, r5.xyzx, r1.xxxx, cb0[3].xyzx
 175: mul r1.xyz, r1.xyzx, r4.xyzx
 176: mad r0.xyz, r0.xyzx, r2.xywx, r1.xyzx
 177: mul r1.xyz, r3.xyzx, r1.wwww
 178: add r2.xyw, r0.wwww, -cb0[3].xyxz
 179: mad r2.xyz, r2.zzzz, r2.xywx, cb0[3].xyzx
 180: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
 181: mov o0.w, l(1.000000)
 182: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul r1.xyz, r1.wwww, r1.xyzx
  29: mov o5.xyz, r1.xyzx
  30: mul r1.w, r1.y, r1.y
  31: mad r1.w, r1.x, r1.x, -r1.w
  32: mul r2.xyzw, r1.yzzx, r1.xyzz
  33: dp4 r1.x, cb2[42].xyzw, r2.xyzw
  34: dp4 r1.y, cb2[43].xyzw, r2.xyzw
  35: dp4 r1.z, cb2[44].xyzw, r2.xyzw
  36: mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
  37: mov o6.w, l(0)
  38: mul r0.y, r0.y, cb1[5].x
  39: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  40: mov o7.zw, r0.zzzw
  41: add o7.xy, r1.zzzz, r1.xwxx
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 175 math, 15 temp registers, 8 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 5
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r3.x, v2.xyzx, v2.xyzx
  11: rsq r3.x, r3.x
  12: mul r3.yzw, r3.xxxx, v2.xxyz
  13: mov r4.x, v3.w
  14: mov r4.y, v4.w
  15: mov r4.z, v5.w
  16: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r4.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  22: dp3 r5.x, r5.xyzx, r5.xyzx
  23: sqrt r5.x, r5.x
  24: add r5.x, -r4.w, r5.x
  25: mad r4.w, cb3[25].w, r5.x, r4.w
  26: mad_sat r4.w, r4.w, cb3[24].z, cb3[24].w
  27: eq r5.x, cb6[0].x, l(1.000000)
  28: if_nz r5.x
  29:   eq r5.y, cb6[0].y, l(1.000000)
  30:   mul r6.xyz, v4.wwww, cb6[2].xyzx
  31:   mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
  32:   mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
  33:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  34:   movc r5.yzw, r5.yyyy, r6.xxyz, r4.xxyz
  35:   add r5.yzw, r5.yyzw, -cb6[6].xxyz
  36:   mul r6.yzw, r5.yyzw, cb6[5].xxyz
  37:   mad r5.y, r6.y, l(0.250000), l(0.750000)
  38:   mad r5.z, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r6.x, r5.z, r5.y
  40:   sample r6.xyzw, r6.xzwx, t6.xyzw, s1
  41: else 
  42:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r5.y, r6.xyzw, cb2[46].xyzw
  45: div r5.zw, v7.xxxy, v7.wwww
  46: sample r6.xyzw, r5.zwzz, t2.xyzw, s5
  47: add r5.y, r5.y, -r6.x
  48: mad r4.w, r4.w, r5.y, r6.x
  49: sample r6.xyzw, v1.xyxx, t3.xyzw, s4
  50: add r5.y, -cb0[9].y, l(1.000000)
  51: mad r5.y, r6.y, cb0[9].y, r5.y
  52: mad r5.z, -r0.w, cb0[9].x, l(1.000000)
  53: dp3 r5.w, r3.yzwy, r2.xyzx
  54: add r5.w, r5.w, r5.w
  55: mad r6.xyz, r2.xyzx, -r5.wwww, r3.yzwy
  56: mul r7.xyz, r4.wwww, cb0[2].xyzx
  57: if_nz r5.x
  58:   eq r4.w, cb6[0].y, l(1.000000)
  59:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  60:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  61:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  62:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  63:   movc r8.xyz, r4.wwww, r8.xyzx, r4.xyzx
  64:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  65:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  66:   mul r4.w, r8.y, l(0.250000)
  67:   mul r5.x, cb6[0].z, l(0.500000)
  68:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  69:   max r4.w, r4.w, r5.x
  70:   min r8.x, r5.w, r4.w
  71:   sample r9.xyzw, r8.xzwx, t6.xyzw, s1
  72:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  73:   sample r10.xyzw, r10.xyzx, t6.xyzw, s1
  74:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  75:   sample r8.xyzw, r8.xyzx, t6.xyzw, s1
  76:   mov r2.w, l(1.000000)
  77:   dp4 r9.x, r9.xyzw, r2.xyzw
  78:   dp4 r9.y, r10.xyzw, r2.xyzw
  79:   dp4 r9.z, r8.xyzw, r2.xyzw
  80: else 
  81:   mov r2.w, l(1.000000)
  82:   dp4 r9.x, cb2[39].xyzw, r2.xyzw
  83:   dp4 r9.y, cb2[40].xyzw, r2.xyzw
  84:   dp4 r9.z, cb2[41].xyzw, r2.xyzw
  85: endif 
  86: add r8.xyz, r9.xyzx, v6.xyzx
  87: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  88: lt r2.w, l(0.000000), cb5[2].w
  89: if_nz r2.w
  90:   dp3 r2.w, r6.xyzx, r6.xyzx
  91:   rsq r2.w, r2.w
  92:   mul r9.xyz, r2.wwww, r6.xyzx
  93:   add r10.xyz, -r4.xyzx, cb5[0].xyzx
  94:   div r10.xyz, r10.xyzx, r9.xyzx
  95:   add r11.xyz, -r4.xyzx, cb5[1].xyzx
  96:   div r11.xyz, r11.xyzx, r9.xyzx
  97:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  98:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  99:   min r2.w, r10.y, r10.x
 100:   min r2.w, r10.z, r2.w
 101:   add r10.xyz, r4.xyzx, -cb5[2].xyzx
 102:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 103: else 
 104:   mov r9.xyz, r6.xyzx
 105: endif 
 106: mad r2.w, -r5.z, l(0.700000), l(1.700000)
 107: mul r2.w, r2.w, r5.z
 108: mul r2.w, r2.w, l(6.000000)
 109: sample_l r9.xyzw, r9.xyzx, t4.xyzw, s0, r2.w
 110: add r4.w, r9.w, l(-1.000000)
 111: mad r4.w, cb5[3].w, r4.w, l(1.000000)
 112: log r4.w, r4.w
 113: mul r4.w, r4.w, cb5[3].y
 114: exp r4.w, r4.w
 115: mul r4.w, r4.w, cb5[3].x
 116: mul r10.xyz, r9.xyzx, r4.wwww
 117: lt r5.x, cb5[1].w, l(0.999990)
 118: if_nz r5.x
 119:   lt r5.x, l(0.000000), cb5[6].w
 120:   if_nz r5.x
 121:     dp3 r5.x, r6.xyzx, r6.xyzx
 122:     rsq r5.x, r5.x
 123:     mul r11.xyz, r5.xxxx, r6.xyzx
 124:     add r12.xyz, -r4.xyzx, cb5[4].xyzx
 125:     div r12.xyz, r12.xyzx, r11.xyzx
 126:     add r13.xyz, -r4.xyzx, cb5[5].xyzx
 127:     div r13.xyz, r13.xyzx, r11.xyzx
 128:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 129:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 130:     min r5.x, r12.y, r12.x
 131:     min r5.x, r12.z, r5.x
 132:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 133:     mad r6.xyz, r11.xyzx, r5.xxxx, r4.xyzx
 134:   endif 
 135:   sample_l r6.xyzw, r6.xyzx, t5.xyzw, s0, r2.w
 136:   add r2.w, r6.w, l(-1.000000)
 137:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 138:   log r2.w, r2.w
 139:   mul r2.w, r2.w, cb5[7].y
 140:   exp r2.w, r2.w
 141:   mul r2.w, r2.w, cb5[7].x
 142:   mul r4.xyz, r6.xyzx, r2.wwww
 143:   mad r6.xyz, r4.wwww, r9.xyzx, -r4.xyzx
 144:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
 145: endif 
 146: mul r4.xyz, r5.yyyy, r10.xyzx
 147: mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
 148: dp3 r2.w, r6.xyzx, r6.xyzx
 149: max r2.w, r2.w, l(0.001000)
 150: rsq r2.w, r2.w
 151: mul r6.xyz, r2.wwww, r6.xyzx
 152: dp3 r2.w, r2.xyzx, -r3.yzwy
 153: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 154: dp3_sat r2.x, r2.xyzx, r6.xyzx
 155: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 156: mul r2.z, r2.y, r2.y
 157: dp2 r2.z, r2.zzzz, r5.zzzz
 158: add r2.z, r2.z, l(-0.500000)
 159: add r3.y, -r3.x, l(1.000000)
 160: mul r3.z, r3.y, r3.y
 161: mul r3.z, r3.z, r3.z
 162: mul r3.y, r3.y, r3.z
 163: mad r3.y, r2.z, r3.y, l(1.000000)
 164: add r3.z, -|r2.w|, l(1.000000)
 165: mul r3.w, r3.z, r3.z
 166: mul r3.w, r3.w, r3.w
 167: mul r3.z, r3.z, r3.w
 168: mad r2.z, r2.z, r3.z, l(1.000000)
 169: mul r2.z, r2.z, r3.y
 170: mul r3.y, r5.z, r5.z
 171: max r3.y, r3.y, l(0.002000)
 172: add r3.w, -r3.y, l(1.000000)
 173: mad r4.w, |r2.w|, r3.w, r3.y
 174: mad r3.w, r3.x, r3.w, r3.y
 175: mul r2.w, |r2.w|, r3.w
 176: mad r2.w, r3.x, r4.w, r2.w
 177: add r2.w, r2.w, l(0.000010)
 178: div r2.w, l(0.500000), r2.w
 179: mul r3.w, r3.y, r3.y
 180: mad r4.w, r2.x, r3.w, -r2.x
 181: mad r2.x, r4.w, r2.x, l(1.000000)
 182: mul r3.w, r3.w, l(0.318310)
 183: mad r2.x, r2.x, r2.x, l(0.000000)
 184: div r2.x, r3.w, r2.x
 185: mul r2.x, r2.x, r2.w
 186: mul r2.x, r2.x, l(3.141593)
 187: mul r2.xz, r3.xxxx, r2.xxzx
 188: max r2.x, r2.x, l(0.000000)
 189: mad r2.w, r3.y, r3.y, l(1.000000)
 190: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 191: dp3 r3.x, r0.xyzx, r0.xyzx
 192: ne r3.x, r3.x, l(0.000000)
 193: and r3.x, r3.x, l(0x3f800000)
 194: mul r2.x, r2.x, r3.x
 195: mad r0.w, r0.w, cb0[9].x, -r1.w
 196: add_sat r0.w, r0.w, l(1.000000)
 197: mul r3.xyw, r2.zzzz, r7.xyxz
 198: mad r3.xyw, r8.xyxz, r5.yyyy, r3.xyxw
 199: mul r5.xyz, r7.xyzx, r2.xxxx
 200: add r1.w, -r2.y, l(1.000000)
 201: mul r2.x, r1.w, r1.w
 202: mul r2.x, r2.x, r2.x
 203: mul r1.w, r1.w, r2.x
 204: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 205: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 206: mul r2.xyz, r2.xyzx, r5.xyzx
 207: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 208: mul r2.xyz, r4.xyzx, r2.wwww
 209: add r3.xyw, -r0.xyxz, r0.wwww
 210: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 211: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 212: mov o0.w, l(1.000000)
 213: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 4 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 5 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[68], dynamicIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: ishl r1.x, cb5[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb4[r1.x + 25].xyzw
   6: mad r2.xyzw, cb4[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb4[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  16: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  19: mov r2.x, cb5[0].x
  20: add o2.xyz, r1.xyzx, -cb4[r2.x + 64].xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul r1.xyz, r1.wwww, r1.xyzx
  31: mov o5.xyz, r1.xyzx
  32: mul r1.w, r1.y, r1.y
  33: mad r1.w, r1.x, r1.x, -r1.w
  34: mul r3.xyzw, r1.yzzx, r1.xyzz
  35: dp4 r1.x, cb2[42].xyzw, r3.xyzw
  36: dp4 r1.y, cb2[43].xyzw, r3.xyzw
  37: dp4 r1.z, cb2[44].xyzw, r3.xyzw
  38: mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
  39: mov o6.w, l(0)
  40: mul r0.y, r0.y, cb1[4].x
  41: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  42: add r0.xy, r1.zzzz, r1.xwxx
  43: mul r1.xy, r0.wwww, cb4[r2.x + 66].zwzz
  44: mad o7.xy, r0.xyxx, cb4[r2.x + 66].xyxx, r1.xyxx
  45: mov o7.zw, r0.zzzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 176 math, 15 temp registers, 8 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 5
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r3.x, v2.xyzx, v2.xyzx
  11: rsq r3.x, r3.x
  12: mul r3.yzw, r3.xxxx, v2.xxyz
  13: mov r4.x, v3.w
  14: mov r4.y, v4.w
  15: mov r4.z, v5.w
  16: mov r4.w, cb4[0].x
  17: add r5.xyz, -r4.xyzx, cb3[r4.w + 64].xyzx
  18: ishl r4.w, cb4[0].x, l(2)
  19: mov r6.x, cb3[r4.w + 8].z
  20: mov r6.y, cb3[r4.w + 9].z
  21: mov r6.z, cb3[r4.w + 10].z
  22: dp3 r4.w, r5.xyzx, r6.xyzx
  23: add r5.xyz, r4.xyzx, -cb2[25].xyzx
  24: dp3 r5.x, r5.xyzx, r5.xyzx
  25: sqrt r5.x, r5.x
  26: add r5.x, -r4.w, r5.x
  27: mad r4.w, cb2[25].w, r5.x, r4.w
  28: mad_sat r4.w, r4.w, cb2[24].z, cb2[24].w
  29: eq r5.x, cb6[0].x, l(1.000000)
  30: if_nz r5.x
  31:   eq r5.y, cb6[0].y, l(1.000000)
  32:   mul r6.xyz, v4.wwww, cb6[2].xyzx
  33:   mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
  34:   mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
  35:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  36:   movc r5.yzw, r5.yyyy, r6.xxyz, r4.xxyz
  37:   add r5.yzw, r5.yyzw, -cb6[6].xxyz
  38:   mul r6.yzw, r5.yyzw, cb6[5].xxyz
  39:   mad r5.y, r6.y, l(0.250000), l(0.750000)
  40:   mad r5.z, cb6[0].z, l(0.500000), l(0.750000)
  41:   max r6.x, r5.z, r5.y
  42:   sample r6.xyzw, r6.xzwx, t6.xyzw, s1
  43: else 
  44:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  45: endif 
  46: dp4_sat r5.y, r6.xyzw, cb1[46].xyzw
  47: div r5.zw, v7.xxxy, v7.wwww
  48: sample r6.xyzw, r5.zwzz, t2.xyzw, s5
  49: add r5.y, r5.y, -r6.x
  50: mad r4.w, r4.w, r5.y, r6.x
  51: sample r6.xyzw, v1.xyxx, t3.xyzw, s4
  52: add r5.y, -cb0[9].y, l(1.000000)
  53: mad r5.y, r6.y, cb0[9].y, r5.y
  54: mad r5.z, -r0.w, cb0[9].x, l(1.000000)
  55: dp3 r5.w, r3.yzwy, r2.xyzx
  56: add r5.w, r5.w, r5.w
  57: mad r6.xyz, r2.xyzx, -r5.wwww, r3.yzwy
  58: mul r7.xyz, r4.wwww, cb0[2].xyzx
  59: if_nz r5.x
  60:   eq r4.w, cb6[0].y, l(1.000000)
  61:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  62:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  63:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  64:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  65:   movc r8.xyz, r4.wwww, r8.xyzx, r4.xyzx
  66:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  67:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  68:   mul r4.w, r8.y, l(0.250000)
  69:   mul r5.x, cb6[0].z, l(0.500000)
  70:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  71:   max r4.w, r4.w, r5.x
  72:   min r8.x, r5.w, r4.w
  73:   sample r9.xyzw, r8.xzwx, t6.xyzw, s1
  74:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  75:   sample r10.xyzw, r10.xyzx, t6.xyzw, s1
  76:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  77:   sample r8.xyzw, r8.xyzx, t6.xyzw, s1
  78:   mov r2.w, l(1.000000)
  79:   dp4 r9.x, r9.xyzw, r2.xyzw
  80:   dp4 r9.y, r10.xyzw, r2.xyzw
  81:   dp4 r9.z, r8.xyzw, r2.xyzw
  82: else 
  83:   mov r2.w, l(1.000000)
  84:   dp4 r9.x, cb1[39].xyzw, r2.xyzw
  85:   dp4 r9.y, cb1[40].xyzw, r2.xyzw
  86:   dp4 r9.z, cb1[41].xyzw, r2.xyzw
  87: endif 
  88: add r8.xyz, r9.xyzx, v6.xyzx
  89: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  90: lt r2.w, l(0.000000), cb5[2].w
  91: if_nz r2.w
  92:   dp3 r2.w, r6.xyzx, r6.xyzx
  93:   rsq r2.w, r2.w
  94:   mul r9.xyz, r2.wwww, r6.xyzx
  95:   add r10.xyz, -r4.xyzx, cb5[0].xyzx
  96:   div r10.xyz, r10.xyzx, r9.xyzx
  97:   add r11.xyz, -r4.xyzx, cb5[1].xyzx
  98:   div r11.xyz, r11.xyzx, r9.xyzx
  99:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 100:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 101:   min r2.w, r10.y, r10.x
 102:   min r2.w, r10.z, r2.w
 103:   add r10.xyz, r4.xyzx, -cb5[2].xyzx
 104:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 105: else 
 106:   mov r9.xyz, r6.xyzx
 107: endif 
 108: mad r2.w, -r5.z, l(0.700000), l(1.700000)
 109: mul r2.w, r2.w, r5.z
 110: mul r2.w, r2.w, l(6.000000)
 111: sample_l r9.xyzw, r9.xyzx, t4.xyzw, s0, r2.w
 112: add r4.w, r9.w, l(-1.000000)
 113: mad r4.w, cb5[3].w, r4.w, l(1.000000)
 114: log r4.w, r4.w
 115: mul r4.w, r4.w, cb5[3].y
 116: exp r4.w, r4.w
 117: mul r4.w, r4.w, cb5[3].x
 118: mul r10.xyz, r9.xyzx, r4.wwww
 119: lt r5.x, cb5[1].w, l(0.999990)
 120: if_nz r5.x
 121:   lt r5.x, l(0.000000), cb5[6].w
 122:   if_nz r5.x
 123:     dp3 r5.x, r6.xyzx, r6.xyzx
 124:     rsq r5.x, r5.x
 125:     mul r11.xyz, r5.xxxx, r6.xyzx
 126:     add r12.xyz, -r4.xyzx, cb5[4].xyzx
 127:     div r12.xyz, r12.xyzx, r11.xyzx
 128:     add r13.xyz, -r4.xyzx, cb5[5].xyzx
 129:     div r13.xyz, r13.xyzx, r11.xyzx
 130:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 131:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 132:     min r5.x, r12.y, r12.x
 133:     min r5.x, r12.z, r5.x
 134:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 135:     mad r6.xyz, r11.xyzx, r5.xxxx, r4.xyzx
 136:   endif 
 137:   sample_l r6.xyzw, r6.xyzx, t5.xyzw, s0, r2.w
 138:   add r2.w, r6.w, l(-1.000000)
 139:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 140:   log r2.w, r2.w
 141:   mul r2.w, r2.w, cb5[7].y
 142:   exp r2.w, r2.w
 143:   mul r2.w, r2.w, cb5[7].x
 144:   mul r4.xyz, r6.xyzx, r2.wwww
 145:   mad r6.xyz, r4.wwww, r9.xyzx, -r4.xyzx
 146:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
 147: endif 
 148: mul r4.xyz, r5.yyyy, r10.xyzx
 149: mad r6.xyz, -v2.xyzx, r3.xxxx, cb1[0].xyzx
 150: dp3 r2.w, r6.xyzx, r6.xyzx
 151: max r2.w, r2.w, l(0.001000)
 152: rsq r2.w, r2.w
 153: mul r6.xyz, r2.wwww, r6.xyzx
 154: dp3 r2.w, r2.xyzx, -r3.yzwy
 155: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 156: dp3_sat r2.x, r2.xyzx, r6.xyzx
 157: dp3_sat r2.y, cb1[0].xyzx, r6.xyzx
 158: mul r2.z, r2.y, r2.y
 159: dp2 r2.z, r2.zzzz, r5.zzzz
 160: add r2.z, r2.z, l(-0.500000)
 161: add r3.y, -r3.x, l(1.000000)
 162: mul r3.z, r3.y, r3.y
 163: mul r3.z, r3.z, r3.z
 164: mul r3.y, r3.y, r3.z
 165: mad r3.y, r2.z, r3.y, l(1.000000)
 166: add r3.z, -|r2.w|, l(1.000000)
 167: mul r3.w, r3.z, r3.z
 168: mul r3.w, r3.w, r3.w
 169: mul r3.z, r3.z, r3.w
 170: mad r2.z, r2.z, r3.z, l(1.000000)
 171: mul r2.z, r2.z, r3.y
 172: mul r3.y, r5.z, r5.z
 173: max r3.y, r3.y, l(0.002000)
 174: add r3.w, -r3.y, l(1.000000)
 175: mad r4.w, |r2.w|, r3.w, r3.y
 176: mad r3.w, r3.x, r3.w, r3.y
 177: mul r2.w, |r2.w|, r3.w
 178: mad r2.w, r3.x, r4.w, r2.w
 179: add r2.w, r2.w, l(0.000010)
 180: div r2.w, l(0.500000), r2.w
 181: mul r3.w, r3.y, r3.y
 182: mad r4.w, r2.x, r3.w, -r2.x
 183: mad r2.x, r4.w, r2.x, l(1.000000)
 184: mul r3.w, r3.w, l(0.318310)
 185: mad r2.x, r2.x, r2.x, l(0.000000)
 186: div r2.x, r3.w, r2.x
 187: mul r2.x, r2.x, r2.w
 188: mul r2.x, r2.x, l(3.141593)
 189: mul r2.xz, r3.xxxx, r2.xxzx
 190: max r2.x, r2.x, l(0.000000)
 191: mad r2.w, r3.y, r3.y, l(1.000000)
 192: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 193: dp3 r3.x, r0.xyzx, r0.xyzx
 194: ne r3.x, r3.x, l(0.000000)
 195: and r3.x, r3.x, l(0x3f800000)
 196: mul r2.x, r2.x, r3.x
 197: mad r0.w, r0.w, cb0[9].x, -r1.w
 198: add_sat r0.w, r0.w, l(1.000000)
 199: mul r3.xyw, r2.zzzz, r7.xyxz
 200: mad r3.xyw, r8.xyxz, r5.yyyy, r3.xyxw
 201: mul r5.xyz, r7.xyzx, r2.xxxx
 202: add r1.w, -r2.y, l(1.000000)
 203: mul r2.x, r1.w, r1.w
 204: mul r2.x, r2.x, r2.x
 205: mul r1.w, r1.w, r2.x
 206: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 207: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 208: mul r2.xyz, r2.xyzx, r5.xyzx
 209: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 210: mul r2.xyz, r4.xyzx, r2.wwww
 211: add r3.xyw, -r0.xyxz, r0.wwww
 212: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 213: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 214: mov o0.w, l(1.000000)
 215: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 42 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov o3.w, r1.x
  20: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  21: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  22: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  23: dp3 r1.x, r2.xyzx, r2.xyzx
  24: rsq r1.x, r1.x
  25: mul r2.xyz, r1.xxxx, r2.xyzx
  26: mov o3.xyz, r2.xyzx
  27: mov o4.w, r1.y
  28: mov o5.w, r1.z
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r3.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
  37: mul r1.w, v4.w, cb3[9].w
  38: mul o4.xyz, r1.wwww, r2.xyzx
  39: mov o5.xyz, r1.xyzx
  40: mul r1.w, r1.y, r1.y
  41: mad r1.w, r1.x, r1.x, -r1.w
  42: mul r2.xyzw, r1.yzzx, r1.xyzz
  43: dp4 r1.x, cb2[42].xyzw, r2.xyzw
  44: dp4 r1.y, cb2[43].xyzw, r2.xyzw
  45: dp4 r1.z, cb2[44].xyzw, r2.xyzw
  46: mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
  47: mov o6.w, l(0)
  48: mul r0.y, r0.y, cb1[5].x
  49: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  50: mov o7.zw, r0.zzzw
  51: add o7.xy, r1.zzzz, r1.xwxx
  52: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 185 math, 15 temp registers, 9 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 3 sampler slot 6
Set 2D Texture "_OcclusionMap" to slot 4 sampler slot 5
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r2.z, r2.xyxx, r2.xyxx
  12: min r2.z, r2.z, l(1.000000)
  13: add r2.z, -r2.z, l(1.000000)
  14: sqrt r2.z, r2.z
  15: mul r3.xyz, r2.yyyy, v4.xyzx
  16: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  17: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  18: dp3 r2.w, r2.xyzx, r2.xyzx
  19: rsq r2.w, r2.w
  20: mul r2.xyz, r2.wwww, r2.xyzx
  21: dp3 r3.x, v2.xyzx, v2.xyzx
  22: rsq r3.x, r3.x
  23: mul r3.yzw, r3.xxxx, v2.xxyz
  24: mov r4.x, v3.w
  25: mov r4.y, v4.w
  26: mov r4.z, v5.w
  27: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  28: mov r6.x, cb4[9].z
  29: mov r6.y, cb4[10].z
  30: mov r6.z, cb4[11].z
  31: dp3 r4.w, r5.xyzx, r6.xyzx
  32: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  33: dp3 r5.x, r5.xyzx, r5.xyzx
  34: sqrt r5.x, r5.x
  35: add r5.x, -r4.w, r5.x
  36: mad r4.w, cb3[25].w, r5.x, r4.w
  37: mad_sat r4.w, r4.w, cb3[24].z, cb3[24].w
  38: eq r5.x, cb6[0].x, l(1.000000)
  39: if_nz r5.x
  40:   eq r5.y, cb6[0].y, l(1.000000)
  41:   mul r6.xyz, v4.wwww, cb6[2].xyzx
  42:   mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
  43:   mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
  44:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  45:   movc r5.yzw, r5.yyyy, r6.xxyz, r4.xxyz
  46:   add r5.yzw, r5.yyzw, -cb6[6].xxyz
  47:   mul r6.yzw, r5.yyzw, cb6[5].xxyz
  48:   mad r5.y, r6.y, l(0.250000), l(0.750000)
  49:   mad r5.z, cb6[0].z, l(0.500000), l(0.750000)
  50:   max r6.x, r5.z, r5.y
  51:   sample r6.xyzw, r6.xzwx, t7.xyzw, s1
  52: else 
  53:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  54: endif 
  55: dp4_sat r5.y, r6.xyzw, cb2[46].xyzw
  56: div r5.zw, v7.xxxy, v7.wwww
  57: sample r6.xyzw, r5.zwzz, t3.xyzw, s6
  58: add r5.y, r5.y, -r6.x
  59: mad r4.w, r4.w, r5.y, r6.x
  60: sample r6.xyzw, v1.xyxx, t4.xyzw, s5
  61: add r5.y, -cb0[9].y, l(1.000000)
  62: mad r5.y, r6.y, cb0[9].y, r5.y
  63: mad r5.z, -r0.w, cb0[9].x, l(1.000000)
  64: dp3 r5.w, r3.yzwy, r2.xyzx
  65: add r5.w, r5.w, r5.w
  66: mad r6.xyz, r2.xyzx, -r5.wwww, r3.yzwy
  67: mul r7.xyz, r4.wwww, cb0[2].xyzx
  68: if_nz r5.x
  69:   eq r4.w, cb6[0].y, l(1.000000)
  70:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  71:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  72:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  73:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  74:   movc r8.xyz, r4.wwww, r8.xyzx, r4.xyzx
  75:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  76:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  77:   mul r4.w, r8.y, l(0.250000)
  78:   mul r5.x, cb6[0].z, l(0.500000)
  79:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  80:   max r4.w, r4.w, r5.x
  81:   min r8.x, r5.w, r4.w
  82:   sample r9.xyzw, r8.xzwx, t7.xyzw, s1
  83:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  84:   sample r10.xyzw, r10.xyzx, t7.xyzw, s1
  85:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  86:   sample r8.xyzw, r8.xyzx, t7.xyzw, s1
  87:   mov r2.w, l(1.000000)
  88:   dp4 r9.x, r9.xyzw, r2.xyzw
  89:   dp4 r9.y, r10.xyzw, r2.xyzw
  90:   dp4 r9.z, r8.xyzw, r2.xyzw
  91: else 
  92:   mov r2.w, l(1.000000)
  93:   dp4 r9.x, cb2[39].xyzw, r2.xyzw
  94:   dp4 r9.y, cb2[40].xyzw, r2.xyzw
  95:   dp4 r9.z, cb2[41].xyzw, r2.xyzw
  96: endif 
  97: add r8.xyz, r9.xyzx, v6.xyzx
  98: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  99: lt r2.w, l(0.000000), cb5[2].w
 100: if_nz r2.w
 101:   dp3 r2.w, r6.xyzx, r6.xyzx
 102:   rsq r2.w, r2.w
 103:   mul r9.xyz, r2.wwww, r6.xyzx
 104:   add r10.xyz, -r4.xyzx, cb5[0].xyzx
 105:   div r10.xyz, r10.xyzx, r9.xyzx
 106:   add r11.xyz, -r4.xyzx, cb5[1].xyzx
 107:   div r11.xyz, r11.xyzx, r9.xyzx
 108:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 109:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 110:   min r2.w, r10.y, r10.x
 111:   min r2.w, r10.z, r2.w
 112:   add r10.xyz, r4.xyzx, -cb5[2].xyzx
 113:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 114: else 
 115:   mov r9.xyz, r6.xyzx
 116: endif 
 117: mad r2.w, -r5.z, l(0.700000), l(1.700000)
 118: mul r2.w, r2.w, r5.z
 119: mul r2.w, r2.w, l(6.000000)
 120: sample_l r9.xyzw, r9.xyzx, t5.xyzw, s0, r2.w
 121: add r4.w, r9.w, l(-1.000000)
 122: mad r4.w, cb5[3].w, r4.w, l(1.000000)
 123: log r4.w, r4.w
 124: mul r4.w, r4.w, cb5[3].y
 125: exp r4.w, r4.w
 126: mul r4.w, r4.w, cb5[3].x
 127: mul r10.xyz, r9.xyzx, r4.wwww
 128: lt r5.x, cb5[1].w, l(0.999990)
 129: if_nz r5.x
 130:   lt r5.x, l(0.000000), cb5[6].w
 131:   if_nz r5.x
 132:     dp3 r5.x, r6.xyzx, r6.xyzx
 133:     rsq r5.x, r5.x
 134:     mul r11.xyz, r5.xxxx, r6.xyzx
 135:     add r12.xyz, -r4.xyzx, cb5[4].xyzx
 136:     div r12.xyz, r12.xyzx, r11.xyzx
 137:     add r13.xyz, -r4.xyzx, cb5[5].xyzx
 138:     div r13.xyz, r13.xyzx, r11.xyzx
 139:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 140:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 141:     min r5.x, r12.y, r12.x
 142:     min r5.x, r12.z, r5.x
 143:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 144:     mad r6.xyz, r11.xyzx, r5.xxxx, r4.xyzx
 145:   endif 
 146:   sample_l r6.xyzw, r6.xyzx, t6.xyzw, s0, r2.w
 147:   add r2.w, r6.w, l(-1.000000)
 148:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 149:   log r2.w, r2.w
 150:   mul r2.w, r2.w, cb5[7].y
 151:   exp r2.w, r2.w
 152:   mul r2.w, r2.w, cb5[7].x
 153:   mul r4.xyz, r6.xyzx, r2.wwww
 154:   mad r6.xyz, r4.wwww, r9.xyzx, -r4.xyzx
 155:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
 156: endif 
 157: mul r4.xyz, r5.yyyy, r10.xyzx
 158: mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
 159: dp3 r2.w, r6.xyzx, r6.xyzx
 160: max r2.w, r2.w, l(0.001000)
 161: rsq r2.w, r2.w
 162: mul r6.xyz, r2.wwww, r6.xyzx
 163: dp3 r2.w, r2.xyzx, -r3.yzwy
 164: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 165: dp3_sat r2.x, r2.xyzx, r6.xyzx
 166: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 167: mul r2.z, r2.y, r2.y
 168: dp2 r2.z, r2.zzzz, r5.zzzz
 169: add r2.z, r2.z, l(-0.500000)
 170: add r3.y, -r3.x, l(1.000000)
 171: mul r3.z, r3.y, r3.y
 172: mul r3.z, r3.z, r3.z
 173: mul r3.y, r3.y, r3.z
 174: mad r3.y, r2.z, r3.y, l(1.000000)
 175: add r3.z, -|r2.w|, l(1.000000)
 176: mul r3.w, r3.z, r3.z
 177: mul r3.w, r3.w, r3.w
 178: mul r3.z, r3.z, r3.w
 179: mad r2.z, r2.z, r3.z, l(1.000000)
 180: mul r2.z, r2.z, r3.y
 181: mul r3.y, r5.z, r5.z
 182: max r3.y, r3.y, l(0.002000)
 183: add r3.w, -r3.y, l(1.000000)
 184: mad r4.w, |r2.w|, r3.w, r3.y
 185: mad r3.w, r3.x, r3.w, r3.y
 186: mul r2.w, |r2.w|, r3.w
 187: mad r2.w, r3.x, r4.w, r2.w
 188: add r2.w, r2.w, l(0.000010)
 189: div r2.w, l(0.500000), r2.w
 190: mul r3.w, r3.y, r3.y
 191: mad r4.w, r2.x, r3.w, -r2.x
 192: mad r2.x, r4.w, r2.x, l(1.000000)
 193: mul r3.w, r3.w, l(0.318310)
 194: mad r2.x, r2.x, r2.x, l(0.000000)
 195: div r2.x, r3.w, r2.x
 196: mul r2.x, r2.x, r2.w
 197: mul r2.x, r2.x, l(3.141593)
 198: mul r2.xz, r3.xxxx, r2.xxzx
 199: max r2.x, r2.x, l(0.000000)
 200: mad r2.w, r3.y, r3.y, l(1.000000)
 201: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 202: dp3 r3.x, r0.xyzx, r0.xyzx
 203: ne r3.x, r3.x, l(0.000000)
 204: and r3.x, r3.x, l(0x3f800000)
 205: mul r2.x, r2.x, r3.x
 206: mad r0.w, r0.w, cb0[9].x, -r1.w
 207: add_sat r0.w, r0.w, l(1.000000)
 208: mul r3.xyw, r2.zzzz, r7.xyxz
 209: mad r3.xyw, r8.xyxz, r5.yyyy, r3.xyxw
 210: mul r5.xyz, r7.xyzx, r2.xxxx
 211: add r1.w, -r2.y, l(1.000000)
 212: mul r2.x, r1.w, r1.w
 213: mul r2.x, r2.x, r2.x
 214: mul r1.w, r1.w, r2.x
 215: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 216: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 217: mul r2.xyz, r2.xyzx, r5.xyzx
 218: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 219: mul r2.xyz, r4.xyzx, r2.wwww
 220: add r3.xyw, -r0.xyxz, r0.wwww
 221: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 222: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 223: mov o0.w, l(1.000000)
 224: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 45 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 4 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 5 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[68], dynamicIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: ishl r1.x, cb5[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb4[r1.x + 25].xyzw
   6: mad r2.xyzw, cb4[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb4[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  16: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  19: mov r1.w, cb5[0].x
  20: add o2.xyz, r1.xyzx, -cb4[r1.w + 64].xyzx
  21: mov o3.w, r1.x
  22: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  23: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  24: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  25: dp3 r1.x, r2.xyzx, r2.xyzx
  26: rsq r1.x, r1.x
  27: mul r2.xyz, r1.xxxx, r2.xyzx
  28: mov o3.xyz, r2.xyzx
  29: mov o4.w, r1.y
  30: mov o5.w, r1.z
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r2.w, r1.xyzx, r1.xyzx
  35: rsq r2.w, r2.w
  36: mul r1.xyz, r1.xyzx, r2.wwww
  37: mul r3.xyz, r2.yzxy, r1.zxyz
  38: mad r2.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
  39: mul r2.w, v4.w, cb3[9].w
  40: mul o4.xyz, r2.wwww, r2.xyzx
  41: mov o5.xyz, r1.xyzx
  42: mul r2.x, r1.y, r1.y
  43: mad r2.x, r1.x, r1.x, -r2.x
  44: mul r3.xyzw, r1.yzzx, r1.xyzz
  45: dp4 r1.x, cb2[42].xyzw, r3.xyzw
  46: dp4 r1.y, cb2[43].xyzw, r3.xyzw
  47: dp4 r1.z, cb2[44].xyzw, r3.xyzw
  48: mad o6.xyz, cb2[45].xyzx, r2.xxxx, r1.xyzx
  49: mov o6.w, l(0)
  50: mul r0.y, r0.y, cb1[4].x
  51: mul r2.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  52: add r0.xy, r2.zzzz, r2.xwxx
  53: mul r1.xy, r0.wwww, cb4[r1.w + 66].zwzz
  54: mad o7.xy, r0.xyxx, cb4[r1.w + 66].xyxx, r1.xyxx
  55: mov o7.zw, r0.zzzw
  56: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 186 math, 15 temp registers, 9 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 3 sampler slot 6
Set 2D Texture "_OcclusionMap" to slot 4 sampler slot 5
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r2.z, r2.xyxx, r2.xyxx
  12: min r2.z, r2.z, l(1.000000)
  13: add r2.z, -r2.z, l(1.000000)
  14: sqrt r2.z, r2.z
  15: mul r3.xyz, r2.yyyy, v4.xyzx
  16: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  17: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  18: dp3 r2.w, r2.xyzx, r2.xyzx
  19: rsq r2.w, r2.w
  20: mul r2.xyz, r2.wwww, r2.xyzx
  21: dp3 r3.x, v2.xyzx, v2.xyzx
  22: rsq r3.x, r3.x
  23: mul r3.yzw, r3.xxxx, v2.xxyz
  24: mov r4.x, v3.w
  25: mov r4.y, v4.w
  26: mov r4.z, v5.w
  27: mov r4.w, cb4[0].x
  28: add r5.xyz, -r4.xyzx, cb3[r4.w + 64].xyzx
  29: ishl r4.w, cb4[0].x, l(2)
  30: mov r6.x, cb3[r4.w + 8].z
  31: mov r6.y, cb3[r4.w + 9].z
  32: mov r6.z, cb3[r4.w + 10].z
  33: dp3 r4.w, r5.xyzx, r6.xyzx
  34: add r5.xyz, r4.xyzx, -cb2[25].xyzx
  35: dp3 r5.x, r5.xyzx, r5.xyzx
  36: sqrt r5.x, r5.x
  37: add r5.x, -r4.w, r5.x
  38: mad r4.w, cb2[25].w, r5.x, r4.w
  39: mad_sat r4.w, r4.w, cb2[24].z, cb2[24].w
  40: eq r5.x, cb6[0].x, l(1.000000)
  41: if_nz r5.x
  42:   eq r5.y, cb6[0].y, l(1.000000)
  43:   mul r6.xyz, v4.wwww, cb6[2].xyzx
  44:   mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
  45:   mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
  46:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  47:   movc r5.yzw, r5.yyyy, r6.xxyz, r4.xxyz
  48:   add r5.yzw, r5.yyzw, -cb6[6].xxyz
  49:   mul r6.yzw, r5.yyzw, cb6[5].xxyz
  50:   mad r5.y, r6.y, l(0.250000), l(0.750000)
  51:   mad r5.z, cb6[0].z, l(0.500000), l(0.750000)
  52:   max r6.x, r5.z, r5.y
  53:   sample r6.xyzw, r6.xzwx, t7.xyzw, s1
  54: else 
  55:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  56: endif 
  57: dp4_sat r5.y, r6.xyzw, cb1[46].xyzw
  58: div r5.zw, v7.xxxy, v7.wwww
  59: sample r6.xyzw, r5.zwzz, t3.xyzw, s6
  60: add r5.y, r5.y, -r6.x
  61: mad r4.w, r4.w, r5.y, r6.x
  62: sample r6.xyzw, v1.xyxx, t4.xyzw, s5
  63: add r5.y, -cb0[9].y, l(1.000000)
  64: mad r5.y, r6.y, cb0[9].y, r5.y
  65: mad r5.z, -r0.w, cb0[9].x, l(1.000000)
  66: dp3 r5.w, r3.yzwy, r2.xyzx
  67: add r5.w, r5.w, r5.w
  68: mad r6.xyz, r2.xyzx, -r5.wwww, r3.yzwy
  69: mul r7.xyz, r4.wwww, cb0[2].xyzx
  70: if_nz r5.x
  71:   eq r4.w, cb6[0].y, l(1.000000)
  72:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  73:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  74:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  75:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  76:   movc r8.xyz, r4.wwww, r8.xyzx, r4.xyzx
  77:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  78:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  79:   mul r4.w, r8.y, l(0.250000)
  80:   mul r5.x, cb6[0].z, l(0.500000)
  81:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  82:   max r4.w, r4.w, r5.x
  83:   min r8.x, r5.w, r4.w
  84:   sample r9.xyzw, r8.xzwx, t7.xyzw, s1
  85:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  86:   sample r10.xyzw, r10.xyzx, t7.xyzw, s1
  87:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  88:   sample r8.xyzw, r8.xyzx, t7.xyzw, s1
  89:   mov r2.w, l(1.000000)
  90:   dp4 r9.x, r9.xyzw, r2.xyzw
  91:   dp4 r9.y, r10.xyzw, r2.xyzw
  92:   dp4 r9.z, r8.xyzw, r2.xyzw
  93: else 
  94:   mov r2.w, l(1.000000)
  95:   dp4 r9.x, cb1[39].xyzw, r2.xyzw
  96:   dp4 r9.y, cb1[40].xyzw, r2.xyzw
  97:   dp4 r9.z, cb1[41].xyzw, r2.xyzw
  98: endif 
  99: add r8.xyz, r9.xyzx, v6.xyzx
 100: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
 101: lt r2.w, l(0.000000), cb5[2].w
 102: if_nz r2.w
 103:   dp3 r2.w, r6.xyzx, r6.xyzx
 104:   rsq r2.w, r2.w
 105:   mul r9.xyz, r2.wwww, r6.xyzx
 106:   add r10.xyz, -r4.xyzx, cb5[0].xyzx
 107:   div r10.xyz, r10.xyzx, r9.xyzx
 108:   add r11.xyz, -r4.xyzx, cb5[1].xyzx
 109:   div r11.xyz, r11.xyzx, r9.xyzx
 110:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 111:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 112:   min r2.w, r10.y, r10.x
 113:   min r2.w, r10.z, r2.w
 114:   add r10.xyz, r4.xyzx, -cb5[2].xyzx
 115:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 116: else 
 117:   mov r9.xyz, r6.xyzx
 118: endif 
 119: mad r2.w, -r5.z, l(0.700000), l(1.700000)
 120: mul r2.w, r2.w, r5.z
 121: mul r2.w, r2.w, l(6.000000)
 122: sample_l r9.xyzw, r9.xyzx, t5.xyzw, s0, r2.w
 123: add r4.w, r9.w, l(-1.000000)
 124: mad r4.w, cb5[3].w, r4.w, l(1.000000)
 125: log r4.w, r4.w
 126: mul r4.w, r4.w, cb5[3].y
 127: exp r4.w, r4.w
 128: mul r4.w, r4.w, cb5[3].x
 129: mul r10.xyz, r9.xyzx, r4.wwww
 130: lt r5.x, cb5[1].w, l(0.999990)
 131: if_nz r5.x
 132:   lt r5.x, l(0.000000), cb5[6].w
 133:   if_nz r5.x
 134:     dp3 r5.x, r6.xyzx, r6.xyzx
 135:     rsq r5.x, r5.x
 136:     mul r11.xyz, r5.xxxx, r6.xyzx
 137:     add r12.xyz, -r4.xyzx, cb5[4].xyzx
 138:     div r12.xyz, r12.xyzx, r11.xyzx
 139:     add r13.xyz, -r4.xyzx, cb5[5].xyzx
 140:     div r13.xyz, r13.xyzx, r11.xyzx
 141:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 142:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 143:     min r5.x, r12.y, r12.x
 144:     min r5.x, r12.z, r5.x
 145:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 146:     mad r6.xyz, r11.xyzx, r5.xxxx, r4.xyzx
 147:   endif 
 148:   sample_l r6.xyzw, r6.xyzx, t6.xyzw, s0, r2.w
 149:   add r2.w, r6.w, l(-1.000000)
 150:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 151:   log r2.w, r2.w
 152:   mul r2.w, r2.w, cb5[7].y
 153:   exp r2.w, r2.w
 154:   mul r2.w, r2.w, cb5[7].x
 155:   mul r4.xyz, r6.xyzx, r2.wwww
 156:   mad r6.xyz, r4.wwww, r9.xyzx, -r4.xyzx
 157:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
 158: endif 
 159: mul r4.xyz, r5.yyyy, r10.xyzx
 160: mad r6.xyz, -v2.xyzx, r3.xxxx, cb1[0].xyzx
 161: dp3 r2.w, r6.xyzx, r6.xyzx
 162: max r2.w, r2.w, l(0.001000)
 163: rsq r2.w, r2.w
 164: mul r6.xyz, r2.wwww, r6.xyzx
 165: dp3 r2.w, r2.xyzx, -r3.yzwy
 166: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 167: dp3_sat r2.x, r2.xyzx, r6.xyzx
 168: dp3_sat r2.y, cb1[0].xyzx, r6.xyzx
 169: mul r2.z, r2.y, r2.y
 170: dp2 r2.z, r2.zzzz, r5.zzzz
 171: add r2.z, r2.z, l(-0.500000)
 172: add r3.y, -r3.x, l(1.000000)
 173: mul r3.z, r3.y, r3.y
 174: mul r3.z, r3.z, r3.z
 175: mul r3.y, r3.y, r3.z
 176: mad r3.y, r2.z, r3.y, l(1.000000)
 177: add r3.z, -|r2.w|, l(1.000000)
 178: mul r3.w, r3.z, r3.z
 179: mul r3.w, r3.w, r3.w
 180: mul r3.z, r3.z, r3.w
 181: mad r2.z, r2.z, r3.z, l(1.000000)
 182: mul r2.z, r2.z, r3.y
 183: mul r3.y, r5.z, r5.z
 184: max r3.y, r3.y, l(0.002000)
 185: add r3.w, -r3.y, l(1.000000)
 186: mad r4.w, |r2.w|, r3.w, r3.y
 187: mad r3.w, r3.x, r3.w, r3.y
 188: mul r2.w, |r2.w|, r3.w
 189: mad r2.w, r3.x, r4.w, r2.w
 190: add r2.w, r2.w, l(0.000010)
 191: div r2.w, l(0.500000), r2.w
 192: mul r3.w, r3.y, r3.y
 193: mad r4.w, r2.x, r3.w, -r2.x
 194: mad r2.x, r4.w, r2.x, l(1.000000)
 195: mul r3.w, r3.w, l(0.318310)
 196: mad r2.x, r2.x, r2.x, l(0.000000)
 197: div r2.x, r3.w, r2.x
 198: mul r2.x, r2.x, r2.w
 199: mul r2.x, r2.x, l(3.141593)
 200: mul r2.xz, r3.xxxx, r2.xxzx
 201: max r2.x, r2.x, l(0.000000)
 202: mad r2.w, r3.y, r3.y, l(1.000000)
 203: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 204: dp3 r3.x, r0.xyzx, r0.xyzx
 205: ne r3.x, r3.x, l(0.000000)
 206: and r3.x, r3.x, l(0x3f800000)
 207: mul r2.x, r2.x, r3.x
 208: mad r0.w, r0.w, cb0[9].x, -r1.w
 209: add_sat r0.w, r0.w, l(1.000000)
 210: mul r3.xyw, r2.zzzz, r7.xyxz
 211: mad r3.xyw, r8.xyxz, r5.yyyy, r3.xyxw
 212: mul r5.xyz, r7.xyzx, r2.xxxx
 213: add r1.w, -r2.y, l(1.000000)
 214: mul r2.x, r1.w, r1.w
 215: mul r2.x, r2.x, r2.x
 216: mul r1.w, r1.w, r2.x
 217: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 218: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 219: mul r2.xyz, r2.xyzx, r5.xyzx
 220: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 221: mul r2.xyz, r4.xyzx, r2.wwww
 222: add r3.xyw, -r0.xyxz, r0.wwww
 223: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 224: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 225: mov o0.w, l(1.000000)
 226: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul r1.xyz, r1.wwww, r1.xyzx
  29: mov o5.xyz, r1.xyzx
  30: mul r1.w, r1.y, r1.y
  31: mad r1.w, r1.x, r1.x, -r1.w
  32: mul r2.xyzw, r1.yzzx, r1.xyzz
  33: dp4 r1.x, cb2[42].xyzw, r2.xyzw
  34: dp4 r1.y, cb2[43].xyzw, r2.xyzw
  35: dp4 r1.z, cb2[44].xyzw, r2.xyzw
  36: mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
  37: mov o6.w, l(0)
  38: mul r0.y, r0.y, cb1[5].x
  39: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  40: mov o7.zw, r0.zzzw
  41: add o7.xy, r1.zzzz, r1.xwxx
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 175 math, 14 temp registers, 7 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: dp3 r2.x, v2.xyzx, v2.xyzx
  10: rsq r2.x, r2.x
  11: mul r2.yzw, r2.xxxx, v2.xxyz
  12: mov r3.x, v3.w
  13: mov r3.y, v4.w
  14: mov r3.z, v5.w
  15: add r4.xyz, -r3.xyzx, cb1[4].xyzx
  16: mov r5.x, cb4[9].z
  17: mov r5.y, cb4[10].z
  18: mov r5.z, cb4[11].z
  19: dp3 r3.w, r4.xyzx, r5.xyzx
  20: add r4.xyz, r3.xyzx, -cb3[25].xyzx
  21: dp3 r4.x, r4.xyzx, r4.xyzx
  22: sqrt r4.x, r4.x
  23: add r4.x, -r3.w, r4.x
  24: mad r3.w, cb3[25].w, r4.x, r3.w
  25: mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
  26: eq r4.x, cb6[0].x, l(1.000000)
  27: if_nz r4.x
  28:   eq r4.y, cb6[0].y, l(1.000000)
  29:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  30:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  31:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  32:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  33:   movc r4.yzw, r4.yyyy, r5.xxyz, r3.xxyz
  34:   add r4.yzw, r4.yyzw, -cb6[6].xxyz
  35:   mul r5.yzw, r4.yyzw, cb6[5].xxyz
  36:   mad r4.y, r5.y, l(0.250000), l(0.750000)
  37:   mad r4.z, cb6[0].z, l(0.500000), l(0.750000)
  38:   max r5.x, r4.z, r4.y
  39:   sample r5.xyzw, r5.xzwx, t5.xyzw, s1
  40: else 
  41:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  42: endif 
  43: dp4_sat r4.y, r5.xyzw, cb2[46].xyzw
  44: div r4.zw, v7.xxxy, v7.wwww
  45: sample r5.xyzw, r4.zwzz, t1.xyzw, s4
  46: add r4.y, r4.y, -r5.x
  47: mad r3.w, r3.w, r4.y, r5.x
  48: sample r5.xyzw, v1.xyxx, t2.xyzw, s3
  49: add r4.y, -cb0[9].y, l(1.000000)
  50: mad r4.y, r5.y, cb0[9].y, r4.y
  51: add r4.z, -cb0[8].w, l(1.000000)
  52: dp3 r4.w, r2.yzwy, r1.xyzx
  53: add r4.w, r4.w, r4.w
  54: mad r5.xyz, r1.xyzx, -r4.wwww, r2.yzwy
  55: mul r6.xyz, r3.wwww, cb0[2].xyzx
  56: if_nz r4.x
  57:   eq r3.w, cb6[0].y, l(1.000000)
  58:   mul r7.xyz, v4.wwww, cb6[2].xyzx
  59:   mad r7.xyz, cb6[1].xyzx, v3.wwww, r7.xyzx
  60:   mad r7.xyz, cb6[3].xyzx, v5.wwww, r7.xyzx
  61:   add r7.xyz, r7.xyzx, cb6[4].xyzx
  62:   movc r7.xyz, r3.wwww, r7.xyzx, r3.xyzx
  63:   add r7.xyz, r7.xyzx, -cb6[6].xyzx
  64:   mul r7.yzw, r7.xxyz, cb6[5].xxyz
  65:   mul r3.w, r7.y, l(0.250000)
  66:   mul r4.x, cb6[0].z, l(0.500000)
  67:   mad r4.w, -cb6[0].z, l(0.500000), l(0.250000)
  68:   max r3.w, r3.w, r4.x
  69:   min r7.x, r4.w, r3.w
  70:   sample r8.xyzw, r7.xzwx, t5.xyzw, s1
  71:   add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  72:   sample r9.xyzw, r9.xyzx, t5.xyzw, s1
  73:   add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  74:   sample r7.xyzw, r7.xyzx, t5.xyzw, s1
  75:   mov r1.w, l(1.000000)
  76:   dp4 r8.x, r8.xyzw, r1.xyzw
  77:   dp4 r8.y, r9.xyzw, r1.xyzw
  78:   dp4 r8.z, r7.xyzw, r1.xyzw
  79: else 
  80:   mov r1.w, l(1.000000)
  81:   dp4 r8.x, cb2[39].xyzw, r1.xyzw
  82:   dp4 r8.y, cb2[40].xyzw, r1.xyzw
  83:   dp4 r8.z, cb2[41].xyzw, r1.xyzw
  84: endif 
  85: add r7.xyz, r8.xyzx, v6.xyzx
  86: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  87: lt r1.w, l(0.000000), cb5[2].w
  88: if_nz r1.w
  89:   dp3 r1.w, r5.xyzx, r5.xyzx
  90:   rsq r1.w, r1.w
  91:   mul r8.xyz, r1.wwww, r5.xyzx
  92:   add r9.xyz, -r3.xyzx, cb5[0].xyzx
  93:   div r9.xyz, r9.xyzx, r8.xyzx
  94:   add r10.xyz, -r3.xyzx, cb5[1].xyzx
  95:   div r10.xyz, r10.xyzx, r8.xyzx
  96:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  97:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  98:   min r1.w, r9.y, r9.x
  99:   min r1.w, r9.z, r1.w
 100:   add r9.xyz, r3.xyzx, -cb5[2].xyzx
 101:   mad r8.xyz, r8.xyzx, r1.wwww, r9.xyzx
 102: else 
 103:   mov r8.xyz, r5.xyzx
 104: endif 
 105: mad r1.w, -r4.z, l(0.700000), l(1.700000)
 106: mul r1.w, r1.w, r4.z
 107: mul r1.w, r1.w, l(6.000000)
 108: sample_l r8.xyzw, r8.xyzx, t3.xyzw, s0, r1.w
 109: add r3.w, r8.w, l(-1.000000)
 110: mad r3.w, cb5[3].w, r3.w, l(1.000000)
 111: log r3.w, r3.w
 112: mul r3.w, r3.w, cb5[3].y
 113: exp r3.w, r3.w
 114: mul r3.w, r3.w, cb5[3].x
 115: mul r9.xyz, r8.xyzx, r3.wwww
 116: lt r4.x, cb5[1].w, l(0.999990)
 117: if_nz r4.x
 118:   lt r4.x, l(0.000000), cb5[6].w
 119:   if_nz r4.x
 120:     dp3 r4.x, r5.xyzx, r5.xyzx
 121:     rsq r4.x, r4.x
 122:     mul r10.xyz, r4.xxxx, r5.xyzx
 123:     add r11.xyz, -r3.xyzx, cb5[4].xyzx
 124:     div r11.xyz, r11.xyzx, r10.xyzx
 125:     add r12.xyz, -r3.xyzx, cb5[5].xyzx
 126:     div r12.xyz, r12.xyzx, r10.xyzx
 127:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 128:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 129:     min r4.x, r11.y, r11.x
 130:     min r4.x, r11.z, r4.x
 131:     add r3.xyz, r3.xyzx, -cb5[6].xyzx
 132:     mad r5.xyz, r10.xyzx, r4.xxxx, r3.xyzx
 133:   endif 
 134:   sample_l r5.xyzw, r5.xyzx, t4.xyzw, s0, r1.w
 135:   add r1.w, r5.w, l(-1.000000)
 136:   mad r1.w, cb5[7].w, r1.w, l(1.000000)
 137:   log r1.w, r1.w
 138:   mul r1.w, r1.w, cb5[7].y
 139:   exp r1.w, r1.w
 140:   mul r1.w, r1.w, cb5[7].x
 141:   mul r3.xyz, r5.xyzx, r1.wwww
 142:   mad r5.xyz, r3.wwww, r8.xyzx, -r3.xyzx
 143:   mad r9.xyz, cb5[1].wwww, r5.xyzx, r3.xyzx
 144: endif 
 145: mul r3.xyz, r4.yyyy, r9.xyzx
 146: mad r5.xyz, -v2.xyzx, r2.xxxx, cb2[0].xyzx
 147: dp3 r1.w, r5.xyzx, r5.xyzx
 148: max r1.w, r1.w, l(0.001000)
 149: rsq r1.w, r1.w
 150: mul r5.xyz, r1.wwww, r5.xyzx
 151: dp3 r1.w, r1.xyzx, -r2.yzwy
 152: dp3_sat r2.x, r1.xyzx, cb2[0].xyzx
 153: dp3_sat r1.x, r1.xyzx, r5.xyzx
 154: dp3_sat r1.y, cb2[0].xyzx, r5.xyzx
 155: mul r1.z, r1.y, r1.y
 156: dp2 r1.z, r1.zzzz, r4.zzzz
 157: add r1.z, r1.z, l(-0.500000)
 158: add r2.y, -r2.x, l(1.000000)
 159: mul r2.z, r2.y, r2.y
 160: mul r2.z, r2.z, r2.z
 161: mul r2.y, r2.y, r2.z
 162: mad r2.y, r1.z, r2.y, l(1.000000)
 163: add r2.z, -|r1.w|, l(1.000000)
 164: mul r2.w, r2.z, r2.z
 165: mul r2.w, r2.w, r2.w
 166: mul r2.z, r2.z, r2.w
 167: mad r1.z, r1.z, r2.z, l(1.000000)
 168: mul r1.z, r1.z, r2.y
 169: mul r2.y, r4.z, r4.z
 170: max r2.y, r2.y, l(0.002000)
 171: add r2.w, -r2.y, l(1.000000)
 172: mad r3.w, |r1.w|, r2.w, r2.y
 173: mad r2.w, r2.x, r2.w, r2.y
 174: mul r1.w, |r1.w|, r2.w
 175: mad r1.w, r2.x, r3.w, r1.w
 176: add r1.w, r1.w, l(0.000010)
 177: div r1.w, l(0.500000), r1.w
 178: mul r2.w, r2.y, r2.y
 179: mad r3.w, r1.x, r2.w, -r1.x
 180: mad r1.x, r3.w, r1.x, l(1.000000)
 181: mul r2.w, r2.w, l(0.318310)
 182: mad r1.x, r1.x, r1.x, l(0.000000)
 183: div r1.x, r2.w, r1.x
 184: mul r1.x, r1.x, r1.w
 185: mul r1.x, r1.x, l(3.141593)
 186: mul r1.xz, r2.xxxx, r1.xxzx
 187: max r1.x, r1.x, l(0.000000)
 188: mad r1.w, r2.y, r2.y, l(1.000000)
 189: div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
 190: dp3 r2.x, cb0[3].xyzx, cb0[3].xyzx
 191: ne r2.x, r2.x, l(0.000000)
 192: and r2.x, r2.x, l(0x3f800000)
 193: mul r1.x, r1.x, r2.x
 194: add r0.w, -r0.w, l(1.000000)
 195: add_sat r0.w, r0.w, cb0[8].w
 196: mul r2.xyw, r1.zzzz, r6.xyxz
 197: mad r2.xyw, r7.xyxz, r4.yyyy, r2.xyxw
 198: mul r4.xyz, r6.xyzx, r1.xxxx
 199: add r1.x, -r1.y, l(1.000000)
 200: mul r1.y, r1.x, r1.x
 201: mul r1.y, r1.y, r1.y
 202: mul r1.x, r1.x, r1.y
 203: add r5.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 204: mad r1.xyz, r5.xyzx, r1.xxxx, cb0[3].xyzx
 205: mul r1.xyz, r1.xyzx, r4.xyzx
 206: mad r0.xyz, r0.xyzx, r2.xywx, r1.xyzx
 207: mul r1.xyz, r3.xyzx, r1.wwww
 208: add r2.xyw, r0.wwww, -cb0[3].xyxz
 209: mad r2.xyz, r2.zzzz, r2.xywx, cb0[3].xyzx
 210: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
 211: mov o0.w, l(1.000000)
 212: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 4 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 5 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[68], dynamicIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: ishl r1.x, cb5[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb4[r1.x + 25].xyzw
   6: mad r2.xyzw, cb4[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb4[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  16: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  19: mov r2.x, cb5[0].x
  20: add o2.xyz, r1.xyzx, -cb4[r2.x + 64].xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul r1.xyz, r1.wwww, r1.xyzx
  31: mov o5.xyz, r1.xyzx
  32: mul r1.w, r1.y, r1.y
  33: mad r1.w, r1.x, r1.x, -r1.w
  34: mul r3.xyzw, r1.yzzx, r1.xyzz
  35: dp4 r1.x, cb2[42].xyzw, r3.xyzw
  36: dp4 r1.y, cb2[43].xyzw, r3.xyzw
  37: dp4 r1.z, cb2[44].xyzw, r3.xyzw
  38: mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
  39: mov o6.w, l(0)
  40: mul r0.y, r0.y, cb1[4].x
  41: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  42: add r0.xy, r1.zzzz, r1.xwxx
  43: mul r1.xy, r0.wwww, cb4[r2.x + 66].zwzz
  44: mad o7.xy, r0.xyxx, cb4[r2.x + 66].xyxx, r1.xyxx
  45: mov o7.zw, r0.zzzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 176 math, 14 temp registers, 7 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: dp3 r2.x, v2.xyzx, v2.xyzx
  10: rsq r2.x, r2.x
  11: mul r2.yzw, r2.xxxx, v2.xxyz
  12: mov r3.x, v3.w
  13: mov r3.y, v4.w
  14: mov r3.z, v5.w
  15: mov r3.w, cb4[0].x
  16: add r4.xyz, -r3.xyzx, cb3[r3.w + 64].xyzx
  17: ishl r3.w, cb4[0].x, l(2)
  18: mov r5.x, cb3[r3.w + 8].z
  19: mov r5.y, cb3[r3.w + 9].z
  20: mov r5.z, cb3[r3.w + 10].z
  21: dp3 r3.w, r4.xyzx, r5.xyzx
  22: add r4.xyz, r3.xyzx, -cb2[25].xyzx
  23: dp3 r4.x, r4.xyzx, r4.xyzx
  24: sqrt r4.x, r4.x
  25: add r4.x, -r3.w, r4.x
  26: mad r3.w, cb2[25].w, r4.x, r3.w
  27: mad_sat r3.w, r3.w, cb2[24].z, cb2[24].w
  28: eq r4.x, cb6[0].x, l(1.000000)
  29: if_nz r4.x
  30:   eq r4.y, cb6[0].y, l(1.000000)
  31:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  32:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  33:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  34:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  35:   movc r4.yzw, r4.yyyy, r5.xxyz, r3.xxyz
  36:   add r4.yzw, r4.yyzw, -cb6[6].xxyz
  37:   mul r5.yzw, r4.yyzw, cb6[5].xxyz
  38:   mad r4.y, r5.y, l(0.250000), l(0.750000)
  39:   mad r4.z, cb6[0].z, l(0.500000), l(0.750000)
  40:   max r5.x, r4.z, r4.y
  41:   sample r5.xyzw, r5.xzwx, t5.xyzw, s1
  42: else 
  43:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r4.y, r5.xyzw, cb1[46].xyzw
  46: div r4.zw, v7.xxxy, v7.wwww
  47: sample r5.xyzw, r4.zwzz, t1.xyzw, s4
  48: add r4.y, r4.y, -r5.x
  49: mad r3.w, r3.w, r4.y, r5.x
  50: sample r5.xyzw, v1.xyxx, t2.xyzw, s3
  51: add r4.y, -cb0[9].y, l(1.000000)
  52: mad r4.y, r5.y, cb0[9].y, r4.y
  53: add r4.z, -cb0[8].w, l(1.000000)
  54: dp3 r4.w, r2.yzwy, r1.xyzx
  55: add r4.w, r4.w, r4.w
  56: mad r5.xyz, r1.xyzx, -r4.wwww, r2.yzwy
  57: mul r6.xyz, r3.wwww, cb0[2].xyzx
  58: if_nz r4.x
  59:   eq r3.w, cb6[0].y, l(1.000000)
  60:   mul r7.xyz, v4.wwww, cb6[2].xyzx
  61:   mad r7.xyz, cb6[1].xyzx, v3.wwww, r7.xyzx
  62:   mad r7.xyz, cb6[3].xyzx, v5.wwww, r7.xyzx
  63:   add r7.xyz, r7.xyzx, cb6[4].xyzx
  64:   movc r7.xyz, r3.wwww, r7.xyzx, r3.xyzx
  65:   add r7.xyz, r7.xyzx, -cb6[6].xyzx
  66:   mul r7.yzw, r7.xxyz, cb6[5].xxyz
  67:   mul r3.w, r7.y, l(0.250000)
  68:   mul r4.x, cb6[0].z, l(0.500000)
  69:   mad r4.w, -cb6[0].z, l(0.500000), l(0.250000)
  70:   max r3.w, r3.w, r4.x
  71:   min r7.x, r4.w, r3.w
  72:   sample r8.xyzw, r7.xzwx, t5.xyzw, s1
  73:   add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  74:   sample r9.xyzw, r9.xyzx, t5.xyzw, s1
  75:   add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  76:   sample r7.xyzw, r7.xyzx, t5.xyzw, s1
  77:   mov r1.w, l(1.000000)
  78:   dp4 r8.x, r8.xyzw, r1.xyzw
  79:   dp4 r8.y, r9.xyzw, r1.xyzw
  80:   dp4 r8.z, r7.xyzw, r1.xyzw
  81: else 
  82:   mov r1.w, l(1.000000)
  83:   dp4 r8.x, cb1[39].xyzw, r1.xyzw
  84:   dp4 r8.y, cb1[40].xyzw, r1.xyzw
  85:   dp4 r8.z, cb1[41].xyzw, r1.xyzw
  86: endif 
  87: add r7.xyz, r8.xyzx, v6.xyzx
  88: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  89: lt r1.w, l(0.000000), cb5[2].w
  90: if_nz r1.w
  91:   dp3 r1.w, r5.xyzx, r5.xyzx
  92:   rsq r1.w, r1.w
  93:   mul r8.xyz, r1.wwww, r5.xyzx
  94:   add r9.xyz, -r3.xyzx, cb5[0].xyzx
  95:   div r9.xyz, r9.xyzx, r8.xyzx
  96:   add r10.xyz, -r3.xyzx, cb5[1].xyzx
  97:   div r10.xyz, r10.xyzx, r8.xyzx
  98:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  99:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
 100:   min r1.w, r9.y, r9.x
 101:   min r1.w, r9.z, r1.w
 102:   add r9.xyz, r3.xyzx, -cb5[2].xyzx
 103:   mad r8.xyz, r8.xyzx, r1.wwww, r9.xyzx
 104: else 
 105:   mov r8.xyz, r5.xyzx
 106: endif 
 107: mad r1.w, -r4.z, l(0.700000), l(1.700000)
 108: mul r1.w, r1.w, r4.z
 109: mul r1.w, r1.w, l(6.000000)
 110: sample_l r8.xyzw, r8.xyzx, t3.xyzw, s0, r1.w
 111: add r3.w, r8.w, l(-1.000000)
 112: mad r3.w, cb5[3].w, r3.w, l(1.000000)
 113: log r3.w, r3.w
 114: mul r3.w, r3.w, cb5[3].y
 115: exp r3.w, r3.w
 116: mul r3.w, r3.w, cb5[3].x
 117: mul r9.xyz, r8.xyzx, r3.wwww
 118: lt r4.x, cb5[1].w, l(0.999990)
 119: if_nz r4.x
 120:   lt r4.x, l(0.000000), cb5[6].w
 121:   if_nz r4.x
 122:     dp3 r4.x, r5.xyzx, r5.xyzx
 123:     rsq r4.x, r4.x
 124:     mul r10.xyz, r4.xxxx, r5.xyzx
 125:     add r11.xyz, -r3.xyzx, cb5[4].xyzx
 126:     div r11.xyz, r11.xyzx, r10.xyzx
 127:     add r12.xyz, -r3.xyzx, cb5[5].xyzx
 128:     div r12.xyz, r12.xyzx, r10.xyzx
 129:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 130:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 131:     min r4.x, r11.y, r11.x
 132:     min r4.x, r11.z, r4.x
 133:     add r3.xyz, r3.xyzx, -cb5[6].xyzx
 134:     mad r5.xyz, r10.xyzx, r4.xxxx, r3.xyzx
 135:   endif 
 136:   sample_l r5.xyzw, r5.xyzx, t4.xyzw, s0, r1.w
 137:   add r1.w, r5.w, l(-1.000000)
 138:   mad r1.w, cb5[7].w, r1.w, l(1.000000)
 139:   log r1.w, r1.w
 140:   mul r1.w, r1.w, cb5[7].y
 141:   exp r1.w, r1.w
 142:   mul r1.w, r1.w, cb5[7].x
 143:   mul r3.xyz, r5.xyzx, r1.wwww
 144:   mad r5.xyz, r3.wwww, r8.xyzx, -r3.xyzx
 145:   mad r9.xyz, cb5[1].wwww, r5.xyzx, r3.xyzx
 146: endif 
 147: mul r3.xyz, r4.yyyy, r9.xyzx
 148: mad r5.xyz, -v2.xyzx, r2.xxxx, cb1[0].xyzx
 149: dp3 r1.w, r5.xyzx, r5.xyzx
 150: max r1.w, r1.w, l(0.001000)
 151: rsq r1.w, r1.w
 152: mul r5.xyz, r1.wwww, r5.xyzx
 153: dp3 r1.w, r1.xyzx, -r2.yzwy
 154: dp3_sat r2.x, r1.xyzx, cb1[0].xyzx
 155: dp3_sat r1.x, r1.xyzx, r5.xyzx
 156: dp3_sat r1.y, cb1[0].xyzx, r5.xyzx
 157: mul r1.z, r1.y, r1.y
 158: dp2 r1.z, r1.zzzz, r4.zzzz
 159: add r1.z, r1.z, l(-0.500000)
 160: add r2.y, -r2.x, l(1.000000)
 161: mul r2.z, r2.y, r2.y
 162: mul r2.z, r2.z, r2.z
 163: mul r2.y, r2.y, r2.z
 164: mad r2.y, r1.z, r2.y, l(1.000000)
 165: add r2.z, -|r1.w|, l(1.000000)
 166: mul r2.w, r2.z, r2.z
 167: mul r2.w, r2.w, r2.w
 168: mul r2.z, r2.z, r2.w
 169: mad r1.z, r1.z, r2.z, l(1.000000)
 170: mul r1.z, r1.z, r2.y
 171: mul r2.y, r4.z, r4.z
 172: max r2.y, r2.y, l(0.002000)
 173: add r2.w, -r2.y, l(1.000000)
 174: mad r3.w, |r1.w|, r2.w, r2.y
 175: mad r2.w, r2.x, r2.w, r2.y
 176: mul r1.w, |r1.w|, r2.w
 177: mad r1.w, r2.x, r3.w, r1.w
 178: add r1.w, r1.w, l(0.000010)
 179: div r1.w, l(0.500000), r1.w
 180: mul r2.w, r2.y, r2.y
 181: mad r3.w, r1.x, r2.w, -r1.x
 182: mad r1.x, r3.w, r1.x, l(1.000000)
 183: mul r2.w, r2.w, l(0.318310)
 184: mad r1.x, r1.x, r1.x, l(0.000000)
 185: div r1.x, r2.w, r1.x
 186: mul r1.x, r1.x, r1.w
 187: mul r1.x, r1.x, l(3.141593)
 188: mul r1.xz, r2.xxxx, r1.xxzx
 189: max r1.x, r1.x, l(0.000000)
 190: mad r1.w, r2.y, r2.y, l(1.000000)
 191: div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
 192: dp3 r2.x, cb0[3].xyzx, cb0[3].xyzx
 193: ne r2.x, r2.x, l(0.000000)
 194: and r2.x, r2.x, l(0x3f800000)
 195: mul r1.x, r1.x, r2.x
 196: add r0.w, -r0.w, l(1.000000)
 197: add_sat r0.w, r0.w, cb0[8].w
 198: mul r2.xyw, r1.zzzz, r6.xyxz
 199: mad r2.xyw, r7.xyxz, r4.yyyy, r2.xyxw
 200: mul r4.xyz, r6.xyzx, r1.xxxx
 201: add r1.x, -r1.y, l(1.000000)
 202: mul r1.y, r1.x, r1.x
 203: mul r1.y, r1.y, r1.y
 204: mul r1.x, r1.x, r1.y
 205: add r5.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 206: mad r1.xyz, r5.xyzx, r1.xxxx, cb0[3].xyzx
 207: mul r1.xyz, r1.xyzx, r4.xyzx
 208: mad r0.xyz, r0.xyzx, r2.xywx, r1.xyzx
 209: mul r1.xyz, r3.xyzx, r1.wwww
 210: add r2.xyw, r0.wwww, -cb0[3].xyxz
 211: mad r2.xyz, r2.zzzz, r2.xywx, cb0[3].xyzx
 212: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
 213: mov o0.w, l(1.000000)
 214: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON SHADOWS_SCREEN 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul o5.xyz, r1.wwww, r1.xyzx
  29: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  30: mov o6.zw, l(0,0,0,0)
  31: mul r0.y, r0.y, cb1[5].x
  32: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  33: mov o7.zw, r0.zzzw
  34: add o7.xy, r1.zzzz, r1.xwxx
  35: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 141 math, 14 temp registers, 5 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 5
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set 2D Texture "unity_Lightmap" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r2.w, v2.xyzx, v2.xyzx
  11: rsq r2.w, r2.w
  12: mul r3.xyz, r2.wwww, v2.xyzx
  13: div r4.xy, v7.xyxx, v7.wwww
  14: sample r4.xyzw, r4.xyxx, t2.xyzw, s5
  15: sample r5.xyzw, v1.xyxx, t3.xyzw, s4
  16: add r3.w, -cb0[9].y, l(1.000000)
  17: mad r3.w, r5.y, cb0[9].y, r3.w
  18: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  19: dp3 r4.z, r3.xyzx, r2.xyzx
  20: add r4.z, r4.z, r4.z
  21: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.xyzx
  22: mov r6.x, v3.w
  23: mov r6.y, v4.w
  24: mov r6.z, v5.w
  25: add r7.xyz, -r6.xyzx, cb1[4].xyzx
  26: mov r8.x, cb4[9].z
  27: mov r8.y, cb4[10].z
  28: mov r8.z, cb4[11].z
  29: dp3 r4.z, r7.xyzx, r8.xyzx
  30: add r7.xyz, r6.xyzx, -cb3[25].xyzx
  31: dp3 r4.w, r7.xyzx, r7.xyzx
  32: sqrt r4.w, r4.w
  33: add r4.w, -r4.z, r4.w
  34: mad r4.z, cb3[25].w, r4.w, r4.z
  35: mad_sat r4.z, r4.z, cb3[24].z, cb3[24].w
  36: add r4.w, -r4.x, l(1.000000)
  37: mad r4.x, r4.z, r4.w, r4.x
  38: mul r4.xzw, r4.xxxx, cb0[2].xxyz
  39: sample r7.xyzw, v6.xyxx, t4.xyzw, s0
  40: lt r5.w, l(0.000000), cb5[2].w
  41: if_nz r5.w
  42:   dp3 r5.w, r5.xyzx, r5.xyzx
  43:   rsq r5.w, r5.w
  44:   mul r8.xyz, r5.wwww, r5.xyzx
  45:   add r9.xyz, -r6.xyzx, cb5[0].xyzx
  46:   div r9.xyz, r9.xyzx, r8.xyzx
  47:   add r10.xyz, -r6.xyzx, cb5[1].xyzx
  48:   div r10.xyz, r10.xyzx, r8.xyzx
  49:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  50:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  51:   min r5.w, r9.y, r9.x
  52:   min r5.w, r9.z, r5.w
  53:   add r9.xyz, r6.xyzx, -cb5[2].xyzx
  54:   mad r8.xyz, r8.xyzx, r5.wwww, r9.xyzx
  55: else 
  56:   mov r8.xyz, r5.xyzx
  57: endif 
  58: mad r5.w, -r4.y, l(0.700000), l(1.700000)
  59: mul r5.w, r4.y, r5.w
  60: mul r5.w, r5.w, l(6.000000)
  61: sample_l r8.xyzw, r8.xyzx, t5.xyzw, s1, r5.w
  62: add r6.w, r8.w, l(-1.000000)
  63: mad r6.w, cb5[3].w, r6.w, l(1.000000)
  64: log r6.w, r6.w
  65: mul r6.w, r6.w, cb5[3].y
  66: exp r6.w, r6.w
  67: mul r6.w, r6.w, cb5[3].x
  68: mul r9.xyz, r8.xyzx, r6.wwww
  69: lt r7.w, cb5[1].w, l(0.999990)
  70: if_nz r7.w
  71:   lt r7.w, l(0.000000), cb5[6].w
  72:   if_nz r7.w
  73:     dp3 r7.w, r5.xyzx, r5.xyzx
  74:     rsq r7.w, r7.w
  75:     mul r10.xyz, r5.xyzx, r7.wwww
  76:     add r11.xyz, -r6.xyzx, cb5[4].xyzx
  77:     div r11.xyz, r11.xyzx, r10.xyzx
  78:     add r12.xyz, -r6.xyzx, cb5[5].xyzx
  79:     div r12.xyz, r12.xyzx, r10.xyzx
  80:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
  81:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  82:     min r7.w, r11.y, r11.x
  83:     min r7.w, r11.z, r7.w
  84:     add r6.xyz, r6.xyzx, -cb5[6].xyzx
  85:     mad r5.xyz, r10.xyzx, r7.wwww, r6.xyzx
  86:   endif 
  87:   sample_l r5.xyzw, r5.xyzx, t6.xyzw, s1, r5.w
  88:   add r5.w, r5.w, l(-1.000000)
  89:   mad r5.w, cb5[7].w, r5.w, l(1.000000)
  90:   log r5.w, r5.w
  91:   mul r5.w, r5.w, cb5[7].y
  92:   exp r5.w, r5.w
  93:   mul r5.w, r5.w, cb5[7].x
  94:   mul r5.xyz, r5.xyzx, r5.wwww
  95:   mad r6.xyz, r6.wwww, r8.xyzx, -r5.xyzx
  96:   mad r9.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
  97: endif 
  98: mul r5.xyz, r3.wwww, r9.xyzx
  99: mad r6.xyz, -v2.xyzx, r2.wwww, cb2[0].xyzx
 100: dp3 r2.w, r6.xyzx, r6.xyzx
 101: max r2.w, r2.w, l(0.001000)
 102: rsq r2.w, r2.w
 103: mul r6.xyz, r2.wwww, r6.xyzx
 104: dp3 r2.w, r2.xyzx, -r3.xyzx
 105: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 106: dp3_sat r2.x, r2.xyzx, r6.xyzx
 107: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 108: mul r2.z, r2.y, r2.y
 109: dp2 r2.z, r2.zzzz, r4.yyyy
 110: add r2.z, r2.z, l(-0.500000)
 111: add r3.y, -r3.x, l(1.000000)
 112: mul r3.z, r3.y, r3.y
 113: mul r3.z, r3.z, r3.z
 114: mul r3.y, r3.y, r3.z
 115: mad r3.y, r2.z, r3.y, l(1.000000)
 116: add r3.z, -|r2.w|, l(1.000000)
 117: mul r5.w, r3.z, r3.z
 118: mul r5.w, r5.w, r5.w
 119: mul r3.z, r3.z, r5.w
 120: mad r2.z, r2.z, r3.z, l(1.000000)
 121: mul r2.z, r2.z, r3.y
 122: mul r3.y, r4.y, r4.y
 123: max r3.y, r3.y, l(0.002000)
 124: add r4.y, -r3.y, l(1.000000)
 125: mad r5.w, |r2.w|, r4.y, r3.y
 126: mad r4.y, r3.x, r4.y, r3.y
 127: mul r2.w, |r2.w|, r4.y
 128: mad r2.w, r3.x, r5.w, r2.w
 129: add r2.w, r2.w, l(0.000010)
 130: div r2.w, l(0.500000), r2.w
 131: mul r4.y, r3.y, r3.y
 132: mad r5.w, r2.x, r4.y, -r2.x
 133: mad r2.x, r5.w, r2.x, l(1.000000)
 134: mul r4.y, r4.y, l(0.318310)
 135: mad r2.x, r2.x, r2.x, l(0.000000)
 136: div r2.x, r4.y, r2.x
 137: mul r2.x, r2.x, r2.w
 138: mul r2.x, r2.x, l(3.141593)
 139: mul r2.xz, r3.xxxx, r2.xxzx
 140: max r2.x, r2.x, l(0.000000)
 141: mad r2.w, r3.y, r3.y, l(1.000000)
 142: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 143: dp3 r3.x, r0.xyzx, r0.xyzx
 144: ne r3.x, r3.x, l(0.000000)
 145: and r3.x, r3.x, l(0x3f800000)
 146: mul r2.x, r2.x, r3.x
 147: mad r0.w, r0.w, cb0[9].x, -r1.w
 148: add_sat r0.w, r0.w, l(1.000000)
 149: mul r6.xyz, r2.zzzz, r4.xzwx
 150: mad r3.xyw, r7.xyxz, r3.wwww, r6.xyxz
 151: mul r4.xyz, r4.xzwx, r2.xxxx
 152: add r1.w, -r2.y, l(1.000000)
 153: mul r2.x, r1.w, r1.w
 154: mul r2.x, r2.x, r2.x
 155: mul r1.w, r1.w, r2.x
 156: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 157: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 158: mul r2.xyz, r2.xyzx, r4.xyzx
 159: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 160: mul r2.xyz, r5.xyzx, r2.wwww
 161: add r3.xyw, -r0.xyxz, r0.wwww
 162: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 163: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 164: mov o0.w, l(1.000000)
 165: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 5 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[68], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  16: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  19: mov r2.x, cb4[0].x
  20: add o2.xyz, r1.xyzx, -cb3[r2.x + 64].xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mad o6.xy, v3.xyxx, cb5[0].xyxx, cb5[0].zwzz
  32: mov o6.zw, l(0,0,0,0)
  33: mul r0.y, r0.y, cb1[4].x
  34: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  35: add r0.xy, r1.zzzz, r1.xwxx
  36: mul r1.xy, r0.wwww, cb3[r2.x + 66].zwzz
  37: mad o7.xy, r0.xyxx, cb3[r2.x + 66].xyxx, r1.xyxx
  38: mov o7.zw, r0.zzzw
  39: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 142 math, 14 temp registers, 5 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 5
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set 2D Texture "unity_Lightmap" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r2.w, v2.xyzx, v2.xyzx
  11: rsq r2.w, r2.w
  12: mul r3.xyz, r2.wwww, v2.xyzx
  13: div r4.xy, v7.xyxx, v7.wwww
  14: sample r4.xyzw, r4.xyxx, t2.xyzw, s5
  15: sample r5.xyzw, v1.xyxx, t3.xyzw, s4
  16: add r3.w, -cb0[9].y, l(1.000000)
  17: mad r3.w, r5.y, cb0[9].y, r3.w
  18: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  19: dp3 r4.z, r3.xyzx, r2.xyzx
  20: add r4.z, r4.z, r4.z
  21: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.xyzx
  22: mov r6.x, v3.w
  23: mov r6.y, v4.w
  24: mov r6.z, v5.w
  25: mov r4.z, cb4[0].x
  26: add r7.xyz, -r6.xyzx, cb3[r4.z + 64].xyzx
  27: ishl r4.z, cb4[0].x, l(2)
  28: mov r8.x, cb3[r4.z + 8].z
  29: mov r8.y, cb3[r4.z + 9].z
  30: mov r8.z, cb3[r4.z + 10].z
  31: dp3 r4.z, r7.xyzx, r8.xyzx
  32: add r7.xyz, r6.xyzx, -cb2[25].xyzx
  33: dp3 r4.w, r7.xyzx, r7.xyzx
  34: sqrt r4.w, r4.w
  35: add r4.w, -r4.z, r4.w
  36: mad r4.z, cb2[25].w, r4.w, r4.z
  37: mad_sat r4.z, r4.z, cb2[24].z, cb2[24].w
  38: add r4.w, -r4.x, l(1.000000)
  39: mad r4.x, r4.z, r4.w, r4.x
  40: mul r4.xzw, r4.xxxx, cb0[2].xxyz
  41: sample r7.xyzw, v6.xyxx, t4.xyzw, s0
  42: lt r5.w, l(0.000000), cb5[2].w
  43: if_nz r5.w
  44:   dp3 r5.w, r5.xyzx, r5.xyzx
  45:   rsq r5.w, r5.w
  46:   mul r8.xyz, r5.wwww, r5.xyzx
  47:   add r9.xyz, -r6.xyzx, cb5[0].xyzx
  48:   div r9.xyz, r9.xyzx, r8.xyzx
  49:   add r10.xyz, -r6.xyzx, cb5[1].xyzx
  50:   div r10.xyz, r10.xyzx, r8.xyzx
  51:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  52:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  53:   min r5.w, r9.y, r9.x
  54:   min r5.w, r9.z, r5.w
  55:   add r9.xyz, r6.xyzx, -cb5[2].xyzx
  56:   mad r8.xyz, r8.xyzx, r5.wwww, r9.xyzx
  57: else 
  58:   mov r8.xyz, r5.xyzx
  59: endif 
  60: mad r5.w, -r4.y, l(0.700000), l(1.700000)
  61: mul r5.w, r4.y, r5.w
  62: mul r5.w, r5.w, l(6.000000)
  63: sample_l r8.xyzw, r8.xyzx, t5.xyzw, s1, r5.w
  64: add r6.w, r8.w, l(-1.000000)
  65: mad r6.w, cb5[3].w, r6.w, l(1.000000)
  66: log r6.w, r6.w
  67: mul r6.w, r6.w, cb5[3].y
  68: exp r6.w, r6.w
  69: mul r6.w, r6.w, cb5[3].x
  70: mul r9.xyz, r8.xyzx, r6.wwww
  71: lt r7.w, cb5[1].w, l(0.999990)
  72: if_nz r7.w
  73:   lt r7.w, l(0.000000), cb5[6].w
  74:   if_nz r7.w
  75:     dp3 r7.w, r5.xyzx, r5.xyzx
  76:     rsq r7.w, r7.w
  77:     mul r10.xyz, r5.xyzx, r7.wwww
  78:     add r11.xyz, -r6.xyzx, cb5[4].xyzx
  79:     div r11.xyz, r11.xyzx, r10.xyzx
  80:     add r12.xyz, -r6.xyzx, cb5[5].xyzx
  81:     div r12.xyz, r12.xyzx, r10.xyzx
  82:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
  83:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  84:     min r7.w, r11.y, r11.x
  85:     min r7.w, r11.z, r7.w
  86:     add r6.xyz, r6.xyzx, -cb5[6].xyzx
  87:     mad r5.xyz, r10.xyzx, r7.wwww, r6.xyzx
  88:   endif 
  89:   sample_l r5.xyzw, r5.xyzx, t6.xyzw, s1, r5.w
  90:   add r5.w, r5.w, l(-1.000000)
  91:   mad r5.w, cb5[7].w, r5.w, l(1.000000)
  92:   log r5.w, r5.w
  93:   mul r5.w, r5.w, cb5[7].y
  94:   exp r5.w, r5.w
  95:   mul r5.w, r5.w, cb5[7].x
  96:   mul r5.xyz, r5.xyzx, r5.wwww
  97:   mad r6.xyz, r6.wwww, r8.xyzx, -r5.xyzx
  98:   mad r9.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
  99: endif 
 100: mul r5.xyz, r3.wwww, r9.xyzx
 101: mad r6.xyz, -v2.xyzx, r2.wwww, cb1[0].xyzx
 102: dp3 r2.w, r6.xyzx, r6.xyzx
 103: max r2.w, r2.w, l(0.001000)
 104: rsq r2.w, r2.w
 105: mul r6.xyz, r2.wwww, r6.xyzx
 106: dp3 r2.w, r2.xyzx, -r3.xyzx
 107: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 108: dp3_sat r2.x, r2.xyzx, r6.xyzx
 109: dp3_sat r2.y, cb1[0].xyzx, r6.xyzx
 110: mul r2.z, r2.y, r2.y
 111: dp2 r2.z, r2.zzzz, r4.yyyy
 112: add r2.z, r2.z, l(-0.500000)
 113: add r3.y, -r3.x, l(1.000000)
 114: mul r3.z, r3.y, r3.y
 115: mul r3.z, r3.z, r3.z
 116: mul r3.y, r3.y, r3.z
 117: mad r3.y, r2.z, r3.y, l(1.000000)
 118: add r3.z, -|r2.w|, l(1.000000)
 119: mul r5.w, r3.z, r3.z
 120: mul r5.w, r5.w, r5.w
 121: mul r3.z, r3.z, r5.w
 122: mad r2.z, r2.z, r3.z, l(1.000000)
 123: mul r2.z, r2.z, r3.y
 124: mul r3.y, r4.y, r4.y
 125: max r3.y, r3.y, l(0.002000)
 126: add r4.y, -r3.y, l(1.000000)
 127: mad r5.w, |r2.w|, r4.y, r3.y
 128: mad r4.y, r3.x, r4.y, r3.y
 129: mul r2.w, |r2.w|, r4.y
 130: mad r2.w, r3.x, r5.w, r2.w
 131: add r2.w, r2.w, l(0.000010)
 132: div r2.w, l(0.500000), r2.w
 133: mul r4.y, r3.y, r3.y
 134: mad r5.w, r2.x, r4.y, -r2.x
 135: mad r2.x, r5.w, r2.x, l(1.000000)
 136: mul r4.y, r4.y, l(0.318310)
 137: mad r2.x, r2.x, r2.x, l(0.000000)
 138: div r2.x, r4.y, r2.x
 139: mul r2.x, r2.x, r2.w
 140: mul r2.x, r2.x, l(3.141593)
 141: mul r2.xz, r3.xxxx, r2.xxzx
 142: max r2.x, r2.x, l(0.000000)
 143: mad r2.w, r3.y, r3.y, l(1.000000)
 144: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 145: dp3 r3.x, r0.xyzx, r0.xyzx
 146: ne r3.x, r3.x, l(0.000000)
 147: and r3.x, r3.x, l(0x3f800000)
 148: mul r2.x, r2.x, r3.x
 149: mad r0.w, r0.w, cb0[9].x, -r1.w
 150: add_sat r0.w, r0.w, l(1.000000)
 151: mul r6.xyz, r2.zzzz, r4.xzwx
 152: mad r3.xyw, r7.xyxz, r3.wwww, r6.xyxz
 153: mul r4.xyz, r4.xzwx, r2.xxxx
 154: add r1.w, -r2.y, l(1.000000)
 155: mul r2.x, r1.w, r1.w
 156: mul r2.x, r2.x, r2.x
 157: mul r1.w, r1.w, r2.x
 158: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 159: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 160: mul r2.xyz, r2.xyzx, r4.xyzx
 161: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 162: mul r2.xyz, r5.xyzx, r2.wwww
 163: add r3.xyw, -r0.xyxz, r0.wwww
 164: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 165: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 166: mov o0.w, l(1.000000)
 167: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON SHADOWS_SCREEN 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 36 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov o3.w, r1.x
  20: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  21: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  22: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  23: dp3 r1.x, r2.xyzx, r2.xyzx
  24: rsq r1.x, r1.x
  25: mul r2.xyz, r1.xxxx, r2.xyzx
  26: mov o3.xyz, r2.xyzx
  27: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.x, r3.xyzx, r3.xyzx
  31: rsq r1.x, r1.x
  32: mul r3.xyz, r1.xxxx, r3.xyzx
  33: mul r4.xyz, r2.yzxy, r3.zxyz
  34: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  35: mov o5.xyz, r3.xyzx
  36: mul r1.x, v4.w, cb2[9].w
  37: mul o4.xyz, r1.xxxx, r2.xyzx
  38: mov o4.w, r1.y
  39: mov o5.w, r1.z
  40: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  41: mov o6.zw, l(0,0,0,0)
  42: mul r0.y, r0.y, cb1[5].x
  43: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  44: mov o7.zw, r0.zzzw
  45: add o7.xy, r1.zzzz, r1.xwxx
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 151 math, 14 temp registers, 6 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 3 sampler slot 6
Set 2D Texture "_OcclusionMap" to slot 4 sampler slot 5
Set 2D Texture "unity_Lightmap" to slot 5 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 6 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 7 sampler slot -1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r2.z, r2.xyxx, r2.xyxx
  12: min r2.z, r2.z, l(1.000000)
  13: add r2.z, -r2.z, l(1.000000)
  14: sqrt r2.z, r2.z
  15: mul r3.xyz, r2.yyyy, v4.xyzx
  16: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  17: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  18: dp3 r2.w, r2.xyzx, r2.xyzx
  19: rsq r2.w, r2.w
  20: mul r2.xyz, r2.wwww, r2.xyzx
  21: dp3 r2.w, v2.xyzx, v2.xyzx
  22: rsq r2.w, r2.w
  23: mul r3.xyz, r2.wwww, v2.xyzx
  24: div r4.xy, v7.xyxx, v7.wwww
  25: sample r4.xyzw, r4.xyxx, t3.xyzw, s6
  26: sample r5.xyzw, v1.xyxx, t4.xyzw, s5
  27: add r3.w, -cb0[9].y, l(1.000000)
  28: mad r3.w, r5.y, cb0[9].y, r3.w
  29: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  30: dp3 r4.z, r3.xyzx, r2.xyzx
  31: add r4.z, r4.z, r4.z
  32: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.xyzx
  33: mov r6.x, v3.w
  34: mov r6.y, v4.w
  35: mov r6.z, v5.w
  36: add r7.xyz, -r6.xyzx, cb1[4].xyzx
  37: mov r8.x, cb4[9].z
  38: mov r8.y, cb4[10].z
  39: mov r8.z, cb4[11].z
  40: dp3 r4.z, r7.xyzx, r8.xyzx
  41: add r7.xyz, r6.xyzx, -cb3[25].xyzx
  42: dp3 r4.w, r7.xyzx, r7.xyzx
  43: sqrt r4.w, r4.w
  44: add r4.w, -r4.z, r4.w
  45: mad r4.z, cb3[25].w, r4.w, r4.z
  46: mad_sat r4.z, r4.z, cb3[24].z, cb3[24].w
  47: add r4.w, -r4.x, l(1.000000)
  48: mad r4.x, r4.z, r4.w, r4.x
  49: mul r4.xzw, r4.xxxx, cb0[2].xxyz
  50: sample r7.xyzw, v6.xyxx, t5.xyzw, s0
  51: lt r5.w, l(0.000000), cb5[2].w
  52: if_nz r5.w
  53:   dp3 r5.w, r5.xyzx, r5.xyzx
  54:   rsq r5.w, r5.w
  55:   mul r8.xyz, r5.wwww, r5.xyzx
  56:   add r9.xyz, -r6.xyzx, cb5[0].xyzx
  57:   div r9.xyz, r9.xyzx, r8.xyzx
  58:   add r10.xyz, -r6.xyzx, cb5[1].xyzx
  59:   div r10.xyz, r10.xyzx, r8.xyzx
  60:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  61:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  62:   min r5.w, r9.y, r9.x
  63:   min r5.w, r9.z, r5.w
  64:   add r9.xyz, r6.xyzx, -cb5[2].xyzx
  65:   mad r8.xyz, r8.xyzx, r5.wwww, r9.xyzx
  66: else 
  67:   mov r8.xyz, r5.xyzx
  68: endif 
  69: mad r5.w, -r4.y, l(0.700000), l(1.700000)
  70: mul r5.w, r4.y, r5.w
  71: mul r5.w, r5.w, l(6.000000)
  72: sample_l r8.xyzw, r8.xyzx, t6.xyzw, s1, r5.w
  73: add r6.w, r8.w, l(-1.000000)
  74: mad r6.w, cb5[3].w, r6.w, l(1.000000)
  75: log r6.w, r6.w
  76: mul r6.w, r6.w, cb5[3].y
  77: exp r6.w, r6.w
  78: mul r6.w, r6.w, cb5[3].x
  79: mul r9.xyz, r8.xyzx, r6.wwww
  80: lt r7.w, cb5[1].w, l(0.999990)
  81: if_nz r7.w
  82:   lt r7.w, l(0.000000), cb5[6].w
  83:   if_nz r7.w
  84:     dp3 r7.w, r5.xyzx, r5.xyzx
  85:     rsq r7.w, r7.w
  86:     mul r10.xyz, r5.xyzx, r7.wwww
  87:     add r11.xyz, -r6.xyzx, cb5[4].xyzx
  88:     div r11.xyz, r11.xyzx, r10.xyzx
  89:     add r12.xyz, -r6.xyzx, cb5[5].xyzx
  90:     div r12.xyz, r12.xyzx, r10.xyzx
  91:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
  92:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  93:     min r7.w, r11.y, r11.x
  94:     min r7.w, r11.z, r7.w
  95:     add r6.xyz, r6.xyzx, -cb5[6].xyzx
  96:     mad r5.xyz, r10.xyzx, r7.wwww, r6.xyzx
  97:   endif 
  98:   sample_l r5.xyzw, r5.xyzx, t7.xyzw, s1, r5.w
  99:   add r5.w, r5.w, l(-1.000000)
 100:   mad r5.w, cb5[7].w, r5.w, l(1.000000)
 101:   log r5.w, r5.w
 102:   mul r5.w, r5.w, cb5[7].y
 103:   exp r5.w, r5.w
 104:   mul r5.w, r5.w, cb5[7].x
 105:   mul r5.xyz, r5.xyzx, r5.wwww
 106:   mad r6.xyz, r6.wwww, r8.xyzx, -r5.xyzx
 107:   mad r9.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
 108: endif 
 109: mul r5.xyz, r3.wwww, r9.xyzx
 110: mad r6.xyz, -v2.xyzx, r2.wwww, cb2[0].xyzx
 111: dp3 r2.w, r6.xyzx, r6.xyzx
 112: max r2.w, r2.w, l(0.001000)
 113: rsq r2.w, r2.w
 114: mul r6.xyz, r2.wwww, r6.xyzx
 115: dp3 r2.w, r2.xyzx, -r3.xyzx
 116: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 117: dp3_sat r2.x, r2.xyzx, r6.xyzx
 118: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 119: mul r2.z, r2.y, r2.y
 120: dp2 r2.z, r2.zzzz, r4.yyyy
 121: add r2.z, r2.z, l(-0.500000)
 122: add r3.y, -r3.x, l(1.000000)
 123: mul r3.z, r3.y, r3.y
 124: mul r3.z, r3.z, r3.z
 125: mul r3.y, r3.y, r3.z
 126: mad r3.y, r2.z, r3.y, l(1.000000)
 127: add r3.z, -|r2.w|, l(1.000000)
 128: mul r5.w, r3.z, r3.z
 129: mul r5.w, r5.w, r5.w
 130: mul r3.z, r3.z, r5.w
 131: mad r2.z, r2.z, r3.z, l(1.000000)
 132: mul r2.z, r2.z, r3.y
 133: mul r3.y, r4.y, r4.y
 134: max r3.y, r3.y, l(0.002000)
 135: add r4.y, -r3.y, l(1.000000)
 136: mad r5.w, |r2.w|, r4.y, r3.y
 137: mad r4.y, r3.x, r4.y, r3.y
 138: mul r2.w, |r2.w|, r4.y
 139: mad r2.w, r3.x, r5.w, r2.w
 140: add r2.w, r2.w, l(0.000010)
 141: div r2.w, l(0.500000), r2.w
 142: mul r4.y, r3.y, r3.y
 143: mad r5.w, r2.x, r4.y, -r2.x
 144: mad r2.x, r5.w, r2.x, l(1.000000)
 145: mul r4.y, r4.y, l(0.318310)
 146: mad r2.x, r2.x, r2.x, l(0.000000)
 147: div r2.x, r4.y, r2.x
 148: mul r2.x, r2.x, r2.w
 149: mul r2.x, r2.x, l(3.141593)
 150: mul r2.xz, r3.xxxx, r2.xxzx
 151: max r2.x, r2.x, l(0.000000)
 152: mad r2.w, r3.y, r3.y, l(1.000000)
 153: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 154: dp3 r3.x, r0.xyzx, r0.xyzx
 155: ne r3.x, r3.x, l(0.000000)
 156: and r3.x, r3.x, l(0x3f800000)
 157: mul r2.x, r2.x, r3.x
 158: mad r0.w, r0.w, cb0[9].x, -r1.w
 159: add_sat r0.w, r0.w, l(1.000000)
 160: mul r6.xyz, r2.zzzz, r4.xzwx
 161: mad r3.xyw, r7.xyxz, r3.wwww, r6.xyxz
 162: mul r4.xyz, r4.xzwx, r2.xxxx
 163: add r1.w, -r2.y, l(1.000000)
 164: mul r2.x, r1.w, r1.w
 165: mul r2.x, r2.x, r2.x
 166: mul r1.w, r1.w, r2.x
 167: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 168: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 169: mul r2.xyz, r2.xyzx, r4.xyzx
 170: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 171: mul r2.xyz, r5.xyzx, r2.wwww
 172: add r3.xyw, -r0.xyxz, r0.wwww
 173: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 174: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 175: mov o0.w, l(1.000000)
 176: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 5 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[68], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  16: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  19: mov r1.w, cb4[0].x
  20: add o2.xyz, r1.xyzx, -cb3[r1.w + 64].xyzx
  21: mov o3.w, r1.x
  22: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  23: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  24: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  25: dp3 r1.x, r2.xyzx, r2.xyzx
  26: rsq r1.x, r1.x
  27: mul r2.xyz, r1.xxxx, r2.xyzx
  28: mov o3.xyz, r2.xyzx
  29: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  30: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  31: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  32: dp3 r1.x, r3.xyzx, r3.xyzx
  33: rsq r1.x, r1.x
  34: mul r3.xyz, r1.xxxx, r3.xyzx
  35: mul r4.xyz, r2.yzxy, r3.zxyz
  36: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r3.xyzx
  38: mul r1.x, v4.w, cb2[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r1.y
  41: mov o5.w, r1.z
  42: mad o6.xy, v3.xyxx, cb5[0].xyxx, cb5[0].zwzz
  43: mov o6.zw, l(0,0,0,0)
  44: mul r0.y, r0.y, cb1[4].x
  45: mul r2.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  46: add r0.xy, r2.zzzz, r2.xwxx
  47: mul r1.xy, r0.wwww, cb3[r1.w + 66].zwzz
  48: mad o7.xy, r0.xyxx, cb3[r1.w + 66].xyxx, r1.xyxx
  49: mov o7.zw, r0.zzzw
  50: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 152 math, 14 temp registers, 6 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 3 sampler slot 6
Set 2D Texture "_OcclusionMap" to slot 4 sampler slot 5
Set 2D Texture "unity_Lightmap" to slot 5 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 6 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 7 sampler slot -1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r2.z, r2.xyxx, r2.xyxx
  12: min r2.z, r2.z, l(1.000000)
  13: add r2.z, -r2.z, l(1.000000)
  14: sqrt r2.z, r2.z
  15: mul r3.xyz, r2.yyyy, v4.xyzx
  16: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  17: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  18: dp3 r2.w, r2.xyzx, r2.xyzx
  19: rsq r2.w, r2.w
  20: mul r2.xyz, r2.wwww, r2.xyzx
  21: dp3 r2.w, v2.xyzx, v2.xyzx
  22: rsq r2.w, r2.w
  23: mul r3.xyz, r2.wwww, v2.xyzx
  24: div r4.xy, v7.xyxx, v7.wwww
  25: sample r4.xyzw, r4.xyxx, t3.xyzw, s6
  26: sample r5.xyzw, v1.xyxx, t4.xyzw, s5
  27: add r3.w, -cb0[9].y, l(1.000000)
  28: mad r3.w, r5.y, cb0[9].y, r3.w
  29: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  30: dp3 r4.z, r3.xyzx, r2.xyzx
  31: add r4.z, r4.z, r4.z
  32: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.xyzx
  33: mov r6.x, v3.w
  34: mov r6.y, v4.w
  35: mov r6.z, v5.w
  36: mov r4.z, cb4[0].x
  37: add r7.xyz, -r6.xyzx, cb3[r4.z + 64].xyzx
  38: ishl r4.z, cb4[0].x, l(2)
  39: mov r8.x, cb3[r4.z + 8].z
  40: mov r8.y, cb3[r4.z + 9].z
  41: mov r8.z, cb3[r4.z + 10].z
  42: dp3 r4.z, r7.xyzx, r8.xyzx
  43: add r7.xyz, r6.xyzx, -cb2[25].xyzx
  44: dp3 r4.w, r7.xyzx, r7.xyzx
  45: sqrt r4.w, r4.w
  46: add r4.w, -r4.z, r4.w
  47: mad r4.z, cb2[25].w, r4.w, r4.z
  48: mad_sat r4.z, r4.z, cb2[24].z, cb2[24].w
  49: add r4.w, -r4.x, l(1.000000)
  50: mad r4.x, r4.z, r4.w, r4.x
  51: mul r4.xzw, r4.xxxx, cb0[2].xxyz
  52: sample r7.xyzw, v6.xyxx, t5.xyzw, s0
  53: lt r5.w, l(0.000000), cb5[2].w
  54: if_nz r5.w
  55:   dp3 r5.w, r5.xyzx, r5.xyzx
  56:   rsq r5.w, r5.w
  57:   mul r8.xyz, r5.wwww, r5.xyzx
  58:   add r9.xyz, -r6.xyzx, cb5[0].xyzx
  59:   div r9.xyz, r9.xyzx, r8.xyzx
  60:   add r10.xyz, -r6.xyzx, cb5[1].xyzx
  61:   div r10.xyz, r10.xyzx, r8.xyzx
  62:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  63:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  64:   min r5.w, r9.y, r9.x
  65:   min r5.w, r9.z, r5.w
  66:   add r9.xyz, r6.xyzx, -cb5[2].xyzx
  67:   mad r8.xyz, r8.xyzx, r5.wwww, r9.xyzx
  68: else 
  69:   mov r8.xyz, r5.xyzx
  70: endif 
  71: mad r5.w, -r4.y, l(0.700000), l(1.700000)
  72: mul r5.w, r4.y, r5.w
  73: mul r5.w, r5.w, l(6.000000)
  74: sample_l r8.xyzw, r8.xyzx, t6.xyzw, s1, r5.w
  75: add r6.w, r8.w, l(-1.000000)
  76: mad r6.w, cb5[3].w, r6.w, l(1.000000)
  77: log r6.w, r6.w
  78: mul r6.w, r6.w, cb5[3].y
  79: exp r6.w, r6.w
  80: mul r6.w, r6.w, cb5[3].x
  81: mul r9.xyz, r8.xyzx, r6.wwww
  82: lt r7.w, cb5[1].w, l(0.999990)
  83: if_nz r7.w
  84:   lt r7.w, l(0.000000), cb5[6].w
  85:   if_nz r7.w
  86:     dp3 r7.w, r5.xyzx, r5.xyzx
  87:     rsq r7.w, r7.w
  88:     mul r10.xyz, r5.xyzx, r7.wwww
  89:     add r11.xyz, -r6.xyzx, cb5[4].xyzx
  90:     div r11.xyz, r11.xyzx, r10.xyzx
  91:     add r12.xyz, -r6.xyzx, cb5[5].xyzx
  92:     div r12.xyz, r12.xyzx, r10.xyzx
  93:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
  94:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  95:     min r7.w, r11.y, r11.x
  96:     min r7.w, r11.z, r7.w
  97:     add r6.xyz, r6.xyzx, -cb5[6].xyzx
  98:     mad r5.xyz, r10.xyzx, r7.wwww, r6.xyzx
  99:   endif 
 100:   sample_l r5.xyzw, r5.xyzx, t7.xyzw, s1, r5.w
 101:   add r5.w, r5.w, l(-1.000000)
 102:   mad r5.w, cb5[7].w, r5.w, l(1.000000)
 103:   log r5.w, r5.w
 104:   mul r5.w, r5.w, cb5[7].y
 105:   exp r5.w, r5.w
 106:   mul r5.w, r5.w, cb5[7].x
 107:   mul r5.xyz, r5.xyzx, r5.wwww
 108:   mad r6.xyz, r6.wwww, r8.xyzx, -r5.xyzx
 109:   mad r9.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
 110: endif 
 111: mul r5.xyz, r3.wwww, r9.xyzx
 112: mad r6.xyz, -v2.xyzx, r2.wwww, cb1[0].xyzx
 113: dp3 r2.w, r6.xyzx, r6.xyzx
 114: max r2.w, r2.w, l(0.001000)
 115: rsq r2.w, r2.w
 116: mul r6.xyz, r2.wwww, r6.xyzx
 117: dp3 r2.w, r2.xyzx, -r3.xyzx
 118: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 119: dp3_sat r2.x, r2.xyzx, r6.xyzx
 120: dp3_sat r2.y, cb1[0].xyzx, r6.xyzx
 121: mul r2.z, r2.y, r2.y
 122: dp2 r2.z, r2.zzzz, r4.yyyy
 123: add r2.z, r2.z, l(-0.500000)
 124: add r3.y, -r3.x, l(1.000000)
 125: mul r3.z, r3.y, r3.y
 126: mul r3.z, r3.z, r3.z
 127: mul r3.y, r3.y, r3.z
 128: mad r3.y, r2.z, r3.y, l(1.000000)
 129: add r3.z, -|r2.w|, l(1.000000)
 130: mul r5.w, r3.z, r3.z
 131: mul r5.w, r5.w, r5.w
 132: mul r3.z, r3.z, r5.w
 133: mad r2.z, r2.z, r3.z, l(1.000000)
 134: mul r2.z, r2.z, r3.y
 135: mul r3.y, r4.y, r4.y
 136: max r3.y, r3.y, l(0.002000)
 137: add r4.y, -r3.y, l(1.000000)
 138: mad r5.w, |r2.w|, r4.y, r3.y
 139: mad r4.y, r3.x, r4.y, r3.y
 140: mul r2.w, |r2.w|, r4.y
 141: mad r2.w, r3.x, r5.w, r2.w
 142: add r2.w, r2.w, l(0.000010)
 143: div r2.w, l(0.500000), r2.w
 144: mul r4.y, r3.y, r3.y
 145: mad r5.w, r2.x, r4.y, -r2.x
 146: mad r2.x, r5.w, r2.x, l(1.000000)
 147: mul r4.y, r4.y, l(0.318310)
 148: mad r2.x, r2.x, r2.x, l(0.000000)
 149: div r2.x, r4.y, r2.x
 150: mul r2.x, r2.x, r2.w
 151: mul r2.x, r2.x, l(3.141593)
 152: mul r2.xz, r3.xxxx, r2.xxzx
 153: max r2.x, r2.x, l(0.000000)
 154: mad r2.w, r3.y, r3.y, l(1.000000)
 155: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 156: dp3 r3.x, r0.xyzx, r0.xyzx
 157: ne r3.x, r3.x, l(0.000000)
 158: and r3.x, r3.x, l(0x3f800000)
 159: mul r2.x, r2.x, r3.x
 160: mad r0.w, r0.w, cb0[9].x, -r1.w
 161: add_sat r0.w, r0.w, l(1.000000)
 162: mul r6.xyz, r2.zzzz, r4.xzwx
 163: mad r3.xyw, r7.xyxz, r3.wwww, r6.xyxz
 164: mul r4.xyz, r4.xzwx, r2.xxxx
 165: add r1.w, -r2.y, l(1.000000)
 166: mul r2.x, r1.w, r1.w
 167: mul r2.x, r2.x, r2.x
 168: mul r1.w, r1.w, r2.x
 169: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 170: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 171: mul r2.xyz, r2.xyzx, r4.xyzx
 172: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 173: mul r2.xyz, r5.xyzx, r2.wwww
 174: add r3.xyw, -r0.xyxz, r0.wwww
 175: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 176: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 177: mov o0.w, l(1.000000)
 178: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul o5.xyz, r1.wwww, r1.xyzx
  29: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  30: mov o6.zw, l(0,0,0,0)
  31: mul r0.y, r0.y, cb1[5].x
  32: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  33: mov o7.zw, r0.zzzw
  34: add o7.xy, r1.zzzz, r1.xwxx
  35: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 141 math, 13 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set 2D Texture "unity_Lightmap" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r2.xyz, r1.wwww, v2.xyzx
  12: div r3.xy, v7.xyxx, v7.wwww
  13: sample r3.xyzw, r3.xyxx, t1.xyzw, s4
  14: sample r4.xyzw, v1.xyxx, t2.xyzw, s3
  15: add r2.w, -cb0[9].y, l(1.000000)
  16: mad r2.w, r4.y, cb0[9].y, r2.w
  17: add r3.y, -cb0[8].w, l(1.000000)
  18: dp3 r3.z, r2.xyzx, r1.xyzx
  19: add r3.z, r3.z, r3.z
  20: mad r4.xyz, r1.xyzx, -r3.zzzz, r2.xyzx
  21: mov r5.x, v3.w
  22: mov r5.y, v4.w
  23: mov r5.z, v5.w
  24: add r6.xyz, -r5.xyzx, cb1[4].xyzx
  25: mov r7.x, cb4[9].z
  26: mov r7.y, cb4[10].z
  27: mov r7.z, cb4[11].z
  28: dp3 r3.z, r6.xyzx, r7.xyzx
  29: add r6.xyz, r5.xyzx, -cb3[25].xyzx
  30: dp3 r3.w, r6.xyzx, r6.xyzx
  31: sqrt r3.w, r3.w
  32: add r3.w, -r3.z, r3.w
  33: mad r3.z, cb3[25].w, r3.w, r3.z
  34: mad_sat r3.z, r3.z, cb3[24].z, cb3[24].w
  35: add r3.w, -r3.x, l(1.000000)
  36: mad r3.x, r3.z, r3.w, r3.x
  37: mul r3.xzw, r3.xxxx, cb0[2].xxyz
  38: sample r6.xyzw, v6.xyxx, t3.xyzw, s0
  39: lt r4.w, l(0.000000), cb5[2].w
  40: if_nz r4.w
  41:   dp3 r4.w, r4.xyzx, r4.xyzx
  42:   rsq r4.w, r4.w
  43:   mul r7.xyz, r4.wwww, r4.xyzx
  44:   add r8.xyz, -r5.xyzx, cb5[0].xyzx
  45:   div r8.xyz, r8.xyzx, r7.xyzx
  46:   add r9.xyz, -r5.xyzx, cb5[1].xyzx
  47:   div r9.xyz, r9.xyzx, r7.xyzx
  48:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  49:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  50:   min r4.w, r8.y, r8.x
  51:   min r4.w, r8.z, r4.w
  52:   add r8.xyz, r5.xyzx, -cb5[2].xyzx
  53:   mad r7.xyz, r7.xyzx, r4.wwww, r8.xyzx
  54: else 
  55:   mov r7.xyz, r4.xyzx
  56: endif 
  57: mad r4.w, -r3.y, l(0.700000), l(1.700000)
  58: mul r4.w, r3.y, r4.w
  59: mul r4.w, r4.w, l(6.000000)
  60: sample_l r7.xyzw, r7.xyzx, t4.xyzw, s1, r4.w
  61: add r5.w, r7.w, l(-1.000000)
  62: mad r5.w, cb5[3].w, r5.w, l(1.000000)
  63: log r5.w, r5.w
  64: mul r5.w, r5.w, cb5[3].y
  65: exp r5.w, r5.w
  66: mul r5.w, r5.w, cb5[3].x
  67: mul r8.xyz, r7.xyzx, r5.wwww
  68: lt r6.w, cb5[1].w, l(0.999990)
  69: if_nz r6.w
  70:   lt r6.w, l(0.000000), cb5[6].w
  71:   if_nz r6.w
  72:     dp3 r6.w, r4.xyzx, r4.xyzx
  73:     rsq r6.w, r6.w
  74:     mul r9.xyz, r4.xyzx, r6.wwww
  75:     add r10.xyz, -r5.xyzx, cb5[4].xyzx
  76:     div r10.xyz, r10.xyzx, r9.xyzx
  77:     add r11.xyz, -r5.xyzx, cb5[5].xyzx
  78:     div r11.xyz, r11.xyzx, r9.xyzx
  79:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  80:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  81:     min r6.w, r10.y, r10.x
  82:     min r6.w, r10.z, r6.w
  83:     add r5.xyz, r5.xyzx, -cb5[6].xyzx
  84:     mad r4.xyz, r9.xyzx, r6.wwww, r5.xyzx
  85:   endif 
  86:   sample_l r4.xyzw, r4.xyzx, t5.xyzw, s1, r4.w
  87:   add r4.w, r4.w, l(-1.000000)
  88:   mad r4.w, cb5[7].w, r4.w, l(1.000000)
  89:   log r4.w, r4.w
  90:   mul r4.w, r4.w, cb5[7].y
  91:   exp r4.w, r4.w
  92:   mul r4.w, r4.w, cb5[7].x
  93:   mul r4.xyz, r4.xyzx, r4.wwww
  94:   mad r5.xyz, r5.wwww, r7.xyzx, -r4.xyzx
  95:   mad r8.xyz, cb5[1].wwww, r5.xyzx, r4.xyzx
  96: endif 
  97: mul r4.xyz, r2.wwww, r8.xyzx
  98: mad r5.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
  99: dp3 r1.w, r5.xyzx, r5.xyzx
 100: max r1.w, r1.w, l(0.001000)
 101: rsq r1.w, r1.w
 102: mul r5.xyz, r1.wwww, r5.xyzx
 103: dp3 r1.w, r1.xyzx, -r2.xyzx
 104: dp3_sat r2.x, r1.xyzx, cb2[0].xyzx
 105: dp3_sat r1.x, r1.xyzx, r5.xyzx
 106: dp3_sat r1.y, cb2[0].xyzx, r5.xyzx
 107: mul r1.z, r1.y, r1.y
 108: dp2 r1.z, r1.zzzz, r3.yyyy
 109: add r1.z, r1.z, l(-0.500000)
 110: add r2.y, -r2.x, l(1.000000)
 111: mul r2.z, r2.y, r2.y
 112: mul r2.z, r2.z, r2.z
 113: mul r2.y, r2.y, r2.z
 114: mad r2.y, r1.z, r2.y, l(1.000000)
 115: add r2.z, -|r1.w|, l(1.000000)
 116: mul r4.w, r2.z, r2.z
 117: mul r4.w, r4.w, r4.w
 118: mul r2.z, r2.z, r4.w
 119: mad r1.z, r1.z, r2.z, l(1.000000)
 120: mul r1.z, r1.z, r2.y
 121: mul r2.y, r3.y, r3.y
 122: max r2.y, r2.y, l(0.002000)
 123: add r3.y, -r2.y, l(1.000000)
 124: mad r4.w, |r1.w|, r3.y, r2.y
 125: mad r3.y, r2.x, r3.y, r2.y
 126: mul r1.w, |r1.w|, r3.y
 127: mad r1.w, r2.x, r4.w, r1.w
 128: add r1.w, r1.w, l(0.000010)
 129: div r1.w, l(0.500000), r1.w
 130: mul r3.y, r2.y, r2.y
 131: mad r4.w, r1.x, r3.y, -r1.x
 132: mad r1.x, r4.w, r1.x, l(1.000000)
 133: mul r3.y, r3.y, l(0.318310)
 134: mad r1.x, r1.x, r1.x, l(0.000000)
 135: div r1.x, r3.y, r1.x
 136: mul r1.x, r1.x, r1.w
 137: mul r1.x, r1.x, l(3.141593)
 138: mul r1.xz, r2.xxxx, r1.xxzx
 139: max r1.x, r1.x, l(0.000000)
 140: mad r1.w, r2.y, r2.y, l(1.000000)
 141: div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
 142: dp3 r2.x, cb0[3].xyzx, cb0[3].xyzx
 143: ne r2.x, r2.x, l(0.000000)
 144: and r2.x, r2.x, l(0x3f800000)
 145: mul r1.x, r1.x, r2.x
 146: add r0.w, -r0.w, l(1.000000)
 147: add_sat r0.w, r0.w, cb0[8].w
 148: mul r5.xyz, r1.zzzz, r3.xzwx
 149: mad r2.xyw, r6.xyxz, r2.wwww, r5.xyxz
 150: mul r3.xyz, r3.xzwx, r1.xxxx
 151: add r1.x, -r1.y, l(1.000000)
 152: mul r1.y, r1.x, r1.x
 153: mul r1.y, r1.y, r1.y
 154: mul r1.x, r1.x, r1.y
 155: add r5.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 156: mad r1.xyz, r5.xyzx, r1.xxxx, cb0[3].xyzx
 157: mul r1.xyz, r1.xyzx, r3.xyzx
 158: mad r0.xyz, r0.xyzx, r2.xywx, r1.xyzx
 159: mul r1.xyz, r4.xyzx, r1.wwww
 160: add r2.xyw, r0.wwww, -cb0[3].xyxz
 161: mad r2.xyz, r2.zzzz, r2.xywx, cb0[3].xyzx
 162: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
 163: mov o0.w, l(1.000000)
 164: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 5 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[68], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  16: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  19: mov r2.x, cb4[0].x
  20: add o2.xyz, r1.xyzx, -cb3[r2.x + 64].xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mad o6.xy, v3.xyxx, cb5[0].xyxx, cb5[0].zwzz
  32: mov o6.zw, l(0,0,0,0)
  33: mul r0.y, r0.y, cb1[4].x
  34: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  35: add r0.xy, r1.zzzz, r1.xwxx
  36: mul r1.xy, r0.wwww, cb3[r2.x + 66].zwzz
  37: mad o7.xy, r0.xyxx, cb3[r2.x + 66].xyxx, r1.xyxx
  38: mov o7.zw, r0.zzzw
  39: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 142 math, 13 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set 2D Texture "unity_Lightmap" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r2.xyz, r1.wwww, v2.xyzx
  12: div r3.xy, v7.xyxx, v7.wwww
  13: sample r3.xyzw, r3.xyxx, t1.xyzw, s4
  14: sample r4.xyzw, v1.xyxx, t2.xyzw, s3
  15: add r2.w, -cb0[9].y, l(1.000000)
  16: mad r2.w, r4.y, cb0[9].y, r2.w
  17: add r3.y, -cb0[8].w, l(1.000000)
  18: dp3 r3.z, r2.xyzx, r1.xyzx
  19: add r3.z, r3.z, r3.z
  20: mad r4.xyz, r1.xyzx, -r3.zzzz, r2.xyzx
  21: mov r5.x, v3.w
  22: mov r5.y, v4.w
  23: mov r5.z, v5.w
  24: mov r3.z, cb4[0].x
  25: add r6.xyz, -r5.xyzx, cb3[r3.z + 64].xyzx
  26: ishl r3.z, cb4[0].x, l(2)
  27: mov r7.x, cb3[r3.z + 8].z
  28: mov r7.y, cb3[r3.z + 9].z
  29: mov r7.z, cb3[r3.z + 10].z
  30: dp3 r3.z, r6.xyzx, r7.xyzx
  31: add r6.xyz, r5.xyzx, -cb2[25].xyzx
  32: dp3 r3.w, r6.xyzx, r6.xyzx
  33: sqrt r3.w, r3.w
  34: add r3.w, -r3.z, r3.w
  35: mad r3.z, cb2[25].w, r3.w, r3.z
  36: mad_sat r3.z, r3.z, cb2[24].z, cb2[24].w
  37: add r3.w, -r3.x, l(1.000000)
  38: mad r3.x, r3.z, r3.w, r3.x
  39: mul r3.xzw, r3.xxxx, cb0[2].xxyz
  40: sample r6.xyzw, v6.xyxx, t3.xyzw, s0
  41: lt r4.w, l(0.000000), cb5[2].w
  42: if_nz r4.w
  43:   dp3 r4.w, r4.xyzx, r4.xyzx
  44:   rsq r4.w, r4.w
  45:   mul r7.xyz, r4.wwww, r4.xyzx
  46:   add r8.xyz, -r5.xyzx, cb5[0].xyzx
  47:   div r8.xyz, r8.xyzx, r7.xyzx
  48:   add r9.xyz, -r5.xyzx, cb5[1].xyzx
  49:   div r9.xyz, r9.xyzx, r7.xyzx
  50:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  51:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  52:   min r4.w, r8.y, r8.x
  53:   min r4.w, r8.z, r4.w
  54:   add r8.xyz, r5.xyzx, -cb5[2].xyzx
  55:   mad r7.xyz, r7.xyzx, r4.wwww, r8.xyzx
  56: else 
  57:   mov r7.xyz, r4.xyzx
  58: endif 
  59: mad r4.w, -r3.y, l(0.700000), l(1.700000)
  60: mul r4.w, r3.y, r4.w
  61: mul r4.w, r4.w, l(6.000000)
  62: sample_l r7.xyzw, r7.xyzx, t4.xyzw, s1, r4.w
  63: add r5.w, r7.w, l(-1.000000)
  64: mad r5.w, cb5[3].w, r5.w, l(1.000000)
  65: log r5.w, r5.w
  66: mul r5.w, r5.w, cb5[3].y
  67: exp r5.w, r5.w
  68: mul r5.w, r5.w, cb5[3].x
  69: mul r8.xyz, r7.xyzx, r5.wwww
  70: lt r6.w, cb5[1].w, l(0.999990)
  71: if_nz r6.w
  72:   lt r6.w, l(0.000000), cb5[6].w
  73:   if_nz r6.w
  74:     dp3 r6.w, r4.xyzx, r4.xyzx
  75:     rsq r6.w, r6.w
  76:     mul r9.xyz, r4.xyzx, r6.wwww
  77:     add r10.xyz, -r5.xyzx, cb5[4].xyzx
  78:     div r10.xyz, r10.xyzx, r9.xyzx
  79:     add r11.xyz, -r5.xyzx, cb5[5].xyzx
  80:     div r11.xyz, r11.xyzx, r9.xyzx
  81:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  82:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  83:     min r6.w, r10.y, r10.x
  84:     min r6.w, r10.z, r6.w
  85:     add r5.xyz, r5.xyzx, -cb5[6].xyzx
  86:     mad r4.xyz, r9.xyzx, r6.wwww, r5.xyzx
  87:   endif 
  88:   sample_l r4.xyzw, r4.xyzx, t5.xyzw, s1, r4.w
  89:   add r4.w, r4.w, l(-1.000000)
  90:   mad r4.w, cb5[7].w, r4.w, l(1.000000)
  91:   log r4.w, r4.w
  92:   mul r4.w, r4.w, cb5[7].y
  93:   exp r4.w, r4.w
  94:   mul r4.w, r4.w, cb5[7].x
  95:   mul r4.xyz, r4.xyzx, r4.wwww
  96:   mad r5.xyz, r5.wwww, r7.xyzx, -r4.xyzx
  97:   mad r8.xyz, cb5[1].wwww, r5.xyzx, r4.xyzx
  98: endif 
  99: mul r4.xyz, r2.wwww, r8.xyzx
 100: mad r5.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
 101: dp3 r1.w, r5.xyzx, r5.xyzx
 102: max r1.w, r1.w, l(0.001000)
 103: rsq r1.w, r1.w
 104: mul r5.xyz, r1.wwww, r5.xyzx
 105: dp3 r1.w, r1.xyzx, -r2.xyzx
 106: dp3_sat r2.x, r1.xyzx, cb1[0].xyzx
 107: dp3_sat r1.x, r1.xyzx, r5.xyzx
 108: dp3_sat r1.y, cb1[0].xyzx, r5.xyzx
 109: mul r1.z, r1.y, r1.y
 110: dp2 r1.z, r1.zzzz, r3.yyyy
 111: add r1.z, r1.z, l(-0.500000)
 112: add r2.y, -r2.x, l(1.000000)
 113: mul r2.z, r2.y, r2.y
 114: mul r2.z, r2.z, r2.z
 115: mul r2.y, r2.y, r2.z
 116: mad r2.y, r1.z, r2.y, l(1.000000)
 117: add r2.z, -|r1.w|, l(1.000000)
 118: mul r4.w, r2.z, r2.z
 119: mul r4.w, r4.w, r4.w
 120: mul r2.z, r2.z, r4.w
 121: mad r1.z, r1.z, r2.z, l(1.000000)
 122: mul r1.z, r1.z, r2.y
 123: mul r2.y, r3.y, r3.y
 124: max r2.y, r2.y, l(0.002000)
 125: add r3.y, -r2.y, l(1.000000)
 126: mad r4.w, |r1.w|, r3.y, r2.y
 127: mad r3.y, r2.x, r3.y, r2.y
 128: mul r1.w, |r1.w|, r3.y
 129: mad r1.w, r2.x, r4.w, r1.w
 130: add r1.w, r1.w, l(0.000010)
 131: div r1.w, l(0.500000), r1.w
 132: mul r3.y, r2.y, r2.y
 133: mad r4.w, r1.x, r3.y, -r1.x
 134: mad r1.x, r4.w, r1.x, l(1.000000)
 135: mul r3.y, r3.y, l(0.318310)
 136: mad r1.x, r1.x, r1.x, l(0.000000)
 137: div r1.x, r3.y, r1.x
 138: mul r1.x, r1.x, r1.w
 139: mul r1.x, r1.x, l(3.141593)
 140: mul r1.xz, r2.xxxx, r1.xxzx
 141: max r1.x, r1.x, l(0.000000)
 142: mad r1.w, r2.y, r2.y, l(1.000000)
 143: div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
 144: dp3 r2.x, cb0[3].xyzx, cb0[3].xyzx
 145: ne r2.x, r2.x, l(0.000000)
 146: and r2.x, r2.x, l(0x3f800000)
 147: mul r1.x, r1.x, r2.x
 148: add r0.w, -r0.w, l(1.000000)
 149: add_sat r0.w, r0.w, cb0[8].w
 150: mul r5.xyz, r1.zzzz, r3.xzwx
 151: mad r2.xyw, r6.xyxz, r2.wwww, r5.xyxz
 152: mul r3.xyz, r3.xzwx, r1.xxxx
 153: add r1.x, -r1.y, l(1.000000)
 154: mul r1.y, r1.x, r1.x
 155: mul r1.y, r1.y, r1.y
 156: mul r1.x, r1.x, r1.y
 157: add r5.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 158: mad r1.xyz, r5.xyzx, r1.xxxx, cb0[3].xyzx
 159: mul r1.xyz, r1.xyzx, r3.xyzx
 160: mad r0.xyz, r0.xyzx, r2.xywx, r1.xyzx
 161: mul r1.xyz, r4.xyzx, r1.wwww
 162: add r2.xyw, r0.wwww, -cb0[3].xyxz
 163: mad r2.xyz, r2.zzzz, r2.xywx, cb0[3].xyzx
 164: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
 165: mov o0.w, l(1.000000)
 166: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul o5.xyz, r1.wwww, r1.xyzx
  29: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  30: mov o6.zw, l(0,0,0,0)
  31: mul r0.y, r0.y, cb1[5].x
  32: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  33: mov o7.zw, r0.zzzw
  34: add o7.xy, r1.zzzz, r1.xwxx
  35: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 172 math, 15 temp registers, 8 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 6
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 5
Set 2D Texture "unity_Lightmap" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r3.x, v2.xyzx, v2.xyzx
  11: rsq r3.x, r3.x
  12: mul r3.yzw, r3.xxxx, v2.xxyz
  13: div r4.xy, v7.xyxx, v7.wwww
  14: sample r4.xyzw, r4.xyxx, t2.xyzw, s6
  15: sample r5.xyzw, v1.xyxx, t3.xyzw, s5
  16: add r4.y, -cb0[9].y, l(1.000000)
  17: mad r4.y, r5.y, cb0[9].y, r4.y
  18: mad r4.z, -r0.w, cb0[9].x, l(1.000000)
  19: dp3 r4.w, r3.yzwy, r2.xyzx
  20: add r4.w, r4.w, r4.w
  21: mad r5.xyz, r2.xyzx, -r4.wwww, r3.yzwy
  22: mov r6.x, v3.w
  23: mov r6.y, v4.w
  24: mov r6.z, v5.w
  25: add r7.xyz, -r6.xyzx, cb1[4].xyzx
  26: mov r8.x, cb4[9].z
  27: mov r8.y, cb4[10].z
  28: mov r8.z, cb4[11].z
  29: dp3 r4.w, r7.xyzx, r8.xyzx
  30: add r7.xyz, r6.xyzx, -cb3[25].xyzx
  31: dp3 r5.w, r7.xyzx, r7.xyzx
  32: sqrt r5.w, r5.w
  33: add r5.w, -r4.w, r5.w
  34: mad r4.w, cb3[25].w, r5.w, r4.w
  35: mad_sat r4.w, r4.w, cb3[24].z, cb3[24].w
  36: add r5.w, -r4.x, l(1.000000)
  37: mad r4.x, r4.w, r5.w, r4.x
  38: mul r7.xyz, r4.xxxx, cb0[2].xyzx
  39: eq r4.x, cb6[0].x, l(1.000000)
  40: if_nz r4.x
  41:   eq r4.x, cb6[0].y, l(1.000000)
  42:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  43:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  44:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  45:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  46:   movc r8.xyz, r4.xxxx, r8.xyzx, r6.xyzx
  47:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  48:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  49:   mul r4.x, r8.y, l(0.250000)
  50:   mul r4.w, cb6[0].z, l(0.500000)
  51:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  52:   max r4.x, r4.w, r4.x
  53:   min r8.x, r5.w, r4.x
  54:   sample r9.xyzw, r8.xzwx, t7.xyzw, s2
  55:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  56:   sample r10.xyzw, r10.xyzx, t7.xyzw, s2
  57:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  58:   sample r8.xyzw, r8.xyzx, t7.xyzw, s2
  59:   mov r2.w, l(1.000000)
  60:   dp4 r9.x, r9.xyzw, r2.xyzw
  61:   dp4 r9.y, r10.xyzw, r2.xyzw
  62:   dp4 r9.z, r8.xyzw, r2.xyzw
  63: else 
  64:   mov r2.w, l(1.000000)
  65:   dp4 r9.x, cb2[39].xyzw, r2.xyzw
  66:   dp4 r9.y, cb2[40].xyzw, r2.xyzw
  67:   dp4 r9.z, cb2[41].xyzw, r2.xyzw
  68: endif 
  69: mul r8.xyzw, r2.yzzx, r2.xyzz
  70: dp4 r10.x, cb2[42].xyzw, r8.xyzw
  71: dp4 r10.y, cb2[43].xyzw, r8.xyzw
  72: dp4 r10.z, cb2[44].xyzw, r8.xyzw
  73: mul r2.w, r2.y, r2.y
  74: mad r2.w, r2.x, r2.x, -r2.w
  75: mad r8.xyz, cb2[45].xyzx, r2.wwww, r10.xyzx
  76: add r8.xyz, r8.xyzx, r9.xyzx
  77: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  78: sample r9.xyzw, v6.xyxx, t4.xyzw, s0
  79: add r8.xyz, r8.xyzx, r9.xyzx
  80: lt r2.w, l(0.000000), cb5[2].w
  81: if_nz r2.w
  82:   dp3 r2.w, r5.xyzx, r5.xyzx
  83:   rsq r2.w, r2.w
  84:   mul r9.xyz, r2.wwww, r5.xyzx
  85:   add r10.xyz, -r6.xyzx, cb5[0].xyzx
  86:   div r10.xyz, r10.xyzx, r9.xyzx
  87:   add r11.xyz, -r6.xyzx, cb5[1].xyzx
  88:   div r11.xyz, r11.xyzx, r9.xyzx
  89:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  90:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  91:   min r2.w, r10.y, r10.x
  92:   min r2.w, r10.z, r2.w
  93:   add r10.xyz, r6.xyzx, -cb5[2].xyzx
  94:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
  95: else 
  96:   mov r9.xyz, r5.xyzx
  97: endif 
  98: mad r2.w, -r4.z, l(0.700000), l(1.700000)
  99: mul r2.w, r2.w, r4.z
 100: mul r2.w, r2.w, l(6.000000)
 101: sample_l r9.xyzw, r9.xyzx, t5.xyzw, s1, r2.w
 102: add r4.x, r9.w, l(-1.000000)
 103: mad r4.x, cb5[3].w, r4.x, l(1.000000)
 104: log r4.x, r4.x
 105: mul r4.x, r4.x, cb5[3].y
 106: exp r4.x, r4.x
 107: mul r4.x, r4.x, cb5[3].x
 108: mul r10.xyz, r9.xyzx, r4.xxxx
 109: lt r4.w, cb5[1].w, l(0.999990)
 110: if_nz r4.w
 111:   lt r4.w, l(0.000000), cb5[6].w
 112:   if_nz r4.w
 113:     dp3 r4.w, r5.xyzx, r5.xyzx
 114:     rsq r4.w, r4.w
 115:     mul r11.xyz, r4.wwww, r5.xyzx
 116:     add r12.xyz, -r6.xyzx, cb5[4].xyzx
 117:     div r12.xyz, r12.xyzx, r11.xyzx
 118:     add r13.xyz, -r6.xyzx, cb5[5].xyzx
 119:     div r13.xyz, r13.xyzx, r11.xyzx
 120:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 121:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 122:     min r4.w, r12.y, r12.x
 123:     min r4.w, r12.z, r4.w
 124:     add r6.xyz, r6.xyzx, -cb5[6].xyzx
 125:     mad r5.xyz, r11.xyzx, r4.wwww, r6.xyzx
 126:   endif 
 127:   sample_l r5.xyzw, r5.xyzx, t6.xyzw, s1, r2.w
 128:   add r2.w, r5.w, l(-1.000000)
 129:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 130:   log r2.w, r2.w
 131:   mul r2.w, r2.w, cb5[7].y
 132:   exp r2.w, r2.w
 133:   mul r2.w, r2.w, cb5[7].x
 134:   mul r5.xyz, r5.xyzx, r2.wwww
 135:   mad r6.xyz, r4.xxxx, r9.xyzx, -r5.xyzx
 136:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
 137: endif 
 138: mul r5.xyz, r4.yyyy, r10.xyzx
 139: mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
 140: dp3 r2.w, r6.xyzx, r6.xyzx
 141: max r2.w, r2.w, l(0.001000)
 142: rsq r2.w, r2.w
 143: mul r6.xyz, r2.wwww, r6.xyzx
 144: dp3 r2.w, r2.xyzx, -r3.yzwy
 145: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 146: dp3_sat r2.x, r2.xyzx, r6.xyzx
 147: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 148: mul r2.z, r2.y, r2.y
 149: dp2 r2.z, r2.zzzz, r4.zzzz
 150: add r2.z, r2.z, l(-0.500000)
 151: add r3.y, -r3.x, l(1.000000)
 152: mul r3.z, r3.y, r3.y
 153: mul r3.z, r3.z, r3.z
 154: mul r3.y, r3.y, r3.z
 155: mad r3.y, r2.z, r3.y, l(1.000000)
 156: add r3.z, -|r2.w|, l(1.000000)
 157: mul r3.w, r3.z, r3.z
 158: mul r3.w, r3.w, r3.w
 159: mul r3.z, r3.z, r3.w
 160: mad r2.z, r2.z, r3.z, l(1.000000)
 161: mul r2.z, r2.z, r3.y
 162: mul r3.y, r4.z, r4.z
 163: max r3.y, r3.y, l(0.002000)
 164: add r3.w, -r3.y, l(1.000000)
 165: mad r4.x, |r2.w|, r3.w, r3.y
 166: mad r3.w, r3.x, r3.w, r3.y
 167: mul r2.w, |r2.w|, r3.w
 168: mad r2.w, r3.x, r4.x, r2.w
 169: add r2.w, r2.w, l(0.000010)
 170: div r2.w, l(0.500000), r2.w
 171: mul r3.w, r3.y, r3.y
 172: mad r4.x, r2.x, r3.w, -r2.x
 173: mad r2.x, r4.x, r2.x, l(1.000000)
 174: mul r3.w, r3.w, l(0.318310)
 175: mad r2.x, r2.x, r2.x, l(0.000000)
 176: div r2.x, r3.w, r2.x
 177: mul r2.x, r2.x, r2.w
 178: mul r2.x, r2.x, l(3.141593)
 179: mul r2.xz, r3.xxxx, r2.xxzx
 180: max r2.x, r2.x, l(0.000000)
 181: mad r2.w, r3.y, r3.y, l(1.000000)
 182: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 183: dp3 r3.x, r0.xyzx, r0.xyzx
 184: ne r3.x, r3.x, l(0.000000)
 185: and r3.x, r3.x, l(0x3f800000)
 186: mul r2.x, r2.x, r3.x
 187: mad r0.w, r0.w, cb0[9].x, -r1.w
 188: add_sat r0.w, r0.w, l(1.000000)
 189: mul r3.xyw, r2.zzzz, r7.xyxz
 190: mad r3.xyw, r8.xyxz, r4.yyyy, r3.xyxw
 191: mul r4.xyz, r7.xyzx, r2.xxxx
 192: add r1.w, -r2.y, l(1.000000)
 193: mul r2.x, r1.w, r1.w
 194: mul r2.x, r2.x, r2.x
 195: mul r1.w, r1.w, r2.x
 196: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 197: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 198: mul r2.xyz, r2.xyzx, r4.xyzx
 199: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 200: mul r2.xyz, r5.xyzx, r2.wwww
 201: add r3.xyw, -r0.xyxz, r0.wwww
 202: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 203: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 204: mov o0.w, l(1.000000)
 205: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON LIGHTPROBE_SH SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 5 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[68], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  16: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  19: mov r2.x, cb4[0].x
  20: add o2.xyz, r1.xyzx, -cb3[r2.x + 64].xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mad o6.xy, v3.xyxx, cb5[0].xyxx, cb5[0].zwzz
  32: mov o6.zw, l(0,0,0,0)
  33: mul r0.y, r0.y, cb1[4].x
  34: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  35: add r0.xy, r1.zzzz, r1.xwxx
  36: mul r1.xy, r0.wwww, cb3[r2.x + 66].zwzz
  37: mad o7.xy, r0.xyxx, cb3[r2.x + 66].xyxx, r1.xyxx
  38: mov o7.zw, r0.zzzw
  39: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 173 math, 15 temp registers, 8 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 6
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 5
Set 2D Texture "unity_Lightmap" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r3.x, v2.xyzx, v2.xyzx
  11: rsq r3.x, r3.x
  12: mul r3.yzw, r3.xxxx, v2.xxyz
  13: div r4.xy, v7.xyxx, v7.wwww
  14: sample r4.xyzw, r4.xyxx, t2.xyzw, s6
  15: sample r5.xyzw, v1.xyxx, t3.xyzw, s5
  16: add r4.y, -cb0[9].y, l(1.000000)
  17: mad r4.y, r5.y, cb0[9].y, r4.y
  18: mad r4.z, -r0.w, cb0[9].x, l(1.000000)
  19: dp3 r4.w, r3.yzwy, r2.xyzx
  20: add r4.w, r4.w, r4.w
  21: mad r5.xyz, r2.xyzx, -r4.wwww, r3.yzwy
  22: mov r6.x, v3.w
  23: mov r6.y, v4.w
  24: mov r6.z, v5.w
  25: mov r4.w, cb4[0].x
  26: add r7.xyz, -r6.xyzx, cb3[r4.w + 64].xyzx
  27: ishl r4.w, cb4[0].x, l(2)
  28: mov r8.x, cb3[r4.w + 8].z
  29: mov r8.y, cb3[r4.w + 9].z
  30: mov r8.z, cb3[r4.w + 10].z
  31: dp3 r4.w, r7.xyzx, r8.xyzx
  32: add r7.xyz, r6.xyzx, -cb2[25].xyzx
  33: dp3 r5.w, r7.xyzx, r7.xyzx
  34: sqrt r5.w, r5.w
  35: add r5.w, -r4.w, r5.w
  36: mad r4.w, cb2[25].w, r5.w, r4.w
  37: mad_sat r4.w, r4.w, cb2[24].z, cb2[24].w
  38: add r5.w, -r4.x, l(1.000000)
  39: mad r4.x, r4.w, r5.w, r4.x
  40: mul r7.xyz, r4.xxxx, cb0[2].xyzx
  41: eq r4.x, cb6[0].x, l(1.000000)
  42: if_nz r4.x
  43:   eq r4.x, cb6[0].y, l(1.000000)
  44:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  45:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  46:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  47:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  48:   movc r8.xyz, r4.xxxx, r8.xyzx, r6.xyzx
  49:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  50:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  51:   mul r4.x, r8.y, l(0.250000)
  52:   mul r4.w, cb6[0].z, l(0.500000)
  53:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  54:   max r4.x, r4.w, r4.x
  55:   min r8.x, r5.w, r4.x
  56:   sample r9.xyzw, r8.xzwx, t7.xyzw, s2
  57:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  58:   sample r10.xyzw, r10.xyzx, t7.xyzw, s2
  59:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  60:   sample r8.xyzw, r8.xyzx, t7.xyzw, s2
  61:   mov r2.w, l(1.000000)
  62:   dp4 r9.x, r9.xyzw, r2.xyzw
  63:   dp4 r9.y, r10.xyzw, r2.xyzw
  64:   dp4 r9.z, r8.xyzw, r2.xyzw
  65: else 
  66:   mov r2.w, l(1.000000)
  67:   dp4 r9.x, cb1[39].xyzw, r2.xyzw
  68:   dp4 r9.y, cb1[40].xyzw, r2.xyzw
  69:   dp4 r9.z, cb1[41].xyzw, r2.xyzw
  70: endif 
  71: mul r8.xyzw, r2.yzzx, r2.xyzz
  72: dp4 r10.x, cb1[42].xyzw, r8.xyzw
  73: dp4 r10.y, cb1[43].xyzw, r8.xyzw
  74: dp4 r10.z, cb1[44].xyzw, r8.xyzw
  75: mul r2.w, r2.y, r2.y
  76: mad r2.w, r2.x, r2.x, -r2.w
  77: mad r8.xyz, cb1[45].xyzx, r2.wwww, r10.xyzx
  78: add r8.xyz, r8.xyzx, r9.xyzx
  79: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  80: sample r9.xyzw, v6.xyxx, t4.xyzw, s0
  81: add r8.xyz, r8.xyzx, r9.xyzx
  82: lt r2.w, l(0.000000), cb5[2].w
  83: if_nz r2.w
  84:   dp3 r2.w, r5.xyzx, r5.xyzx
  85:   rsq r2.w, r2.w
  86:   mul r9.xyz, r2.wwww, r5.xyzx
  87:   add r10.xyz, -r6.xyzx, cb5[0].xyzx
  88:   div r10.xyz, r10.xyzx, r9.xyzx
  89:   add r11.xyz, -r6.xyzx, cb5[1].xyzx
  90:   div r11.xyz, r11.xyzx, r9.xyzx
  91:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  92:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  93:   min r2.w, r10.y, r10.x
  94:   min r2.w, r10.z, r2.w
  95:   add r10.xyz, r6.xyzx, -cb5[2].xyzx
  96:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
  97: else 
  98:   mov r9.xyz, r5.xyzx
  99: endif 
 100: mad r2.w, -r4.z, l(0.700000), l(1.700000)
 101: mul r2.w, r2.w, r4.z
 102: mul r2.w, r2.w, l(6.000000)
 103: sample_l r9.xyzw, r9.xyzx, t5.xyzw, s1, r2.w
 104: add r4.x, r9.w, l(-1.000000)
 105: mad r4.x, cb5[3].w, r4.x, l(1.000000)
 106: log r4.x, r4.x
 107: mul r4.x, r4.x, cb5[3].y
 108: exp r4.x, r4.x
 109: mul r4.x, r4.x, cb5[3].x
 110: mul r10.xyz, r9.xyzx, r4.xxxx
 111: lt r4.w, cb5[1].w, l(0.999990)
 112: if_nz r4.w
 113:   lt r4.w, l(0.000000), cb5[6].w
 114:   if_nz r4.w
 115:     dp3 r4.w, r5.xyzx, r5.xyzx
 116:     rsq r4.w, r4.w
 117:     mul r11.xyz, r4.wwww, r5.xyzx
 118:     add r12.xyz, -r6.xyzx, cb5[4].xyzx
 119:     div r12.xyz, r12.xyzx, r11.xyzx
 120:     add r13.xyz, -r6.xyzx, cb5[5].xyzx
 121:     div r13.xyz, r13.xyzx, r11.xyzx
 122:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 123:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 124:     min r4.w, r12.y, r12.x
 125:     min r4.w, r12.z, r4.w
 126:     add r6.xyz, r6.xyzx, -cb5[6].xyzx
 127:     mad r5.xyz, r11.xyzx, r4.wwww, r6.xyzx
 128:   endif 
 129:   sample_l r5.xyzw, r5.xyzx, t6.xyzw, s1, r2.w
 130:   add r2.w, r5.w, l(-1.000000)
 131:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 132:   log r2.w, r2.w
 133:   mul r2.w, r2.w, cb5[7].y
 134:   exp r2.w, r2.w
 135:   mul r2.w, r2.w, cb5[7].x
 136:   mul r5.xyz, r5.xyzx, r2.wwww
 137:   mad r6.xyz, r4.xxxx, r9.xyzx, -r5.xyzx
 138:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
 139: endif 
 140: mul r5.xyz, r4.yyyy, r10.xyzx
 141: mad r6.xyz, -v2.xyzx, r3.xxxx, cb1[0].xyzx
 142: dp3 r2.w, r6.xyzx, r6.xyzx
 143: max r2.w, r2.w, l(0.001000)
 144: rsq r2.w, r2.w
 145: mul r6.xyz, r2.wwww, r6.xyzx
 146: dp3 r2.w, r2.xyzx, -r3.yzwy
 147: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 148: dp3_sat r2.x, r2.xyzx, r6.xyzx
 149: dp3_sat r2.y, cb1[0].xyzx, r6.xyzx
 150: mul r2.z, r2.y, r2.y
 151: dp2 r2.z, r2.zzzz, r4.zzzz
 152: add r2.z, r2.z, l(-0.500000)
 153: add r3.y, -r3.x, l(1.000000)
 154: mul r3.z, r3.y, r3.y
 155: mul r3.z, r3.z, r3.z
 156: mul r3.y, r3.y, r3.z
 157: mad r3.y, r2.z, r3.y, l(1.000000)
 158: add r3.z, -|r2.w|, l(1.000000)
 159: mul r3.w, r3.z, r3.z
 160: mul r3.w, r3.w, r3.w
 161: mul r3.z, r3.z, r3.w
 162: mad r2.z, r2.z, r3.z, l(1.000000)
 163: mul r2.z, r2.z, r3.y
 164: mul r3.y, r4.z, r4.z
 165: max r3.y, r3.y, l(0.002000)
 166: add r3.w, -r3.y, l(1.000000)
 167: mad r4.x, |r2.w|, r3.w, r3.y
 168: mad r3.w, r3.x, r3.w, r3.y
 169: mul r2.w, |r2.w|, r3.w
 170: mad r2.w, r3.x, r4.x, r2.w
 171: add r2.w, r2.w, l(0.000010)
 172: div r2.w, l(0.500000), r2.w
 173: mul r3.w, r3.y, r3.y
 174: mad r4.x, r2.x, r3.w, -r2.x
 175: mad r2.x, r4.x, r2.x, l(1.000000)
 176: mul r3.w, r3.w, l(0.318310)
 177: mad r2.x, r2.x, r2.x, l(0.000000)
 178: div r2.x, r3.w, r2.x
 179: mul r2.x, r2.x, r2.w
 180: mul r2.x, r2.x, l(3.141593)
 181: mul r2.xz, r3.xxxx, r2.xxzx
 182: max r2.x, r2.x, l(0.000000)
 183: mad r2.w, r3.y, r3.y, l(1.000000)
 184: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 185: dp3 r3.x, r0.xyzx, r0.xyzx
 186: ne r3.x, r3.x, l(0.000000)
 187: and r3.x, r3.x, l(0x3f800000)
 188: mul r2.x, r2.x, r3.x
 189: mad r0.w, r0.w, cb0[9].x, -r1.w
 190: add_sat r0.w, r0.w, l(1.000000)
 191: mul r3.xyw, r2.zzzz, r7.xyxz
 192: mad r3.xyw, r8.xyxz, r4.yyyy, r3.xyxw
 193: mul r4.xyz, r7.xyzx, r2.xxxx
 194: add r1.w, -r2.y, l(1.000000)
 195: mul r2.x, r1.w, r1.w
 196: mul r2.x, r2.x, r2.x
 197: mul r1.w, r1.w, r2.x
 198: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 199: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 200: mul r2.xyz, r2.xyzx, r4.xyzx
 201: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 202: mul r2.xyz, r5.xyzx, r2.wwww
 203: add r3.xyw, -r0.xyxz, r0.wwww
 204: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 205: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 206: mov o0.w, l(1.000000)
 207: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 36 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov o3.w, r1.x
  20: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  21: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  22: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  23: dp3 r1.x, r2.xyzx, r2.xyzx
  24: rsq r1.x, r1.x
  25: mul r2.xyz, r1.xxxx, r2.xyzx
  26: mov o3.xyz, r2.xyzx
  27: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.x, r3.xyzx, r3.xyzx
  31: rsq r1.x, r1.x
  32: mul r3.xyz, r1.xxxx, r3.xyzx
  33: mul r4.xyz, r2.yzxy, r3.zxyz
  34: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  35: mov o5.xyz, r3.xyzx
  36: mul r1.x, v4.w, cb2[9].w
  37: mul o4.xyz, r1.xxxx, r2.xyzx
  38: mov o4.w, r1.y
  39: mov o5.w, r1.z
  40: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  41: mov o6.zw, l(0,0,0,0)
  42: mul r0.y, r0.y, cb1[5].x
  43: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  44: mov o7.zw, r0.zzzw
  45: add o7.xy, r1.zzzz, r1.xwxx
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 182 math, 15 temp registers, 9 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 5
Set 2D Texture "_BumpMap" to slot 2 sampler slot 4
Set 2D Texture "_ShadowMapTexture" to slot 3 sampler slot 7
Set 2D Texture "_OcclusionMap" to slot 4 sampler slot 6
Set 2D Texture "unity_Lightmap" to slot 5 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 6 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 7 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s5
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s4
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r2.z, r2.xyxx, r2.xyxx
  12: min r2.z, r2.z, l(1.000000)
  13: add r2.z, -r2.z, l(1.000000)
  14: sqrt r2.z, r2.z
  15: mul r3.xyz, r2.yyyy, v4.xyzx
  16: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  17: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  18: dp3 r2.w, r2.xyzx, r2.xyzx
  19: rsq r2.w, r2.w
  20: mul r2.xyz, r2.wwww, r2.xyzx
  21: dp3 r3.x, v2.xyzx, v2.xyzx
  22: rsq r3.x, r3.x
  23: mul r3.yzw, r3.xxxx, v2.xxyz
  24: div r4.xy, v7.xyxx, v7.wwww
  25: sample r4.xyzw, r4.xyxx, t3.xyzw, s7
  26: sample r5.xyzw, v1.xyxx, t4.xyzw, s6
  27: add r4.y, -cb0[9].y, l(1.000000)
  28: mad r4.y, r5.y, cb0[9].y, r4.y
  29: mad r4.z, -r0.w, cb0[9].x, l(1.000000)
  30: dp3 r4.w, r3.yzwy, r2.xyzx
  31: add r4.w, r4.w, r4.w
  32: mad r5.xyz, r2.xyzx, -r4.wwww, r3.yzwy
  33: mov r6.x, v3.w
  34: mov r6.y, v4.w
  35: mov r6.z, v5.w
  36: add r7.xyz, -r6.xyzx, cb1[4].xyzx
  37: mov r8.x, cb4[9].z
  38: mov r8.y, cb4[10].z
  39: mov r8.z, cb4[11].z
  40: dp3 r4.w, r7.xyzx, r8.xyzx
  41: add r7.xyz, r6.xyzx, -cb3[25].xyzx
  42: dp3 r5.w, r7.xyzx, r7.xyzx
  43: sqrt r5.w, r5.w
  44: add r5.w, -r4.w, r5.w
  45: mad r4.w, cb3[25].w, r5.w, r4.w
  46: mad_sat r4.w, r4.w, cb3[24].z, cb3[24].w
  47: add r5.w, -r4.x, l(1.000000)
  48: mad r4.x, r4.w, r5.w, r4.x
  49: mul r7.xyz, r4.xxxx, cb0[2].xyzx
  50: eq r4.x, cb6[0].x, l(1.000000)
  51: if_nz r4.x
  52:   eq r4.x, cb6[0].y, l(1.000000)
  53:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  54:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  55:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  56:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  57:   movc r8.xyz, r4.xxxx, r8.xyzx, r6.xyzx
  58:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  59:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  60:   mul r4.x, r8.y, l(0.250000)
  61:   mul r4.w, cb6[0].z, l(0.500000)
  62:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  63:   max r4.x, r4.w, r4.x
  64:   min r8.x, r5.w, r4.x
  65:   sample r9.xyzw, r8.xzwx, t8.xyzw, s2
  66:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  67:   sample r10.xyzw, r10.xyzx, t8.xyzw, s2
  68:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  69:   sample r8.xyzw, r8.xyzx, t8.xyzw, s2
  70:   mov r2.w, l(1.000000)
  71:   dp4 r9.x, r9.xyzw, r2.xyzw
  72:   dp4 r9.y, r10.xyzw, r2.xyzw
  73:   dp4 r9.z, r8.xyzw, r2.xyzw
  74: else 
  75:   mov r2.w, l(1.000000)
  76:   dp4 r9.x, cb2[39].xyzw, r2.xyzw
  77:   dp4 r9.y, cb2[40].xyzw, r2.xyzw
  78:   dp4 r9.z, cb2[41].xyzw, r2.xyzw
  79: endif 
  80: mul r8.xyzw, r2.yzzx, r2.xyzz
  81: dp4 r10.x, cb2[42].xyzw, r8.xyzw
  82: dp4 r10.y, cb2[43].xyzw, r8.xyzw
  83: dp4 r10.z, cb2[44].xyzw, r8.xyzw
  84: mul r2.w, r2.y, r2.y
  85: mad r2.w, r2.x, r2.x, -r2.w
  86: mad r8.xyz, cb2[45].xyzx, r2.wwww, r10.xyzx
  87: add r8.xyz, r8.xyzx, r9.xyzx
  88: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  89: sample r9.xyzw, v6.xyxx, t5.xyzw, s0
  90: add r8.xyz, r8.xyzx, r9.xyzx
  91: lt r2.w, l(0.000000), cb5[2].w
  92: if_nz r2.w
  93:   dp3 r2.w, r5.xyzx, r5.xyzx
  94:   rsq r2.w, r2.w
  95:   mul r9.xyz, r2.wwww, r5.xyzx
  96:   add r10.xyz, -r6.xyzx, cb5[0].xyzx
  97:   div r10.xyz, r10.xyzx, r9.xyzx
  98:   add r11.xyz, -r6.xyzx, cb5[1].xyzx
  99:   div r11.xyz, r11.xyzx, r9.xyzx
 100:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 101:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 102:   min r2.w, r10.y, r10.x
 103:   min r2.w, r10.z, r2.w
 104:   add r10.xyz, r6.xyzx, -cb5[2].xyzx
 105:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 106: else 
 107:   mov r9.xyz, r5.xyzx
 108: endif 
 109: mad r2.w, -r4.z, l(0.700000), l(1.700000)
 110: mul r2.w, r2.w, r4.z
 111: mul r2.w, r2.w, l(6.000000)
 112: sample_l r9.xyzw, r9.xyzx, t6.xyzw, s1, r2.w
 113: add r4.x, r9.w, l(-1.000000)
 114: mad r4.x, cb5[3].w, r4.x, l(1.000000)
 115: log r4.x, r4.x
 116: mul r4.x, r4.x, cb5[3].y
 117: exp r4.x, r4.x
 118: mul r4.x, r4.x, cb5[3].x
 119: mul r10.xyz, r9.xyzx, r4.xxxx
 120: lt r4.w, cb5[1].w, l(0.999990)
 121: if_nz r4.w
 122:   lt r4.w, l(0.000000), cb5[6].w
 123:   if_nz r4.w
 124:     dp3 r4.w, r5.xyzx, r5.xyzx
 125:     rsq r4.w, r4.w
 126:     mul r11.xyz, r4.wwww, r5.xyzx
 127:     add r12.xyz, -r6.xyzx, cb5[4].xyzx
 128:     div r12.xyz, r12.xyzx, r11.xyzx
 129:     add r13.xyz, -r6.xyzx, cb5[5].xyzx
 130:     div r13.xyz, r13.xyzx, r11.xyzx
 131:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 132:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 133:     min r4.w, r12.y, r12.x
 134:     min r4.w, r12.z, r4.w
 135:     add r6.xyz, r6.xyzx, -cb5[6].xyzx
 136:     mad r5.xyz, r11.xyzx, r4.wwww, r6.xyzx
 137:   endif 
 138:   sample_l r5.xyzw, r5.xyzx, t7.xyzw, s1, r2.w
 139:   add r2.w, r5.w, l(-1.000000)
 140:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 141:   log r2.w, r2.w
 142:   mul r2.w, r2.w, cb5[7].y
 143:   exp r2.w, r2.w
 144:   mul r2.w, r2.w, cb5[7].x
 145:   mul r5.xyz, r5.xyzx, r2.wwww
 146:   mad r6.xyz, r4.xxxx, r9.xyzx, -r5.xyzx
 147:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
 148: endif 
 149: mul r5.xyz, r4.yyyy, r10.xyzx
 150: mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
 151: dp3 r2.w, r6.xyzx, r6.xyzx
 152: max r2.w, r2.w, l(0.001000)
 153: rsq r2.w, r2.w
 154: mul r6.xyz, r2.wwww, r6.xyzx
 155: dp3 r2.w, r2.xyzx, -r3.yzwy
 156: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 157: dp3_sat r2.x, r2.xyzx, r6.xyzx
 158: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 159: mul r2.z, r2.y, r2.y
 160: dp2 r2.z, r2.zzzz, r4.zzzz
 161: add r2.z, r2.z, l(-0.500000)
 162: add r3.y, -r3.x, l(1.000000)
 163: mul r3.z, r3.y, r3.y
 164: mul r3.z, r3.z, r3.z
 165: mul r3.y, r3.y, r3.z
 166: mad r3.y, r2.z, r3.y, l(1.000000)
 167: add r3.z, -|r2.w|, l(1.000000)
 168: mul r3.w, r3.z, r3.z
 169: mul r3.w, r3.w, r3.w
 170: mul r3.z, r3.z, r3.w
 171: mad r2.z, r2.z, r3.z, l(1.000000)
 172: mul r2.z, r2.z, r3.y
 173: mul r3.y, r4.z, r4.z
 174: max r3.y, r3.y, l(0.002000)
 175: add r3.w, -r3.y, l(1.000000)
 176: mad r4.x, |r2.w|, r3.w, r3.y
 177: mad r3.w, r3.x, r3.w, r3.y
 178: mul r2.w, |r2.w|, r3.w
 179: mad r2.w, r3.x, r4.x, r2.w
 180: add r2.w, r2.w, l(0.000010)
 181: div r2.w, l(0.500000), r2.w
 182: mul r3.w, r3.y, r3.y
 183: mad r4.x, r2.x, r3.w, -r2.x
 184: mad r2.x, r4.x, r2.x, l(1.000000)
 185: mul r3.w, r3.w, l(0.318310)
 186: mad r2.x, r2.x, r2.x, l(0.000000)
 187: div r2.x, r3.w, r2.x
 188: mul r2.x, r2.x, r2.w
 189: mul r2.x, r2.x, l(3.141593)
 190: mul r2.xz, r3.xxxx, r2.xxzx
 191: max r2.x, r2.x, l(0.000000)
 192: mad r2.w, r3.y, r3.y, l(1.000000)
 193: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 194: dp3 r3.x, r0.xyzx, r0.xyzx
 195: ne r3.x, r3.x, l(0.000000)
 196: and r3.x, r3.x, l(0x3f800000)
 197: mul r2.x, r2.x, r3.x
 198: mad r0.w, r0.w, cb0[9].x, -r1.w
 199: add_sat r0.w, r0.w, l(1.000000)
 200: mul r3.xyw, r2.zzzz, r7.xyxz
 201: mad r3.xyw, r8.xyxz, r4.yyyy, r3.xyxw
 202: mul r4.xyz, r7.xyzx, r2.xxxx
 203: add r1.w, -r2.y, l(1.000000)
 204: mul r2.x, r1.w, r1.w
 205: mul r2.x, r2.x, r2.x
 206: mul r1.w, r1.w, r2.x
 207: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 208: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 209: mul r2.xyz, r2.xyzx, r4.xyzx
 210: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 211: mul r2.xyz, r5.xyzx, r2.wwww
 212: add r3.xyw, -r0.xyxz, r0.wwww
 213: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 214: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 215: mov o0.w, l(1.000000)
 216: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON LIGHTPROBE_SH SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 5 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[68], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  16: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  19: mov r1.w, cb4[0].x
  20: add o2.xyz, r1.xyzx, -cb3[r1.w + 64].xyzx
  21: mov o3.w, r1.x
  22: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  23: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  24: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  25: dp3 r1.x, r2.xyzx, r2.xyzx
  26: rsq r1.x, r1.x
  27: mul r2.xyz, r1.xxxx, r2.xyzx
  28: mov o3.xyz, r2.xyzx
  29: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  30: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  31: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  32: dp3 r1.x, r3.xyzx, r3.xyzx
  33: rsq r1.x, r1.x
  34: mul r3.xyz, r1.xxxx, r3.xyzx
  35: mul r4.xyz, r2.yzxy, r3.zxyz
  36: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r3.xyzx
  38: mul r1.x, v4.w, cb2[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r1.y
  41: mov o5.w, r1.z
  42: mad o6.xy, v3.xyxx, cb5[0].xyxx, cb5[0].zwzz
  43: mov o6.zw, l(0,0,0,0)
  44: mul r0.y, r0.y, cb1[4].x
  45: mul r2.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  46: add r0.xy, r2.zzzz, r2.xwxx
  47: mul r1.xy, r0.wwww, cb3[r1.w + 66].zwzz
  48: mad o7.xy, r0.xyxx, cb3[r1.w + 66].xyxx, r1.xyxx
  49: mov o7.zw, r0.zzzw
  50: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 183 math, 15 temp registers, 9 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 5
Set 2D Texture "_BumpMap" to slot 2 sampler slot 4
Set 2D Texture "_ShadowMapTexture" to slot 3 sampler slot 7
Set 2D Texture "_OcclusionMap" to slot 4 sampler slot 6
Set 2D Texture "unity_Lightmap" to slot 5 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 6 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 7 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s5
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s4
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r2.z, r2.xyxx, r2.xyxx
  12: min r2.z, r2.z, l(1.000000)
  13: add r2.z, -r2.z, l(1.000000)
  14: sqrt r2.z, r2.z
  15: mul r3.xyz, r2.yyyy, v4.xyzx
  16: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  17: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  18: dp3 r2.w, r2.xyzx, r2.xyzx
  19: rsq r2.w, r2.w
  20: mul r2.xyz, r2.wwww, r2.xyzx
  21: dp3 r3.x, v2.xyzx, v2.xyzx
  22: rsq r3.x, r3.x
  23: mul r3.yzw, r3.xxxx, v2.xxyz
  24: div r4.xy, v7.xyxx, v7.wwww
  25: sample r4.xyzw, r4.xyxx, t3.xyzw, s7
  26: sample r5.xyzw, v1.xyxx, t4.xyzw, s6
  27: add r4.y, -cb0[9].y, l(1.000000)
  28: mad r4.y, r5.y, cb0[9].y, r4.y
  29: mad r4.z, -r0.w, cb0[9].x, l(1.000000)
  30: dp3 r4.w, r3.yzwy, r2.xyzx
  31: add r4.w, r4.w, r4.w
  32: mad r5.xyz, r2.xyzx, -r4.wwww, r3.yzwy
  33: mov r6.x, v3.w
  34: mov r6.y, v4.w
  35: mov r6.z, v5.w
  36: mov r4.w, cb4[0].x
  37: add r7.xyz, -r6.xyzx, cb3[r4.w + 64].xyzx
  38: ishl r4.w, cb4[0].x, l(2)
  39: mov r8.x, cb3[r4.w + 8].z
  40: mov r8.y, cb3[r4.w + 9].z
  41: mov r8.z, cb3[r4.w + 10].z
  42: dp3 r4.w, r7.xyzx, r8.xyzx
  43: add r7.xyz, r6.xyzx, -cb2[25].xyzx
  44: dp3 r5.w, r7.xyzx, r7.xyzx
  45: sqrt r5.w, r5.w
  46: add r5.w, -r4.w, r5.w
  47: mad r4.w, cb2[25].w, r5.w, r4.w
  48: mad_sat r4.w, r4.w, cb2[24].z, cb2[24].w
  49: add r5.w, -r4.x, l(1.000000)
  50: mad r4.x, r4.w, r5.w, r4.x
  51: mul r7.xyz, r4.xxxx, cb0[2].xyzx
  52: eq r4.x, cb6[0].x, l(1.000000)
  53: if_nz r4.x
  54:   eq r4.x, cb6[0].y, l(1.000000)
  55:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  56:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  57:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  58:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  59:   movc r8.xyz, r4.xxxx, r8.xyzx, r6.xyzx
  60:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  61:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  62:   mul r4.x, r8.y, l(0.250000)
  63:   mul r4.w, cb6[0].z, l(0.500000)
  64:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  65:   max r4.x, r4.w, r4.x
  66:   min r8.x, r5.w, r4.x
  67:   sample r9.xyzw, r8.xzwx, t8.xyzw, s2
  68:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  69:   sample r10.xyzw, r10.xyzx, t8.xyzw, s2
  70:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  71:   sample r8.xyzw, r8.xyzx, t8.xyzw, s2
  72:   mov r2.w, l(1.000000)
  73:   dp4 r9.x, r9.xyzw, r2.xyzw
  74:   dp4 r9.y, r10.xyzw, r2.xyzw
  75:   dp4 r9.z, r8.xyzw, r2.xyzw
  76: else 
  77:   mov r2.w, l(1.000000)
  78:   dp4 r9.x, cb1[39].xyzw, r2.xyzw
  79:   dp4 r9.y, cb1[40].xyzw, r2.xyzw
  80:   dp4 r9.z, cb1[41].xyzw, r2.xyzw
  81: endif 
  82: mul r8.xyzw, r2.yzzx, r2.xyzz
  83: dp4 r10.x, cb1[42].xyzw, r8.xyzw
  84: dp4 r10.y, cb1[43].xyzw, r8.xyzw
  85: dp4 r10.z, cb1[44].xyzw, r8.xyzw
  86: mul r2.w, r2.y, r2.y
  87: mad r2.w, r2.x, r2.x, -r2.w
  88: mad r8.xyz, cb1[45].xyzx, r2.wwww, r10.xyzx
  89: add r8.xyz, r8.xyzx, r9.xyzx
  90: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  91: sample r9.xyzw, v6.xyxx, t5.xyzw, s0
  92: add r8.xyz, r8.xyzx, r9.xyzx
  93: lt r2.w, l(0.000000), cb5[2].w
  94: if_nz r2.w
  95:   dp3 r2.w, r5.xyzx, r5.xyzx
  96:   rsq r2.w, r2.w
  97:   mul r9.xyz, r2.wwww, r5.xyzx
  98:   add r10.xyz, -r6.xyzx, cb5[0].xyzx
  99:   div r10.xyz, r10.xyzx, r9.xyzx
 100:   add r11.xyz, -r6.xyzx, cb5[1].xyzx
 101:   div r11.xyz, r11.xyzx, r9.xyzx
 102:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 103:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 104:   min r2.w, r10.y, r10.x
 105:   min r2.w, r10.z, r2.w
 106:   add r10.xyz, r6.xyzx, -cb5[2].xyzx
 107:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 108: else 
 109:   mov r9.xyz, r5.xyzx
 110: endif 
 111: mad r2.w, -r4.z, l(0.700000), l(1.700000)
 112: mul r2.w, r2.w, r4.z
 113: mul r2.w, r2.w, l(6.000000)
 114: sample_l r9.xyzw, r9.xyzx, t6.xyzw, s1, r2.w
 115: add r4.x, r9.w, l(-1.000000)
 116: mad r4.x, cb5[3].w, r4.x, l(1.000000)
 117: log r4.x, r4.x
 118: mul r4.x, r4.x, cb5[3].y
 119: exp r4.x, r4.x
 120: mul r4.x, r4.x, cb5[3].x
 121: mul r10.xyz, r9.xyzx, r4.xxxx
 122: lt r4.w, cb5[1].w, l(0.999990)
 123: if_nz r4.w
 124:   lt r4.w, l(0.000000), cb5[6].w
 125:   if_nz r4.w
 126:     dp3 r4.w, r5.xyzx, r5.xyzx
 127:     rsq r4.w, r4.w
 128:     mul r11.xyz, r4.wwww, r5.xyzx
 129:     add r12.xyz, -r6.xyzx, cb5[4].xyzx
 130:     div r12.xyz, r12.xyzx, r11.xyzx
 131:     add r13.xyz, -r6.xyzx, cb5[5].xyzx
 132:     div r13.xyz, r13.xyzx, r11.xyzx
 133:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 134:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 135:     min r4.w, r12.y, r12.x
 136:     min r4.w, r12.z, r4.w
 137:     add r6.xyz, r6.xyzx, -cb5[6].xyzx
 138:     mad r5.xyz, r11.xyzx, r4.wwww, r6.xyzx
 139:   endif 
 140:   sample_l r5.xyzw, r5.xyzx, t7.xyzw, s1, r2.w
 141:   add r2.w, r5.w, l(-1.000000)
 142:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 143:   log r2.w, r2.w
 144:   mul r2.w, r2.w, cb5[7].y
 145:   exp r2.w, r2.w
 146:   mul r2.w, r2.w, cb5[7].x
 147:   mul r5.xyz, r5.xyzx, r2.wwww
 148:   mad r6.xyz, r4.xxxx, r9.xyzx, -r5.xyzx
 149:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
 150: endif 
 151: mul r5.xyz, r4.yyyy, r10.xyzx
 152: mad r6.xyz, -v2.xyzx, r3.xxxx, cb1[0].xyzx
 153: dp3 r2.w, r6.xyzx, r6.xyzx
 154: max r2.w, r2.w, l(0.001000)
 155: rsq r2.w, r2.w
 156: mul r6.xyz, r2.wwww, r6.xyzx
 157: dp3 r2.w, r2.xyzx, -r3.yzwy
 158: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 159: dp3_sat r2.x, r2.xyzx, r6.xyzx
 160: dp3_sat r2.y, cb1[0].xyzx, r6.xyzx
 161: mul r2.z, r2.y, r2.y
 162: dp2 r2.z, r2.zzzz, r4.zzzz
 163: add r2.z, r2.z, l(-0.500000)
 164: add r3.y, -r3.x, l(1.000000)
 165: mul r3.z, r3.y, r3.y
 166: mul r3.z, r3.z, r3.z
 167: mul r3.y, r3.y, r3.z
 168: mad r3.y, r2.z, r3.y, l(1.000000)
 169: add r3.z, -|r2.w|, l(1.000000)
 170: mul r3.w, r3.z, r3.z
 171: mul r3.w, r3.w, r3.w
 172: mul r3.z, r3.z, r3.w
 173: mad r2.z, r2.z, r3.z, l(1.000000)
 174: mul r2.z, r2.z, r3.y
 175: mul r3.y, r4.z, r4.z
 176: max r3.y, r3.y, l(0.002000)
 177: add r3.w, -r3.y, l(1.000000)
 178: mad r4.x, |r2.w|, r3.w, r3.y
 179: mad r3.w, r3.x, r3.w, r3.y
 180: mul r2.w, |r2.w|, r3.w
 181: mad r2.w, r3.x, r4.x, r2.w
 182: add r2.w, r2.w, l(0.000010)
 183: div r2.w, l(0.500000), r2.w
 184: mul r3.w, r3.y, r3.y
 185: mad r4.x, r2.x, r3.w, -r2.x
 186: mad r2.x, r4.x, r2.x, l(1.000000)
 187: mul r3.w, r3.w, l(0.318310)
 188: mad r2.x, r2.x, r2.x, l(0.000000)
 189: div r2.x, r3.w, r2.x
 190: mul r2.x, r2.x, r2.w
 191: mul r2.x, r2.x, l(3.141593)
 192: mul r2.xz, r3.xxxx, r2.xxzx
 193: max r2.x, r2.x, l(0.000000)
 194: mad r2.w, r3.y, r3.y, l(1.000000)
 195: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 196: dp3 r3.x, r0.xyzx, r0.xyzx
 197: ne r3.x, r3.x, l(0.000000)
 198: and r3.x, r3.x, l(0x3f800000)
 199: mul r2.x, r2.x, r3.x
 200: mad r0.w, r0.w, cb0[9].x, -r1.w
 201: add_sat r0.w, r0.w, l(1.000000)
 202: mul r3.xyw, r2.zzzz, r7.xyxz
 203: mad r3.xyw, r8.xyxz, r4.yyyy, r3.xyxw
 204: mul r4.xyz, r7.xyzx, r2.xxxx
 205: add r1.w, -r2.y, l(1.000000)
 206: mul r2.x, r1.w, r1.w
 207: mul r2.x, r2.x, r2.x
 208: mul r1.w, r1.w, r2.x
 209: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 210: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 211: mul r2.xyz, r2.xyzx, r4.xyzx
 212: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 213: mul r2.xyz, r5.xyzx, r2.wwww
 214: add r3.xyw, -r0.xyxz, r0.wwww
 215: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 216: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 217: mov o0.w, l(1.000000)
 218: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul o5.xyz, r1.wwww, r1.xyzx
  29: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  30: mov o6.zw, l(0,0,0,0)
  31: mul r0.y, r0.y, cb1[5].x
  32: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  33: mov o7.zw, r0.zzzw
  34: add o7.xy, r1.zzzz, r1.xwxx
  35: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 172 math, 14 temp registers, 7 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 5
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 4
Set 2D Texture "unity_Lightmap" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: dp3 r2.x, v2.xyzx, v2.xyzx
  10: rsq r2.x, r2.x
  11: mul r2.yzw, r2.xxxx, v2.xxyz
  12: div r3.xy, v7.xyxx, v7.wwww
  13: sample r3.xyzw, r3.xyxx, t1.xyzw, s5
  14: sample r4.xyzw, v1.xyxx, t2.xyzw, s4
  15: add r3.y, -cb0[9].y, l(1.000000)
  16: mad r3.y, r4.y, cb0[9].y, r3.y
  17: add r3.z, -cb0[8].w, l(1.000000)
  18: dp3 r3.w, r2.yzwy, r1.xyzx
  19: add r3.w, r3.w, r3.w
  20: mad r4.xyz, r1.xyzx, -r3.wwww, r2.yzwy
  21: mov r5.x, v3.w
  22: mov r5.y, v4.w
  23: mov r5.z, v5.w
  24: add r6.xyz, -r5.xyzx, cb1[4].xyzx
  25: mov r7.x, cb4[9].z
  26: mov r7.y, cb4[10].z
  27: mov r7.z, cb4[11].z
  28: dp3 r3.w, r6.xyzx, r7.xyzx
  29: add r6.xyz, r5.xyzx, -cb3[25].xyzx
  30: dp3 r4.w, r6.xyzx, r6.xyzx
  31: sqrt r4.w, r4.w
  32: add r4.w, -r3.w, r4.w
  33: mad r3.w, cb3[25].w, r4.w, r3.w
  34: mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
  35: add r4.w, -r3.x, l(1.000000)
  36: mad r3.x, r3.w, r4.w, r3.x
  37: mul r6.xyz, r3.xxxx, cb0[2].xyzx
  38: eq r3.x, cb6[0].x, l(1.000000)
  39: if_nz r3.x
  40:   eq r3.x, cb6[0].y, l(1.000000)
  41:   mul r7.xyz, v4.wwww, cb6[2].xyzx
  42:   mad r7.xyz, cb6[1].xyzx, v3.wwww, r7.xyzx
  43:   mad r7.xyz, cb6[3].xyzx, v5.wwww, r7.xyzx
  44:   add r7.xyz, r7.xyzx, cb6[4].xyzx
  45:   movc r7.xyz, r3.xxxx, r7.xyzx, r5.xyzx
  46:   add r7.xyz, r7.xyzx, -cb6[6].xyzx
  47:   mul r7.yzw, r7.xxyz, cb6[5].xxyz
  48:   mul r3.x, r7.y, l(0.250000)
  49:   mul r3.w, cb6[0].z, l(0.500000)
  50:   mad r4.w, -cb6[0].z, l(0.500000), l(0.250000)
  51:   max r3.x, r3.w, r3.x
  52:   min r7.x, r4.w, r3.x
  53:   sample r8.xyzw, r7.xzwx, t6.xyzw, s2
  54:   add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  55:   sample r9.xyzw, r9.xyzx, t6.xyzw, s2
  56:   add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  57:   sample r7.xyzw, r7.xyzx, t6.xyzw, s2
  58:   mov r1.w, l(1.000000)
  59:   dp4 r8.x, r8.xyzw, r1.xyzw
  60:   dp4 r8.y, r9.xyzw, r1.xyzw
  61:   dp4 r8.z, r7.xyzw, r1.xyzw
  62: else 
  63:   mov r1.w, l(1.000000)
  64:   dp4 r8.x, cb2[39].xyzw, r1.xyzw
  65:   dp4 r8.y, cb2[40].xyzw, r1.xyzw
  66:   dp4 r8.z, cb2[41].xyzw, r1.xyzw
  67: endif 
  68: mul r7.xyzw, r1.yzzx, r1.xyzz
  69: dp4 r9.x, cb2[42].xyzw, r7.xyzw
  70: dp4 r9.y, cb2[43].xyzw, r7.xyzw
  71: dp4 r9.z, cb2[44].xyzw, r7.xyzw
  72: mul r1.w, r1.y, r1.y
  73: mad r1.w, r1.x, r1.x, -r1.w
  74: mad r7.xyz, cb2[45].xyzx, r1.wwww, r9.xyzx
  75: add r7.xyz, r7.xyzx, r8.xyzx
  76: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  77: sample r8.xyzw, v6.xyxx, t3.xyzw, s0
  78: add r7.xyz, r7.xyzx, r8.xyzx
  79: lt r1.w, l(0.000000), cb5[2].w
  80: if_nz r1.w
  81:   dp3 r1.w, r4.xyzx, r4.xyzx
  82:   rsq r1.w, r1.w
  83:   mul r8.xyz, r1.wwww, r4.xyzx
  84:   add r9.xyz, -r5.xyzx, cb5[0].xyzx
  85:   div r9.xyz, r9.xyzx, r8.xyzx
  86:   add r10.xyz, -r5.xyzx, cb5[1].xyzx
  87:   div r10.xyz, r10.xyzx, r8.xyzx
  88:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  89:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  90:   min r1.w, r9.y, r9.x
  91:   min r1.w, r9.z, r1.w
  92:   add r9.xyz, r5.xyzx, -cb5[2].xyzx
  93:   mad r8.xyz, r8.xyzx, r1.wwww, r9.xyzx
  94: else 
  95:   mov r8.xyz, r4.xyzx
  96: endif 
  97: mad r1.w, -r3.z, l(0.700000), l(1.700000)
  98: mul r1.w, r1.w, r3.z
  99: mul r1.w, r1.w, l(6.000000)
 100: sample_l r8.xyzw, r8.xyzx, t4.xyzw, s1, r1.w
 101: add r3.x, r8.w, l(-1.000000)
 102: mad r3.x, cb5[3].w, r3.x, l(1.000000)
 103: log r3.x, r3.x
 104: mul r3.x, r3.x, cb5[3].y
 105: exp r3.x, r3.x
 106: mul r3.x, r3.x, cb5[3].x
 107: mul r9.xyz, r8.xyzx, r3.xxxx
 108: lt r3.w, cb5[1].w, l(0.999990)
 109: if_nz r3.w
 110:   lt r3.w, l(0.000000), cb5[6].w
 111:   if_nz r3.w
 112:     dp3 r3.w, r4.xyzx, r4.xyzx
 113:     rsq r3.w, r3.w
 114:     mul r10.xyz, r3.wwww, r4.xyzx
 115:     add r11.xyz, -r5.xyzx, cb5[4].xyzx
 116:     div r11.xyz, r11.xyzx, r10.xyzx
 117:     add r12.xyz, -r5.xyzx, cb5[5].xyzx
 118:     div r12.xyz, r12.xyzx, r10.xyzx
 119:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 120:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 121:     min r3.w, r11.y, r11.x
 122:     min r3.w, r11.z, r3.w
 123:     add r5.xyz, r5.xyzx, -cb5[6].xyzx
 124:     mad r4.xyz, r10.xyzx, r3.wwww, r5.xyzx
 125:   endif 
 126:   sample_l r4.xyzw, r4.xyzx, t5.xyzw, s1, r1.w
 127:   add r1.w, r4.w, l(-1.000000)
 128:   mad r1.w, cb5[7].w, r1.w, l(1.000000)
 129:   log r1.w, r1.w
 130:   mul r1.w, r1.w, cb5[7].y
 131:   exp r1.w, r1.w
 132:   mul r1.w, r1.w, cb5[7].x
 133:   mul r4.xyz, r4.xyzx, r1.wwww
 134:   mad r5.xyz, r3.xxxx, r8.xyzx, -r4.xyzx
 135:   mad r9.xyz, cb5[1].wwww, r5.xyzx, r4.xyzx
 136: endif 
 137: mul r4.xyz, r3.yyyy, r9.xyzx
 138: mad r5.xyz, -v2.xyzx, r2.xxxx, cb2[0].xyzx
 139: dp3 r1.w, r5.xyzx, r5.xyzx
 140: max r1.w, r1.w, l(0.001000)
 141: rsq r1.w, r1.w
 142: mul r5.xyz, r1.wwww, r5.xyzx
 143: dp3 r1.w, r1.xyzx, -r2.yzwy
 144: dp3_sat r2.x, r1.xyzx, cb2[0].xyzx
 145: dp3_sat r1.x, r1.xyzx, r5.xyzx
 146: dp3_sat r1.y, cb2[0].xyzx, r5.xyzx
 147: mul r1.z, r1.y, r1.y
 148: dp2 r1.z, r1.zzzz, r3.zzzz
 149: add r1.z, r1.z, l(-0.500000)
 150: add r2.y, -r2.x, l(1.000000)
 151: mul r2.z, r2.y, r2.y
 152: mul r2.z, r2.z, r2.z
 153: mul r2.y, r2.y, r2.z
 154: mad r2.y, r1.z, r2.y, l(1.000000)
 155: add r2.z, -|r1.w|, l(1.000000)
 156: mul r2.w, r2.z, r2.z
 157: mul r2.w, r2.w, r2.w
 158: mul r2.z, r2.z, r2.w
 159: mad r1.z, r1.z, r2.z, l(1.000000)
 160: mul r1.z, r1.z, r2.y
 161: mul r2.y, r3.z, r3.z
 162: max r2.y, r2.y, l(0.002000)
 163: add r2.w, -r2.y, l(1.000000)
 164: mad r3.x, |r1.w|, r2.w, r2.y
 165: mad r2.w, r2.x, r2.w, r2.y
 166: mul r1.w, |r1.w|, r2.w
 167: mad r1.w, r2.x, r3.x, r1.w
 168: add r1.w, r1.w, l(0.000010)
 169: div r1.w, l(0.500000), r1.w
 170: mul r2.w, r2.y, r2.y
 171: mad r3.x, r1.x, r2.w, -r1.x
 172: mad r1.x, r3.x, r1.x, l(1.000000)
 173: mul r2.w, r2.w, l(0.318310)
 174: mad r1.x, r1.x, r1.x, l(0.000000)
 175: div r1.x, r2.w, r1.x
 176: mul r1.x, r1.x, r1.w
 177: mul r1.x, r1.x, l(3.141593)
 178: mul r1.xz, r2.xxxx, r1.xxzx
 179: max r1.x, r1.x, l(0.000000)
 180: mad r1.w, r2.y, r2.y, l(1.000000)
 181: div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
 182: dp3 r2.x, cb0[3].xyzx, cb0[3].xyzx
 183: ne r2.x, r2.x, l(0.000000)
 184: and r2.x, r2.x, l(0x3f800000)
 185: mul r1.x, r1.x, r2.x
 186: add r0.w, -r0.w, l(1.000000)
 187: add_sat r0.w, r0.w, cb0[8].w
 188: mul r2.xyw, r1.zzzz, r6.xyxz
 189: mad r2.xyw, r7.xyxz, r3.yyyy, r2.xyxw
 190: mul r3.xyz, r6.xyzx, r1.xxxx
 191: add r1.x, -r1.y, l(1.000000)
 192: mul r1.y, r1.x, r1.x
 193: mul r1.y, r1.y, r1.y
 194: mul r1.x, r1.x, r1.y
 195: add r5.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 196: mad r1.xyz, r5.xyzx, r1.xxxx, cb0[3].xyzx
 197: mul r1.xyz, r1.xyzx, r3.xyzx
 198: mad r0.xyz, r0.xyzx, r2.xywx, r1.xyzx
 199: mul r1.xyz, r4.xyzx, r1.wwww
 200: add r2.xyw, r0.wwww, -cb0[3].xyxz
 201: mad r2.xyz, r2.zzzz, r2.xywx, cb0[3].xyzx
 202: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
 203: mov o0.w, l(1.000000)
 204: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON LIGHTPROBE_SH SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 5 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[68], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  16: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  19: mov r2.x, cb4[0].x
  20: add o2.xyz, r1.xyzx, -cb3[r2.x + 64].xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mad o6.xy, v3.xyxx, cb5[0].xyxx, cb5[0].zwzz
  32: mov o6.zw, l(0,0,0,0)
  33: mul r0.y, r0.y, cb1[4].x
  34: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  35: add r0.xy, r1.zzzz, r1.xwxx
  36: mul r1.xy, r0.wwww, cb3[r2.x + 66].zwzz
  37: mad o7.xy, r0.xyxx, cb3[r2.x + 66].xyxx, r1.xyxx
  38: mov o7.zw, r0.zzzw
  39: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 173 math, 14 temp registers, 7 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 5
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 4
Set 2D Texture "unity_Lightmap" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: dp3 r2.x, v2.xyzx, v2.xyzx
  10: rsq r2.x, r2.x
  11: mul r2.yzw, r2.xxxx, v2.xxyz
  12: div r3.xy, v7.xyxx, v7.wwww
  13: sample r3.xyzw, r3.xyxx, t1.xyzw, s5
  14: sample r4.xyzw, v1.xyxx, t2.xyzw, s4
  15: add r3.y, -cb0[9].y, l(1.000000)
  16: mad r3.y, r4.y, cb0[9].y, r3.y
  17: add r3.z, -cb0[8].w, l(1.000000)
  18: dp3 r3.w, r2.yzwy, r1.xyzx
  19: add r3.w, r3.w, r3.w
  20: mad r4.xyz, r1.xyzx, -r3.wwww, r2.yzwy
  21: mov r5.x, v3.w
  22: mov r5.y, v4.w
  23: mov r5.z, v5.w
  24: mov r3.w, cb4[0].x
  25: add r6.xyz, -r5.xyzx, cb3[r3.w + 64].xyzx
  26: ishl r3.w, cb4[0].x, l(2)
  27: mov r7.x, cb3[r3.w + 8].z
  28: mov r7.y, cb3[r3.w + 9].z
  29: mov r7.z, cb3[r3.w + 10].z
  30: dp3 r3.w, r6.xyzx, r7.xyzx
  31: add r6.xyz, r5.xyzx, -cb2[25].xyzx
  32: dp3 r4.w, r6.xyzx, r6.xyzx
  33: sqrt r4.w, r4.w
  34: add r4.w, -r3.w, r4.w
  35: mad r3.w, cb2[25].w, r4.w, r3.w
  36: mad_sat r3.w, r3.w, cb2[24].z, cb2[24].w
  37: add r4.w, -r3.x, l(1.000000)
  38: mad r3.x, r3.w, r4.w, r3.x
  39: mul r6.xyz, r3.xxxx, cb0[2].xyzx
  40: eq r3.x, cb6[0].x, l(1.000000)
  41: if_nz r3.x
  42:   eq r3.x, cb6[0].y, l(1.000000)
  43:   mul r7.xyz, v4.wwww, cb6[2].xyzx
  44:   mad r7.xyz, cb6[1].xyzx, v3.wwww, r7.xyzx
  45:   mad r7.xyz, cb6[3].xyzx, v5.wwww, r7.xyzx
  46:   add r7.xyz, r7.xyzx, cb6[4].xyzx
  47:   movc r7.xyz, r3.xxxx, r7.xyzx, r5.xyzx
  48:   add r7.xyz, r7.xyzx, -cb6[6].xyzx
  49:   mul r7.yzw, r7.xxyz, cb6[5].xxyz
  50:   mul r3.x, r7.y, l(0.250000)
  51:   mul r3.w, cb6[0].z, l(0.500000)
  52:   mad r4.w, -cb6[0].z, l(0.500000), l(0.250000)
  53:   max r3.x, r3.w, r3.x
  54:   min r7.x, r4.w, r3.x
  55:   sample r8.xyzw, r7.xzwx, t6.xyzw, s2
  56:   add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  57:   sample r9.xyzw, r9.xyzx, t6.xyzw, s2
  58:   add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  59:   sample r7.xyzw, r7.xyzx, t6.xyzw, s2
  60:   mov r1.w, l(1.000000)
  61:   dp4 r8.x, r8.xyzw, r1.xyzw
  62:   dp4 r8.y, r9.xyzw, r1.xyzw
  63:   dp4 r8.z, r7.xyzw, r1.xyzw
  64: else 
  65:   mov r1.w, l(1.000000)
  66:   dp4 r8.x, cb1[39].xyzw, r1.xyzw
  67:   dp4 r8.y, cb1[40].xyzw, r1.xyzw
  68:   dp4 r8.z, cb1[41].xyzw, r1.xyzw
  69: endif 
  70: mul r7.xyzw, r1.yzzx, r1.xyzz
  71: dp4 r9.x, cb1[42].xyzw, r7.xyzw
  72: dp4 r9.y, cb1[43].xyzw, r7.xyzw
  73: dp4 r9.z, cb1[44].xyzw, r7.xyzw
  74: mul r1.w, r1.y, r1.y
  75: mad r1.w, r1.x, r1.x, -r1.w
  76: mad r7.xyz, cb1[45].xyzx, r1.wwww, r9.xyzx
  77: add r7.xyz, r7.xyzx, r8.xyzx
  78: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  79: sample r8.xyzw, v6.xyxx, t3.xyzw, s0
  80: add r7.xyz, r7.xyzx, r8.xyzx
  81: lt r1.w, l(0.000000), cb5[2].w
  82: if_nz r1.w
  83:   dp3 r1.w, r4.xyzx, r4.xyzx
  84:   rsq r1.w, r1.w
  85:   mul r8.xyz, r1.wwww, r4.xyzx
  86:   add r9.xyz, -r5.xyzx, cb5[0].xyzx
  87:   div r9.xyz, r9.xyzx, r8.xyzx
  88:   add r10.xyz, -r5.xyzx, cb5[1].xyzx
  89:   div r10.xyz, r10.xyzx, r8.xyzx
  90:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  91:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  92:   min r1.w, r9.y, r9.x
  93:   min r1.w, r9.z, r1.w
  94:   add r9.xyz, r5.xyzx, -cb5[2].xyzx
  95:   mad r8.xyz, r8.xyzx, r1.wwww, r9.xyzx
  96: else 
  97:   mov r8.xyz, r4.xyzx
  98: endif 
  99: mad r1.w, -r3.z, l(0.700000), l(1.700000)
 100: mul r1.w, r1.w, r3.z
 101: mul r1.w, r1.w, l(6.000000)
 102: sample_l r8.xyzw, r8.xyzx, t4.xyzw, s1, r1.w
 103: add r3.x, r8.w, l(-1.000000)
 104: mad r3.x, cb5[3].w, r3.x, l(1.000000)
 105: log r3.x, r3.x
 106: mul r3.x, r3.x, cb5[3].y
 107: exp r3.x, r3.x
 108: mul r3.x, r3.x, cb5[3].x
 109: mul r9.xyz, r8.xyzx, r3.xxxx
 110: lt r3.w, cb5[1].w, l(0.999990)
 111: if_nz r3.w
 112:   lt r3.w, l(0.000000), cb5[6].w
 113:   if_nz r3.w
 114:     dp3 r3.w, r4.xyzx, r4.xyzx
 115:     rsq r3.w, r3.w
 116:     mul r10.xyz, r3.wwww, r4.xyzx
 117:     add r11.xyz, -r5.xyzx, cb5[4].xyzx
 118:     div r11.xyz, r11.xyzx, r10.xyzx
 119:     add r12.xyz, -r5.xyzx, cb5[5].xyzx
 120:     div r12.xyz, r12.xyzx, r10.xyzx
 121:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 122:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 123:     min r3.w, r11.y, r11.x
 124:     min r3.w, r11.z, r3.w
 125:     add r5.xyz, r5.xyzx, -cb5[6].xyzx
 126:     mad r4.xyz, r10.xyzx, r3.wwww, r5.xyzx
 127:   endif 
 128:   sample_l r4.xyzw, r4.xyzx, t5.xyzw, s1, r1.w
 129:   add r1.w, r4.w, l(-1.000000)
 130:   mad r1.w, cb5[7].w, r1.w, l(1.000000)
 131:   log r1.w, r1.w
 132:   mul r1.w, r1.w, cb5[7].y
 133:   exp r1.w, r1.w
 134:   mul r1.w, r1.w, cb5[7].x
 135:   mul r4.xyz, r4.xyzx, r1.wwww
 136:   mad r5.xyz, r3.xxxx, r8.xyzx, -r4.xyzx
 137:   mad r9.xyz, cb5[1].wwww, r5.xyzx, r4.xyzx
 138: endif 
 139: mul r4.xyz, r3.yyyy, r9.xyzx
 140: mad r5.xyz, -v2.xyzx, r2.xxxx, cb1[0].xyzx
 141: dp3 r1.w, r5.xyzx, r5.xyzx
 142: max r1.w, r1.w, l(0.001000)
 143: rsq r1.w, r1.w
 144: mul r5.xyz, r1.wwww, r5.xyzx
 145: dp3 r1.w, r1.xyzx, -r2.yzwy
 146: dp3_sat r2.x, r1.xyzx, cb1[0].xyzx
 147: dp3_sat r1.x, r1.xyzx, r5.xyzx
 148: dp3_sat r1.y, cb1[0].xyzx, r5.xyzx
 149: mul r1.z, r1.y, r1.y
 150: dp2 r1.z, r1.zzzz, r3.zzzz
 151: add r1.z, r1.z, l(-0.500000)
 152: add r2.y, -r2.x, l(1.000000)
 153: mul r2.z, r2.y, r2.y
 154: mul r2.z, r2.z, r2.z
 155: mul r2.y, r2.y, r2.z
 156: mad r2.y, r1.z, r2.y, l(1.000000)
 157: add r2.z, -|r1.w|, l(1.000000)
 158: mul r2.w, r2.z, r2.z
 159: mul r2.w, r2.w, r2.w
 160: mul r2.z, r2.z, r2.w
 161: mad r1.z, r1.z, r2.z, l(1.000000)
 162: mul r1.z, r1.z, r2.y
 163: mul r2.y, r3.z, r3.z
 164: max r2.y, r2.y, l(0.002000)
 165: add r2.w, -r2.y, l(1.000000)
 166: mad r3.x, |r1.w|, r2.w, r2.y
 167: mad r2.w, r2.x, r2.w, r2.y
 168: mul r1.w, |r1.w|, r2.w
 169: mad r1.w, r2.x, r3.x, r1.w
 170: add r1.w, r1.w, l(0.000010)
 171: div r1.w, l(0.500000), r1.w
 172: mul r2.w, r2.y, r2.y
 173: mad r3.x, r1.x, r2.w, -r1.x
 174: mad r1.x, r3.x, r1.x, l(1.000000)
 175: mul r2.w, r2.w, l(0.318310)
 176: mad r1.x, r1.x, r1.x, l(0.000000)
 177: div r1.x, r2.w, r1.x
 178: mul r1.x, r1.x, r1.w
 179: mul r1.x, r1.x, l(3.141593)
 180: mul r1.xz, r2.xxxx, r1.xxzx
 181: max r1.x, r1.x, l(0.000000)
 182: mad r1.w, r2.y, r2.y, l(1.000000)
 183: div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
 184: dp3 r2.x, cb0[3].xyzx, cb0[3].xyzx
 185: ne r2.x, r2.x, l(0.000000)
 186: and r2.x, r2.x, l(0x3f800000)
 187: mul r1.x, r1.x, r2.x
 188: add r0.w, -r0.w, l(1.000000)
 189: add_sat r0.w, r0.w, cb0[8].w
 190: mul r2.xyw, r1.zzzz, r6.xyxz
 191: mad r2.xyw, r7.xyxz, r3.yyyy, r2.xyxw
 192: mul r3.xyz, r6.xyzx, r1.xxxx
 193: add r1.x, -r1.y, l(1.000000)
 194: mul r1.y, r1.x, r1.x
 195: mul r1.y, r1.y, r1.y
 196: mul r1.x, r1.x, r1.y
 197: add r5.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 198: mad r1.xyz, r5.xyzx, r1.xxxx, cb0[3].xyzx
 199: mul r1.xyz, r1.xyzx, r3.xyzx
 200: mad r0.xyz, r0.xyzx, r2.xywx, r1.xyzx
 201: mul r1.xyz, r4.xyzx, r1.wwww
 202: add r2.xyw, r0.wwww, -cb0[3].xyxz
 203: mad r2.xyz, r2.zzzz, r2.xywx, cb0[3].xyzx
 204: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
 205: mov o0.w, l(1.000000)
 206: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _SPECGLOSSMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 141 math, 14 temp registers, 4 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 4
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r2.w, v2.xyzx, v2.xyzx
  11: rsq r2.w, r2.w
  12: mul r3.xyz, r2.wwww, v2.xyzx
  13: eq r3.w, cb3[0].x, l(1.000000)
  14: if_nz r3.w
  15:   eq r3.w, cb3[0].y, l(1.000000)
  16:   mul r4.xyz, v4.wwww, cb3[2].xyzx
  17:   mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
  18:   mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
  19:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  20:   mov r5.y, v3.w
  21:   mov r5.z, v4.w
  22:   mov r5.w, v5.w
  23:   movc r4.xyz, r3.wwww, r4.xyzx, r5.yzwy
  24:   add r4.xyz, r4.xyzx, -cb3[6].xyzx
  25:   mul r4.yzw, r4.xxyz, cb3[5].xxyz
  26:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  27:   mad r4.y, cb3[0].z, l(0.500000), l(0.750000)
  28:   max r4.x, r3.w, r4.y
  29:   sample r4.xyzw, r4.xzwx, t5.xyzw, s1
  30: else 
  31:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r3.w, r4.xyzw, cb1[46].xyzw
  34: sample r4.xyzw, v1.xyxx, t2.xyzw, s4
  35: add r4.x, -cb0[9].y, l(1.000000)
  36: mad r4.x, r4.y, cb0[9].y, r4.x
  37: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  38: dp3 r4.z, r3.xyzx, r2.xyzx
  39: add r4.z, r4.z, r4.z
  40: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.xyzx
  41: mul r6.xyz, r3.wwww, cb0[2].xyzx
  42: lt r3.w, l(0.000000), cb2[2].w
  43: if_nz r3.w
  44:   dp3 r3.w, r5.xyzx, r5.xyzx
  45:   rsq r3.w, r3.w
  46:   mul r7.xyz, r3.wwww, r5.xyzx
  47:   mov r8.x, v3.w
  48:   mov r8.y, v4.w
  49:   mov r8.z, v5.w
  50:   add r9.xyz, -r8.xyzx, cb2[0].xyzx
  51:   div r9.xyz, r9.xyzx, r7.xyzx
  52:   add r10.xyz, -r8.xyzx, cb2[1].xyzx
  53:   div r10.xyz, r10.xyzx, r7.xyzx
  54:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  55:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  56:   min r3.w, r9.y, r9.x
  57:   min r3.w, r9.z, r3.w
  58:   add r8.xyz, r8.xyzx, -cb2[2].xyzx
  59:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  60: else 
  61:   mov r7.xyz, r5.xyzx
  62: endif 
  63: mad r3.w, -r4.y, l(0.700000), l(1.700000)
  64: mul r3.w, r3.w, r4.y
  65: mul r3.w, r3.w, l(6.000000)
  66: sample_l r7.xyzw, r7.xyzx, t3.xyzw, s0, r3.w
  67: add r4.z, r7.w, l(-1.000000)
  68: mad r4.z, cb2[3].w, r4.z, l(1.000000)
  69: log r4.z, r4.z
  70: mul r4.z, r4.z, cb2[3].y
  71: exp r4.z, r4.z
  72: mul r4.z, r4.z, cb2[3].x
  73: mul r8.xyz, r7.xyzx, r4.zzzz
  74: lt r4.w, cb2[1].w, l(0.999990)
  75: if_nz r4.w
  76:   lt r4.w, l(0.000000), cb2[6].w
  77:   if_nz r4.w
  78:     dp3 r4.w, r5.xyzx, r5.xyzx
  79:     rsq r4.w, r4.w
  80:     mul r9.xyz, r4.wwww, r5.xyzx
  81:     mov r10.x, v3.w
  82:     mov r10.y, v4.w
  83:     mov r10.z, v5.w
  84:     add r11.xyz, -r10.xyzx, cb2[4].xyzx
  85:     div r11.xyz, r11.xyzx, r9.xyzx
  86:     add r12.xyz, -r10.xyzx, cb2[5].xyzx
  87:     div r12.xyz, r12.xyzx, r9.xyzx
  88:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  89:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  90:     min r4.w, r11.y, r11.x
  91:     min r4.w, r11.z, r4.w
  92:     add r10.xyz, r10.xyzx, -cb2[6].xyzx
  93:     mad r5.xyz, r9.xyzx, r4.wwww, r10.xyzx
  94:   endif 
  95:   sample_l r5.xyzw, r5.xyzx, t4.xyzw, s0, r3.w
  96:   add r3.w, r5.w, l(-1.000000)
  97:   mad r3.w, cb2[7].w, r3.w, l(1.000000)
  98:   log r3.w, r3.w
  99:   mul r3.w, r3.w, cb2[7].y
 100:   exp r3.w, r3.w
 101:   mul r3.w, r3.w, cb2[7].x
 102:   mul r5.xyz, r5.xyzx, r3.wwww
 103:   mad r7.xyz, r4.zzzz, r7.xyzx, -r5.xyzx
 104:   mad r8.xyz, cb2[1].wwww, r7.xyzx, r5.xyzx
 105: endif 
 106: mul r4.xzw, r4.xxxx, r8.xxyz
 107: mad r5.xyz, -v2.xyzx, r2.wwww, cb1[0].xyzx
 108: dp3 r2.w, r5.xyzx, r5.xyzx
 109: max r2.w, r2.w, l(0.001000)
 110: rsq r2.w, r2.w
 111: mul r5.xyz, r2.wwww, r5.xyzx
 112: dp3 r2.w, r2.xyzx, -r3.xyzx
 113: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 114: dp3_sat r2.x, r2.xyzx, r5.xyzx
 115: dp3_sat r2.y, cb1[0].xyzx, r5.xyzx
 116: mul r2.z, r2.y, r2.y
 117: dp2 r2.z, r2.zzzz, r4.yyyy
 118: add r2.z, r2.z, l(-0.500000)
 119: add r3.y, -r3.x, l(1.000000)
 120: mul r3.z, r3.y, r3.y
 121: mul r3.z, r3.z, r3.z
 122: mul r3.y, r3.y, r3.z
 123: mad r3.y, r2.z, r3.y, l(1.000000)
 124: add r3.z, -|r2.w|, l(1.000000)
 125: mul r3.w, r3.z, r3.z
 126: mul r3.w, r3.w, r3.w
 127: mul r3.z, r3.z, r3.w
 128: mad r2.z, r2.z, r3.z, l(1.000000)
 129: mul r2.z, r2.z, r3.y
 130: mul r3.y, r4.y, r4.y
 131: max r3.y, r3.y, l(0.002000)
 132: add r3.w, -r3.y, l(1.000000)
 133: mad r4.y, |r2.w|, r3.w, r3.y
 134: mad r3.w, r3.x, r3.w, r3.y
 135: mul r2.w, |r2.w|, r3.w
 136: mad r2.w, r3.x, r4.y, r2.w
 137: add r2.w, r2.w, l(0.000010)
 138: div r2.w, l(0.500000), r2.w
 139: mul r3.w, r3.y, r3.y
 140: mad r4.y, r2.x, r3.w, -r2.x
 141: mad r2.x, r4.y, r2.x, l(1.000000)
 142: mul r3.w, r3.w, l(0.318310)
 143: mad r2.x, r2.x, r2.x, l(0.000000)
 144: div r2.x, r3.w, r2.x
 145: mul r2.x, r2.x, r2.w
 146: mul r2.x, r2.x, l(3.141593)
 147: mul r2.xz, r3.xxxx, r2.xxzx
 148: max r2.x, r2.x, l(0.000000)
 149: mad r2.w, r3.y, r3.y, l(1.000000)
 150: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 151: dp3 r3.x, r0.xyzx, r0.xyzx
 152: ne r3.x, r3.x, l(0.000000)
 153: and r3.x, r3.x, l(0x3f800000)
 154: mul r2.x, r2.x, r3.x
 155: mad r0.w, r0.w, cb0[9].x, -r1.w
 156: add_sat r0.w, r0.w, l(1.000000)
 157: mul r3.xyw, r2.zzzz, r6.xyxz
 158: mul r5.xyz, r6.xyzx, r2.xxxx
 159: add r1.w, -r2.y, l(1.000000)
 160: mul r2.x, r1.w, r1.w
 161: mul r2.x, r2.x, r2.x
 162: mul r1.w, r1.w, r2.x
 163: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 164: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 165: mul r2.xyz, r2.xyzx, r5.xyzx
 166: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 167: mul r2.xyz, r4.xzwx, r2.wwww
 168: add r3.xyw, -r0.xyxz, r0.wwww
 169: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 170: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 171: mov o0.w, l(1.000000)
 172: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL VERTEXLIGHT_ON 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov r0.w, l(0)
  19: mov o3.xyzw, r0.wwwx
  20: mov o4.xyzw, r0.wwwy
  21: mov o5.w, r0.z
  22: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  23: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  24: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  25: dp3 r0.w, r0.xyzx, r0.xyzx
  26: rsq r0.w, r0.w
  27: mul o5.xyz, r0.wwww, r0.xyzx
  28: mov o6.xyzw, l(0,0,0,0)
  29: mov o7.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 141 math, 14 temp registers, 4 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 4
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r2.w, v2.xyzx, v2.xyzx
  11: rsq r2.w, r2.w
  12: mul r3.xyz, r2.wwww, v2.xyzx
  13: eq r3.w, cb3[0].x, l(1.000000)
  14: if_nz r3.w
  15:   eq r3.w, cb3[0].y, l(1.000000)
  16:   mul r4.xyz, v4.wwww, cb3[2].xyzx
  17:   mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
  18:   mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
  19:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  20:   mov r5.y, v3.w
  21:   mov r5.z, v4.w
  22:   mov r5.w, v5.w
  23:   movc r4.xyz, r3.wwww, r4.xyzx, r5.yzwy
  24:   add r4.xyz, r4.xyzx, -cb3[6].xyzx
  25:   mul r4.yzw, r4.xxyz, cb3[5].xxyz
  26:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  27:   mad r4.y, cb3[0].z, l(0.500000), l(0.750000)
  28:   max r4.x, r3.w, r4.y
  29:   sample r4.xyzw, r4.xzwx, t5.xyzw, s1
  30: else 
  31:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r3.w, r4.xyzw, cb1[46].xyzw
  34: sample r4.xyzw, v1.xyxx, t2.xyzw, s4
  35: add r4.x, -cb0[9].y, l(1.000000)
  36: mad r4.x, r4.y, cb0[9].y, r4.x
  37: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  38: dp3 r4.z, r3.xyzx, r2.xyzx
  39: add r4.z, r4.z, r4.z
  40: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.xyzx
  41: mul r6.xyz, r3.wwww, cb0[2].xyzx
  42: lt r3.w, l(0.000000), cb2[2].w
  43: if_nz r3.w
  44:   dp3 r3.w, r5.xyzx, r5.xyzx
  45:   rsq r3.w, r3.w
  46:   mul r7.xyz, r3.wwww, r5.xyzx
  47:   mov r8.x, v3.w
  48:   mov r8.y, v4.w
  49:   mov r8.z, v5.w
  50:   add r9.xyz, -r8.xyzx, cb2[0].xyzx
  51:   div r9.xyz, r9.xyzx, r7.xyzx
  52:   add r10.xyz, -r8.xyzx, cb2[1].xyzx
  53:   div r10.xyz, r10.xyzx, r7.xyzx
  54:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  55:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  56:   min r3.w, r9.y, r9.x
  57:   min r3.w, r9.z, r3.w
  58:   add r8.xyz, r8.xyzx, -cb2[2].xyzx
  59:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  60: else 
  61:   mov r7.xyz, r5.xyzx
  62: endif 
  63: mad r3.w, -r4.y, l(0.700000), l(1.700000)
  64: mul r3.w, r3.w, r4.y
  65: mul r3.w, r3.w, l(6.000000)
  66: sample_l r7.xyzw, r7.xyzx, t3.xyzw, s0, r3.w
  67: add r4.z, r7.w, l(-1.000000)
  68: mad r4.z, cb2[3].w, r4.z, l(1.000000)
  69: log r4.z, r4.z
  70: mul r4.z, r4.z, cb2[3].y
  71: exp r4.z, r4.z
  72: mul r4.z, r4.z, cb2[3].x
  73: mul r8.xyz, r7.xyzx, r4.zzzz
  74: lt r4.w, cb2[1].w, l(0.999990)
  75: if_nz r4.w
  76:   lt r4.w, l(0.000000), cb2[6].w
  77:   if_nz r4.w
  78:     dp3 r4.w, r5.xyzx, r5.xyzx
  79:     rsq r4.w, r4.w
  80:     mul r9.xyz, r4.wwww, r5.xyzx
  81:     mov r10.x, v3.w
  82:     mov r10.y, v4.w
  83:     mov r10.z, v5.w
  84:     add r11.xyz, -r10.xyzx, cb2[4].xyzx
  85:     div r11.xyz, r11.xyzx, r9.xyzx
  86:     add r12.xyz, -r10.xyzx, cb2[5].xyzx
  87:     div r12.xyz, r12.xyzx, r9.xyzx
  88:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  89:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  90:     min r4.w, r11.y, r11.x
  91:     min r4.w, r11.z, r4.w
  92:     add r10.xyz, r10.xyzx, -cb2[6].xyzx
  93:     mad r5.xyz, r9.xyzx, r4.wwww, r10.xyzx
  94:   endif 
  95:   sample_l r5.xyzw, r5.xyzx, t4.xyzw, s0, r3.w
  96:   add r3.w, r5.w, l(-1.000000)
  97:   mad r3.w, cb2[7].w, r3.w, l(1.000000)
  98:   log r3.w, r3.w
  99:   mul r3.w, r3.w, cb2[7].y
 100:   exp r3.w, r3.w
 101:   mul r3.w, r3.w, cb2[7].x
 102:   mul r5.xyz, r5.xyzx, r3.wwww
 103:   mad r7.xyz, r4.zzzz, r7.xyzx, -r5.xyzx
 104:   mad r8.xyz, cb2[1].wwww, r7.xyzx, r5.xyzx
 105: endif 
 106: mul r4.xzw, r4.xxxx, r8.xxyz
 107: mad r5.xyz, -v2.xyzx, r2.wwww, cb1[0].xyzx
 108: dp3 r2.w, r5.xyzx, r5.xyzx
 109: max r2.w, r2.w, l(0.001000)
 110: rsq r2.w, r2.w
 111: mul r5.xyz, r2.wwww, r5.xyzx
 112: dp3 r2.w, r2.xyzx, -r3.xyzx
 113: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 114: dp3_sat r2.x, r2.xyzx, r5.xyzx
 115: dp3_sat r2.y, cb1[0].xyzx, r5.xyzx
 116: mul r2.z, r2.y, r2.y
 117: dp2 r2.z, r2.zzzz, r4.yyyy
 118: add r2.z, r2.z, l(-0.500000)
 119: add r3.y, -r3.x, l(1.000000)
 120: mul r3.z, r3.y, r3.y
 121: mul r3.z, r3.z, r3.z
 122: mul r3.y, r3.y, r3.z
 123: mad r3.y, r2.z, r3.y, l(1.000000)
 124: add r3.z, -|r2.w|, l(1.000000)
 125: mul r3.w, r3.z, r3.z
 126: mul r3.w, r3.w, r3.w
 127: mul r3.z, r3.z, r3.w
 128: mad r2.z, r2.z, r3.z, l(1.000000)
 129: mul r2.z, r2.z, r3.y
 130: mul r3.y, r4.y, r4.y
 131: max r3.y, r3.y, l(0.002000)
 132: add r3.w, -r3.y, l(1.000000)
 133: mad r4.y, |r2.w|, r3.w, r3.y
 134: mad r3.w, r3.x, r3.w, r3.y
 135: mul r2.w, |r2.w|, r3.w
 136: mad r2.w, r3.x, r4.y, r2.w
 137: add r2.w, r2.w, l(0.000010)
 138: div r2.w, l(0.500000), r2.w
 139: mul r3.w, r3.y, r3.y
 140: mad r4.y, r2.x, r3.w, -r2.x
 141: mad r2.x, r4.y, r2.x, l(1.000000)
 142: mul r3.w, r3.w, l(0.318310)
 143: mad r2.x, r2.x, r2.x, l(0.000000)
 144: div r2.x, r3.w, r2.x
 145: mul r2.x, r2.x, r2.w
 146: mul r2.x, r2.x, l(3.141593)
 147: mul r2.xz, r3.xxxx, r2.xxzx
 148: max r2.x, r2.x, l(0.000000)
 149: mad r2.w, r3.y, r3.y, l(1.000000)
 150: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 151: dp3 r3.x, r0.xyzx, r0.xyzx
 152: ne r3.x, r3.x, l(0.000000)
 153: and r3.x, r3.x, l(0x3f800000)
 154: mul r2.x, r2.x, r3.x
 155: mad r0.w, r0.w, cb0[9].x, -r1.w
 156: add_sat r0.w, r0.w, l(1.000000)
 157: mul r3.xyw, r2.zzzz, r6.xyxz
 158: mul r5.xyz, r6.xyzx, r2.xxxx
 159: add r1.w, -r2.y, l(1.000000)
 160: mul r2.x, r1.w, r1.w
 161: mul r2.x, r2.x, r2.x
 162: mul r1.w, r1.w, r2.x
 163: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 164: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 165: mul r2.xyz, r2.xyzx, r5.xyzx
 166: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 167: mul r2.xyz, r4.xzwx, r2.wwww
 168: add r3.xyw, -r0.xyxz, r0.wwww
 169: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 170: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 171: mov o0.w, l(1.000000)
 172: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL UNITY_SINGLE_PASS_STEREO VERTEXLIGHT_ON 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mov r0.x, cb3[0].x
  15: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  16: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  17: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  18: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  19: add o2.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  20: mov r1.w, l(0)
  21: mov o3.xyzw, r1.wwwx
  22: mov o4.xyzw, r1.wwwy
  23: mov o5.w, r1.z
  24: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  25: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  26: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul o5.xyz, r0.wwww, r0.xyzx
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 151 math, 14 temp registers, 5 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 5
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r2.z, r2.xyxx, r2.xyxx
  12: min r2.z, r2.z, l(1.000000)
  13: add r2.z, -r2.z, l(1.000000)
  14: sqrt r2.z, r2.z
  15: mul r3.xyz, r2.yyyy, v4.xyzx
  16: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  17: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  18: dp3 r2.w, r2.xyzx, r2.xyzx
  19: rsq r2.w, r2.w
  20: mul r2.xyz, r2.wwww, r2.xyzx
  21: dp3 r2.w, v2.xyzx, v2.xyzx
  22: rsq r2.w, r2.w
  23: mul r3.xyz, r2.wwww, v2.xyzx
  24: eq r3.w, cb3[0].x, l(1.000000)
  25: if_nz r3.w
  26:   eq r3.w, cb3[0].y, l(1.000000)
  27:   mul r4.xyz, v4.wwww, cb3[2].xyzx
  28:   mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
  29:   mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
  30:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  31:   mov r5.y, v3.w
  32:   mov r5.z, v4.w
  33:   mov r5.w, v5.w
  34:   movc r4.xyz, r3.wwww, r4.xyzx, r5.yzwy
  35:   add r4.xyz, r4.xyzx, -cb3[6].xyzx
  36:   mul r4.yzw, r4.xxyz, cb3[5].xxyz
  37:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  38:   mad r4.y, cb3[0].z, l(0.500000), l(0.750000)
  39:   max r4.x, r3.w, r4.y
  40:   sample r4.xyzw, r4.xzwx, t6.xyzw, s1
  41: else 
  42:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r3.w, r4.xyzw, cb1[46].xyzw
  45: sample r4.xyzw, v1.xyxx, t3.xyzw, s5
  46: add r4.x, -cb0[9].y, l(1.000000)
  47: mad r4.x, r4.y, cb0[9].y, r4.x
  48: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  49: dp3 r4.z, r3.xyzx, r2.xyzx
  50: add r4.z, r4.z, r4.z
  51: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.xyzx
  52: mul r6.xyz, r3.wwww, cb0[2].xyzx
  53: lt r3.w, l(0.000000), cb2[2].w
  54: if_nz r3.w
  55:   dp3 r3.w, r5.xyzx, r5.xyzx
  56:   rsq r3.w, r3.w
  57:   mul r7.xyz, r3.wwww, r5.xyzx
  58:   mov r8.x, v3.w
  59:   mov r8.y, v4.w
  60:   mov r8.z, v5.w
  61:   add r9.xyz, -r8.xyzx, cb2[0].xyzx
  62:   div r9.xyz, r9.xyzx, r7.xyzx
  63:   add r10.xyz, -r8.xyzx, cb2[1].xyzx
  64:   div r10.xyz, r10.xyzx, r7.xyzx
  65:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  66:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  67:   min r3.w, r9.y, r9.x
  68:   min r3.w, r9.z, r3.w
  69:   add r8.xyz, r8.xyzx, -cb2[2].xyzx
  70:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  71: else 
  72:   mov r7.xyz, r5.xyzx
  73: endif 
  74: mad r3.w, -r4.y, l(0.700000), l(1.700000)
  75: mul r3.w, r3.w, r4.y
  76: mul r3.w, r3.w, l(6.000000)
  77: sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, r3.w
  78: add r4.z, r7.w, l(-1.000000)
  79: mad r4.z, cb2[3].w, r4.z, l(1.000000)
  80: log r4.z, r4.z
  81: mul r4.z, r4.z, cb2[3].y
  82: exp r4.z, r4.z
  83: mul r4.z, r4.z, cb2[3].x
  84: mul r8.xyz, r7.xyzx, r4.zzzz
  85: lt r4.w, cb2[1].w, l(0.999990)
  86: if_nz r4.w
  87:   lt r4.w, l(0.000000), cb2[6].w
  88:   if_nz r4.w
  89:     dp3 r4.w, r5.xyzx, r5.xyzx
  90:     rsq r4.w, r4.w
  91:     mul r9.xyz, r4.wwww, r5.xyzx
  92:     mov r10.x, v3.w
  93:     mov r10.y, v4.w
  94:     mov r10.z, v5.w
  95:     add r11.xyz, -r10.xyzx, cb2[4].xyzx
  96:     div r11.xyz, r11.xyzx, r9.xyzx
  97:     add r12.xyz, -r10.xyzx, cb2[5].xyzx
  98:     div r12.xyz, r12.xyzx, r9.xyzx
  99:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 100:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 101:     min r4.w, r11.y, r11.x
 102:     min r4.w, r11.z, r4.w
 103:     add r10.xyz, r10.xyzx, -cb2[6].xyzx
 104:     mad r5.xyz, r9.xyzx, r4.wwww, r10.xyzx
 105:   endif 
 106:   sample_l r5.xyzw, r5.xyzx, t5.xyzw, s0, r3.w
 107:   add r3.w, r5.w, l(-1.000000)
 108:   mad r3.w, cb2[7].w, r3.w, l(1.000000)
 109:   log r3.w, r3.w
 110:   mul r3.w, r3.w, cb2[7].y
 111:   exp r3.w, r3.w
 112:   mul r3.w, r3.w, cb2[7].x
 113:   mul r5.xyz, r5.xyzx, r3.wwww
 114:   mad r7.xyz, r4.zzzz, r7.xyzx, -r5.xyzx
 115:   mad r8.xyz, cb2[1].wwww, r7.xyzx, r5.xyzx
 116: endif 
 117: mul r4.xzw, r4.xxxx, r8.xxyz
 118: mad r5.xyz, -v2.xyzx, r2.wwww, cb1[0].xyzx
 119: dp3 r2.w, r5.xyzx, r5.xyzx
 120: max r2.w, r2.w, l(0.001000)
 121: rsq r2.w, r2.w
 122: mul r5.xyz, r2.wwww, r5.xyzx
 123: dp3 r2.w, r2.xyzx, -r3.xyzx
 124: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 125: dp3_sat r2.x, r2.xyzx, r5.xyzx
 126: dp3_sat r2.y, cb1[0].xyzx, r5.xyzx
 127: mul r2.z, r2.y, r2.y
 128: dp2 r2.z, r2.zzzz, r4.yyyy
 129: add r2.z, r2.z, l(-0.500000)
 130: add r3.y, -r3.x, l(1.000000)
 131: mul r3.z, r3.y, r3.y
 132: mul r3.z, r3.z, r3.z
 133: mul r3.y, r3.y, r3.z
 134: mad r3.y, r2.z, r3.y, l(1.000000)
 135: add r3.z, -|r2.w|, l(1.000000)
 136: mul r3.w, r3.z, r3.z
 137: mul r3.w, r3.w, r3.w
 138: mul r3.z, r3.z, r3.w
 139: mad r2.z, r2.z, r3.z, l(1.000000)
 140: mul r2.z, r2.z, r3.y
 141: mul r3.y, r4.y, r4.y
 142: max r3.y, r3.y, l(0.002000)
 143: add r3.w, -r3.y, l(1.000000)
 144: mad r4.y, |r2.w|, r3.w, r3.y
 145: mad r3.w, r3.x, r3.w, r3.y
 146: mul r2.w, |r2.w|, r3.w
 147: mad r2.w, r3.x, r4.y, r2.w
 148: add r2.w, r2.w, l(0.000010)
 149: div r2.w, l(0.500000), r2.w
 150: mul r3.w, r3.y, r3.y
 151: mad r4.y, r2.x, r3.w, -r2.x
 152: mad r2.x, r4.y, r2.x, l(1.000000)
 153: mul r3.w, r3.w, l(0.318310)
 154: mad r2.x, r2.x, r2.x, l(0.000000)
 155: div r2.x, r3.w, r2.x
 156: mul r2.x, r2.x, r2.w
 157: mul r2.x, r2.x, l(3.141593)
 158: mul r2.xz, r3.xxxx, r2.xxzx
 159: max r2.x, r2.x, l(0.000000)
 160: mad r2.w, r3.y, r3.y, l(1.000000)
 161: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 162: dp3 r3.x, r0.xyzx, r0.xyzx
 163: ne r3.x, r3.x, l(0.000000)
 164: and r3.x, r3.x, l(0x3f800000)
 165: mul r2.x, r2.x, r3.x
 166: mad r0.w, r0.w, cb0[9].x, -r1.w
 167: add_sat r0.w, r0.w, l(1.000000)
 168: mul r3.xyw, r2.zzzz, r6.xyxz
 169: mul r5.xyz, r6.xyzx, r2.xxxx
 170: add r1.w, -r2.y, l(1.000000)
 171: mul r2.x, r1.w, r1.w
 172: mul r2.x, r2.x, r2.x
 173: mul r1.w, r1.w, r2.x
 174: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 175: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 176: mul r2.xyz, r2.xyzx, r5.xyzx
 177: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 178: mul r2.xyz, r4.xzwx, r2.wwww
 179: add r3.xyw, -r0.xyxz, r0.wwww
 180: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 181: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 182: mov o0.w, l(1.000000)
 183: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL VERTEXLIGHT_ON 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov o3.w, r0.x
  19: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  20: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  21: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r1.xyz, r0.xxxx, r1.xyzx
  25: mov o3.xyz, r1.xyzx
  26: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  27: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  28: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  29: dp3 r0.x, r2.xyzx, r2.xyzx
  30: rsq r0.x, r0.x
  31: mul r2.xyz, r0.xxxx, r2.xyzx
  32: mul r3.xyz, r1.yzxy, r2.zxyz
  33: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  34: mov o5.xyz, r2.xyzx
  35: mul r0.x, v4.w, cb2[9].w
  36: mul o4.xyz, r0.xxxx, r1.xyzx
  37: mov o4.w, r0.y
  38: mov o5.w, r0.z
  39: mov o6.xyzw, l(0,0,0,0)
  40: mov o7.xyzw, l(0,0,0,0)
  41: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 151 math, 14 temp registers, 5 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 5
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[8], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r2.z, r2.xyxx, r2.xyxx
  12: min r2.z, r2.z, l(1.000000)
  13: add r2.z, -r2.z, l(1.000000)
  14: sqrt r2.z, r2.z
  15: mul r3.xyz, r2.yyyy, v4.xyzx
  16: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  17: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  18: dp3 r2.w, r2.xyzx, r2.xyzx
  19: rsq r2.w, r2.w
  20: mul r2.xyz, r2.wwww, r2.xyzx
  21: dp3 r2.w, v2.xyzx, v2.xyzx
  22: rsq r2.w, r2.w
  23: mul r3.xyz, r2.wwww, v2.xyzx
  24: eq r3.w, cb3[0].x, l(1.000000)
  25: if_nz r3.w
  26:   eq r3.w, cb3[0].y, l(1.000000)
  27:   mul r4.xyz, v4.wwww, cb3[2].xyzx
  28:   mad r4.xyz, cb3[1].xyzx, v3.wwww, r4.xyzx
  29:   mad r4.xyz, cb3[3].xyzx, v5.wwww, r4.xyzx
  30:   add r4.xyz, r4.xyzx, cb3[4].xyzx
  31:   mov r5.y, v3.w
  32:   mov r5.z, v4.w
  33:   mov r5.w, v5.w
  34:   movc r4.xyz, r3.wwww, r4.xyzx, r5.yzwy
  35:   add r4.xyz, r4.xyzx, -cb3[6].xyzx
  36:   mul r4.yzw, r4.xxyz, cb3[5].xxyz
  37:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  38:   mad r4.y, cb3[0].z, l(0.500000), l(0.750000)
  39:   max r4.x, r3.w, r4.y
  40:   sample r4.xyzw, r4.xzwx, t6.xyzw, s1
  41: else 
  42:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r3.w, r4.xyzw, cb1[46].xyzw
  45: sample r4.xyzw, v1.xyxx, t3.xyzw, s5
  46: add r4.x, -cb0[9].y, l(1.000000)
  47: mad r4.x, r4.y, cb0[9].y, r4.x
  48: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  49: dp3 r4.z, r3.xyzx, r2.xyzx
  50: add r4.z, r4.z, r4.z
  51: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.xyzx
  52: mul r6.xyz, r3.wwww, cb0[2].xyzx
  53: lt r3.w, l(0.000000), cb2[2].w
  54: if_nz r3.w
  55:   dp3 r3.w, r5.xyzx, r5.xyzx
  56:   rsq r3.w, r3.w
  57:   mul r7.xyz, r3.wwww, r5.xyzx
  58:   mov r8.x, v3.w
  59:   mov r8.y, v4.w
  60:   mov r8.z, v5.w
  61:   add r9.xyz, -r8.xyzx, cb2[0].xyzx
  62:   div r9.xyz, r9.xyzx, r7.xyzx
  63:   add r10.xyz, -r8.xyzx, cb2[1].xyzx
  64:   div r10.xyz, r10.xyzx, r7.xyzx
  65:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  66:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  67:   min r3.w, r9.y, r9.x
  68:   min r3.w, r9.z, r3.w
  69:   add r8.xyz, r8.xyzx, -cb2[2].xyzx
  70:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  71: else 
  72:   mov r7.xyz, r5.xyzx
  73: endif 
  74: mad r3.w, -r4.y, l(0.700000), l(1.700000)
  75: mul r3.w, r3.w, r4.y
  76: mul r3.w, r3.w, l(6.000000)
  77: sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, r3.w
  78: add r4.z, r7.w, l(-1.000000)
  79: mad r4.z, cb2[3].w, r4.z, l(1.000000)
  80: log r4.z, r4.z
  81: mul r4.z, r4.z, cb2[3].y
  82: exp r4.z, r4.z
  83: mul r4.z, r4.z, cb2[3].x
  84: mul r8.xyz, r7.xyzx, r4.zzzz
  85: lt r4.w, cb2[1].w, l(0.999990)
  86: if_nz r4.w
  87:   lt r4.w, l(0.000000), cb2[6].w
  88:   if_nz r4.w
  89:     dp3 r4.w, r5.xyzx, r5.xyzx
  90:     rsq r4.w, r4.w
  91:     mul r9.xyz, r4.wwww, r5.xyzx
  92:     mov r10.x, v3.w
  93:     mov r10.y, v4.w
  94:     mov r10.z, v5.w
  95:     add r11.xyz, -r10.xyzx, cb2[4].xyzx
  96:     div r11.xyz, r11.xyzx, r9.xyzx
  97:     add r12.xyz, -r10.xyzx, cb2[5].xyzx
  98:     div r12.xyz, r12.xyzx, r9.xyzx
  99:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 100:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 101:     min r4.w, r11.y, r11.x
 102:     min r4.w, r11.z, r4.w
 103:     add r10.xyz, r10.xyzx, -cb2[6].xyzx
 104:     mad r5.xyz, r9.xyzx, r4.wwww, r10.xyzx
 105:   endif 
 106:   sample_l r5.xyzw, r5.xyzx, t5.xyzw, s0, r3.w
 107:   add r3.w, r5.w, l(-1.000000)
 108:   mad r3.w, cb2[7].w, r3.w, l(1.000000)
 109:   log r3.w, r3.w
 110:   mul r3.w, r3.w, cb2[7].y
 111:   exp r3.w, r3.w
 112:   mul r3.w, r3.w, cb2[7].x
 113:   mul r5.xyz, r5.xyzx, r3.wwww
 114:   mad r7.xyz, r4.zzzz, r7.xyzx, -r5.xyzx
 115:   mad r8.xyz, cb2[1].wwww, r7.xyzx, r5.xyzx
 116: endif 
 117: mul r4.xzw, r4.xxxx, r8.xxyz
 118: mad r5.xyz, -v2.xyzx, r2.wwww, cb1[0].xyzx
 119: dp3 r2.w, r5.xyzx, r5.xyzx
 120: max r2.w, r2.w, l(0.001000)
 121: rsq r2.w, r2.w
 122: mul r5.xyz, r2.wwww, r5.xyzx
 123: dp3 r2.w, r2.xyzx, -r3.xyzx
 124: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 125: dp3_sat r2.x, r2.xyzx, r5.xyzx
 126: dp3_sat r2.y, cb1[0].xyzx, r5.xyzx
 127: mul r2.z, r2.y, r2.y
 128: dp2 r2.z, r2.zzzz, r4.yyyy
 129: add r2.z, r2.z, l(-0.500000)
 130: add r3.y, -r3.x, l(1.000000)
 131: mul r3.z, r3.y, r3.y
 132: mul r3.z, r3.z, r3.z
 133: mul r3.y, r3.y, r3.z
 134: mad r3.y, r2.z, r3.y, l(1.000000)
 135: add r3.z, -|r2.w|, l(1.000000)
 136: mul r3.w, r3.z, r3.z
 137: mul r3.w, r3.w, r3.w
 138: mul r3.z, r3.z, r3.w
 139: mad r2.z, r2.z, r3.z, l(1.000000)
 140: mul r2.z, r2.z, r3.y
 141: mul r3.y, r4.y, r4.y
 142: max r3.y, r3.y, l(0.002000)
 143: add r3.w, -r3.y, l(1.000000)
 144: mad r4.y, |r2.w|, r3.w, r3.y
 145: mad r3.w, r3.x, r3.w, r3.y
 146: mul r2.w, |r2.w|, r3.w
 147: mad r2.w, r3.x, r4.y, r2.w
 148: add r2.w, r2.w, l(0.000010)
 149: div r2.w, l(0.500000), r2.w
 150: mul r3.w, r3.y, r3.y
 151: mad r4.y, r2.x, r3.w, -r2.x
 152: mad r2.x, r4.y, r2.x, l(1.000000)
 153: mul r3.w, r3.w, l(0.318310)
 154: mad r2.x, r2.x, r2.x, l(0.000000)
 155: div r2.x, r3.w, r2.x
 156: mul r2.x, r2.x, r2.w
 157: mul r2.x, r2.x, l(3.141593)
 158: mul r2.xz, r3.xxxx, r2.xxzx
 159: max r2.x, r2.x, l(0.000000)
 160: mad r2.w, r3.y, r3.y, l(1.000000)
 161: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 162: dp3 r3.x, r0.xyzx, r0.xyzx
 163: ne r3.x, r3.x, l(0.000000)
 164: and r3.x, r3.x, l(0x3f800000)
 165: mul r2.x, r2.x, r3.x
 166: mad r0.w, r0.w, cb0[9].x, -r1.w
 167: add_sat r0.w, r0.w, l(1.000000)
 168: mul r3.xyw, r2.zzzz, r6.xyxz
 169: mul r5.xyz, r6.xyzx, r2.xxxx
 170: add r1.w, -r2.y, l(1.000000)
 171: mul r2.x, r1.w, r1.w
 172: mul r2.x, r2.x, r2.x
 173: mul r1.w, r1.w, r2.x
 174: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 175: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 176: mul r2.xyz, r2.xyzx, r5.xyzx
 177: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 178: mul r2.xyz, r4.xzwx, r2.wwww
 179: add r3.xyw, -r0.xyxz, r0.wwww
 180: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 181: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 182: mov o0.w, l(1.000000)
 183: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL UNITY_SINGLE_PASS_STEREO VERTEXLIGHT_ON 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mov r0.x, cb3[0].x
  15: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  16: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  17: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  18: mad r0.yzw, cb1[3].xxyz, v0.wwww, r0.yyzw
  19: add o2.xyz, r0.yzwy, -cb2[r0.x + 64].xyzx
  20: mov o3.w, r0.y
  21: mul r1.xyz, v4.yyyy, cb1[1].xyzx
  22: mad r1.xyz, cb1[0].xyzx, v4.xxxx, r1.xyzx
  23: mad r1.xyz, cb1[2].xyzx, v4.zzzz, r1.xyzx
  24: dp3 r0.x, r1.xyzx, r1.xyzx
  25: rsq r0.x, r0.x
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mov o3.xyz, r1.xyzx
  28: dp3 r2.x, v1.xyzx, cb1[4].xyzx
  29: dp3 r2.y, v1.xyzx, cb1[5].xyzx
  30: dp3 r2.z, v1.xyzx, cb1[6].xyzx
  31: dp3 r0.x, r2.xyzx, r2.xyzx
  32: rsq r0.x, r0.x
  33: mul r2.xyz, r0.xxxx, r2.xyzx
  34: mul r3.xyz, r1.yzxy, r2.zxyz
  35: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  36: mov o5.xyz, r2.xyzx
  37: mul r0.x, v4.w, cb1[9].w
  38: mul o4.xyz, r0.xxxx, r1.xyzx
  39: mov o4.w, r0.z
  40: mov o5.w, r0.w
  41: mov o6.xyzw, l(0,0,0,0)
  42: mov o7.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov r0.w, l(0)
  19: mov o3.xyzw, r0.wwwx
  20: mov o4.xyzw, r0.wwwy
  21: mov o5.w, r0.z
  22: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  23: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  24: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  25: dp3 r0.w, r0.xyzx, r0.xyzx
  26: rsq r0.w, r0.w
  27: mul o5.xyz, r0.wwww, r0.xyzx
  28: mov o6.xyzw, l(0,0,0,0)
  29: mov o7.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL UNITY_SINGLE_PASS_STEREO VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mov r0.x, cb3[0].x
  15: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  16: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  17: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  18: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  19: add o2.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  20: mov r1.w, l(0)
  21: mov o3.xyzw, r1.wwwx
  22: mov o4.xyzw, r1.wwwy
  23: mov o5.w, r1.z
  24: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  25: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  26: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul o5.xyz, r0.wwww, r0.xyzx
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH VERTEXLIGHT_ON 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 50 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov r0.w, l(0)
  19: mov o3.xyzw, r0.wwwx
  20: mov o4.xyzw, r0.wwwy
  21: mov o5.w, r0.z
  22: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  23: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  24: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  25: dp3 r0.w, r1.xyzx, r1.xyzx
  26: rsq r0.w, r0.w
  27: mul r1.xyz, r0.wwww, r1.xyzx
  28: mov o5.xyz, r1.xyzx
  29: add r2.xyzw, -r0.xxxx, cb2[3].xyzw
  30: add r3.xyzw, -r0.yyyy, cb2[4].xyzw
  31: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  32: mul r4.xyzw, r1.yyyy, r3.xyzw
  33: mul r3.xyzw, r3.xyzw, r3.xyzw
  34: mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
  35: mad r2.xyzw, r2.xyzw, r1.xxxx, r4.xyzw
  36: mad r2.xyzw, r0.xyzw, r1.zzzz, r2.xyzw
  37: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  38: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  39: rsq r3.xyzw, r0.xyzw
  40: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  41: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  42: mul r2.xyzw, r2.xyzw, r3.xyzw
  43: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: mul r0.xyzw, r0.xyzw, r2.xyzw
  45: mul r2.xyz, r0.yyyy, cb2[8].xyzx
  46: mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
  47: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
  48: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  49: mul r0.w, r1.y, r1.y
  50: mad r0.w, r1.x, r1.x, -r0.w
  51: mul r1.xyzw, r1.yzzx, r1.xyzz
  52: dp4 r2.x, cb2[42].xyzw, r1.xyzw
  53: dp4 r2.y, cb2[43].xyzw, r1.xyzw
  54: dp4 r2.z, cb2[44].xyzw, r1.xyzw
  55: mad r1.xyz, cb2[45].xyzx, r0.wwww, r2.xyzx
  56: add o6.xyz, r0.xyzx, r1.xyzx
  57: mov o6.w, l(0)
  58: mov o7.xyzw, l(0,0,0,0)
  59: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH UNITY_SINGLE_PASS_STEREO VERTEXLIGHT_ON 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mov r0.x, cb4[0].x
  15: mul r0.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r0.yzw, cb2[0].xxyz, v0.xxxx, r0.yyzw
  17: mad r0.yzw, cb2[2].xxyz, v0.zzzz, r0.yyzw
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r0.yzwy
  19: add o2.xyz, r1.xyzx, -cb3[r0.x + 64].xyzx
  20: mov r1.w, l(0)
  21: mov o3.xyzw, r1.wwwx
  22: mov o4.xyzw, r1.wwwy
  23: mov o5.w, r1.z
  24: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  25: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  26: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mov o5.xyz, r0.xyzx
  31: add r2.xyzw, -r1.xxxx, cb1[3].xyzw
  32: add r3.xyzw, -r1.yyyy, cb1[4].xyzw
  33: add r1.xyzw, -r1.zzzz, cb1[5].xyzw
  34: mul r4.xyzw, r0.yyyy, r3.xyzw
  35: mul r3.xyzw, r3.xyzw, r3.xyzw
  36: mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
  37: mad r2.xyzw, r2.xyzw, r0.xxxx, r4.xyzw
  38: mad r2.xyzw, r1.xyzw, r0.zzzz, r2.xyzw
  39: mad r1.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
  40: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  41: rsq r3.xyzw, r1.xyzw
  42: mad r1.xyzw, r1.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  43: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  44: mul r2.xyzw, r2.xyzw, r3.xyzw
  45: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  46: mul r1.xyzw, r1.xyzw, r2.xyzw
  47: mul r2.xyz, r1.yyyy, cb1[8].xyzx
  48: mad r2.xyz, cb1[7].xyzx, r1.xxxx, r2.xyzx
  49: mad r1.xyz, cb1[9].xyzx, r1.zzzz, r2.xyzx
  50: mad r1.xyz, cb1[10].xyzx, r1.wwww, r1.xyzx
  51: mul r0.w, r0.y, r0.y
  52: mad r0.w, r0.x, r0.x, -r0.w
  53: mul r2.xyzw, r0.yzzx, r0.xyzz
  54: dp4 r0.x, cb1[42].xyzw, r2.xyzw
  55: dp4 r0.y, cb1[43].xyzw, r2.xyzw
  56: dp4 r0.z, cb1[44].xyzw, r2.xyzw
  57: mad r0.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
  58: add o6.xyz, r0.xyzx, r1.xyzx
  59: mov o6.w, l(0)
  60: mov o7.xyzw, l(0,0,0,0)
  61: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH VERTEXLIGHT_ON 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 60 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mul r1.xyz, v4.yyyy, cb3[1].xyzx
  19: mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
  20: mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
  21: dp3 r0.w, r1.xyzx, r1.xyzx
  22: rsq r0.w, r0.w
  23: mul r1.xyz, r0.wwww, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: mov o3.w, r0.x
  26: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  27: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  28: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  29: dp3 r0.w, r2.xyzx, r2.xyzx
  30: rsq r0.w, r0.w
  31: mul r2.xyz, r0.wwww, r2.xyzx
  32: mul r3.xyz, r1.yzxy, r2.zxyz
  33: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  34: mul r0.w, v4.w, cb3[9].w
  35: mul o4.xyz, r0.wwww, r1.xyzx
  36: mov o4.w, r0.y
  37: mov o5.w, r0.z
  38: mov o5.xyz, r2.xyzx
  39: add r1.xyzw, -r0.xxxx, cb2[3].xyzw
  40: add r3.xyzw, -r0.yyyy, cb2[4].xyzw
  41: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  42: mul r4.xyzw, r2.yyyy, r3.xyzw
  43: mul r3.xyzw, r3.xyzw, r3.xyzw
  44: mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
  45: mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
  46: mad r1.xyzw, r0.xyzw, r2.zzzz, r1.xyzw
  47: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  48: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  49: rsq r3.xyzw, r0.xyzw
  50: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  51: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  52: mul r1.xyzw, r1.xyzw, r3.xyzw
  53: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  54: mul r0.xyzw, r0.xyzw, r1.xyzw
  55: mul r1.xyz, r0.yyyy, cb2[8].xyzx
  56: mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
  57: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
  58: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  59: mul r0.w, r2.y, r2.y
  60: mad r0.w, r2.x, r2.x, -r0.w
  61: mul r1.xyzw, r2.yzzx, r2.xyzz
  62: dp4 r2.x, cb2[42].xyzw, r1.xyzw
  63: dp4 r2.y, cb2[43].xyzw, r1.xyzw
  64: dp4 r2.z, cb2[44].xyzw, r1.xyzw
  65: mad r1.xyz, cb2[45].xyzx, r0.wwww, r2.xyzx
  66: add o6.xyz, r0.xyzx, r1.xyzx
  67: mov o6.w, l(0)
  68: mov o7.xyzw, l(0,0,0,0)
  69: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH UNITY_SINGLE_PASS_STEREO VERTEXLIGHT_ON 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 61 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mov r0.x, cb4[0].x
  15: mul r0.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r0.yzw, cb2[0].xxyz, v0.xxxx, r0.yyzw
  17: mad r0.yzw, cb2[2].xxyz, v0.zzzz, r0.yyzw
  18: mad r0.yzw, cb2[3].xxyz, v0.wwww, r0.yyzw
  19: add o2.xyz, r0.yzwy, -cb3[r0.x + 64].xyzx
  20: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  21: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  22: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  23: dp3 r0.x, r1.xyzx, r1.xyzx
  24: rsq r0.x, r0.x
  25: mul r1.xyz, r0.xxxx, r1.xyzx
  26: mov o3.xyz, r1.xyzx
  27: mov o3.w, r0.y
  28: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  29: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  30: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  31: dp3 r0.x, r2.xyzx, r2.xyzx
  32: rsq r0.x, r0.x
  33: mul r2.xyz, r0.xxxx, r2.xyzx
  34: mul r3.xyz, r1.yzxy, r2.zxyz
  35: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  36: mul r0.x, v4.w, cb2[9].w
  37: mul o4.xyz, r0.xxxx, r1.xyzx
  38: mov o4.w, r0.z
  39: mov o5.w, r0.w
  40: mov o5.xyz, r2.xyzx
  41: add r1.xyzw, -r0.yyyy, cb1[3].xyzw
  42: add r3.xyzw, -r0.zzzz, cb1[4].xyzw
  43: add r0.xyzw, -r0.wwww, cb1[5].xyzw
  44: mul r4.xyzw, r2.yyyy, r3.xyzw
  45: mul r3.xyzw, r3.xyzw, r3.xyzw
  46: mad r3.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
  47: mad r1.xyzw, r1.xyzw, r2.xxxx, r4.xyzw
  48: mad r1.xyzw, r0.xyzw, r2.zzzz, r1.xyzw
  49: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  50: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  51: rsq r3.xyzw, r0.xyzw
  52: mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  53: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  54: mul r1.xyzw, r1.xyzw, r3.xyzw
  55: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: mul r0.xyzw, r0.xyzw, r1.xyzw
  57: mul r1.xyz, r0.yyyy, cb1[8].xyzx
  58: mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
  59: mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
  60: mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
  61: mul r0.w, r2.y, r2.y
  62: mad r0.w, r2.x, r2.x, -r0.w
  63: mul r1.xyzw, r2.yzzx, r2.xyzz
  64: dp4 r2.x, cb1[42].xyzw, r1.xyzw
  65: dp4 r2.y, cb1[43].xyzw, r1.xyzw
  66: dp4 r2.z, cb1[44].xyzw, r1.xyzw
  67: mad r1.xyz, cb1[45].xyzx, r0.wwww, r2.xyzx
  68: add o6.xyz, r0.xyzx, r1.xyzx
  69: mov o6.w, l(0)
  70: mov o7.xyzw, l(0,0,0,0)
  71: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 50 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov r0.w, l(0)
  19: mov o3.xyzw, r0.wwwx
  20: mov o4.xyzw, r0.wwwy
  21: mov o5.w, r0.z
  22: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  23: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  24: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  25: dp3 r0.w, r1.xyzx, r1.xyzx
  26: rsq r0.w, r0.w
  27: mul r1.xyz, r0.wwww, r1.xyzx
  28: mov o5.xyz, r1.xyzx
  29: add r2.xyzw, -r0.xxxx, cb2[3].xyzw
  30: add r3.xyzw, -r0.yyyy, cb2[4].xyzw
  31: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  32: mul r4.xyzw, r1.yyyy, r3.xyzw
  33: mul r3.xyzw, r3.xyzw, r3.xyzw
  34: mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
  35: mad r2.xyzw, r2.xyzw, r1.xxxx, r4.xyzw
  36: mad r2.xyzw, r0.xyzw, r1.zzzz, r2.xyzw
  37: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  38: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  39: rsq r3.xyzw, r0.xyzw
  40: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  41: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  42: mul r2.xyzw, r2.xyzw, r3.xyzw
  43: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  44: mul r0.xyzw, r0.xyzw, r2.xyzw
  45: mul r2.xyz, r0.yyyy, cb2[8].xyzx
  46: mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
  47: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
  48: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  49: mul r0.w, r1.y, r1.y
  50: mad r0.w, r1.x, r1.x, -r0.w
  51: mul r1.xyzw, r1.yzzx, r1.xyzz
  52: dp4 r2.x, cb2[42].xyzw, r1.xyzw
  53: dp4 r2.y, cb2[43].xyzw, r1.xyzw
  54: dp4 r2.z, cb2[44].xyzw, r1.xyzw
  55: mad r1.xyz, cb2[45].xyzx, r0.wwww, r2.xyzx
  56: add o6.xyz, r0.xyzx, r1.xyzx
  57: mov o6.w, l(0)
  58: mov o7.xyzw, l(0,0,0,0)
  59: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH UNITY_SINGLE_PASS_STEREO VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 51 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mov r0.x, cb4[0].x
  15: mul r0.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r0.yzw, cb2[0].xxyz, v0.xxxx, r0.yyzw
  17: mad r0.yzw, cb2[2].xxyz, v0.zzzz, r0.yyzw
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r0.yzwy
  19: add o2.xyz, r1.xyzx, -cb3[r0.x + 64].xyzx
  20: mov r1.w, l(0)
  21: mov o3.xyzw, r1.wwwx
  22: mov o4.xyzw, r1.wwwy
  23: mov o5.w, r1.z
  24: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  25: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  26: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: mov o5.xyz, r0.xyzx
  31: add r2.xyzw, -r1.xxxx, cb1[3].xyzw
  32: add r3.xyzw, -r1.yyyy, cb1[4].xyzw
  33: add r1.xyzw, -r1.zzzz, cb1[5].xyzw
  34: mul r4.xyzw, r0.yyyy, r3.xyzw
  35: mul r3.xyzw, r3.xyzw, r3.xyzw
  36: mad r3.xyzw, r2.xyzw, r2.xyzw, r3.xyzw
  37: mad r2.xyzw, r2.xyzw, r0.xxxx, r4.xyzw
  38: mad r2.xyzw, r1.xyzw, r0.zzzz, r2.xyzw
  39: mad r1.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
  40: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  41: rsq r3.xyzw, r1.xyzw
  42: mad r1.xyzw, r1.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  43: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  44: mul r2.xyzw, r2.xyzw, r3.xyzw
  45: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  46: mul r1.xyzw, r1.xyzw, r2.xyzw
  47: mul r2.xyz, r1.yyyy, cb1[8].xyzx
  48: mad r2.xyz, cb1[7].xyzx, r1.xxxx, r2.xyzx
  49: mad r1.xyz, cb1[9].xyzx, r1.zzzz, r2.xyzx
  50: mad r1.xyz, cb1[10].xyzx, r1.wwww, r1.xyzx
  51: mul r0.w, r0.y, r0.y
  52: mad r0.w, r0.x, r0.x, -r0.w
  53: mul r2.xyzw, r0.yzzx, r0.xyzz
  54: dp4 r0.x, cb1[42].xyzw, r2.xyzw
  55: dp4 r0.y, cb1[43].xyzw, r2.xyzw
  56: dp4 r0.z, cb1[44].xyzw, r2.xyzw
  57: mad r0.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
  58: add o6.xyz, r0.xyzx, r1.xyzx
  59: mov o6.w, l(0)
  60: mov o7.xyzw, l(0,0,0,0)
  61: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul o5.xyz, r1.wwww, r1.xyzx
  29: mov o6.xyzw, l(0,0,0,0)
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO VERTEXLIGHT_ON 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[68], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  16: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  19: mov r2.x, cb4[0].x
  20: add o2.xyz, r1.xyzx, -cb3[r2.x + 64].xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mov o6.xyzw, l(0,0,0,0)
  32: mul r0.y, r0.y, cb1[4].x
  33: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  34: add r0.xy, r1.zzzz, r1.xwxx
  35: mul r1.xy, r0.wwww, cb3[r2.x + 66].zwzz
  36: mad o7.xy, r0.xyxx, cb3[r2.x + 66].xyxx, r1.xyxx
  37: mov o7.zw, r0.zzzw
  38: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov o3.w, r1.x
  20: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  21: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  22: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  23: dp3 r1.x, r2.xyzx, r2.xyzx
  24: rsq r1.x, r1.x
  25: mul r2.xyz, r1.xxxx, r2.xyzx
  26: mov o3.xyz, r2.xyzx
  27: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.x, r3.xyzx, r3.xyzx
  31: rsq r1.x, r1.x
  32: mul r3.xyz, r1.xxxx, r3.xyzx
  33: mul r4.xyz, r2.yzxy, r3.zxyz
  34: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  35: mov o5.xyz, r3.xyzx
  36: mul r1.x, v4.w, cb2[9].w
  37: mul o4.xyz, r1.xxxx, r2.xyzx
  38: mov o4.w, r1.y
  39: mov o5.w, r1.z
  40: mov o6.xyzw, l(0,0,0,0)
  41: mul r0.y, r0.y, cb1[5].x
  42: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  43: mov o7.zw, r0.zzzw
  44: add o7.xy, r1.zzzz, r1.xwxx
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO VERTEXLIGHT_ON 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[68], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  16: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  19: mov r1.w, cb4[0].x
  20: add o2.xyz, r1.xyzx, -cb3[r1.w + 64].xyzx
  21: mov o3.w, r1.x
  22: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  23: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  24: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  25: dp3 r1.x, r2.xyzx, r2.xyzx
  26: rsq r1.x, r1.x
  27: mul r2.xyz, r1.xxxx, r2.xyzx
  28: mov o3.xyz, r2.xyzx
  29: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  30: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  31: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  32: dp3 r1.x, r3.xyzx, r3.xyzx
  33: rsq r1.x, r1.x
  34: mul r3.xyz, r1.xxxx, r3.xyzx
  35: mul r4.xyz, r2.yzxy, r3.zxyz
  36: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r3.xyzx
  38: mul r1.x, v4.w, cb2[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r1.y
  41: mov o5.w, r1.z
  42: mov o6.xyzw, l(0,0,0,0)
  43: mul r0.y, r0.y, cb1[4].x
  44: mul r2.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  45: add r0.xy, r2.zzzz, r2.xwxx
  46: mul r1.xy, r0.wwww, cb3[r1.w + 66].zwzz
  47: mad o7.xy, r0.xyxx, cb3[r1.w + 66].xyxx, r1.xyxx
  48: mov o7.zw, r0.zzzw
  49: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul o5.xyz, r1.wwww, r1.xyzx
  29: mov o6.xyzw, l(0,0,0,0)
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[68], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  16: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  19: mov r2.x, cb4[0].x
  20: add o2.xyz, r1.xyzx, -cb3[r2.x + 64].xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mov o6.xyzw, l(0,0,0,0)
  32: mul r0.y, r0.y, cb1[4].x
  33: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  34: add r0.xy, r1.zzzz, r1.xwxx
  35: mul r1.xy, r0.wwww, cb3[r2.x + 66].zwzz
  36: mad o7.xy, r0.xyxx, cb3[r2.x + 66].xyxx, r1.xyxx
  37: mov o7.zw, r0.zzzw
  38: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 53 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r1.w, r2.xyzx, r2.xyzx
  27: rsq r1.w, r1.w
  28: mul r2.xyz, r1.wwww, r2.xyzx
  29: mov o5.xyz, r2.xyzx
  30: add r3.xyzw, -r1.xxxx, cb2[3].xyzw
  31: add r4.xyzw, -r1.yyyy, cb2[4].xyzw
  32: add r1.xyzw, -r1.zzzz, cb2[5].xyzw
  33: mul r5.xyzw, r2.yyyy, r4.xyzw
  34: mul r4.xyzw, r4.xyzw, r4.xyzw
  35: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  36: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  37: mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
  38: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  39: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  40: rsq r4.xyzw, r1.xyzw
  41: mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  42: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  43: mul r3.xyzw, r3.xyzw, r4.xyzw
  44: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: mul r1.xyzw, r1.xyzw, r3.xyzw
  46: mul r3.xyz, r1.yyyy, cb2[8].xyzx
  47: mad r3.xyz, cb2[7].xyzx, r1.xxxx, r3.xyzx
  48: mad r1.xyz, cb2[9].xyzx, r1.zzzz, r3.xyzx
  49: mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
  50: mul r1.w, r2.y, r2.y
  51: mad r1.w, r2.x, r2.x, -r1.w
  52: mul r2.xyzw, r2.yzzx, r2.xyzz
  53: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  54: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  55: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  56: mad r2.xyz, cb2[45].xyzx, r1.wwww, r3.xyzx
  57: add o6.xyz, r1.xyzx, r2.xyzx
  58: mov o6.w, l(0)
  59: mul r0.y, r0.y, cb1[5].x
  60: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  61: mov o7.zw, r0.zzzw
  62: add o7.xy, r1.zzzz, r1.xwxx
  63: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO VERTEXLIGHT_ON 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 56 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 4 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 5 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[68], dynamicIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: ishl r1.x, cb5[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb4[r1.x + 25].xyzw
   6: mad r2.xyzw, cb4[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb4[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  16: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  19: mov r2.x, cb5[0].x
  20: add o2.xyz, r1.xyzx, -cb4[r2.x + 64].xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r3.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r3.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r3.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r3.xyzx, r3.xyzx
  29: rsq r1.w, r1.w
  30: mul r2.yzw, r1.wwww, r3.xxyz
  31: mov o5.xyz, r2.yzwy
  32: add r3.xyzw, -r1.xxxx, cb2[3].xyzw
  33: add r4.xyzw, -r1.yyyy, cb2[4].xyzw
  34: add r1.xyzw, -r1.zzzz, cb2[5].xyzw
  35: mul r5.xyzw, r2.zzzz, r4.xyzw
  36: mul r4.xyzw, r4.xyzw, r4.xyzw
  37: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  38: mad r3.xyzw, r3.xyzw, r2.yyyy, r5.xyzw
  39: mad r3.xyzw, r1.xyzw, r2.wwww, r3.xyzw
  40: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  41: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  42: rsq r4.xyzw, r1.xyzw
  43: mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  44: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  45: mul r3.xyzw, r3.xyzw, r4.xyzw
  46: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: mul r1.xyzw, r1.xyzw, r3.xyzw
  48: mul r3.xyz, r1.yyyy, cb2[8].xyzx
  49: mad r3.xyz, cb2[7].xyzx, r1.xxxx, r3.xyzx
  50: mad r1.xyz, cb2[9].xyzx, r1.zzzz, r3.xyzx
  51: mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
  52: mul r1.w, r2.z, r2.z
  53: mad r1.w, r2.y, r2.y, -r1.w
  54: mul r3.xyzw, r2.zwwy, r2.yzww
  55: dp4 r4.x, cb2[42].xyzw, r3.xyzw
  56: dp4 r4.y, cb2[43].xyzw, r3.xyzw
  57: dp4 r4.z, cb2[44].xyzw, r3.xyzw
  58: mad r2.yzw, cb2[45].xxyz, r1.wwww, r4.xxyz
  59: add o6.xyz, r1.xyzx, r2.yzwy
  60: mov o6.w, l(0)
  61: mul r0.y, r0.y, cb1[4].x
  62: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  63: add r0.xy, r1.zzzz, r1.xwxx
  64: mul r1.xy, r0.wwww, cb4[r2.x + 66].zwzz
  65: mad o7.xy, r0.xyxx, cb4[r2.x + 66].xyxx, r1.xyxx
  66: mov o7.zw, r0.zzzw
  67: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 63 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mov o3.w, r1.x
  27: dp3 r3.x, v1.xyzx, cb3[4].xyzx
  28: dp3 r3.y, v1.xyzx, cb3[5].xyzx
  29: dp3 r3.z, v1.xyzx, cb3[6].xyzx
  30: dp3 r1.w, r3.xyzx, r3.xyzx
  31: rsq r1.w, r1.w
  32: mul r3.xyz, r1.wwww, r3.xyzx
  33: mul r4.xyz, r2.yzxy, r3.zxyz
  34: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  35: mul r1.w, v4.w, cb3[9].w
  36: mul o4.xyz, r1.wwww, r2.xyzx
  37: mov o4.w, r1.y
  38: mov o5.w, r1.z
  39: mov o5.xyz, r3.xyzx
  40: add r2.xyzw, -r1.xxxx, cb2[3].xyzw
  41: add r4.xyzw, -r1.yyyy, cb2[4].xyzw
  42: add r1.xyzw, -r1.zzzz, cb2[5].xyzw
  43: mul r5.xyzw, r3.yyyy, r4.xyzw
  44: mul r4.xyzw, r4.xyzw, r4.xyzw
  45: mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
  46: mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
  47: mad r2.xyzw, r1.xyzw, r3.zzzz, r2.xyzw
  48: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  49: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  50: rsq r4.xyzw, r1.xyzw
  51: mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  52: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  53: mul r2.xyzw, r2.xyzw, r4.xyzw
  54: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  55: mul r1.xyzw, r1.xyzw, r2.xyzw
  56: mul r2.xyz, r1.yyyy, cb2[8].xyzx
  57: mad r2.xyz, cb2[7].xyzx, r1.xxxx, r2.xyzx
  58: mad r1.xyz, cb2[9].xyzx, r1.zzzz, r2.xyzx
  59: mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
  60: mul r1.w, r3.y, r3.y
  61: mad r1.w, r3.x, r3.x, -r1.w
  62: mul r2.xyzw, r3.yzzx, r3.xyzz
  63: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  64: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  65: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  66: mad r2.xyz, cb2[45].xyzx, r1.wwww, r3.xyzx
  67: add o6.xyz, r1.xyzx, r2.xyzx
  68: mov o6.w, l(0)
  69: mul r0.y, r0.y, cb1[5].x
  70: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  71: mov o7.zw, r0.zzzw
  72: add o7.xy, r1.zzzz, r1.xwxx
  73: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO VERTEXLIGHT_ON 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 66 math, 7 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 4 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 5 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[68], dynamicIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 7
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: ishl r1.x, cb5[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb4[r1.x + 25].xyzw
   6: mad r2.xyzw, cb4[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb4[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  16: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  19: mov r1.w, cb5[0].x
  20: add o2.xyz, r1.xyzx, -cb4[r1.w + 64].xyzx
  21: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  22: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  23: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  24: dp3 r2.w, r2.xyzx, r2.xyzx
  25: rsq r2.w, r2.w
  26: mul r2.xyz, r2.wwww, r2.xyzx
  27: mov o3.xyz, r2.xyzx
  28: mov o3.w, r1.x
  29: dp3 r3.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r3.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r3.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r2.w, r3.xyzx, r3.xyzx
  33: rsq r2.w, r2.w
  34: mul r3.xyz, r2.wwww, r3.xyzx
  35: mul r4.xyz, r2.yzxy, r3.zxyz
  36: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  37: mul r2.w, v4.w, cb3[9].w
  38: mul o4.xyz, r2.wwww, r2.xyzx
  39: mov o4.w, r1.y
  40: mov o5.w, r1.z
  41: mov o5.xyz, r3.xyzx
  42: add r2.xyzw, -r1.xxxx, cb2[3].xyzw
  43: add r4.xyzw, -r1.yyyy, cb2[4].xyzw
  44: add r5.xyzw, -r1.zzzz, cb2[5].xyzw
  45: mul r6.xyzw, r3.yyyy, r4.xyzw
  46: mul r4.xyzw, r4.xyzw, r4.xyzw
  47: mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
  48: mad r2.xyzw, r2.xyzw, r3.xxxx, r6.xyzw
  49: mad r2.xyzw, r5.xyzw, r3.zzzz, r2.xyzw
  50: mad r4.xyzw, r5.xyzw, r5.xyzw, r4.xyzw
  51: max r4.xyzw, r4.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  52: rsq r5.xyzw, r4.xyzw
  53: mad r4.xyzw, r4.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  54: div r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r4.xyzw
  55: mul r2.xyzw, r2.xyzw, r5.xyzw
  56: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  57: mul r2.xyzw, r4.xyzw, r2.xyzw
  58: mul r1.xyz, r2.yyyy, cb2[8].xyzx
  59: mad r1.xyz, cb2[7].xyzx, r2.xxxx, r1.xyzx
  60: mad r1.xyz, cb2[9].xyzx, r2.zzzz, r1.xyzx
  61: mad r1.xyz, cb2[10].xyzx, r2.wwww, r1.xyzx
  62: mul r2.x, r3.y, r3.y
  63: mad r2.x, r3.x, r3.x, -r2.x
  64: mul r3.xyzw, r3.yzzx, r3.xyzz
  65: dp4 r4.x, cb2[42].xyzw, r3.xyzw
  66: dp4 r4.y, cb2[43].xyzw, r3.xyzw
  67: dp4 r4.z, cb2[44].xyzw, r3.xyzw
  68: mad r2.xyz, cb2[45].xyzx, r2.xxxx, r4.xyzx
  69: add o6.xyz, r1.xyzx, r2.xyzx
  70: mov o6.w, l(0)
  71: mul r0.y, r0.y, cb1[4].x
  72: mul r2.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  73: add r0.xy, r2.zzzz, r2.xwxx
  74: mul r1.xy, r0.wwww, cb4[r1.w + 66].zwzz
  75: mad o7.xy, r0.xyxx, cb4[r1.w + 66].xyxx, r1.xyxx
  76: mov o7.zw, r0.zzzw
  77: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 53 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r1.w, r2.xyzx, r2.xyzx
  27: rsq r1.w, r1.w
  28: mul r2.xyz, r1.wwww, r2.xyzx
  29: mov o5.xyz, r2.xyzx
  30: add r3.xyzw, -r1.xxxx, cb2[3].xyzw
  31: add r4.xyzw, -r1.yyyy, cb2[4].xyzw
  32: add r1.xyzw, -r1.zzzz, cb2[5].xyzw
  33: mul r5.xyzw, r2.yyyy, r4.xyzw
  34: mul r4.xyzw, r4.xyzw, r4.xyzw
  35: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  36: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  37: mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
  38: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  39: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  40: rsq r4.xyzw, r1.xyzw
  41: mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  42: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  43: mul r3.xyzw, r3.xyzw, r4.xyzw
  44: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: mul r1.xyzw, r1.xyzw, r3.xyzw
  46: mul r3.xyz, r1.yyyy, cb2[8].xyzx
  47: mad r3.xyz, cb2[7].xyzx, r1.xxxx, r3.xyzx
  48: mad r1.xyz, cb2[9].xyzx, r1.zzzz, r3.xyzx
  49: mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
  50: mul r1.w, r2.y, r2.y
  51: mad r1.w, r2.x, r2.x, -r1.w
  52: mul r2.xyzw, r2.yzzx, r2.xyzz
  53: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  54: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  55: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  56: mad r2.xyz, cb2[45].xyzx, r1.wwww, r3.xyzx
  57: add o6.xyz, r1.xyzx, r2.xyzx
  58: mov o6.w, l(0)
  59: mul r0.y, r0.y, cb1[5].x
  60: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  61: mov o7.zw, r0.zzzw
  62: add o7.xy, r1.zzzz, r1.xwxx
  63: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 56 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 4 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 5 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[68], dynamicIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: ishl r1.x, cb5[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb4[r1.x + 25].xyzw
   6: mad r2.xyzw, cb4[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb4[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  16: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  19: mov r2.x, cb5[0].x
  20: add o2.xyz, r1.xyzx, -cb4[r2.x + 64].xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r3.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r3.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r3.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r3.xyzx, r3.xyzx
  29: rsq r1.w, r1.w
  30: mul r2.yzw, r1.wwww, r3.xxyz
  31: mov o5.xyz, r2.yzwy
  32: add r3.xyzw, -r1.xxxx, cb2[3].xyzw
  33: add r4.xyzw, -r1.yyyy, cb2[4].xyzw
  34: add r1.xyzw, -r1.zzzz, cb2[5].xyzw
  35: mul r5.xyzw, r2.zzzz, r4.xyzw
  36: mul r4.xyzw, r4.xyzw, r4.xyzw
  37: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  38: mad r3.xyzw, r3.xyzw, r2.yyyy, r5.xyzw
  39: mad r3.xyzw, r1.xyzw, r2.wwww, r3.xyzw
  40: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  41: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  42: rsq r4.xyzw, r1.xyzw
  43: mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  44: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  45: mul r3.xyzw, r3.xyzw, r4.xyzw
  46: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: mul r1.xyzw, r1.xyzw, r3.xyzw
  48: mul r3.xyz, r1.yyyy, cb2[8].xyzx
  49: mad r3.xyz, cb2[7].xyzx, r1.xxxx, r3.xyzx
  50: mad r1.xyz, cb2[9].xyzx, r1.zzzz, r3.xyzx
  51: mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
  52: mul r1.w, r2.z, r2.z
  53: mad r1.w, r2.y, r2.y, -r1.w
  54: mul r3.xyzw, r2.zwwy, r2.yzww
  55: dp4 r4.x, cb2[42].xyzw, r3.xyzw
  56: dp4 r4.y, cb2[43].xyzw, r3.xyzw
  57: dp4 r4.z, cb2[44].xyzw, r3.xyzw
  58: mad r2.yzw, cb2[45].xxyz, r1.wwww, r4.xxyz
  59: add o6.xyz, r1.xyzx, r2.yzwy
  60: mov o6.w, l(0)
  61: mul r0.y, r0.y, cb1[4].x
  62: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  63: add r0.xy, r1.zzzz, r1.xwxx
  64: mul r1.xy, r0.wwww, cb4[r2.x + 66].zwzz
  65: mad o7.xy, r0.xyxx, cb4[r2.x + 66].xyxx, r1.xyxx
  66: mov o7.zw, r0.zzzw
  67: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov r0.w, l(0)
  19: mov o3.xyzw, r0.wwwx
  20: mov o4.xyzw, r0.wwwy
  21: mov o5.w, r0.z
  22: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  23: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  24: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  25: dp3 r0.w, r0.xyzx, r0.xyzx
  26: rsq r0.w, r0.w
  27: mul o5.xyz, r0.wwww, r0.xyzx
  28: mov o6.xyzw, l(0,0,0,0)
  29: mov o7.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mov r0.x, cb3[0].x
  15: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  16: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  17: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  18: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  19: add o2.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  20: mov r1.w, l(0)
  21: mov o3.xyzw, r1.wwwx
  22: mov o4.xyzw, r1.wwwy
  23: mov o5.w, r1.z
  24: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  25: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  26: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul o5.xyz, r0.wwww, r0.xyzx
  30: mov o6.xyzw, l(0,0,0,0)
  31: mov o7.xyzw, l(0,0,0,0)
  32: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  14: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  17: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  18: mov o3.w, r0.x
  19: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  20: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  21: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  22: dp3 r0.x, r1.xyzx, r1.xyzx
  23: rsq r0.x, r0.x
  24: mul r1.xyz, r0.xxxx, r1.xyzx
  25: mov o3.xyz, r1.xyzx
  26: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  27: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  28: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  29: dp3 r0.x, r2.xyzx, r2.xyzx
  30: rsq r0.x, r0.x
  31: mul r2.xyz, r0.xxxx, r2.xyzx
  32: mul r3.xyz, r1.yzxy, r2.zxyz
  33: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  34: mov o5.xyz, r2.xyzx
  35: mul r0.x, v4.w, cb2[9].w
  36: mul o4.xyz, r0.xxxx, r1.xyzx
  37: mov o4.w, r0.y
  38: mov o5.w, r0.z
  39: mov o6.xyzw, l(0,0,0,0)
  40: mov o7.xyzw, l(0,0,0,0)
  41: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mov r0.x, cb3[0].x
  15: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  16: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  17: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  18: mad r0.yzw, cb1[3].xxyz, v0.wwww, r0.yyzw
  19: add o2.xyz, r0.yzwy, -cb2[r0.x + 64].xyzx
  20: mov o3.w, r0.y
  21: mul r1.xyz, v4.yyyy, cb1[1].xyzx
  22: mad r1.xyz, cb1[0].xyzx, v4.xxxx, r1.xyzx
  23: mad r1.xyz, cb1[2].xyzx, v4.zzzz, r1.xyzx
  24: dp3 r0.x, r1.xyzx, r1.xyzx
  25: rsq r0.x, r0.x
  26: mul r1.xyz, r0.xxxx, r1.xyzx
  27: mov o3.xyz, r1.xyzx
  28: dp3 r2.x, v1.xyzx, cb1[4].xyzx
  29: dp3 r2.y, v1.xyzx, cb1[5].xyzx
  30: dp3 r2.z, v1.xyzx, cb1[6].xyzx
  31: dp3 r0.x, r2.xyzx, r2.xyzx
  32: rsq r0.x, r0.x
  33: mul r2.xyz, r0.xxxx, r2.xyzx
  34: mul r3.xyz, r1.yzxy, r2.zxyz
  35: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  36: mov o5.xyz, r2.xyzx
  37: mul r0.x, v4.w, cb1[9].w
  38: mul o4.xyz, r0.xxxx, r1.xyzx
  39: mov o4.w, r0.z
  40: mov o5.w, r0.w
  41: mov o6.xyzw, l(0,0,0,0)
  42: mov o7.xyzw, l(0,0,0,0)
  43: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

 }


 // Stats for Vertex shader:
 //        d3d11: 31 avg math (23..45)
 // Stats for Fragment shader:
 //        d3d11: 108 avg math (82..154), 4 avg texture (2..6), 2 avg branch (2..4)
 Pass {
  Name "FORWARD_DELTA"
  Tags { "LIGHTMODE"="FORWARDADD" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite Off
  Blend [_SrcBlend] One
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: POINT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  32: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  33: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  34: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 91 math, 6 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: mul r3.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  14: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  15: add r3.xyz, r3.xyzx, cb0[14].xyzx
  16: eq r0.w, cb2[0].x, l(1.000000)
  17: if_nz r0.w
  18:   eq r0.w, cb2[0].y, l(1.000000)
  19:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  20:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  21:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  22:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  23:   movc r4.xyz, r0.wwww, r4.xyzx, v6.xyzx
  24:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  25:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  26:   mad r0.w, r4.y, l(0.250000), l(0.750000)
  27:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  28:   max r4.x, r0.w, r1.w
  29:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  30: else 
  31:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r0.w, r4.xyzw, cb1[46].xyzw
  34: dp3 r1.w, r3.xyzx, r3.xyzx
  35: sample r3.xyzw, r1.wwww, t1.xyzw, s2
  36: mul r0.w, r0.w, r3.x
  37: mov r3.x, v3.w
  38: mov r3.y, v4.w
  39: mov r3.z, v5.w
  40: dp3 r1.w, r3.xyzx, r3.xyzx
  41: rsq r1.w, r1.w
  42: mul r4.xyz, r1.wwww, r3.xyzx
  43: mul r5.xyz, r0.wwww, cb0[2].xyzx
  44: add r0.w, -cb0[8].w, l(1.000000)
  45: mad r3.xyz, r3.xyzx, r1.wwww, -r2.xyzx
  46: dp3 r1.w, r3.xyzx, r3.xyzx
  47: max r1.w, r1.w, l(0.001000)
  48: rsq r1.w, r1.w
  49: mul r3.xyz, r1.wwww, r3.xyzx
  50: dp3 r1.w, r1.xyzx, -r2.xyzx
  51: dp3_sat r2.x, r1.xyzx, r4.xyzx
  52: dp3_sat r1.x, r1.xyzx, r3.xyzx
  53: dp3_sat r1.y, r4.xyzx, r3.xyzx
  54: mul r1.z, r1.y, r1.y
  55: dp2 r1.z, r1.zzzz, r0.wwww
  56: add r1.z, r1.z, l(-0.500000)
  57: add r2.y, -r2.x, l(1.000000)
  58: mul r2.z, r2.y, r2.y
  59: mul r2.z, r2.z, r2.z
  60: mul r2.y, r2.y, r2.z
  61: mad r2.y, r1.z, r2.y, l(1.000000)
  62: add r2.z, -|r1.w|, l(1.000000)
  63: mul r2.w, r2.z, r2.z
  64: mul r2.w, r2.w, r2.w
  65: mul r2.z, r2.z, r2.w
  66: mad r1.z, r1.z, r2.z, l(1.000000)
  67: mul r1.z, r1.z, r2.y
  68: mul r1.z, r2.x, r1.z
  69: mul r0.w, r0.w, r0.w
  70: max r0.w, r0.w, l(0.002000)
  71: add r2.y, -r0.w, l(1.000000)
  72: mad r2.z, |r1.w|, r2.y, r0.w
  73: mad r2.y, r2.x, r2.y, r0.w
  74: mul r1.w, |r1.w|, r2.y
  75: mad r1.w, r2.x, r2.z, r1.w
  76: add r1.w, r1.w, l(0.000010)
  77: div r1.w, l(0.500000), r1.w
  78: mul r0.w, r0.w, r0.w
  79: mad r2.y, r1.x, r0.w, -r1.x
  80: mad r1.x, r2.y, r1.x, l(1.000000)
  81: mul r0.w, r0.w, l(0.318310)
  82: mad r1.x, r1.x, r1.x, l(0.000000)
  83: div r0.w, r0.w, r1.x
  84: mul r0.w, r0.w, r1.w
  85: mul r0.w, r0.w, l(3.141593)
  86: mul r0.w, r2.x, r0.w
  87: max r0.w, r0.w, l(0.000000)
  88: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
  89: ne r1.x, r1.x, l(0.000000)
  90: and r1.x, r1.x, l(0x3f800000)
  91: mul r0.w, r0.w, r1.x
  92: mul r1.xzw, r1.zzzz, r5.xxyz
  93: mul r2.xyz, r5.xyzx, r0.wwww
  94: add r0.w, -r1.y, l(1.000000)
  95: mul r1.y, r0.w, r0.w
  96: mul r1.y, r1.y, r1.y
  97: mul r0.w, r0.w, r1.y
  98: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  99: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
 100: mul r2.xyz, r2.xyzx, r3.xyzx
 101: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
 102: mov o0.w, l(1.000000)
 103: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  22: mov o6.xyz, r1.yzwy
  23: mov r2.w, l(0)
  24: mov o3.xyzw, r2.wwwx
  25: mov o4.xyzw, r2.wwwy
  26: mov o5.w, r2.z
  27: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul o5.xyz, r1.wwww, r1.xyzx
  33: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  34: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  35: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  36: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  37: mov o8.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 91 math, 6 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: mul r3.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  14: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  15: add r3.xyz, r3.xyzx, cb0[14].xyzx
  16: eq r0.w, cb2[0].x, l(1.000000)
  17: if_nz r0.w
  18:   eq r0.w, cb2[0].y, l(1.000000)
  19:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  20:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  21:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  22:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  23:   movc r4.xyz, r0.wwww, r4.xyzx, v6.xyzx
  24:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  25:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  26:   mad r0.w, r4.y, l(0.250000), l(0.750000)
  27:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  28:   max r4.x, r0.w, r1.w
  29:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  30: else 
  31:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r0.w, r4.xyzw, cb1[46].xyzw
  34: dp3 r1.w, r3.xyzx, r3.xyzx
  35: sample r3.xyzw, r1.wwww, t1.xyzw, s2
  36: mul r0.w, r0.w, r3.x
  37: mov r3.x, v3.w
  38: mov r3.y, v4.w
  39: mov r3.z, v5.w
  40: dp3 r1.w, r3.xyzx, r3.xyzx
  41: rsq r1.w, r1.w
  42: mul r4.xyz, r1.wwww, r3.xyzx
  43: mul r5.xyz, r0.wwww, cb0[2].xyzx
  44: add r0.w, -cb0[8].w, l(1.000000)
  45: mad r3.xyz, r3.xyzx, r1.wwww, -r2.xyzx
  46: dp3 r1.w, r3.xyzx, r3.xyzx
  47: max r1.w, r1.w, l(0.001000)
  48: rsq r1.w, r1.w
  49: mul r3.xyz, r1.wwww, r3.xyzx
  50: dp3 r1.w, r1.xyzx, -r2.xyzx
  51: dp3_sat r2.x, r1.xyzx, r4.xyzx
  52: dp3_sat r1.x, r1.xyzx, r3.xyzx
  53: dp3_sat r1.y, r4.xyzx, r3.xyzx
  54: mul r1.z, r1.y, r1.y
  55: dp2 r1.z, r1.zzzz, r0.wwww
  56: add r1.z, r1.z, l(-0.500000)
  57: add r2.y, -r2.x, l(1.000000)
  58: mul r2.z, r2.y, r2.y
  59: mul r2.z, r2.z, r2.z
  60: mul r2.y, r2.y, r2.z
  61: mad r2.y, r1.z, r2.y, l(1.000000)
  62: add r2.z, -|r1.w|, l(1.000000)
  63: mul r2.w, r2.z, r2.z
  64: mul r2.w, r2.w, r2.w
  65: mul r2.z, r2.z, r2.w
  66: mad r1.z, r1.z, r2.z, l(1.000000)
  67: mul r1.z, r1.z, r2.y
  68: mul r1.z, r2.x, r1.z
  69: mul r0.w, r0.w, r0.w
  70: max r0.w, r0.w, l(0.002000)
  71: add r2.y, -r0.w, l(1.000000)
  72: mad r2.z, |r1.w|, r2.y, r0.w
  73: mad r2.y, r2.x, r2.y, r0.w
  74: mul r1.w, |r1.w|, r2.y
  75: mad r1.w, r2.x, r2.z, r1.w
  76: add r1.w, r1.w, l(0.000010)
  77: div r1.w, l(0.500000), r1.w
  78: mul r0.w, r0.w, r0.w
  79: mad r2.y, r1.x, r0.w, -r1.x
  80: mad r1.x, r2.y, r1.x, l(1.000000)
  81: mul r0.w, r0.w, l(0.318310)
  82: mad r1.x, r1.x, r1.x, l(0.000000)
  83: div r0.w, r0.w, r1.x
  84: mul r0.w, r0.w, r1.w
  85: mul r0.w, r0.w, l(3.141593)
  86: mul r0.w, r2.x, r0.w
  87: max r0.w, r0.w, l(0.000000)
  88: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
  89: ne r1.x, r1.x, l(0.000000)
  90: and r1.x, r1.x, l(0x3f800000)
  91: mul r0.w, r0.w, r1.x
  92: mul r1.xzw, r1.zzzz, r5.xxyz
  93: mul r2.xyz, r5.xyzx, r0.wwww
  94: add r0.w, -r1.y, l(1.000000)
  95: mul r1.y, r0.w, r0.w
  96: mul r1.y, r1.y, r1.y
  97: mul r0.w, r0.w, r1.y
  98: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  99: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
 100: mul r2.xyz, r2.xyzx, r3.xyzx
 101: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
 102: mov o0.w, l(1.000000)
 103: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov o2.w, l(0)
  18: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  19: mov o6.xyz, r0.xyzx
  20: mov r1.w, l(0)
  21: mov o3.xyzw, r1.wwwx
  22: mov o4.xyzw, r1.wwwy
  23: mov o5.w, r1.z
  24: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul o5.xyz, r0.wwww, r0.xyzx
  30: mov o7.xyzw, l(0,0,0,0)
  31: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s2
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: eq r2.w, cb2[0].x, l(1.000000)
  14: if_nz r2.w
  15:   eq r2.w, cb2[0].y, l(1.000000)
  16:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  17:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  18:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  19:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  20:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  21:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  22:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  23:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  24:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  25:   max r4.x, r2.w, r3.w
  26:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  27: else 
  28:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  29: endif 
  30: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  31: mul r4.xyz, r2.wwww, cb0[2].xyzx
  32: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  33: mov r5.x, v3.w
  34: mov r5.y, v4.w
  35: mov r5.z, v5.w
  36: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  37: dp3 r1.w, r6.xyzx, r6.xyzx
  38: max r1.w, r1.w, l(0.001000)
  39: rsq r1.w, r1.w
  40: mul r6.xyz, r1.wwww, r6.xyzx
  41: dp3 r1.w, r2.xyzx, -r3.xyzx
  42: dp3_sat r2.w, r2.xyzx, r5.xyzx
  43: dp3_sat r2.x, r2.xyzx, r6.xyzx
  44: dp3_sat r2.y, r5.xyzx, r6.xyzx
  45: mul r2.z, r2.y, r2.y
  46: dp2 r2.z, r2.zzzz, r0.wwww
  47: add r2.z, r2.z, l(-0.500000)
  48: add r3.x, -r2.w, l(1.000000)
  49: mul r3.y, r3.x, r3.x
  50: mul r3.y, r3.y, r3.y
  51: mul r3.x, r3.x, r3.y
  52: mad r3.x, r2.z, r3.x, l(1.000000)
  53: add r3.y, -|r1.w|, l(1.000000)
  54: mul r3.z, r3.y, r3.y
  55: mul r3.z, r3.z, r3.z
  56: mul r3.y, r3.y, r3.z
  57: mad r2.z, r2.z, r3.y, l(1.000000)
  58: mul r2.z, r2.z, r3.x
  59: mul r2.z, r2.w, r2.z
  60: mul r0.w, r0.w, r0.w
  61: max r0.w, r0.w, l(0.002000)
  62: add r3.x, -r0.w, l(1.000000)
  63: mad r3.y, |r1.w|, r3.x, r0.w
  64: mad r3.x, r2.w, r3.x, r0.w
  65: mul r1.w, |r1.w|, r3.x
  66: mad r1.w, r2.w, r3.y, r1.w
  67: add r1.w, r1.w, l(0.000010)
  68: div r1.w, l(0.500000), r1.w
  69: mul r0.w, r0.w, r0.w
  70: mad r3.x, r2.x, r0.w, -r2.x
  71: mad r2.x, r3.x, r2.x, l(1.000000)
  72: mul r0.w, r0.w, l(0.318310)
  73: mad r2.x, r2.x, r2.x, l(0.000000)
  74: div r0.w, r0.w, r2.x
  75: mul r0.w, r0.w, r1.w
  76: mul r0.w, r0.w, l(3.141593)
  77: mul r0.w, r2.w, r0.w
  78: max r0.w, r0.w, l(0.000000)
  79: dp3 r1.w, r0.xyzx, r0.xyzx
  80: ne r1.w, r1.w, l(0.000000)
  81: and r1.w, r1.w, l(0x3f800000)
  82: mul r0.w, r0.w, r1.w
  83: mul r2.xzw, r2.zzzz, r4.xxyz
  84: mul r3.xyz, r4.xyzx, r0.wwww
  85: add r0.w, -r2.y, l(1.000000)
  86: mul r1.w, r0.w, r0.w
  87: mul r1.w, r1.w, r1.w
  88: mul r0.w, r0.w, r1.w
  89: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  90: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
  91: mul r0.xyz, r0.xyzx, r3.xyzx
  92: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
  93: mov o0.w, l(1.000000)
  94: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb4[0].x
  14: mul r0.yzw, v0.yyyy, cb2[1].xxyz
  15: mad r0.yzw, cb2[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb2[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r0.yzw, cb2[3].xxyz, v0.wwww, r0.yyzw
  18: add o2.xyz, r0.yzwy, -cb3[r0.x + 64].xyzx
  19: mov o2.w, l(0)
  20: mad r1.xyz, -r0.yzwy, cb1[0].wwww, cb1[0].xyzx
  21: mov o6.xyz, r0.yzwy
  22: mov r1.w, l(0)
  23: mov o3.xyzw, r1.wwwx
  24: mov o4.xyzw, r1.wwwy
  25: mov o5.w, r1.z
  26: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  27: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  28: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  29: dp3 r0.w, r0.xyzx, r0.xyzx
  30: rsq r0.w, r0.w
  31: mul o5.xyz, r0.wwww, r0.xyzx
  32: mov o7.xyzw, l(0,0,0,0)
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 7 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s2
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: eq r2.w, cb2[0].x, l(1.000000)
  14: if_nz r2.w
  15:   eq r2.w, cb2[0].y, l(1.000000)
  16:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  17:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  18:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  19:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  20:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  21:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  22:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  23:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  24:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  25:   max r4.x, r2.w, r3.w
  26:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  27: else 
  28:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  29: endif 
  30: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  31: mul r4.xyz, r2.wwww, cb0[2].xyzx
  32: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  33: mov r5.x, v3.w
  34: mov r5.y, v4.w
  35: mov r5.z, v5.w
  36: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  37: dp3 r1.w, r6.xyzx, r6.xyzx
  38: max r1.w, r1.w, l(0.001000)
  39: rsq r1.w, r1.w
  40: mul r6.xyz, r1.wwww, r6.xyzx
  41: dp3 r1.w, r2.xyzx, -r3.xyzx
  42: dp3_sat r2.w, r2.xyzx, r5.xyzx
  43: dp3_sat r2.x, r2.xyzx, r6.xyzx
  44: dp3_sat r2.y, r5.xyzx, r6.xyzx
  45: mul r2.z, r2.y, r2.y
  46: dp2 r2.z, r2.zzzz, r0.wwww
  47: add r2.z, r2.z, l(-0.500000)
  48: add r3.x, -r2.w, l(1.000000)
  49: mul r3.y, r3.x, r3.x
  50: mul r3.y, r3.y, r3.y
  51: mul r3.x, r3.x, r3.y
  52: mad r3.x, r2.z, r3.x, l(1.000000)
  53: add r3.y, -|r1.w|, l(1.000000)
  54: mul r3.z, r3.y, r3.y
  55: mul r3.z, r3.z, r3.z
  56: mul r3.y, r3.y, r3.z
  57: mad r2.z, r2.z, r3.y, l(1.000000)
  58: mul r2.z, r2.z, r3.x
  59: mul r2.z, r2.w, r2.z
  60: mul r0.w, r0.w, r0.w
  61: max r0.w, r0.w, l(0.002000)
  62: add r3.x, -r0.w, l(1.000000)
  63: mad r3.y, |r1.w|, r3.x, r0.w
  64: mad r3.x, r2.w, r3.x, r0.w
  65: mul r1.w, |r1.w|, r3.x
  66: mad r1.w, r2.w, r3.y, r1.w
  67: add r1.w, r1.w, l(0.000010)
  68: div r1.w, l(0.500000), r1.w
  69: mul r0.w, r0.w, r0.w
  70: mad r3.x, r2.x, r0.w, -r2.x
  71: mad r2.x, r3.x, r2.x, l(1.000000)
  72: mul r0.w, r0.w, l(0.318310)
  73: mad r2.x, r2.x, r2.x, l(0.000000)
  74: div r0.w, r0.w, r2.x
  75: mul r0.w, r0.w, r1.w
  76: mul r0.w, r0.w, l(3.141593)
  77: mul r0.w, r2.w, r0.w
  78: max r0.w, r0.w, l(0.000000)
  79: dp3 r1.w, r0.xyzx, r0.xyzx
  80: ne r1.w, r1.w, l(0.000000)
  81: and r1.w, r1.w, l(0x3f800000)
  82: mul r0.w, r0.w, r1.w
  83: mul r2.xzw, r2.zzzz, r4.xxyz
  84: mul r3.xyz, r4.xyzx, r0.wwww
  85: add r0.w, -r2.y, l(1.000000)
  86: mul r1.w, r0.w, r0.w
  87: mul r1.w, r1.w, r1.w
  88: mul r0.w, r0.w, r1.w
  89: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  90: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
  91: mul r0.xyz, r0.xyzx, r3.xyzx
  92: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
  93: mov o0.w, l(1.000000)
  94: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov o2.w, l(0)
  18: mul r1.xyz, v4.yyyy, cb3[1].xyzx
  19: mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
  20: mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
  21: dp3 r0.w, r1.xyzx, r1.xyzx
  22: rsq r0.w, r0.w
  23: mul r1.xyz, r0.wwww, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  26: mov o6.xyz, r0.xyzx
  27: mov o3.w, r2.x
  28: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  29: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  30: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  31: dp3 r0.w, r0.xyzx, r0.xyzx
  32: rsq r0.w, r0.w
  33: mul r0.xyz, r0.wwww, r0.xyzx
  34: mul r3.xyz, r1.yzxy, r0.zxyz
  35: mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
  36: mov o5.xyz, r0.xyzx
  37: mul r0.x, v4.w, cb3[9].w
  38: mul o4.xyz, r0.xxxx, r1.xyzx
  39: mov o4.w, r2.y
  40: mov o5.w, r2.z
  41: mov o7.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 92 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_BumpMap" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: eq r2.w, cb2[0].x, l(1.000000)
  25: if_nz r2.w
  26:   eq r2.w, cb2[0].y, l(1.000000)
  27:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  28:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  29:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  30:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  31:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  32:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  33:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  34:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  35:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  36:   max r4.x, r2.w, r3.w
  37:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  38: else 
  39:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  40: endif 
  41: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  42: mul r4.xyz, r2.wwww, cb0[2].xyzx
  43: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  44: mov r5.x, v3.w
  45: mov r5.y, v4.w
  46: mov r5.z, v5.w
  47: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  48: dp3 r1.w, r6.xyzx, r6.xyzx
  49: max r1.w, r1.w, l(0.001000)
  50: rsq r1.w, r1.w
  51: mul r6.xyz, r1.wwww, r6.xyzx
  52: dp3 r1.w, r2.xyzx, -r3.xyzx
  53: dp3_sat r2.w, r2.xyzx, r5.xyzx
  54: dp3_sat r2.x, r2.xyzx, r6.xyzx
  55: dp3_sat r2.y, r5.xyzx, r6.xyzx
  56: mul r2.z, r2.y, r2.y
  57: dp2 r2.z, r2.zzzz, r0.wwww
  58: add r2.z, r2.z, l(-0.500000)
  59: add r3.x, -r2.w, l(1.000000)
  60: mul r3.y, r3.x, r3.x
  61: mul r3.y, r3.y, r3.y
  62: mul r3.x, r3.x, r3.y
  63: mad r3.x, r2.z, r3.x, l(1.000000)
  64: add r3.y, -|r1.w|, l(1.000000)
  65: mul r3.z, r3.y, r3.y
  66: mul r3.z, r3.z, r3.z
  67: mul r3.y, r3.y, r3.z
  68: mad r2.z, r2.z, r3.y, l(1.000000)
  69: mul r2.z, r2.z, r3.x
  70: mul r2.z, r2.w, r2.z
  71: mul r0.w, r0.w, r0.w
  72: max r0.w, r0.w, l(0.002000)
  73: add r3.x, -r0.w, l(1.000000)
  74: mad r3.y, |r1.w|, r3.x, r0.w
  75: mad r3.x, r2.w, r3.x, r0.w
  76: mul r1.w, |r1.w|, r3.x
  77: mad r1.w, r2.w, r3.y, r1.w
  78: add r1.w, r1.w, l(0.000010)
  79: div r1.w, l(0.500000), r1.w
  80: mul r0.w, r0.w, r0.w
  81: mad r3.x, r2.x, r0.w, -r2.x
  82: mad r2.x, r3.x, r2.x, l(1.000000)
  83: mul r0.w, r0.w, l(0.318310)
  84: mad r2.x, r2.x, r2.x, l(0.000000)
  85: div r0.w, r0.w, r2.x
  86: mul r0.w, r0.w, r1.w
  87: mul r0.w, r0.w, l(3.141593)
  88: mul r0.w, r2.w, r0.w
  89: max r0.w, r0.w, l(0.000000)
  90: dp3 r1.w, r0.xyzx, r0.xyzx
  91: ne r1.w, r1.w, l(0.000000)
  92: and r1.w, r1.w, l(0x3f800000)
  93: mul r0.w, r0.w, r1.w
  94: mul r2.xzw, r2.zzzz, r4.xxyz
  95: mul r3.xyz, r4.xyzx, r0.wwww
  96: add r0.w, -r2.y, l(1.000000)
  97: mul r1.w, r0.w, r0.w
  98: mul r1.w, r1.w, r1.w
  99: mul r0.w, r0.w, r1.w
 100: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 101: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 102: mul r0.xyz, r0.xyzx, r3.xyzx
 103: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 104: mov o0.w, l(1.000000)
 105: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb4[0].x
  14: mul r0.yzw, v0.yyyy, cb2[1].xxyz
  15: mad r0.yzw, cb2[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb2[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r0.yzw, cb2[3].xxyz, v0.wwww, r0.yyzw
  18: add o2.xyz, r0.yzwy, -cb3[r0.x + 64].xyzx
  19: mov o2.w, l(0)
  20: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  21: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  22: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  23: dp3 r0.x, r1.xyzx, r1.xyzx
  24: rsq r0.x, r0.x
  25: mul r1.xyz, r0.xxxx, r1.xyzx
  26: mov o3.xyz, r1.xyzx
  27: mad r2.xyz, -r0.yzwy, cb1[0].wwww, cb1[0].xyzx
  28: mov o6.xyz, r0.yzwy
  29: mov o3.w, r2.x
  30: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  31: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  32: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  33: dp3 r0.w, r0.xyzx, r0.xyzx
  34: rsq r0.w, r0.w
  35: mul r0.xyz, r0.wwww, r0.xyzx
  36: mul r3.xyz, r1.yzxy, r0.zxyz
  37: mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
  38: mov o5.xyz, r0.xyzx
  39: mul r0.x, v4.w, cb2[9].w
  40: mul o4.xyz, r0.xxxx, r1.xyzx
  41: mov o4.w, r2.y
  42: mov o5.w, r2.z
  43: mov o7.xyzw, l(0,0,0,0)
  44: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 92 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_BumpMap" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: eq r2.w, cb2[0].x, l(1.000000)
  25: if_nz r2.w
  26:   eq r2.w, cb2[0].y, l(1.000000)
  27:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  28:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  29:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  30:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  31:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  32:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  33:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  34:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  35:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  36:   max r4.x, r2.w, r3.w
  37:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  38: else 
  39:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  40: endif 
  41: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  42: mul r4.xyz, r2.wwww, cb0[2].xyzx
  43: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  44: mov r5.x, v3.w
  45: mov r5.y, v4.w
  46: mov r5.z, v5.w
  47: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  48: dp3 r1.w, r6.xyzx, r6.xyzx
  49: max r1.w, r1.w, l(0.001000)
  50: rsq r1.w, r1.w
  51: mul r6.xyz, r1.wwww, r6.xyzx
  52: dp3 r1.w, r2.xyzx, -r3.xyzx
  53: dp3_sat r2.w, r2.xyzx, r5.xyzx
  54: dp3_sat r2.x, r2.xyzx, r6.xyzx
  55: dp3_sat r2.y, r5.xyzx, r6.xyzx
  56: mul r2.z, r2.y, r2.y
  57: dp2 r2.z, r2.zzzz, r0.wwww
  58: add r2.z, r2.z, l(-0.500000)
  59: add r3.x, -r2.w, l(1.000000)
  60: mul r3.y, r3.x, r3.x
  61: mul r3.y, r3.y, r3.y
  62: mul r3.x, r3.x, r3.y
  63: mad r3.x, r2.z, r3.x, l(1.000000)
  64: add r3.y, -|r1.w|, l(1.000000)
  65: mul r3.z, r3.y, r3.y
  66: mul r3.z, r3.z, r3.z
  67: mul r3.y, r3.y, r3.z
  68: mad r2.z, r2.z, r3.y, l(1.000000)
  69: mul r2.z, r2.z, r3.x
  70: mul r2.z, r2.w, r2.z
  71: mul r0.w, r0.w, r0.w
  72: max r0.w, r0.w, l(0.002000)
  73: add r3.x, -r0.w, l(1.000000)
  74: mad r3.y, |r1.w|, r3.x, r0.w
  75: mad r3.x, r2.w, r3.x, r0.w
  76: mul r1.w, |r1.w|, r3.x
  77: mad r1.w, r2.w, r3.y, r1.w
  78: add r1.w, r1.w, l(0.000010)
  79: div r1.w, l(0.500000), r1.w
  80: mul r0.w, r0.w, r0.w
  81: mad r3.x, r2.x, r0.w, -r2.x
  82: mad r2.x, r3.x, r2.x, l(1.000000)
  83: mul r0.w, r0.w, l(0.318310)
  84: mad r2.x, r2.x, r2.x, l(0.000000)
  85: div r0.w, r0.w, r2.x
  86: mul r0.w, r0.w, r1.w
  87: mul r0.w, r0.w, l(3.141593)
  88: mul r0.w, r2.w, r0.w
  89: max r0.w, r0.w, l(0.000000)
  90: dp3 r1.w, r0.xyzx, r0.xyzx
  91: ne r1.w, r1.w, l(0.000000)
  92: and r1.w, r1.w, l(0x3f800000)
  93: mul r0.w, r0.w, r1.w
  94: mul r2.xzw, r2.zzzz, r4.xxyz
  95: mul r3.xyz, r4.xyzx, r0.wwww
  96: add r0.w, -r2.y, l(1.000000)
  97: mul r1.w, r0.w, r0.w
  98: mul r1.w, r1.w, r1.w
  99: mul r0.w, r0.w, r1.w
 100: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 101: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 102: mul r0.xyz, r0.xyzx, r3.xyzx
 103: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 104: mov o0.w, l(1.000000)
 105: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov o2.w, l(0)
  18: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  19: mov o6.xyz, r0.xyzx
  20: mov r1.w, l(0)
  21: mov o3.xyzw, r1.wwwx
  22: mov o4.xyzw, r1.wwwy
  23: mov o5.w, r1.z
  24: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  25: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  26: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  27: dp3 r0.w, r0.xyzx, r0.xyzx
  28: rsq r0.w, r0.w
  29: mul o5.xyz, r0.wwww, r0.xyzx
  30: mov o7.xyzw, l(0,0,0,0)
  31: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 2 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 1 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: eq r1.w, cb2[0].x, l(1.000000)
  13: if_nz r1.w
  14:   eq r1.w, cb2[0].y, l(1.000000)
  15:   mul r3.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
  17:   mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
  18:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  19:   movc r3.xyz, r1.wwww, r3.xyzx, v6.xyzx
  20:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  21:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  22:   mad r1.w, r3.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r3.x, r1.w, r2.w
  25:   sample r3.xyzw, r3.xzwx, t1.xyzw, s0
  26: else 
  27:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
  30: mul r3.xyz, r1.wwww, cb0[2].xyzx
  31: add r1.w, -cb0[8].w, l(1.000000)
  32: mov r4.x, v3.w
  33: mov r4.y, v4.w
  34: mov r4.z, v5.w
  35: mad r5.xyz, -v2.xyzx, r0.wwww, r4.xyzx
  36: dp3 r0.w, r5.xyzx, r5.xyzx
  37: max r0.w, r0.w, l(0.001000)
  38: rsq r0.w, r0.w
  39: mul r5.xyz, r0.wwww, r5.xyzx
  40: dp3 r0.w, r1.xyzx, -r2.xyzx
  41: dp3_sat r2.x, r1.xyzx, r4.xyzx
  42: dp3_sat r1.x, r1.xyzx, r5.xyzx
  43: dp3_sat r1.y, r4.xyzx, r5.xyzx
  44: mul r1.z, r1.y, r1.y
  45: dp2 r1.z, r1.zzzz, r1.wwww
  46: add r1.z, r1.z, l(-0.500000)
  47: add r2.y, -r2.x, l(1.000000)
  48: mul r2.z, r2.y, r2.y
  49: mul r2.z, r2.z, r2.z
  50: mul r2.y, r2.y, r2.z
  51: mad r2.y, r1.z, r2.y, l(1.000000)
  52: add r2.z, -|r0.w|, l(1.000000)
  53: mul r2.w, r2.z, r2.z
  54: mul r2.w, r2.w, r2.w
  55: mul r2.z, r2.z, r2.w
  56: mad r1.z, r1.z, r2.z, l(1.000000)
  57: mul r1.z, r1.z, r2.y
  58: mul r1.z, r2.x, r1.z
  59: mul r1.w, r1.w, r1.w
  60: max r1.w, r1.w, l(0.002000)
  61: add r2.y, -r1.w, l(1.000000)
  62: mad r2.z, |r0.w|, r2.y, r1.w
  63: mad r2.y, r2.x, r2.y, r1.w
  64: mul r0.w, |r0.w|, r2.y
  65: mad r0.w, r2.x, r2.z, r0.w
  66: add r0.w, r0.w, l(0.000010)
  67: div r0.w, l(0.500000), r0.w
  68: mul r1.w, r1.w, r1.w
  69: mad r2.y, r1.x, r1.w, -r1.x
  70: mad r1.x, r2.y, r1.x, l(1.000000)
  71: mul r1.w, r1.w, l(0.318310)
  72: mad r1.x, r1.x, r1.x, l(0.000000)
  73: div r1.x, r1.w, r1.x
  74: mul r0.w, r0.w, r1.x
  75: mul r0.w, r0.w, l(3.141593)
  76: mul r0.w, r2.x, r0.w
  77: max r0.w, r0.w, l(0.000000)
  78: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
  79: ne r1.x, r1.x, l(0.000000)
  80: and r1.x, r1.x, l(0x3f800000)
  81: mul r0.w, r0.w, r1.x
  82: mul r1.xzw, r1.zzzz, r3.xxyz
  83: mul r2.xyz, r3.xyzx, r0.wwww
  84: add r0.w, -r1.y, l(1.000000)
  85: mul r1.y, r0.w, r0.w
  86: mul r1.y, r1.y, r1.y
  87: mul r0.w, r0.w, r1.y
  88: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  89: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
  90: mul r2.xyz, r2.xyzx, r3.xyzx
  91: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
  92: mov o0.w, l(1.000000)
  93: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb4[0].x
  14: mul r0.yzw, v0.yyyy, cb2[1].xxyz
  15: mad r0.yzw, cb2[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb2[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r0.yzw, cb2[3].xxyz, v0.wwww, r0.yyzw
  18: add o2.xyz, r0.yzwy, -cb3[r0.x + 64].xyzx
  19: mov o2.w, l(0)
  20: mad r1.xyz, -r0.yzwy, cb1[0].wwww, cb1[0].xyzx
  21: mov o6.xyz, r0.yzwy
  22: mov r1.w, l(0)
  23: mov o3.xyzw, r1.wwwx
  24: mov o4.xyzw, r1.wwwy
  25: mov o5.w, r1.z
  26: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  27: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  28: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  29: dp3 r0.w, r0.xyzx, r0.xyzx
  30: rsq r0.w, r0.w
  31: mul o5.xyz, r0.wwww, r0.xyzx
  32: mov o7.xyzw, l(0,0,0,0)
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 82 math, 6 temp registers, 2 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 1 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture3d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: eq r1.w, cb2[0].x, l(1.000000)
  13: if_nz r1.w
  14:   eq r1.w, cb2[0].y, l(1.000000)
  15:   mul r3.xyz, v6.yyyy, cb2[2].xyzx
  16:   mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
  17:   mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
  18:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  19:   movc r3.xyz, r1.wwww, r3.xyzx, v6.xyzx
  20:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  21:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  22:   mad r1.w, r3.y, l(0.250000), l(0.750000)
  23:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  24:   max r3.x, r1.w, r2.w
  25:   sample r3.xyzw, r3.xzwx, t1.xyzw, s0
  26: else 
  27:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  28: endif 
  29: dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
  30: mul r3.xyz, r1.wwww, cb0[2].xyzx
  31: add r1.w, -cb0[8].w, l(1.000000)
  32: mov r4.x, v3.w
  33: mov r4.y, v4.w
  34: mov r4.z, v5.w
  35: mad r5.xyz, -v2.xyzx, r0.wwww, r4.xyzx
  36: dp3 r0.w, r5.xyzx, r5.xyzx
  37: max r0.w, r0.w, l(0.001000)
  38: rsq r0.w, r0.w
  39: mul r5.xyz, r0.wwww, r5.xyzx
  40: dp3 r0.w, r1.xyzx, -r2.xyzx
  41: dp3_sat r2.x, r1.xyzx, r4.xyzx
  42: dp3_sat r1.x, r1.xyzx, r5.xyzx
  43: dp3_sat r1.y, r4.xyzx, r5.xyzx
  44: mul r1.z, r1.y, r1.y
  45: dp2 r1.z, r1.zzzz, r1.wwww
  46: add r1.z, r1.z, l(-0.500000)
  47: add r2.y, -r2.x, l(1.000000)
  48: mul r2.z, r2.y, r2.y
  49: mul r2.z, r2.z, r2.z
  50: mul r2.y, r2.y, r2.z
  51: mad r2.y, r1.z, r2.y, l(1.000000)
  52: add r2.z, -|r0.w|, l(1.000000)
  53: mul r2.w, r2.z, r2.z
  54: mul r2.w, r2.w, r2.w
  55: mul r2.z, r2.z, r2.w
  56: mad r1.z, r1.z, r2.z, l(1.000000)
  57: mul r1.z, r1.z, r2.y
  58: mul r1.z, r2.x, r1.z
  59: mul r1.w, r1.w, r1.w
  60: max r1.w, r1.w, l(0.002000)
  61: add r2.y, -r1.w, l(1.000000)
  62: mad r2.z, |r0.w|, r2.y, r1.w
  63: mad r2.y, r2.x, r2.y, r1.w
  64: mul r0.w, |r0.w|, r2.y
  65: mad r0.w, r2.x, r2.z, r0.w
  66: add r0.w, r0.w, l(0.000010)
  67: div r0.w, l(0.500000), r0.w
  68: mul r1.w, r1.w, r1.w
  69: mad r2.y, r1.x, r1.w, -r1.x
  70: mad r1.x, r2.y, r1.x, l(1.000000)
  71: mul r1.w, r1.w, l(0.318310)
  72: mad r1.x, r1.x, r1.x, l(0.000000)
  73: div r1.x, r1.w, r1.x
  74: mul r0.w, r0.w, r1.x
  75: mul r0.w, r0.w, l(3.141593)
  76: mul r0.w, r2.x, r0.w
  77: max r0.w, r0.w, l(0.000000)
  78: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
  79: ne r1.x, r1.x, l(0.000000)
  80: and r1.x, r1.x, l(0x3f800000)
  81: mul r0.w, r0.w, r1.x
  82: mul r1.xzw, r1.zzzz, r3.xxyz
  83: mul r2.xyz, r3.xyzx, r0.wwww
  84: add r0.w, -r1.y, l(1.000000)
  85: mul r1.y, r0.w, r0.w
  86: mul r1.y, r1.y, r1.y
  87: mul r0.w, r0.w, r1.y
  88: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  89: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
  90: mul r2.xyz, r2.xyzx, r3.xyzx
  91: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
  92: mov o0.w, l(1.000000)
  93: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SPOT 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  32: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  33: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  34: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 97 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s2
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyzw, v6.yyyy, cb0[12].xyzw
  14: mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
  15: mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
  16: add r4.xyzw, r4.xyzw, cb0[14].xyzw
  17: eq r1.w, cb2[0].x, l(1.000000)
  18: if_nz r1.w
  19:   eq r1.w, cb2[0].y, l(1.000000)
  20:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  21:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  22:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  23:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  24:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  25:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  26:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  27:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  28:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  29:   max r5.x, r1.w, r2.w
  30:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  31: else 
  32:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  33: endif 
  34: dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
  35: lt r2.w, l(0.000000), r4.z
  36: and r2.w, r2.w, l(0x3f800000)
  37: div r5.xy, r4.xyxx, r4.wwww
  38: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  39: sample r5.xyzw, r5.xyxx, t2.xyzw, s3
  40: mul r2.w, r2.w, r5.w
  41: dp3 r3.w, r4.xyzx, r4.xyzx
  42: sample r4.xyzw, r3.wwww, t3.xyzw, s4
  43: mul r2.w, r2.w, r4.x
  44: mul r1.w, r1.w, r2.w
  45: mov r4.x, v3.w
  46: mov r4.y, v4.w
  47: mov r4.z, v5.w
  48: dp3 r2.w, r4.xyzx, r4.xyzx
  49: rsq r2.w, r2.w
  50: mul r5.xyz, r2.wwww, r4.xyzx
  51: mul r6.xyz, r1.wwww, cb0[2].xyzx
  52: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  53: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  54: dp3 r1.w, r4.xyzx, r4.xyzx
  55: max r1.w, r1.w, l(0.001000)
  56: rsq r1.w, r1.w
  57: mul r4.xyz, r1.wwww, r4.xyzx
  58: dp3 r1.w, r2.xyzx, -r3.xyzx
  59: dp3_sat r2.w, r2.xyzx, r5.xyzx
  60: dp3_sat r2.x, r2.xyzx, r4.xyzx
  61: dp3_sat r2.y, r5.xyzx, r4.xyzx
  62: mul r2.z, r2.y, r2.y
  63: dp2 r2.z, r2.zzzz, r0.wwww
  64: add r2.z, r2.z, l(-0.500000)
  65: add r3.x, -r2.w, l(1.000000)
  66: mul r3.y, r3.x, r3.x
  67: mul r3.y, r3.y, r3.y
  68: mul r3.x, r3.x, r3.y
  69: mad r3.x, r2.z, r3.x, l(1.000000)
  70: add r3.y, -|r1.w|, l(1.000000)
  71: mul r3.z, r3.y, r3.y
  72: mul r3.z, r3.z, r3.z
  73: mul r3.y, r3.y, r3.z
  74: mad r2.z, r2.z, r3.y, l(1.000000)
  75: mul r2.z, r2.z, r3.x
  76: mul r2.z, r2.w, r2.z
  77: mul r0.w, r0.w, r0.w
  78: max r0.w, r0.w, l(0.002000)
  79: add r3.x, -r0.w, l(1.000000)
  80: mad r3.y, |r1.w|, r3.x, r0.w
  81: mad r3.x, r2.w, r3.x, r0.w
  82: mul r1.w, |r1.w|, r3.x
  83: mad r1.w, r2.w, r3.y, r1.w
  84: add r1.w, r1.w, l(0.000010)
  85: div r1.w, l(0.500000), r1.w
  86: mul r0.w, r0.w, r0.w
  87: mad r3.x, r2.x, r0.w, -r2.x
  88: mad r2.x, r3.x, r2.x, l(1.000000)
  89: mul r0.w, r0.w, l(0.318310)
  90: mad r2.x, r2.x, r2.x, l(0.000000)
  91: div r0.w, r0.w, r2.x
  92: mul r0.w, r0.w, r1.w
  93: mul r0.w, r0.w, l(3.141593)
  94: mul r0.w, r2.w, r0.w
  95: max r0.w, r0.w, l(0.000000)
  96: dp3 r1.w, r0.xyzx, r0.xyzx
  97: ne r1.w, r1.w, l(0.000000)
  98: and r1.w, r1.w, l(0x3f800000)
  99: mul r0.w, r0.w, r1.w
 100: mul r2.xzw, r2.zzzz, r6.xxyz
 101: mul r3.xyz, r6.xyzx, r0.wwww
 102: add r0.w, -r2.y, l(1.000000)
 103: mul r1.w, r0.w, r0.w
 104: mul r1.w, r1.w, r1.w
 105: mul r0.w, r0.w, r1.w
 106: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 107: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 108: mul r0.xyz, r0.xyzx, r3.xyzx
 109: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 110: mov o0.w, l(1.000000)
 111: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SPOT UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  22: mov o6.xyz, r1.yzwy
  23: mov r2.w, l(0)
  24: mov o3.xyzw, r2.wwwx
  25: mov o4.xyzw, r2.wwwy
  26: mov o5.w, r2.z
  27: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul o5.xyz, r1.wwww, r1.xyzx
  33: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  34: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  35: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  36: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  37: mov o8.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 97 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s2
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyzw, v6.yyyy, cb0[12].xyzw
  14: mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
  15: mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
  16: add r4.xyzw, r4.xyzw, cb0[14].xyzw
  17: eq r1.w, cb2[0].x, l(1.000000)
  18: if_nz r1.w
  19:   eq r1.w, cb2[0].y, l(1.000000)
  20:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  21:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  22:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  23:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  24:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  25:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  26:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  27:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  28:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  29:   max r5.x, r1.w, r2.w
  30:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  31: else 
  32:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  33: endif 
  34: dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
  35: lt r2.w, l(0.000000), r4.z
  36: and r2.w, r2.w, l(0x3f800000)
  37: div r5.xy, r4.xyxx, r4.wwww
  38: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  39: sample r5.xyzw, r5.xyxx, t2.xyzw, s3
  40: mul r2.w, r2.w, r5.w
  41: dp3 r3.w, r4.xyzx, r4.xyzx
  42: sample r4.xyzw, r3.wwww, t3.xyzw, s4
  43: mul r2.w, r2.w, r4.x
  44: mul r1.w, r1.w, r2.w
  45: mov r4.x, v3.w
  46: mov r4.y, v4.w
  47: mov r4.z, v5.w
  48: dp3 r2.w, r4.xyzx, r4.xyzx
  49: rsq r2.w, r2.w
  50: mul r5.xyz, r2.wwww, r4.xyzx
  51: mul r6.xyz, r1.wwww, cb0[2].xyzx
  52: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  53: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  54: dp3 r1.w, r4.xyzx, r4.xyzx
  55: max r1.w, r1.w, l(0.001000)
  56: rsq r1.w, r1.w
  57: mul r4.xyz, r1.wwww, r4.xyzx
  58: dp3 r1.w, r2.xyzx, -r3.xyzx
  59: dp3_sat r2.w, r2.xyzx, r5.xyzx
  60: dp3_sat r2.x, r2.xyzx, r4.xyzx
  61: dp3_sat r2.y, r5.xyzx, r4.xyzx
  62: mul r2.z, r2.y, r2.y
  63: dp2 r2.z, r2.zzzz, r0.wwww
  64: add r2.z, r2.z, l(-0.500000)
  65: add r3.x, -r2.w, l(1.000000)
  66: mul r3.y, r3.x, r3.x
  67: mul r3.y, r3.y, r3.y
  68: mul r3.x, r3.x, r3.y
  69: mad r3.x, r2.z, r3.x, l(1.000000)
  70: add r3.y, -|r1.w|, l(1.000000)
  71: mul r3.z, r3.y, r3.y
  72: mul r3.z, r3.z, r3.z
  73: mul r3.y, r3.y, r3.z
  74: mad r2.z, r2.z, r3.y, l(1.000000)
  75: mul r2.z, r2.z, r3.x
  76: mul r2.z, r2.w, r2.z
  77: mul r0.w, r0.w, r0.w
  78: max r0.w, r0.w, l(0.002000)
  79: add r3.x, -r0.w, l(1.000000)
  80: mad r3.y, |r1.w|, r3.x, r0.w
  81: mad r3.x, r2.w, r3.x, r0.w
  82: mul r1.w, |r1.w|, r3.x
  83: mad r1.w, r2.w, r3.y, r1.w
  84: add r1.w, r1.w, l(0.000010)
  85: div r1.w, l(0.500000), r1.w
  86: mul r0.w, r0.w, r0.w
  87: mad r3.x, r2.x, r0.w, -r2.x
  88: mad r2.x, r3.x, r2.x, l(1.000000)
  89: mul r0.w, r0.w, l(0.318310)
  90: mad r2.x, r2.x, r2.x, l(0.000000)
  91: div r0.w, r0.w, r2.x
  92: mul r0.w, r0.w, r1.w
  93: mul r0.w, r0.w, l(3.141593)
  94: mul r0.w, r2.w, r0.w
  95: max r0.w, r0.w, l(0.000000)
  96: dp3 r1.w, r0.xyzx, r0.xyzx
  97: ne r1.w, r1.w, l(0.000000)
  98: and r1.w, r1.w, l(0x3f800000)
  99: mul r0.w, r0.w, r1.w
 100: mul r2.xzw, r2.zzzz, r6.xxyz
 101: mul r3.xyz, r6.xyzx, r0.wwww
 102: add r0.w, -r2.y, l(1.000000)
 103: mul r1.w, r0.w, r0.w
 104: mul r1.w, r1.w, r1.w
 105: mul r0.w, r0.w, r1.w
 106: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 107: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 108: mul r0.xyz, r0.xyzx, r3.xyzx
 109: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 110: mov o0.w, l(1.000000)
 111: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SPOT 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r1.xyzx
  28: mov o3.w, r3.x
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r4.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r1.xyzx
  38: mul r1.x, v4.w, cb3[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r3.y
  41: mov o5.w, r3.z
  42: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  43: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  44: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  45: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  46: mov o8.xyzw, l(0,0,0,0)
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 107 math, 7 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_BumpMap" to slot 2
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 4
Set 2D Texture "_LightTextureB0" to slot 4 sampler slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: mul r4.xyzw, v6.yyyy, cb0[12].xyzw
  25: mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
  26: mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
  27: add r4.xyzw, r4.xyzw, cb0[14].xyzw
  28: eq r1.w, cb2[0].x, l(1.000000)
  29: if_nz r1.w
  30:   eq r1.w, cb2[0].y, l(1.000000)
  31:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  32:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  33:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  34:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  35:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  36:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  37:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  38:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  39:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  40:   max r5.x, r1.w, r2.w
  41:   sample r5.xyzw, r5.xzwx, t5.xyzw, s0
  42: else 
  43:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
  46: lt r2.w, l(0.000000), r4.z
  47: and r2.w, r2.w, l(0x3f800000)
  48: div r5.xy, r4.xyxx, r4.wwww
  49: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  50: sample r5.xyzw, r5.xyxx, t3.xyzw, s4
  51: mul r2.w, r2.w, r5.w
  52: dp3 r3.w, r4.xyzx, r4.xyzx
  53: sample r4.xyzw, r3.wwww, t4.xyzw, s5
  54: mul r2.w, r2.w, r4.x
  55: mul r1.w, r1.w, r2.w
  56: mov r4.x, v3.w
  57: mov r4.y, v4.w
  58: mov r4.z, v5.w
  59: dp3 r2.w, r4.xyzx, r4.xyzx
  60: rsq r2.w, r2.w
  61: mul r5.xyz, r2.wwww, r4.xyzx
  62: mul r6.xyz, r1.wwww, cb0[2].xyzx
  63: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  64: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  65: dp3 r1.w, r4.xyzx, r4.xyzx
  66: max r1.w, r1.w, l(0.001000)
  67: rsq r1.w, r1.w
  68: mul r4.xyz, r1.wwww, r4.xyzx
  69: dp3 r1.w, r2.xyzx, -r3.xyzx
  70: dp3_sat r2.w, r2.xyzx, r5.xyzx
  71: dp3_sat r2.x, r2.xyzx, r4.xyzx
  72: dp3_sat r2.y, r5.xyzx, r4.xyzx
  73: mul r2.z, r2.y, r2.y
  74: dp2 r2.z, r2.zzzz, r0.wwww
  75: add r2.z, r2.z, l(-0.500000)
  76: add r3.x, -r2.w, l(1.000000)
  77: mul r3.y, r3.x, r3.x
  78: mul r3.y, r3.y, r3.y
  79: mul r3.x, r3.x, r3.y
  80: mad r3.x, r2.z, r3.x, l(1.000000)
  81: add r3.y, -|r1.w|, l(1.000000)
  82: mul r3.z, r3.y, r3.y
  83: mul r3.z, r3.z, r3.z
  84: mul r3.y, r3.y, r3.z
  85: mad r2.z, r2.z, r3.y, l(1.000000)
  86: mul r2.z, r2.z, r3.x
  87: mul r2.z, r2.w, r2.z
  88: mul r0.w, r0.w, r0.w
  89: max r0.w, r0.w, l(0.002000)
  90: add r3.x, -r0.w, l(1.000000)
  91: mad r3.y, |r1.w|, r3.x, r0.w
  92: mad r3.x, r2.w, r3.x, r0.w
  93: mul r1.w, |r1.w|, r3.x
  94: mad r1.w, r2.w, r3.y, r1.w
  95: add r1.w, r1.w, l(0.000010)
  96: div r1.w, l(0.500000), r1.w
  97: mul r0.w, r0.w, r0.w
  98: mad r3.x, r2.x, r0.w, -r2.x
  99: mad r2.x, r3.x, r2.x, l(1.000000)
 100: mul r0.w, r0.w, l(0.318310)
 101: mad r2.x, r2.x, r2.x, l(0.000000)
 102: div r0.w, r0.w, r2.x
 103: mul r0.w, r0.w, r1.w
 104: mul r0.w, r0.w, l(3.141593)
 105: mul r0.w, r2.w, r0.w
 106: max r0.w, r0.w, l(0.000000)
 107: dp3 r1.w, r0.xyzx, r0.xyzx
 108: ne r1.w, r1.w, l(0.000000)
 109: and r1.w, r1.w, l(0x3f800000)
 110: mul r0.w, r0.w, r1.w
 111: mul r2.xzw, r2.zzzz, r6.xxyz
 112: mul r3.xyz, r6.xyzx, r0.wwww
 113: add r0.w, -r2.y, l(1.000000)
 114: mul r1.w, r0.w, r0.w
 115: mul r1.w, r1.w, r1.w
 116: mul r0.w, r0.w, r1.w
 117: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 118: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 119: mul r0.xyz, r0.xyzx, r3.xyzx
 120: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 121: mov o0.w, l(1.000000)
 122: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SPOT UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  22: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  23: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r2.xyz, r1.xxxx, r2.xyzx
  27: mov o3.xyz, r2.xyzx
  28: mad r3.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  29: mov o6.xyz, r1.yzwy
  30: mov o3.w, r3.x
  31: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul r1.xyz, r1.wwww, r1.xyzx
  37: mul r4.xyz, r2.yzxy, r1.zxyz
  38: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  39: mov o5.xyz, r1.xyzx
  40: mul r1.x, v4.w, cb2[9].w
  41: mul o4.xyz, r1.xxxx, r2.xyzx
  42: mov o4.w, r3.y
  43: mov o5.w, r3.z
  44: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  45: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  46: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  47: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  48: mov o8.xyzw, l(0,0,0,0)
  49: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 107 math, 7 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_BumpMap" to slot 2
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 4
Set 2D Texture "_LightTextureB0" to slot 4 sampler slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: mul r4.xyzw, v6.yyyy, cb0[12].xyzw
  25: mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
  26: mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
  27: add r4.xyzw, r4.xyzw, cb0[14].xyzw
  28: eq r1.w, cb2[0].x, l(1.000000)
  29: if_nz r1.w
  30:   eq r1.w, cb2[0].y, l(1.000000)
  31:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  32:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  33:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  34:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  35:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  36:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  37:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  38:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  39:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  40:   max r5.x, r1.w, r2.w
  41:   sample r5.xyzw, r5.xzwx, t5.xyzw, s0
  42: else 
  43:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
  46: lt r2.w, l(0.000000), r4.z
  47: and r2.w, r2.w, l(0x3f800000)
  48: div r5.xy, r4.xyxx, r4.wwww
  49: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  50: sample r5.xyzw, r5.xyxx, t3.xyzw, s4
  51: mul r2.w, r2.w, r5.w
  52: dp3 r3.w, r4.xyzx, r4.xyzx
  53: sample r4.xyzw, r3.wwww, t4.xyzw, s5
  54: mul r2.w, r2.w, r4.x
  55: mul r1.w, r1.w, r2.w
  56: mov r4.x, v3.w
  57: mov r4.y, v4.w
  58: mov r4.z, v5.w
  59: dp3 r2.w, r4.xyzx, r4.xyzx
  60: rsq r2.w, r2.w
  61: mul r5.xyz, r2.wwww, r4.xyzx
  62: mul r6.xyz, r1.wwww, cb0[2].xyzx
  63: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  64: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  65: dp3 r1.w, r4.xyzx, r4.xyzx
  66: max r1.w, r1.w, l(0.001000)
  67: rsq r1.w, r1.w
  68: mul r4.xyz, r1.wwww, r4.xyzx
  69: dp3 r1.w, r2.xyzx, -r3.xyzx
  70: dp3_sat r2.w, r2.xyzx, r5.xyzx
  71: dp3_sat r2.x, r2.xyzx, r4.xyzx
  72: dp3_sat r2.y, r5.xyzx, r4.xyzx
  73: mul r2.z, r2.y, r2.y
  74: dp2 r2.z, r2.zzzz, r0.wwww
  75: add r2.z, r2.z, l(-0.500000)
  76: add r3.x, -r2.w, l(1.000000)
  77: mul r3.y, r3.x, r3.x
  78: mul r3.y, r3.y, r3.y
  79: mul r3.x, r3.x, r3.y
  80: mad r3.x, r2.z, r3.x, l(1.000000)
  81: add r3.y, -|r1.w|, l(1.000000)
  82: mul r3.z, r3.y, r3.y
  83: mul r3.z, r3.z, r3.z
  84: mul r3.y, r3.y, r3.z
  85: mad r2.z, r2.z, r3.y, l(1.000000)
  86: mul r2.z, r2.z, r3.x
  87: mul r2.z, r2.w, r2.z
  88: mul r0.w, r0.w, r0.w
  89: max r0.w, r0.w, l(0.002000)
  90: add r3.x, -r0.w, l(1.000000)
  91: mad r3.y, |r1.w|, r3.x, r0.w
  92: mad r3.x, r2.w, r3.x, r0.w
  93: mul r1.w, |r1.w|, r3.x
  94: mad r1.w, r2.w, r3.y, r1.w
  95: add r1.w, r1.w, l(0.000010)
  96: div r1.w, l(0.500000), r1.w
  97: mul r0.w, r0.w, r0.w
  98: mad r3.x, r2.x, r0.w, -r2.x
  99: mad r2.x, r3.x, r2.x, l(1.000000)
 100: mul r0.w, r0.w, l(0.318310)
 101: mad r2.x, r2.x, r2.x, l(0.000000)
 102: div r0.w, r0.w, r2.x
 103: mul r0.w, r0.w, r1.w
 104: mul r0.w, r0.w, l(3.141593)
 105: mul r0.w, r2.w, r0.w
 106: max r0.w, r0.w, l(0.000000)
 107: dp3 r1.w, r0.xyzx, r0.xyzx
 108: ne r1.w, r1.w, l(0.000000)
 109: and r1.w, r1.w, l(0x3f800000)
 110: mul r0.w, r0.w, r1.w
 111: mul r2.xzw, r2.zzzz, r6.xxyz
 112: mul r3.xyz, r6.xyzx, r0.wwww
 113: add r0.w, -r2.y, l(1.000000)
 114: mul r1.w, r0.w, r0.w
 115: mul r1.w, r1.w, r1.w
 116: mul r0.w, r0.w, r1.w
 117: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 118: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 119: mul r0.xyz, r0.xyzx, r3.xyzx
 120: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 121: mov o0.w, l(1.000000)
 122: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SPOT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  32: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  33: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  34: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 97 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: mul r3.xyzw, v6.yyyy, cb0[12].xyzw
  13: mad r3.xyzw, cb0[11].xyzw, v6.xxxx, r3.xyzw
  14: mad r3.xyzw, cb0[13].xyzw, v6.zzzz, r3.xyzw
  15: add r3.xyzw, r3.xyzw, cb0[14].xyzw
  16: eq r0.w, cb2[0].x, l(1.000000)
  17: if_nz r0.w
  18:   eq r0.w, cb2[0].y, l(1.000000)
  19:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  20:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  21:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  22:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  23:   movc r4.xyz, r0.wwww, r4.xyzx, v6.xyzx
  24:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  25:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  26:   mad r0.w, r4.y, l(0.250000), l(0.750000)
  27:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  28:   max r4.x, r0.w, r1.w
  29:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  30: else 
  31:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r0.w, r4.xyzw, cb1[46].xyzw
  34: lt r1.w, l(0.000000), r3.z
  35: and r1.w, r1.w, l(0x3f800000)
  36: div r4.xy, r3.xyxx, r3.wwww
  37: add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  38: sample r4.xyzw, r4.xyxx, t1.xyzw, s2
  39: mul r1.w, r1.w, r4.w
  40: dp3 r2.w, r3.xyzx, r3.xyzx
  41: sample r3.xyzw, r2.wwww, t2.xyzw, s3
  42: mul r1.w, r1.w, r3.x
  43: mul r0.w, r0.w, r1.w
  44: mov r3.x, v3.w
  45: mov r3.y, v4.w
  46: mov r3.z, v5.w
  47: dp3 r1.w, r3.xyzx, r3.xyzx
  48: rsq r1.w, r1.w
  49: mul r4.xyz, r1.wwww, r3.xyzx
  50: mul r5.xyz, r0.wwww, cb0[2].xyzx
  51: add r0.w, -cb0[8].w, l(1.000000)
  52: mad r3.xyz, r3.xyzx, r1.wwww, -r2.xyzx
  53: dp3 r1.w, r3.xyzx, r3.xyzx
  54: max r1.w, r1.w, l(0.001000)
  55: rsq r1.w, r1.w
  56: mul r3.xyz, r1.wwww, r3.xyzx
  57: dp3 r1.w, r1.xyzx, -r2.xyzx
  58: dp3_sat r2.x, r1.xyzx, r4.xyzx
  59: dp3_sat r1.x, r1.xyzx, r3.xyzx
  60: dp3_sat r1.y, r4.xyzx, r3.xyzx
  61: mul r1.z, r1.y, r1.y
  62: dp2 r1.z, r1.zzzz, r0.wwww
  63: add r1.z, r1.z, l(-0.500000)
  64: add r2.y, -r2.x, l(1.000000)
  65: mul r2.z, r2.y, r2.y
  66: mul r2.z, r2.z, r2.z
  67: mul r2.y, r2.y, r2.z
  68: mad r2.y, r1.z, r2.y, l(1.000000)
  69: add r2.z, -|r1.w|, l(1.000000)
  70: mul r2.w, r2.z, r2.z
  71: mul r2.w, r2.w, r2.w
  72: mul r2.z, r2.z, r2.w
  73: mad r1.z, r1.z, r2.z, l(1.000000)
  74: mul r1.z, r1.z, r2.y
  75: mul r1.z, r2.x, r1.z
  76: mul r0.w, r0.w, r0.w
  77: max r0.w, r0.w, l(0.002000)
  78: add r2.y, -r0.w, l(1.000000)
  79: mad r2.z, |r1.w|, r2.y, r0.w
  80: mad r2.y, r2.x, r2.y, r0.w
  81: mul r1.w, |r1.w|, r2.y
  82: mad r1.w, r2.x, r2.z, r1.w
  83: add r1.w, r1.w, l(0.000010)
  84: div r1.w, l(0.500000), r1.w
  85: mul r0.w, r0.w, r0.w
  86: mad r2.y, r1.x, r0.w, -r1.x
  87: mad r1.x, r2.y, r1.x, l(1.000000)
  88: mul r0.w, r0.w, l(0.318310)
  89: mad r1.x, r1.x, r1.x, l(0.000000)
  90: div r0.w, r0.w, r1.x
  91: mul r0.w, r0.w, r1.w
  92: mul r0.w, r0.w, l(3.141593)
  93: mul r0.w, r2.x, r0.w
  94: max r0.w, r0.w, l(0.000000)
  95: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
  96: ne r1.x, r1.x, l(0.000000)
  97: and r1.x, r1.x, l(0x3f800000)
  98: mul r0.w, r0.w, r1.x
  99: mul r1.xzw, r1.zzzz, r5.xxyz
 100: mul r2.xyz, r5.xyzx, r0.wwww
 101: add r0.w, -r1.y, l(1.000000)
 102: mul r1.y, r0.w, r0.w
 103: mul r1.y, r1.y, r1.y
 104: mul r0.w, r0.w, r1.y
 105: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 106: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
 107: mul r2.xyz, r2.xyzx, r3.xyzx
 108: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
 109: mov o0.w, l(1.000000)
 110: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SPOT UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  22: mov o6.xyz, r1.yzwy
  23: mov r2.w, l(0)
  24: mov o3.xyzw, r2.wwwx
  25: mov o4.xyzw, r2.wwwy
  26: mov o5.w, r2.z
  27: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul o5.xyz, r1.wwww, r1.xyzx
  33: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  34: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  35: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  36: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  37: mov o8.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 97 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: mul r3.xyzw, v6.yyyy, cb0[12].xyzw
  13: mad r3.xyzw, cb0[11].xyzw, v6.xxxx, r3.xyzw
  14: mad r3.xyzw, cb0[13].xyzw, v6.zzzz, r3.xyzw
  15: add r3.xyzw, r3.xyzw, cb0[14].xyzw
  16: eq r0.w, cb2[0].x, l(1.000000)
  17: if_nz r0.w
  18:   eq r0.w, cb2[0].y, l(1.000000)
  19:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  20:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  21:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  22:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  23:   movc r4.xyz, r0.wwww, r4.xyzx, v6.xyzx
  24:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  25:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  26:   mad r0.w, r4.y, l(0.250000), l(0.750000)
  27:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  28:   max r4.x, r0.w, r1.w
  29:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  30: else 
  31:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r0.w, r4.xyzw, cb1[46].xyzw
  34: lt r1.w, l(0.000000), r3.z
  35: and r1.w, r1.w, l(0x3f800000)
  36: div r4.xy, r3.xyxx, r3.wwww
  37: add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  38: sample r4.xyzw, r4.xyxx, t1.xyzw, s2
  39: mul r1.w, r1.w, r4.w
  40: dp3 r2.w, r3.xyzx, r3.xyzx
  41: sample r3.xyzw, r2.wwww, t2.xyzw, s3
  42: mul r1.w, r1.w, r3.x
  43: mul r0.w, r0.w, r1.w
  44: mov r3.x, v3.w
  45: mov r3.y, v4.w
  46: mov r3.z, v5.w
  47: dp3 r1.w, r3.xyzx, r3.xyzx
  48: rsq r1.w, r1.w
  49: mul r4.xyz, r1.wwww, r3.xyzx
  50: mul r5.xyz, r0.wwww, cb0[2].xyzx
  51: add r0.w, -cb0[8].w, l(1.000000)
  52: mad r3.xyz, r3.xyzx, r1.wwww, -r2.xyzx
  53: dp3 r1.w, r3.xyzx, r3.xyzx
  54: max r1.w, r1.w, l(0.001000)
  55: rsq r1.w, r1.w
  56: mul r3.xyz, r1.wwww, r3.xyzx
  57: dp3 r1.w, r1.xyzx, -r2.xyzx
  58: dp3_sat r2.x, r1.xyzx, r4.xyzx
  59: dp3_sat r1.x, r1.xyzx, r3.xyzx
  60: dp3_sat r1.y, r4.xyzx, r3.xyzx
  61: mul r1.z, r1.y, r1.y
  62: dp2 r1.z, r1.zzzz, r0.wwww
  63: add r1.z, r1.z, l(-0.500000)
  64: add r2.y, -r2.x, l(1.000000)
  65: mul r2.z, r2.y, r2.y
  66: mul r2.z, r2.z, r2.z
  67: mul r2.y, r2.y, r2.z
  68: mad r2.y, r1.z, r2.y, l(1.000000)
  69: add r2.z, -|r1.w|, l(1.000000)
  70: mul r2.w, r2.z, r2.z
  71: mul r2.w, r2.w, r2.w
  72: mul r2.z, r2.z, r2.w
  73: mad r1.z, r1.z, r2.z, l(1.000000)
  74: mul r1.z, r1.z, r2.y
  75: mul r1.z, r2.x, r1.z
  76: mul r0.w, r0.w, r0.w
  77: max r0.w, r0.w, l(0.002000)
  78: add r2.y, -r0.w, l(1.000000)
  79: mad r2.z, |r1.w|, r2.y, r0.w
  80: mad r2.y, r2.x, r2.y, r0.w
  81: mul r1.w, |r1.w|, r2.y
  82: mad r1.w, r2.x, r2.z, r1.w
  83: add r1.w, r1.w, l(0.000010)
  84: div r1.w, l(0.500000), r1.w
  85: mul r0.w, r0.w, r0.w
  86: mad r2.y, r1.x, r0.w, -r1.x
  87: mad r1.x, r2.y, r1.x, l(1.000000)
  88: mul r0.w, r0.w, l(0.318310)
  89: mad r1.x, r1.x, r1.x, l(0.000000)
  90: div r0.w, r0.w, r1.x
  91: mul r0.w, r0.w, r1.w
  92: mul r0.w, r0.w, l(3.141593)
  93: mul r0.w, r2.x, r0.w
  94: max r0.w, r0.w, l(0.000000)
  95: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
  96: ne r1.x, r1.x, l(0.000000)
  97: and r1.x, r1.x, l(0x3f800000)
  98: mul r0.w, r0.w, r1.x
  99: mul r1.xzw, r1.zzzz, r5.xxyz
 100: mul r2.xyz, r5.xyzx, r0.wwww
 101: add r0.w, -r1.y, l(1.000000)
 102: mul r1.y, r0.w, r0.w
 103: mul r1.y, r1.y, r1.y
 104: mul r0.w, r0.w, r1.y
 105: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 106: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
 107: mul r2.xyz, r2.xyzx, r3.xyzx
 108: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
 109: mov o0.w, l(1.000000)
 110: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  32: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  33: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  34: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 92 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s2
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  14: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  15: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  16: add r4.xyz, r4.xyzx, cb0[14].xyzx
  17: eq r1.w, cb2[0].x, l(1.000000)
  18: if_nz r1.w
  19:   eq r1.w, cb2[0].y, l(1.000000)
  20:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  21:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  22:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  23:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  24:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  25:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  26:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  27:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  28:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  29:   max r5.x, r1.w, r2.w
  30:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  31: else 
  32:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  33: endif 
  34: dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
  35: dp3 r2.w, r4.xyzx, r4.xyzx
  36: sample r5.xyzw, r2.wwww, t2.xyzw, s4
  37: sample r4.xyzw, r4.xyzx, t3.xyzw, s3
  38: mul r2.w, r4.w, r5.x
  39: mul r1.w, r1.w, r2.w
  40: mov r4.x, v3.w
  41: mov r4.y, v4.w
  42: mov r4.z, v5.w
  43: dp3 r2.w, r4.xyzx, r4.xyzx
  44: rsq r2.w, r2.w
  45: mul r5.xyz, r2.wwww, r4.xyzx
  46: mul r6.xyz, r1.wwww, cb0[2].xyzx
  47: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  48: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  49: dp3 r1.w, r4.xyzx, r4.xyzx
  50: max r1.w, r1.w, l(0.001000)
  51: rsq r1.w, r1.w
  52: mul r4.xyz, r1.wwww, r4.xyzx
  53: dp3 r1.w, r2.xyzx, -r3.xyzx
  54: dp3_sat r2.w, r2.xyzx, r5.xyzx
  55: dp3_sat r2.x, r2.xyzx, r4.xyzx
  56: dp3_sat r2.y, r5.xyzx, r4.xyzx
  57: mul r2.z, r2.y, r2.y
  58: dp2 r2.z, r2.zzzz, r0.wwww
  59: add r2.z, r2.z, l(-0.500000)
  60: add r3.x, -r2.w, l(1.000000)
  61: mul r3.y, r3.x, r3.x
  62: mul r3.y, r3.y, r3.y
  63: mul r3.x, r3.x, r3.y
  64: mad r3.x, r2.z, r3.x, l(1.000000)
  65: add r3.y, -|r1.w|, l(1.000000)
  66: mul r3.z, r3.y, r3.y
  67: mul r3.z, r3.z, r3.z
  68: mul r3.y, r3.y, r3.z
  69: mad r2.z, r2.z, r3.y, l(1.000000)
  70: mul r2.z, r2.z, r3.x
  71: mul r2.z, r2.w, r2.z
  72: mul r0.w, r0.w, r0.w
  73: max r0.w, r0.w, l(0.002000)
  74: add r3.x, -r0.w, l(1.000000)
  75: mad r3.y, |r1.w|, r3.x, r0.w
  76: mad r3.x, r2.w, r3.x, r0.w
  77: mul r1.w, |r1.w|, r3.x
  78: mad r1.w, r2.w, r3.y, r1.w
  79: add r1.w, r1.w, l(0.000010)
  80: div r1.w, l(0.500000), r1.w
  81: mul r0.w, r0.w, r0.w
  82: mad r3.x, r2.x, r0.w, -r2.x
  83: mad r2.x, r3.x, r2.x, l(1.000000)
  84: mul r0.w, r0.w, l(0.318310)
  85: mad r2.x, r2.x, r2.x, l(0.000000)
  86: div r0.w, r0.w, r2.x
  87: mul r0.w, r0.w, r1.w
  88: mul r0.w, r0.w, l(3.141593)
  89: mul r0.w, r2.w, r0.w
  90: max r0.w, r0.w, l(0.000000)
  91: dp3 r1.w, r0.xyzx, r0.xyzx
  92: ne r1.w, r1.w, l(0.000000)
  93: and r1.w, r1.w, l(0x3f800000)
  94: mul r0.w, r0.w, r1.w
  95: mul r2.xzw, r2.zzzz, r6.xxyz
  96: mul r3.xyz, r6.xyzx, r0.wwww
  97: add r0.w, -r2.y, l(1.000000)
  98: mul r1.w, r0.w, r0.w
  99: mul r1.w, r1.w, r1.w
 100: mul r0.w, r0.w, r1.w
 101: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 102: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 103: mul r0.xyz, r0.xyzx, r3.xyzx
 104: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 105: mov o0.w, l(1.000000)
 106: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  22: mov o6.xyz, r1.yzwy
  23: mov r2.w, l(0)
  24: mov o3.xyzw, r2.wwwx
  25: mov o4.xyzw, r2.wwwy
  26: mov o5.w, r2.z
  27: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul o5.xyz, r1.wwww, r1.xyzx
  33: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  34: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  35: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  36: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  37: mov o8.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 92 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s2
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  14: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  15: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  16: add r4.xyz, r4.xyzx, cb0[14].xyzx
  17: eq r1.w, cb2[0].x, l(1.000000)
  18: if_nz r1.w
  19:   eq r1.w, cb2[0].y, l(1.000000)
  20:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  21:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  22:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  23:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  24:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  25:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  26:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  27:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  28:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  29:   max r5.x, r1.w, r2.w
  30:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  31: else 
  32:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  33: endif 
  34: dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
  35: dp3 r2.w, r4.xyzx, r4.xyzx
  36: sample r5.xyzw, r2.wwww, t2.xyzw, s4
  37: sample r4.xyzw, r4.xyzx, t3.xyzw, s3
  38: mul r2.w, r4.w, r5.x
  39: mul r1.w, r1.w, r2.w
  40: mov r4.x, v3.w
  41: mov r4.y, v4.w
  42: mov r4.z, v5.w
  43: dp3 r2.w, r4.xyzx, r4.xyzx
  44: rsq r2.w, r2.w
  45: mul r5.xyz, r2.wwww, r4.xyzx
  46: mul r6.xyz, r1.wwww, cb0[2].xyzx
  47: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  48: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  49: dp3 r1.w, r4.xyzx, r4.xyzx
  50: max r1.w, r1.w, l(0.001000)
  51: rsq r1.w, r1.w
  52: mul r4.xyz, r1.wwww, r4.xyzx
  53: dp3 r1.w, r2.xyzx, -r3.xyzx
  54: dp3_sat r2.w, r2.xyzx, r5.xyzx
  55: dp3_sat r2.x, r2.xyzx, r4.xyzx
  56: dp3_sat r2.y, r5.xyzx, r4.xyzx
  57: mul r2.z, r2.y, r2.y
  58: dp2 r2.z, r2.zzzz, r0.wwww
  59: add r2.z, r2.z, l(-0.500000)
  60: add r3.x, -r2.w, l(1.000000)
  61: mul r3.y, r3.x, r3.x
  62: mul r3.y, r3.y, r3.y
  63: mul r3.x, r3.x, r3.y
  64: mad r3.x, r2.z, r3.x, l(1.000000)
  65: add r3.y, -|r1.w|, l(1.000000)
  66: mul r3.z, r3.y, r3.y
  67: mul r3.z, r3.z, r3.z
  68: mul r3.y, r3.y, r3.z
  69: mad r2.z, r2.z, r3.y, l(1.000000)
  70: mul r2.z, r2.z, r3.x
  71: mul r2.z, r2.w, r2.z
  72: mul r0.w, r0.w, r0.w
  73: max r0.w, r0.w, l(0.002000)
  74: add r3.x, -r0.w, l(1.000000)
  75: mad r3.y, |r1.w|, r3.x, r0.w
  76: mad r3.x, r2.w, r3.x, r0.w
  77: mul r1.w, |r1.w|, r3.x
  78: mad r1.w, r2.w, r3.y, r1.w
  79: add r1.w, r1.w, l(0.000010)
  80: div r1.w, l(0.500000), r1.w
  81: mul r0.w, r0.w, r0.w
  82: mad r3.x, r2.x, r0.w, -r2.x
  83: mad r2.x, r3.x, r2.x, l(1.000000)
  84: mul r0.w, r0.w, l(0.318310)
  85: mad r2.x, r2.x, r2.x, l(0.000000)
  86: div r0.w, r0.w, r2.x
  87: mul r0.w, r0.w, r1.w
  88: mul r0.w, r0.w, l(3.141593)
  89: mul r0.w, r2.w, r0.w
  90: max r0.w, r0.w, l(0.000000)
  91: dp3 r1.w, r0.xyzx, r0.xyzx
  92: ne r1.w, r1.w, l(0.000000)
  93: and r1.w, r1.w, l(0x3f800000)
  94: mul r0.w, r0.w, r1.w
  95: mul r2.xzw, r2.zzzz, r6.xxyz
  96: mul r3.xyz, r6.xyzx, r0.wwww
  97: add r0.w, -r2.y, l(1.000000)
  98: mul r1.w, r0.w, r0.w
  99: mul r1.w, r1.w, r1.w
 100: mul r0.w, r0.w, r1.w
 101: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 102: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 103: mul r0.xyz, r0.xyzx, r3.xyzx
 104: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 105: mov o0.w, l(1.000000)
 106: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r1.xyzx
  28: mov o3.w, r3.x
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r4.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r1.xyzx
  38: mul r1.x, v4.w, cb3[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r3.y
  41: mov o5.w, r3.z
  42: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  43: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  44: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  45: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  46: mov o8.xyzw, l(0,0,0,0)
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 102 math, 7 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_BumpMap" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 5
Set CUBE Texture "_LightTexture0" to slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  25: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  26: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  27: add r4.xyz, r4.xyzx, cb0[14].xyzx
  28: eq r1.w, cb2[0].x, l(1.000000)
  29: if_nz r1.w
  30:   eq r1.w, cb2[0].y, l(1.000000)
  31:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  32:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  33:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  34:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  35:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  36:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  37:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  38:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  39:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  40:   max r5.x, r1.w, r2.w
  41:   sample r5.xyzw, r5.xzwx, t5.xyzw, s0
  42: else 
  43:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
  46: dp3 r2.w, r4.xyzx, r4.xyzx
  47: sample r5.xyzw, r2.wwww, t3.xyzw, s5
  48: sample r4.xyzw, r4.xyzx, t4.xyzw, s4
  49: mul r2.w, r4.w, r5.x
  50: mul r1.w, r1.w, r2.w
  51: mov r4.x, v3.w
  52: mov r4.y, v4.w
  53: mov r4.z, v5.w
  54: dp3 r2.w, r4.xyzx, r4.xyzx
  55: rsq r2.w, r2.w
  56: mul r5.xyz, r2.wwww, r4.xyzx
  57: mul r6.xyz, r1.wwww, cb0[2].xyzx
  58: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  59: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  60: dp3 r1.w, r4.xyzx, r4.xyzx
  61: max r1.w, r1.w, l(0.001000)
  62: rsq r1.w, r1.w
  63: mul r4.xyz, r1.wwww, r4.xyzx
  64: dp3 r1.w, r2.xyzx, -r3.xyzx
  65: dp3_sat r2.w, r2.xyzx, r5.xyzx
  66: dp3_sat r2.x, r2.xyzx, r4.xyzx
  67: dp3_sat r2.y, r5.xyzx, r4.xyzx
  68: mul r2.z, r2.y, r2.y
  69: dp2 r2.z, r2.zzzz, r0.wwww
  70: add r2.z, r2.z, l(-0.500000)
  71: add r3.x, -r2.w, l(1.000000)
  72: mul r3.y, r3.x, r3.x
  73: mul r3.y, r3.y, r3.y
  74: mul r3.x, r3.x, r3.y
  75: mad r3.x, r2.z, r3.x, l(1.000000)
  76: add r3.y, -|r1.w|, l(1.000000)
  77: mul r3.z, r3.y, r3.y
  78: mul r3.z, r3.z, r3.z
  79: mul r3.y, r3.y, r3.z
  80: mad r2.z, r2.z, r3.y, l(1.000000)
  81: mul r2.z, r2.z, r3.x
  82: mul r2.z, r2.w, r2.z
  83: mul r0.w, r0.w, r0.w
  84: max r0.w, r0.w, l(0.002000)
  85: add r3.x, -r0.w, l(1.000000)
  86: mad r3.y, |r1.w|, r3.x, r0.w
  87: mad r3.x, r2.w, r3.x, r0.w
  88: mul r1.w, |r1.w|, r3.x
  89: mad r1.w, r2.w, r3.y, r1.w
  90: add r1.w, r1.w, l(0.000010)
  91: div r1.w, l(0.500000), r1.w
  92: mul r0.w, r0.w, r0.w
  93: mad r3.x, r2.x, r0.w, -r2.x
  94: mad r2.x, r3.x, r2.x, l(1.000000)
  95: mul r0.w, r0.w, l(0.318310)
  96: mad r2.x, r2.x, r2.x, l(0.000000)
  97: div r0.w, r0.w, r2.x
  98: mul r0.w, r0.w, r1.w
  99: mul r0.w, r0.w, l(3.141593)
 100: mul r0.w, r2.w, r0.w
 101: max r0.w, r0.w, l(0.000000)
 102: dp3 r1.w, r0.xyzx, r0.xyzx
 103: ne r1.w, r1.w, l(0.000000)
 104: and r1.w, r1.w, l(0x3f800000)
 105: mul r0.w, r0.w, r1.w
 106: mul r2.xzw, r2.zzzz, r6.xxyz
 107: mul r3.xyz, r6.xyzx, r0.wwww
 108: add r0.w, -r2.y, l(1.000000)
 109: mul r1.w, r0.w, r0.w
 110: mul r1.w, r1.w, r1.w
 111: mul r0.w, r0.w, r1.w
 112: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 113: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 114: mul r0.xyz, r0.xyzx, r3.xyzx
 115: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 116: mov o0.w, l(1.000000)
 117: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  22: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  23: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r2.xyz, r1.xxxx, r2.xyzx
  27: mov o3.xyz, r2.xyzx
  28: mad r3.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  29: mov o6.xyz, r1.yzwy
  30: mov o3.w, r3.x
  31: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul r1.xyz, r1.wwww, r1.xyzx
  37: mul r4.xyz, r2.yzxy, r1.zxyz
  38: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  39: mov o5.xyz, r1.xyzx
  40: mul r1.x, v4.w, cb2[9].w
  41: mul o4.xyz, r1.xxxx, r2.xyzx
  42: mov o4.w, r3.y
  43: mov o5.w, r3.z
  44: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  45: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  46: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  47: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  48: mov o8.xyzw, l(0,0,0,0)
  49: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 102 math, 7 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_BumpMap" to slot 2
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 5
Set CUBE Texture "_LightTexture0" to slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  25: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  26: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  27: add r4.xyz, r4.xyzx, cb0[14].xyzx
  28: eq r1.w, cb2[0].x, l(1.000000)
  29: if_nz r1.w
  30:   eq r1.w, cb2[0].y, l(1.000000)
  31:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  32:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  33:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  34:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  35:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  36:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  37:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  38:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  39:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  40:   max r5.x, r1.w, r2.w
  41:   sample r5.xyzw, r5.xzwx, t5.xyzw, s0
  42: else 
  43:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
  46: dp3 r2.w, r4.xyzx, r4.xyzx
  47: sample r5.xyzw, r2.wwww, t3.xyzw, s5
  48: sample r4.xyzw, r4.xyzx, t4.xyzw, s4
  49: mul r2.w, r4.w, r5.x
  50: mul r1.w, r1.w, r2.w
  51: mov r4.x, v3.w
  52: mov r4.y, v4.w
  53: mov r4.z, v5.w
  54: dp3 r2.w, r4.xyzx, r4.xyzx
  55: rsq r2.w, r2.w
  56: mul r5.xyz, r2.wwww, r4.xyzx
  57: mul r6.xyz, r1.wwww, cb0[2].xyzx
  58: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  59: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  60: dp3 r1.w, r4.xyzx, r4.xyzx
  61: max r1.w, r1.w, l(0.001000)
  62: rsq r1.w, r1.w
  63: mul r4.xyz, r1.wwww, r4.xyzx
  64: dp3 r1.w, r2.xyzx, -r3.xyzx
  65: dp3_sat r2.w, r2.xyzx, r5.xyzx
  66: dp3_sat r2.x, r2.xyzx, r4.xyzx
  67: dp3_sat r2.y, r5.xyzx, r4.xyzx
  68: mul r2.z, r2.y, r2.y
  69: dp2 r2.z, r2.zzzz, r0.wwww
  70: add r2.z, r2.z, l(-0.500000)
  71: add r3.x, -r2.w, l(1.000000)
  72: mul r3.y, r3.x, r3.x
  73: mul r3.y, r3.y, r3.y
  74: mul r3.x, r3.x, r3.y
  75: mad r3.x, r2.z, r3.x, l(1.000000)
  76: add r3.y, -|r1.w|, l(1.000000)
  77: mul r3.z, r3.y, r3.y
  78: mul r3.z, r3.z, r3.z
  79: mul r3.y, r3.y, r3.z
  80: mad r2.z, r2.z, r3.y, l(1.000000)
  81: mul r2.z, r2.z, r3.x
  82: mul r2.z, r2.w, r2.z
  83: mul r0.w, r0.w, r0.w
  84: max r0.w, r0.w, l(0.002000)
  85: add r3.x, -r0.w, l(1.000000)
  86: mad r3.y, |r1.w|, r3.x, r0.w
  87: mad r3.x, r2.w, r3.x, r0.w
  88: mul r1.w, |r1.w|, r3.x
  89: mad r1.w, r2.w, r3.y, r1.w
  90: add r1.w, r1.w, l(0.000010)
  91: div r1.w, l(0.500000), r1.w
  92: mul r0.w, r0.w, r0.w
  93: mad r3.x, r2.x, r0.w, -r2.x
  94: mad r2.x, r3.x, r2.x, l(1.000000)
  95: mul r0.w, r0.w, l(0.318310)
  96: mad r2.x, r2.x, r2.x, l(0.000000)
  97: div r0.w, r0.w, r2.x
  98: mul r0.w, r0.w, r1.w
  99: mul r0.w, r0.w, l(3.141593)
 100: mul r0.w, r2.w, r0.w
 101: max r0.w, r0.w, l(0.000000)
 102: dp3 r1.w, r0.xyzx, r0.xyzx
 103: ne r1.w, r1.w, l(0.000000)
 104: and r1.w, r1.w, l(0x3f800000)
 105: mul r0.w, r0.w, r1.w
 106: mul r2.xzw, r2.zzzz, r6.xxyz
 107: mul r3.xyz, r6.xyzx, r0.wwww
 108: add r0.w, -r2.y, l(1.000000)
 109: mul r1.w, r0.w, r0.w
 110: mul r1.w, r1.w, r1.w
 111: mul r0.w, r0.w, r1.w
 112: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 113: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 114: mul r0.xyz, r0.xyzx, r3.xyzx
 115: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 116: mov o0.w, l(1.000000)
 117: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  32: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  33: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  34: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 92 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: mul r3.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  14: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  15: add r3.xyz, r3.xyzx, cb0[14].xyzx
  16: eq r0.w, cb2[0].x, l(1.000000)
  17: if_nz r0.w
  18:   eq r0.w, cb2[0].y, l(1.000000)
  19:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  20:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  21:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  22:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  23:   movc r4.xyz, r0.wwww, r4.xyzx, v6.xyzx
  24:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  25:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  26:   mad r0.w, r4.y, l(0.250000), l(0.750000)
  27:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  28:   max r4.x, r0.w, r1.w
  29:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  30: else 
  31:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r0.w, r4.xyzw, cb1[46].xyzw
  34: dp3 r1.w, r3.xyzx, r3.xyzx
  35: sample r4.xyzw, r1.wwww, t1.xyzw, s3
  36: sample r3.xyzw, r3.xyzx, t2.xyzw, s2
  37: mul r1.w, r3.w, r4.x
  38: mul r0.w, r0.w, r1.w
  39: mov r3.x, v3.w
  40: mov r3.y, v4.w
  41: mov r3.z, v5.w
  42: dp3 r1.w, r3.xyzx, r3.xyzx
  43: rsq r1.w, r1.w
  44: mul r4.xyz, r1.wwww, r3.xyzx
  45: mul r5.xyz, r0.wwww, cb0[2].xyzx
  46: add r0.w, -cb0[8].w, l(1.000000)
  47: mad r3.xyz, r3.xyzx, r1.wwww, -r2.xyzx
  48: dp3 r1.w, r3.xyzx, r3.xyzx
  49: max r1.w, r1.w, l(0.001000)
  50: rsq r1.w, r1.w
  51: mul r3.xyz, r1.wwww, r3.xyzx
  52: dp3 r1.w, r1.xyzx, -r2.xyzx
  53: dp3_sat r2.x, r1.xyzx, r4.xyzx
  54: dp3_sat r1.x, r1.xyzx, r3.xyzx
  55: dp3_sat r1.y, r4.xyzx, r3.xyzx
  56: mul r1.z, r1.y, r1.y
  57: dp2 r1.z, r1.zzzz, r0.wwww
  58: add r1.z, r1.z, l(-0.500000)
  59: add r2.y, -r2.x, l(1.000000)
  60: mul r2.z, r2.y, r2.y
  61: mul r2.z, r2.z, r2.z
  62: mul r2.y, r2.y, r2.z
  63: mad r2.y, r1.z, r2.y, l(1.000000)
  64: add r2.z, -|r1.w|, l(1.000000)
  65: mul r2.w, r2.z, r2.z
  66: mul r2.w, r2.w, r2.w
  67: mul r2.z, r2.z, r2.w
  68: mad r1.z, r1.z, r2.z, l(1.000000)
  69: mul r1.z, r1.z, r2.y
  70: mul r1.z, r2.x, r1.z
  71: mul r0.w, r0.w, r0.w
  72: max r0.w, r0.w, l(0.002000)
  73: add r2.y, -r0.w, l(1.000000)
  74: mad r2.z, |r1.w|, r2.y, r0.w
  75: mad r2.y, r2.x, r2.y, r0.w
  76: mul r1.w, |r1.w|, r2.y
  77: mad r1.w, r2.x, r2.z, r1.w
  78: add r1.w, r1.w, l(0.000010)
  79: div r1.w, l(0.500000), r1.w
  80: mul r0.w, r0.w, r0.w
  81: mad r2.y, r1.x, r0.w, -r1.x
  82: mad r1.x, r2.y, r1.x, l(1.000000)
  83: mul r0.w, r0.w, l(0.318310)
  84: mad r1.x, r1.x, r1.x, l(0.000000)
  85: div r0.w, r0.w, r1.x
  86: mul r0.w, r0.w, r1.w
  87: mul r0.w, r0.w, l(3.141593)
  88: mul r0.w, r2.x, r0.w
  89: max r0.w, r0.w, l(0.000000)
  90: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
  91: ne r1.x, r1.x, l(0.000000)
  92: and r1.x, r1.x, l(0x3f800000)
  93: mul r0.w, r0.w, r1.x
  94: mul r1.xzw, r1.zzzz, r5.xxyz
  95: mul r2.xyz, r5.xyzx, r0.wwww
  96: add r0.w, -r1.y, l(1.000000)
  97: mul r1.y, r0.w, r0.w
  98: mul r1.y, r1.y, r1.y
  99: mul r0.w, r0.w, r1.y
 100: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 101: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
 102: mul r2.xyz, r2.xyzx, r3.xyzx
 103: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
 104: mov o0.w, l(1.000000)
 105: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  22: mov o6.xyz, r1.yzwy
  23: mov r2.w, l(0)
  24: mov o3.xyzw, r2.wwwx
  25: mov o4.xyzw, r2.wwwy
  26: mov o5.w, r2.z
  27: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul o5.xyz, r1.wwww, r1.xyzx
  33: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  34: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  35: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  36: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  37: mov o8.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 92 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 3
Set CUBE Texture "_LightTexture0" to slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: mul r3.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  14: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  15: add r3.xyz, r3.xyzx, cb0[14].xyzx
  16: eq r0.w, cb2[0].x, l(1.000000)
  17: if_nz r0.w
  18:   eq r0.w, cb2[0].y, l(1.000000)
  19:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  20:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  21:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  22:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  23:   movc r4.xyz, r0.wwww, r4.xyzx, v6.xyzx
  24:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  25:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  26:   mad r0.w, r4.y, l(0.250000), l(0.750000)
  27:   mad r1.w, cb2[0].z, l(0.500000), l(0.750000)
  28:   max r4.x, r0.w, r1.w
  29:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  30: else 
  31:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r0.w, r4.xyzw, cb1[46].xyzw
  34: dp3 r1.w, r3.xyzx, r3.xyzx
  35: sample r4.xyzw, r1.wwww, t1.xyzw, s3
  36: sample r3.xyzw, r3.xyzx, t2.xyzw, s2
  37: mul r1.w, r3.w, r4.x
  38: mul r0.w, r0.w, r1.w
  39: mov r3.x, v3.w
  40: mov r3.y, v4.w
  41: mov r3.z, v5.w
  42: dp3 r1.w, r3.xyzx, r3.xyzx
  43: rsq r1.w, r1.w
  44: mul r4.xyz, r1.wwww, r3.xyzx
  45: mul r5.xyz, r0.wwww, cb0[2].xyzx
  46: add r0.w, -cb0[8].w, l(1.000000)
  47: mad r3.xyz, r3.xyzx, r1.wwww, -r2.xyzx
  48: dp3 r1.w, r3.xyzx, r3.xyzx
  49: max r1.w, r1.w, l(0.001000)
  50: rsq r1.w, r1.w
  51: mul r3.xyz, r1.wwww, r3.xyzx
  52: dp3 r1.w, r1.xyzx, -r2.xyzx
  53: dp3_sat r2.x, r1.xyzx, r4.xyzx
  54: dp3_sat r1.x, r1.xyzx, r3.xyzx
  55: dp3_sat r1.y, r4.xyzx, r3.xyzx
  56: mul r1.z, r1.y, r1.y
  57: dp2 r1.z, r1.zzzz, r0.wwww
  58: add r1.z, r1.z, l(-0.500000)
  59: add r2.y, -r2.x, l(1.000000)
  60: mul r2.z, r2.y, r2.y
  61: mul r2.z, r2.z, r2.z
  62: mul r2.y, r2.y, r2.z
  63: mad r2.y, r1.z, r2.y, l(1.000000)
  64: add r2.z, -|r1.w|, l(1.000000)
  65: mul r2.w, r2.z, r2.z
  66: mul r2.w, r2.w, r2.w
  67: mul r2.z, r2.z, r2.w
  68: mad r1.z, r1.z, r2.z, l(1.000000)
  69: mul r1.z, r1.z, r2.y
  70: mul r1.z, r2.x, r1.z
  71: mul r0.w, r0.w, r0.w
  72: max r0.w, r0.w, l(0.002000)
  73: add r2.y, -r0.w, l(1.000000)
  74: mad r2.z, |r1.w|, r2.y, r0.w
  75: mad r2.y, r2.x, r2.y, r0.w
  76: mul r1.w, |r1.w|, r2.y
  77: mad r1.w, r2.x, r2.z, r1.w
  78: add r1.w, r1.w, l(0.000010)
  79: div r1.w, l(0.500000), r1.w
  80: mul r0.w, r0.w, r0.w
  81: mad r2.y, r1.x, r0.w, -r1.x
  82: mad r1.x, r2.y, r1.x, l(1.000000)
  83: mul r0.w, r0.w, l(0.318310)
  84: mad r1.x, r1.x, r1.x, l(0.000000)
  85: div r0.w, r0.w, r1.x
  86: mul r0.w, r0.w, r1.w
  87: mul r0.w, r0.w, l(3.141593)
  88: mul r0.w, r2.x, r0.w
  89: max r0.w, r0.w, l(0.000000)
  90: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
  91: ne r1.x, r1.x, l(0.000000)
  92: and r1.x, r1.x, l(0x3f800000)
  93: mul r0.w, r0.w, r1.x
  94: mul r1.xzw, r1.zzzz, r5.xxyz
  95: mul r2.xyz, r5.xyzx, r0.wwww
  96: add r0.w, -r1.y, l(1.000000)
  97: mul r1.y, r0.w, r0.w
  98: mul r1.y, r1.y, r1.y
  99: mul r0.w, r0.w, r1.y
 100: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 101: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
 102: mul r2.xyz, r2.xyzx, r3.xyzx
 103: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
 104: mov o0.w, l(1.000000)
 105: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xy, r0.yyyy, cb0[12].xyxx
  32: mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
  33: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  34: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 87 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s2
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xy, v6.yyyy, cb0[12].xyxx
  14: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  15: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  16: add r4.xy, r4.xyxx, cb0[14].xyxx
  17: eq r2.w, cb2[0].x, l(1.000000)
  18: if_nz r2.w
  19:   eq r2.w, cb2[0].y, l(1.000000)
  20:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  21:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  22:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  23:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  24:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  25:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  26:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  27:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  28:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  29:   max r5.x, r2.w, r3.w
  30:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  31: else 
  32:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  33: endif 
  34: dp4_sat r2.w, r5.xyzw, cb1[46].xyzw
  35: sample r4.xyzw, r4.xyxx, t2.xyzw, s3
  36: mul r2.w, r2.w, r4.w
  37: mul r4.xyz, r2.wwww, cb0[2].xyzx
  38: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  39: mov r5.x, v3.w
  40: mov r5.y, v4.w
  41: mov r5.z, v5.w
  42: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  43: dp3 r1.w, r6.xyzx, r6.xyzx
  44: max r1.w, r1.w, l(0.001000)
  45: rsq r1.w, r1.w
  46: mul r6.xyz, r1.wwww, r6.xyzx
  47: dp3 r1.w, r2.xyzx, -r3.xyzx
  48: dp3_sat r2.w, r2.xyzx, r5.xyzx
  49: dp3_sat r2.x, r2.xyzx, r6.xyzx
  50: dp3_sat r2.y, r5.xyzx, r6.xyzx
  51: mul r2.z, r2.y, r2.y
  52: dp2 r2.z, r2.zzzz, r0.wwww
  53: add r2.z, r2.z, l(-0.500000)
  54: add r3.x, -r2.w, l(1.000000)
  55: mul r3.y, r3.x, r3.x
  56: mul r3.y, r3.y, r3.y
  57: mul r3.x, r3.x, r3.y
  58: mad r3.x, r2.z, r3.x, l(1.000000)
  59: add r3.y, -|r1.w|, l(1.000000)
  60: mul r3.z, r3.y, r3.y
  61: mul r3.z, r3.z, r3.z
  62: mul r3.y, r3.y, r3.z
  63: mad r2.z, r2.z, r3.y, l(1.000000)
  64: mul r2.z, r2.z, r3.x
  65: mul r2.z, r2.w, r2.z
  66: mul r0.w, r0.w, r0.w
  67: max r0.w, r0.w, l(0.002000)
  68: add r3.x, -r0.w, l(1.000000)
  69: mad r3.y, |r1.w|, r3.x, r0.w
  70: mad r3.x, r2.w, r3.x, r0.w
  71: mul r1.w, |r1.w|, r3.x
  72: mad r1.w, r2.w, r3.y, r1.w
  73: add r1.w, r1.w, l(0.000010)
  74: div r1.w, l(0.500000), r1.w
  75: mul r0.w, r0.w, r0.w
  76: mad r3.x, r2.x, r0.w, -r2.x
  77: mad r2.x, r3.x, r2.x, l(1.000000)
  78: mul r0.w, r0.w, l(0.318310)
  79: mad r2.x, r2.x, r2.x, l(0.000000)
  80: div r0.w, r0.w, r2.x
  81: mul r0.w, r0.w, r1.w
  82: mul r0.w, r0.w, l(3.141593)
  83: mul r0.w, r2.w, r0.w
  84: max r0.w, r0.w, l(0.000000)
  85: dp3 r1.w, r0.xyzx, r0.xyzx
  86: ne r1.w, r1.w, l(0.000000)
  87: and r1.w, r1.w, l(0x3f800000)
  88: mul r0.w, r0.w, r1.w
  89: mul r2.xzw, r2.zzzz, r4.xxyz
  90: mul r3.xyz, r4.xyzx, r0.wwww
  91: add r0.w, -r2.y, l(1.000000)
  92: mul r1.w, r0.w, r0.w
  93: mul r1.w, r1.w, r1.w
  94: mul r0.w, r0.w, r1.w
  95: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  96: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
  97: mul r0.xyz, r0.xyzx, r3.xyzx
  98: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
  99: mov o0.w, l(1.000000)
 100: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  22: mov o6.xyz, r1.yzwy
  23: mov r2.w, l(0)
  24: mov o3.xyzw, r2.wwwx
  25: mov o4.xyzw, r2.wwwy
  26: mov o5.w, r2.z
  27: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul o5.xyz, r1.wwww, r1.xyzx
  33: mul r1.xy, r0.yyyy, cb0[12].xyxx
  34: mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
  35: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  36: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  37: mov o8.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 87 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s2
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xy, v6.yyyy, cb0[12].xyxx
  14: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  15: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  16: add r4.xy, r4.xyxx, cb0[14].xyxx
  17: eq r2.w, cb2[0].x, l(1.000000)
  18: if_nz r2.w
  19:   eq r2.w, cb2[0].y, l(1.000000)
  20:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  21:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  22:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  23:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  24:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  25:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  26:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  27:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  28:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  29:   max r5.x, r2.w, r3.w
  30:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  31: else 
  32:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  33: endif 
  34: dp4_sat r2.w, r5.xyzw, cb1[46].xyzw
  35: sample r4.xyzw, r4.xyxx, t2.xyzw, s3
  36: mul r2.w, r2.w, r4.w
  37: mul r4.xyz, r2.wwww, cb0[2].xyzx
  38: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  39: mov r5.x, v3.w
  40: mov r5.y, v4.w
  41: mov r5.z, v5.w
  42: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  43: dp3 r1.w, r6.xyzx, r6.xyzx
  44: max r1.w, r1.w, l(0.001000)
  45: rsq r1.w, r1.w
  46: mul r6.xyz, r1.wwww, r6.xyzx
  47: dp3 r1.w, r2.xyzx, -r3.xyzx
  48: dp3_sat r2.w, r2.xyzx, r5.xyzx
  49: dp3_sat r2.x, r2.xyzx, r6.xyzx
  50: dp3_sat r2.y, r5.xyzx, r6.xyzx
  51: mul r2.z, r2.y, r2.y
  52: dp2 r2.z, r2.zzzz, r0.wwww
  53: add r2.z, r2.z, l(-0.500000)
  54: add r3.x, -r2.w, l(1.000000)
  55: mul r3.y, r3.x, r3.x
  56: mul r3.y, r3.y, r3.y
  57: mul r3.x, r3.x, r3.y
  58: mad r3.x, r2.z, r3.x, l(1.000000)
  59: add r3.y, -|r1.w|, l(1.000000)
  60: mul r3.z, r3.y, r3.y
  61: mul r3.z, r3.z, r3.z
  62: mul r3.y, r3.y, r3.z
  63: mad r2.z, r2.z, r3.y, l(1.000000)
  64: mul r2.z, r2.z, r3.x
  65: mul r2.z, r2.w, r2.z
  66: mul r0.w, r0.w, r0.w
  67: max r0.w, r0.w, l(0.002000)
  68: add r3.x, -r0.w, l(1.000000)
  69: mad r3.y, |r1.w|, r3.x, r0.w
  70: mad r3.x, r2.w, r3.x, r0.w
  71: mul r1.w, |r1.w|, r3.x
  72: mad r1.w, r2.w, r3.y, r1.w
  73: add r1.w, r1.w, l(0.000010)
  74: div r1.w, l(0.500000), r1.w
  75: mul r0.w, r0.w, r0.w
  76: mad r3.x, r2.x, r0.w, -r2.x
  77: mad r2.x, r3.x, r2.x, l(1.000000)
  78: mul r0.w, r0.w, l(0.318310)
  79: mad r2.x, r2.x, r2.x, l(0.000000)
  80: div r0.w, r0.w, r2.x
  81: mul r0.w, r0.w, r1.w
  82: mul r0.w, r0.w, l(3.141593)
  83: mul r0.w, r2.w, r0.w
  84: max r0.w, r0.w, l(0.000000)
  85: dp3 r1.w, r0.xyzx, r0.xyzx
  86: ne r1.w, r1.w, l(0.000000)
  87: and r1.w, r1.w, l(0x3f800000)
  88: mul r0.w, r0.w, r1.w
  89: mul r2.xzw, r2.zzzz, r4.xxyz
  90: mul r3.xyz, r4.xyzx, r0.wwww
  91: add r0.w, -r2.y, l(1.000000)
  92: mul r1.w, r0.w, r0.w
  93: mul r1.w, r1.w, r1.w
  94: mul r0.w, r0.w, r1.w
  95: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  96: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
  97: mul r0.xyz, r0.xyzx, r3.xyzx
  98: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
  99: mov o0.w, l(1.000000)
 100: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r1.xyzx
  28: mov o3.w, r3.x
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r4.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r1.xyzx
  38: mul r1.x, v4.w, cb3[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r3.y
  41: mov o5.w, r3.z
  42: mul r1.xy, r0.yyyy, cb0[12].xyxx
  43: mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
  44: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  45: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  46: mov o8.xyzw, l(0,0,0,0)
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 97 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_BumpMap" to slot 2
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: mul r4.xy, v6.yyyy, cb0[12].xyxx
  25: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  26: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  27: add r4.xy, r4.xyxx, cb0[14].xyxx
  28: eq r2.w, cb2[0].x, l(1.000000)
  29: if_nz r2.w
  30:   eq r2.w, cb2[0].y, l(1.000000)
  31:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  32:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  33:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  34:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  35:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  36:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  37:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  38:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  39:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  40:   max r5.x, r2.w, r3.w
  41:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  42: else 
  43:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r2.w, r5.xyzw, cb1[46].xyzw
  46: sample r4.xyzw, r4.xyxx, t3.xyzw, s4
  47: mul r2.w, r2.w, r4.w
  48: mul r4.xyz, r2.wwww, cb0[2].xyzx
  49: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  50: mov r5.x, v3.w
  51: mov r5.y, v4.w
  52: mov r5.z, v5.w
  53: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  54: dp3 r1.w, r6.xyzx, r6.xyzx
  55: max r1.w, r1.w, l(0.001000)
  56: rsq r1.w, r1.w
  57: mul r6.xyz, r1.wwww, r6.xyzx
  58: dp3 r1.w, r2.xyzx, -r3.xyzx
  59: dp3_sat r2.w, r2.xyzx, r5.xyzx
  60: dp3_sat r2.x, r2.xyzx, r6.xyzx
  61: dp3_sat r2.y, r5.xyzx, r6.xyzx
  62: mul r2.z, r2.y, r2.y
  63: dp2 r2.z, r2.zzzz, r0.wwww
  64: add r2.z, r2.z, l(-0.500000)
  65: add r3.x, -r2.w, l(1.000000)
  66: mul r3.y, r3.x, r3.x
  67: mul r3.y, r3.y, r3.y
  68: mul r3.x, r3.x, r3.y
  69: mad r3.x, r2.z, r3.x, l(1.000000)
  70: add r3.y, -|r1.w|, l(1.000000)
  71: mul r3.z, r3.y, r3.y
  72: mul r3.z, r3.z, r3.z
  73: mul r3.y, r3.y, r3.z
  74: mad r2.z, r2.z, r3.y, l(1.000000)
  75: mul r2.z, r2.z, r3.x
  76: mul r2.z, r2.w, r2.z
  77: mul r0.w, r0.w, r0.w
  78: max r0.w, r0.w, l(0.002000)
  79: add r3.x, -r0.w, l(1.000000)
  80: mad r3.y, |r1.w|, r3.x, r0.w
  81: mad r3.x, r2.w, r3.x, r0.w
  82: mul r1.w, |r1.w|, r3.x
  83: mad r1.w, r2.w, r3.y, r1.w
  84: add r1.w, r1.w, l(0.000010)
  85: div r1.w, l(0.500000), r1.w
  86: mul r0.w, r0.w, r0.w
  87: mad r3.x, r2.x, r0.w, -r2.x
  88: mad r2.x, r3.x, r2.x, l(1.000000)
  89: mul r0.w, r0.w, l(0.318310)
  90: mad r2.x, r2.x, r2.x, l(0.000000)
  91: div r0.w, r0.w, r2.x
  92: mul r0.w, r0.w, r1.w
  93: mul r0.w, r0.w, l(3.141593)
  94: mul r0.w, r2.w, r0.w
  95: max r0.w, r0.w, l(0.000000)
  96: dp3 r1.w, r0.xyzx, r0.xyzx
  97: ne r1.w, r1.w, l(0.000000)
  98: and r1.w, r1.w, l(0x3f800000)
  99: mul r0.w, r0.w, r1.w
 100: mul r2.xzw, r2.zzzz, r4.xxyz
 101: mul r3.xyz, r4.xyzx, r0.wwww
 102: add r0.w, -r2.y, l(1.000000)
 103: mul r1.w, r0.w, r0.w
 104: mul r1.w, r1.w, r1.w
 105: mul r0.w, r0.w, r1.w
 106: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 107: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 108: mul r0.xyz, r0.xyzx, r3.xyzx
 109: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 110: mov o0.w, l(1.000000)
 111: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  22: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  23: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r2.xyz, r1.xxxx, r2.xyzx
  27: mov o3.xyz, r2.xyzx
  28: mad r3.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  29: mov o6.xyz, r1.yzwy
  30: mov o3.w, r3.x
  31: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul r1.xyz, r1.wwww, r1.xyzx
  37: mul r4.xyz, r2.yzxy, r1.zxyz
  38: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  39: mov o5.xyz, r1.xyzx
  40: mul r1.x, v4.w, cb2[9].w
  41: mul o4.xyz, r1.xxxx, r2.xyzx
  42: mov o4.w, r3.y
  43: mov o5.w, r3.z
  44: mul r1.xy, r0.yyyy, cb0[12].xyxx
  45: mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
  46: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  47: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  48: mov o8.xyzw, l(0,0,0,0)
  49: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 97 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_BumpMap" to slot 2
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: mul r4.xy, v6.yyyy, cb0[12].xyxx
  25: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  26: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  27: add r4.xy, r4.xyxx, cb0[14].xyxx
  28: eq r2.w, cb2[0].x, l(1.000000)
  29: if_nz r2.w
  30:   eq r2.w, cb2[0].y, l(1.000000)
  31:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  32:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  33:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  34:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  35:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  36:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  37:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  38:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  39:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  40:   max r5.x, r2.w, r3.w
  41:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  42: else 
  43:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r2.w, r5.xyzw, cb1[46].xyzw
  46: sample r4.xyzw, r4.xyxx, t3.xyzw, s4
  47: mul r2.w, r2.w, r4.w
  48: mul r4.xyz, r2.wwww, cb0[2].xyzx
  49: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  50: mov r5.x, v3.w
  51: mov r5.y, v4.w
  52: mov r5.z, v5.w
  53: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  54: dp3 r1.w, r6.xyzx, r6.xyzx
  55: max r1.w, r1.w, l(0.001000)
  56: rsq r1.w, r1.w
  57: mul r6.xyz, r1.wwww, r6.xyzx
  58: dp3 r1.w, r2.xyzx, -r3.xyzx
  59: dp3_sat r2.w, r2.xyzx, r5.xyzx
  60: dp3_sat r2.x, r2.xyzx, r6.xyzx
  61: dp3_sat r2.y, r5.xyzx, r6.xyzx
  62: mul r2.z, r2.y, r2.y
  63: dp2 r2.z, r2.zzzz, r0.wwww
  64: add r2.z, r2.z, l(-0.500000)
  65: add r3.x, -r2.w, l(1.000000)
  66: mul r3.y, r3.x, r3.x
  67: mul r3.y, r3.y, r3.y
  68: mul r3.x, r3.x, r3.y
  69: mad r3.x, r2.z, r3.x, l(1.000000)
  70: add r3.y, -|r1.w|, l(1.000000)
  71: mul r3.z, r3.y, r3.y
  72: mul r3.z, r3.z, r3.z
  73: mul r3.y, r3.y, r3.z
  74: mad r2.z, r2.z, r3.y, l(1.000000)
  75: mul r2.z, r2.z, r3.x
  76: mul r2.z, r2.w, r2.z
  77: mul r0.w, r0.w, r0.w
  78: max r0.w, r0.w, l(0.002000)
  79: add r3.x, -r0.w, l(1.000000)
  80: mad r3.y, |r1.w|, r3.x, r0.w
  81: mad r3.x, r2.w, r3.x, r0.w
  82: mul r1.w, |r1.w|, r3.x
  83: mad r1.w, r2.w, r3.y, r1.w
  84: add r1.w, r1.w, l(0.000010)
  85: div r1.w, l(0.500000), r1.w
  86: mul r0.w, r0.w, r0.w
  87: mad r3.x, r2.x, r0.w, -r2.x
  88: mad r2.x, r3.x, r2.x, l(1.000000)
  89: mul r0.w, r0.w, l(0.318310)
  90: mad r2.x, r2.x, r2.x, l(0.000000)
  91: div r0.w, r0.w, r2.x
  92: mul r0.w, r0.w, r1.w
  93: mul r0.w, r0.w, l(3.141593)
  94: mul r0.w, r2.w, r0.w
  95: max r0.w, r0.w, l(0.000000)
  96: dp3 r1.w, r0.xyzx, r0.xyzx
  97: ne r1.w, r1.w, l(0.000000)
  98: and r1.w, r1.w, l(0x3f800000)
  99: mul r0.w, r0.w, r1.w
 100: mul r2.xzw, r2.zzzz, r4.xxyz
 101: mul r3.xyz, r4.xyzx, r0.wwww
 102: add r0.w, -r2.y, l(1.000000)
 103: mul r1.w, r0.w, r0.w
 104: mul r1.w, r1.w, r1.w
 105: mul r0.w, r0.w, r1.w
 106: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 107: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 108: mul r0.xyz, r0.xyzx, r3.xyzx
 109: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 110: mov o0.w, l(1.000000)
 111: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xy, r0.yyyy, cb0[12].xyxx
  32: mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
  33: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  34: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 87 math, 6 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: mul r3.xy, v6.yyyy, cb0[12].xyxx
  13: mad r3.xy, cb0[11].xyxx, v6.xxxx, r3.xyxx
  14: mad r3.xy, cb0[13].xyxx, v6.zzzz, r3.xyxx
  15: add r3.xy, r3.xyxx, cb0[14].xyxx
  16: eq r1.w, cb2[0].x, l(1.000000)
  17: if_nz r1.w
  18:   eq r1.w, cb2[0].y, l(1.000000)
  19:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  20:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  21:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  22:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  23:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  24:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  25:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  26:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  27:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  28:   max r4.x, r1.w, r2.w
  29:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  30: else 
  31:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
  34: sample r3.xyzw, r3.xyxx, t1.xyzw, s2
  35: mul r1.w, r1.w, r3.w
  36: mul r3.xyz, r1.wwww, cb0[2].xyzx
  37: add r1.w, -cb0[8].w, l(1.000000)
  38: mov r4.x, v3.w
  39: mov r4.y, v4.w
  40: mov r4.z, v5.w
  41: mad r5.xyz, -v2.xyzx, r0.wwww, r4.xyzx
  42: dp3 r0.w, r5.xyzx, r5.xyzx
  43: max r0.w, r0.w, l(0.001000)
  44: rsq r0.w, r0.w
  45: mul r5.xyz, r0.wwww, r5.xyzx
  46: dp3 r0.w, r1.xyzx, -r2.xyzx
  47: dp3_sat r2.x, r1.xyzx, r4.xyzx
  48: dp3_sat r1.x, r1.xyzx, r5.xyzx
  49: dp3_sat r1.y, r4.xyzx, r5.xyzx
  50: mul r1.z, r1.y, r1.y
  51: dp2 r1.z, r1.zzzz, r1.wwww
  52: add r1.z, r1.z, l(-0.500000)
  53: add r2.y, -r2.x, l(1.000000)
  54: mul r2.z, r2.y, r2.y
  55: mul r2.z, r2.z, r2.z
  56: mul r2.y, r2.y, r2.z
  57: mad r2.y, r1.z, r2.y, l(1.000000)
  58: add r2.z, -|r0.w|, l(1.000000)
  59: mul r2.w, r2.z, r2.z
  60: mul r2.w, r2.w, r2.w
  61: mul r2.z, r2.z, r2.w
  62: mad r1.z, r1.z, r2.z, l(1.000000)
  63: mul r1.z, r1.z, r2.y
  64: mul r1.z, r2.x, r1.z
  65: mul r1.w, r1.w, r1.w
  66: max r1.w, r1.w, l(0.002000)
  67: add r2.y, -r1.w, l(1.000000)
  68: mad r2.z, |r0.w|, r2.y, r1.w
  69: mad r2.y, r2.x, r2.y, r1.w
  70: mul r0.w, |r0.w|, r2.y
  71: mad r0.w, r2.x, r2.z, r0.w
  72: add r0.w, r0.w, l(0.000010)
  73: div r0.w, l(0.500000), r0.w
  74: mul r1.w, r1.w, r1.w
  75: mad r2.y, r1.x, r1.w, -r1.x
  76: mad r1.x, r2.y, r1.x, l(1.000000)
  77: mul r1.w, r1.w, l(0.318310)
  78: mad r1.x, r1.x, r1.x, l(0.000000)
  79: div r1.x, r1.w, r1.x
  80: mul r0.w, r0.w, r1.x
  81: mul r0.w, r0.w, l(3.141593)
  82: mul r0.w, r2.x, r0.w
  83: max r0.w, r0.w, l(0.000000)
  84: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
  85: ne r1.x, r1.x, l(0.000000)
  86: and r1.x, r1.x, l(0x3f800000)
  87: mul r0.w, r0.w, r1.x
  88: mul r1.xzw, r1.zzzz, r3.xxyz
  89: mul r2.xyz, r3.xyzx, r0.wwww
  90: add r0.w, -r1.y, l(1.000000)
  91: mul r1.y, r0.w, r0.w
  92: mul r1.y, r1.y, r1.y
  93: mul r0.w, r0.w, r1.y
  94: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  95: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
  96: mul r2.xyz, r2.xyzx, r3.xyzx
  97: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
  98: mov o0.w, l(1.000000)
  99: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  22: mov o6.xyz, r1.yzwy
  23: mov r2.w, l(0)
  24: mov o3.xyzw, r2.wwwx
  25: mov o4.xyzw, r2.wwwy
  26: mov o5.w, r2.z
  27: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul o5.xyz, r1.wwww, r1.xyzx
  33: mul r1.xy, r0.yyyy, cb0[12].xyxx
  34: mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
  35: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  36: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  37: mov o8.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 87 math, 6 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: mul r3.xy, v6.yyyy, cb0[12].xyxx
  13: mad r3.xy, cb0[11].xyxx, v6.xxxx, r3.xyxx
  14: mad r3.xy, cb0[13].xyxx, v6.zzzz, r3.xyxx
  15: add r3.xy, r3.xyxx, cb0[14].xyxx
  16: eq r1.w, cb2[0].x, l(1.000000)
  17: if_nz r1.w
  18:   eq r1.w, cb2[0].y, l(1.000000)
  19:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  20:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  21:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  22:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  23:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  24:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  25:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  26:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  27:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  28:   max r4.x, r1.w, r2.w
  29:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  30: else 
  31:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  32: endif 
  33: dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
  34: sample r3.xyzw, r3.xyxx, t1.xyzw, s2
  35: mul r1.w, r1.w, r3.w
  36: mul r3.xyz, r1.wwww, cb0[2].xyzx
  37: add r1.w, -cb0[8].w, l(1.000000)
  38: mov r4.x, v3.w
  39: mov r4.y, v4.w
  40: mov r4.z, v5.w
  41: mad r5.xyz, -v2.xyzx, r0.wwww, r4.xyzx
  42: dp3 r0.w, r5.xyzx, r5.xyzx
  43: max r0.w, r0.w, l(0.001000)
  44: rsq r0.w, r0.w
  45: mul r5.xyz, r0.wwww, r5.xyzx
  46: dp3 r0.w, r1.xyzx, -r2.xyzx
  47: dp3_sat r2.x, r1.xyzx, r4.xyzx
  48: dp3_sat r1.x, r1.xyzx, r5.xyzx
  49: dp3_sat r1.y, r4.xyzx, r5.xyzx
  50: mul r1.z, r1.y, r1.y
  51: dp2 r1.z, r1.zzzz, r1.wwww
  52: add r1.z, r1.z, l(-0.500000)
  53: add r2.y, -r2.x, l(1.000000)
  54: mul r2.z, r2.y, r2.y
  55: mul r2.z, r2.z, r2.z
  56: mul r2.y, r2.y, r2.z
  57: mad r2.y, r1.z, r2.y, l(1.000000)
  58: add r2.z, -|r0.w|, l(1.000000)
  59: mul r2.w, r2.z, r2.z
  60: mul r2.w, r2.w, r2.w
  61: mul r2.z, r2.z, r2.w
  62: mad r1.z, r1.z, r2.z, l(1.000000)
  63: mul r1.z, r1.z, r2.y
  64: mul r1.z, r2.x, r1.z
  65: mul r1.w, r1.w, r1.w
  66: max r1.w, r1.w, l(0.002000)
  67: add r2.y, -r1.w, l(1.000000)
  68: mad r2.z, |r0.w|, r2.y, r1.w
  69: mad r2.y, r2.x, r2.y, r1.w
  70: mul r0.w, |r0.w|, r2.y
  71: mad r0.w, r2.x, r2.z, r0.w
  72: add r0.w, r0.w, l(0.000010)
  73: div r0.w, l(0.500000), r0.w
  74: mul r1.w, r1.w, r1.w
  75: mad r2.y, r1.x, r1.w, -r1.x
  76: mad r1.x, r2.y, r1.x, l(1.000000)
  77: mul r1.w, r1.w, l(0.318310)
  78: mad r1.x, r1.x, r1.x, l(0.000000)
  79: div r1.x, r1.w, r1.x
  80: mul r0.w, r0.w, r1.x
  81: mul r0.w, r0.w, l(3.141593)
  82: mul r0.w, r2.x, r0.w
  83: max r0.w, r0.w, l(0.000000)
  84: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
  85: ne r1.x, r1.x, l(0.000000)
  86: and r1.x, r1.x, l(0x3f800000)
  87: mul r0.w, r0.w, r1.x
  88: mul r1.xzw, r1.zzzz, r3.xxyz
  89: mul r2.xyz, r3.xyzx, r0.wwww
  90: add r0.w, -r1.y, l(1.000000)
  91: mul r1.y, r0.w, r0.w
  92: mul r1.y, r1.y, r1.y
  93: mul r0.w, r0.w, r1.y
  94: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  95: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
  96: mul r2.xyz, r2.xyzx, r3.xyzx
  97: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
  98: mov o0.w, l(1.000000)
  99: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SPOT 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  32: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  33: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  34: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 114 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 5 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyzw, v6.yyyy, cb0[12].xyzw
  14: mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
  15: mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
  16: add r4.xyzw, r4.xyzw, cb0[14].xyzw
  17: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  18: mov r6.x, cb4[9].z
  19: mov r6.y, cb4[10].z
  20: mov r6.z, cb4[11].z
  21: dp3 r1.w, r5.xyzx, r6.xyzx
  22: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  23: dp3 r2.w, r5.xyzx, r5.xyzx
  24: sqrt r2.w, r2.w
  25: add r2.w, -r1.w, r2.w
  26: mad r1.w, cb3[25].w, r2.w, r1.w
  27: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  28: eq r2.w, cb5[0].x, l(1.000000)
  29: if_nz r2.w
  30:   eq r2.w, cb5[0].y, l(1.000000)
  31:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  32:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  33:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  34:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  35:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  36:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  37:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  38:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  39:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  40:   max r5.x, r2.w, r3.w
  41:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  42: else 
  43:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  46: mul r5.xyzw, v6.yyyy, cb3[9].xyzw
  47: mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
  48: mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
  49: add r5.xyzw, r5.xyzw, cb3[11].xyzw
  50: div r5.xyz, r5.xyzx, r5.wwww
  51: sample_c_lz r3.w, r5.xyxx, t5.xxxx, s1, r5.z
  52: add r5.x, -cb3[24].x, l(1.000000)
  53: mad r3.w, r3.w, r5.x, cb3[24].x
  54: add r2.w, r2.w, -r3.w
  55: mad r1.w, r1.w, r2.w, r3.w
  56: lt r2.w, l(0.000000), r4.z
  57: and r2.w, r2.w, l(0x3f800000)
  58: div r5.xy, r4.xyxx, r4.wwww
  59: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  60: sample r5.xyzw, r5.xyxx, t2.xyzw, s4
  61: mul r2.w, r2.w, r5.w
  62: dp3 r3.w, r4.xyzx, r4.xyzx
  63: sample r4.xyzw, r3.wwww, t3.xyzw, s5
  64: mul r2.w, r2.w, r4.x
  65: mul r1.w, r1.w, r2.w
  66: mov r4.x, v3.w
  67: mov r4.y, v4.w
  68: mov r4.z, v5.w
  69: dp3 r2.w, r4.xyzx, r4.xyzx
  70: rsq r2.w, r2.w
  71: mul r5.xyz, r2.wwww, r4.xyzx
  72: mul r6.xyz, r1.wwww, cb0[2].xyzx
  73: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  74: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  75: dp3 r1.w, r4.xyzx, r4.xyzx
  76: max r1.w, r1.w, l(0.001000)
  77: rsq r1.w, r1.w
  78: mul r4.xyz, r1.wwww, r4.xyzx
  79: dp3 r1.w, r2.xyzx, -r3.xyzx
  80: dp3_sat r2.w, r2.xyzx, r5.xyzx
  81: dp3_sat r2.x, r2.xyzx, r4.xyzx
  82: dp3_sat r2.y, r5.xyzx, r4.xyzx
  83: mul r2.z, r2.y, r2.y
  84: dp2 r2.z, r2.zzzz, r0.wwww
  85: add r2.z, r2.z, l(-0.500000)
  86: add r3.x, -r2.w, l(1.000000)
  87: mul r3.y, r3.x, r3.x
  88: mul r3.y, r3.y, r3.y
  89: mul r3.x, r3.x, r3.y
  90: mad r3.x, r2.z, r3.x, l(1.000000)
  91: add r3.y, -|r1.w|, l(1.000000)
  92: mul r3.z, r3.y, r3.y
  93: mul r3.z, r3.z, r3.z
  94: mul r3.y, r3.y, r3.z
  95: mad r2.z, r2.z, r3.y, l(1.000000)
  96: mul r2.z, r2.z, r3.x
  97: mul r2.z, r2.w, r2.z
  98: mul r0.w, r0.w, r0.w
  99: max r0.w, r0.w, l(0.002000)
 100: add r3.x, -r0.w, l(1.000000)
 101: mad r3.y, |r1.w|, r3.x, r0.w
 102: mad r3.x, r2.w, r3.x, r0.w
 103: mul r1.w, |r1.w|, r3.x
 104: mad r1.w, r2.w, r3.y, r1.w
 105: add r1.w, r1.w, l(0.000010)
 106: div r1.w, l(0.500000), r1.w
 107: mul r0.w, r0.w, r0.w
 108: mad r3.x, r2.x, r0.w, -r2.x
 109: mad r2.x, r3.x, r2.x, l(1.000000)
 110: mul r0.w, r0.w, l(0.318310)
 111: mad r2.x, r2.x, r2.x, l(0.000000)
 112: div r0.w, r0.w, r2.x
 113: mul r0.w, r0.w, r1.w
 114: mul r0.w, r0.w, l(3.141593)
 115: mul r0.w, r2.w, r0.w
 116: max r0.w, r0.w, l(0.000000)
 117: dp3 r1.w, r0.xyzx, r0.xyzx
 118: ne r1.w, r1.w, l(0.000000)
 119: and r1.w, r1.w, l(0x3f800000)
 120: mul r0.w, r0.w, r1.w
 121: mul r2.xzw, r2.zzzz, r6.xxyz
 122: mul r3.xyz, r6.xyzx, r0.wwww
 123: add r0.w, -r2.y, l(1.000000)
 124: mul r1.w, r0.w, r0.w
 125: mul r1.w, r1.w, r1.w
 126: mul r0.w, r0.w, r1.w
 127: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 128: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 129: mul r0.xyz, r0.xyzx, r3.xyzx
 130: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 131: mov o0.w, l(1.000000)
 132: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SPOT UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  22: mov o6.xyz, r1.yzwy
  23: mov r2.w, l(0)
  24: mov o3.xyzw, r2.wwwx
  25: mov o4.xyzw, r2.wwwy
  26: mov o5.w, r2.z
  27: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul o5.xyz, r1.wwww, r1.xyzx
  33: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  34: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  35: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  36: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  37: mov o8.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 115 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 5 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyzw, v6.yyyy, cb0[12].xyzw
  14: mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
  15: mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
  16: add r4.xyzw, r4.xyzw, cb0[14].xyzw
  17: mov r1.w, cb4[0].x
  18: add r5.xyz, -v6.xyzx, cb3[r1.w + 64].xyzx
  19: ishl r1.w, cb4[0].x, l(2)
  20: mov r6.x, cb3[r1.w + 8].z
  21: mov r6.y, cb3[r1.w + 9].z
  22: mov r6.z, cb3[r1.w + 10].z
  23: dp3 r1.w, r5.xyzx, r6.xyzx
  24: add r5.xyz, v6.xyzx, -cb2[25].xyzx
  25: dp3 r2.w, r5.xyzx, r5.xyzx
  26: sqrt r2.w, r2.w
  27: add r2.w, -r1.w, r2.w
  28: mad r1.w, cb2[25].w, r2.w, r1.w
  29: mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
  30: eq r2.w, cb5[0].x, l(1.000000)
  31: if_nz r2.w
  32:   eq r2.w, cb5[0].y, l(1.000000)
  33:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  34:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  35:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  36:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  37:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  38:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  39:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  40:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  41:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  42:   max r5.x, r2.w, r3.w
  43:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  44: else 
  45:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  46: endif 
  47: dp4_sat r2.w, r5.xyzw, cb1[46].xyzw
  48: mul r5.xyzw, v6.yyyy, cb2[9].xyzw
  49: mad r5.xyzw, cb2[8].xyzw, v6.xxxx, r5.xyzw
  50: mad r5.xyzw, cb2[10].xyzw, v6.zzzz, r5.xyzw
  51: add r5.xyzw, r5.xyzw, cb2[11].xyzw
  52: div r5.xyz, r5.xyzx, r5.wwww
  53: sample_c_lz r3.w, r5.xyxx, t5.xxxx, s1, r5.z
  54: add r5.x, -cb2[24].x, l(1.000000)
  55: mad r3.w, r3.w, r5.x, cb2[24].x
  56: add r2.w, r2.w, -r3.w
  57: mad r1.w, r1.w, r2.w, r3.w
  58: lt r2.w, l(0.000000), r4.z
  59: and r2.w, r2.w, l(0x3f800000)
  60: div r5.xy, r4.xyxx, r4.wwww
  61: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  62: sample r5.xyzw, r5.xyxx, t2.xyzw, s4
  63: mul r2.w, r2.w, r5.w
  64: dp3 r3.w, r4.xyzx, r4.xyzx
  65: sample r4.xyzw, r3.wwww, t3.xyzw, s5
  66: mul r2.w, r2.w, r4.x
  67: mul r1.w, r1.w, r2.w
  68: mov r4.x, v3.w
  69: mov r4.y, v4.w
  70: mov r4.z, v5.w
  71: dp3 r2.w, r4.xyzx, r4.xyzx
  72: rsq r2.w, r2.w
  73: mul r5.xyz, r2.wwww, r4.xyzx
  74: mul r6.xyz, r1.wwww, cb0[2].xyzx
  75: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  76: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  77: dp3 r1.w, r4.xyzx, r4.xyzx
  78: max r1.w, r1.w, l(0.001000)
  79: rsq r1.w, r1.w
  80: mul r4.xyz, r1.wwww, r4.xyzx
  81: dp3 r1.w, r2.xyzx, -r3.xyzx
  82: dp3_sat r2.w, r2.xyzx, r5.xyzx
  83: dp3_sat r2.x, r2.xyzx, r4.xyzx
  84: dp3_sat r2.y, r5.xyzx, r4.xyzx
  85: mul r2.z, r2.y, r2.y
  86: dp2 r2.z, r2.zzzz, r0.wwww
  87: add r2.z, r2.z, l(-0.500000)
  88: add r3.x, -r2.w, l(1.000000)
  89: mul r3.y, r3.x, r3.x
  90: mul r3.y, r3.y, r3.y
  91: mul r3.x, r3.x, r3.y
  92: mad r3.x, r2.z, r3.x, l(1.000000)
  93: add r3.y, -|r1.w|, l(1.000000)
  94: mul r3.z, r3.y, r3.y
  95: mul r3.z, r3.z, r3.z
  96: mul r3.y, r3.y, r3.z
  97: mad r2.z, r2.z, r3.y, l(1.000000)
  98: mul r2.z, r2.z, r3.x
  99: mul r2.z, r2.w, r2.z
 100: mul r0.w, r0.w, r0.w
 101: max r0.w, r0.w, l(0.002000)
 102: add r3.x, -r0.w, l(1.000000)
 103: mad r3.y, |r1.w|, r3.x, r0.w
 104: mad r3.x, r2.w, r3.x, r0.w
 105: mul r1.w, |r1.w|, r3.x
 106: mad r1.w, r2.w, r3.y, r1.w
 107: add r1.w, r1.w, l(0.000010)
 108: div r1.w, l(0.500000), r1.w
 109: mul r0.w, r0.w, r0.w
 110: mad r3.x, r2.x, r0.w, -r2.x
 111: mad r2.x, r3.x, r2.x, l(1.000000)
 112: mul r0.w, r0.w, l(0.318310)
 113: mad r2.x, r2.x, r2.x, l(0.000000)
 114: div r0.w, r0.w, r2.x
 115: mul r0.w, r0.w, r1.w
 116: mul r0.w, r0.w, l(3.141593)
 117: mul r0.w, r2.w, r0.w
 118: max r0.w, r0.w, l(0.000000)
 119: dp3 r1.w, r0.xyzx, r0.xyzx
 120: ne r1.w, r1.w, l(0.000000)
 121: and r1.w, r1.w, l(0x3f800000)
 122: mul r0.w, r0.w, r1.w
 123: mul r2.xzw, r2.zzzz, r6.xxyz
 124: mul r3.xyz, r6.xyzx, r0.wwww
 125: add r0.w, -r2.y, l(1.000000)
 126: mul r1.w, r0.w, r0.w
 127: mul r1.w, r1.w, r1.w
 128: mul r0.w, r0.w, r1.w
 129: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 130: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 131: mul r0.xyz, r0.xyzx, r3.xyzx
 132: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 133: mov o0.w, l(1.000000)
 134: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SPOT 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r1.xyzx
  28: mov o3.w, r3.x
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r4.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r1.xyzx
  38: mul r1.x, v4.w, cb3[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r3.y
  41: mov o5.w, r3.z
  42: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  43: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  44: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  45: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  46: mov o8.xyzw, l(0,0,0,0)
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 124 math, 7 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 5
Set 2D Texture "_LightTextureB0" to slot 4 sampler slot 6
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 6 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: mul r4.xyzw, v6.yyyy, cb0[12].xyzw
  25: mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
  26: mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
  27: add r4.xyzw, r4.xyzw, cb0[14].xyzw
  28: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  29: mov r6.x, cb4[9].z
  30: mov r6.y, cb4[10].z
  31: mov r6.z, cb4[11].z
  32: dp3 r1.w, r5.xyzx, r6.xyzx
  33: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  34: dp3 r2.w, r5.xyzx, r5.xyzx
  35: sqrt r2.w, r2.w
  36: add r2.w, -r1.w, r2.w
  37: mad r1.w, cb3[25].w, r2.w, r1.w
  38: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  39: eq r2.w, cb5[0].x, l(1.000000)
  40: if_nz r2.w
  41:   eq r2.w, cb5[0].y, l(1.000000)
  42:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  43:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  44:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  45:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  46:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  47:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  48:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  49:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  50:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  51:   max r5.x, r2.w, r3.w
  52:   sample r5.xyzw, r5.xzwx, t5.xyzw, s0
  53: else 
  54:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  55: endif 
  56: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  57: mul r5.xyzw, v6.yyyy, cb3[9].xyzw
  58: mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
  59: mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
  60: add r5.xyzw, r5.xyzw, cb3[11].xyzw
  61: div r5.xyz, r5.xyzx, r5.wwww
  62: sample_c_lz r3.w, r5.xyxx, t6.xxxx, s1, r5.z
  63: add r5.x, -cb3[24].x, l(1.000000)
  64: mad r3.w, r3.w, r5.x, cb3[24].x
  65: add r2.w, r2.w, -r3.w
  66: mad r1.w, r1.w, r2.w, r3.w
  67: lt r2.w, l(0.000000), r4.z
  68: and r2.w, r2.w, l(0x3f800000)
  69: div r5.xy, r4.xyxx, r4.wwww
  70: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  71: sample r5.xyzw, r5.xyxx, t3.xyzw, s5
  72: mul r2.w, r2.w, r5.w
  73: dp3 r3.w, r4.xyzx, r4.xyzx
  74: sample r4.xyzw, r3.wwww, t4.xyzw, s6
  75: mul r2.w, r2.w, r4.x
  76: mul r1.w, r1.w, r2.w
  77: mov r4.x, v3.w
  78: mov r4.y, v4.w
  79: mov r4.z, v5.w
  80: dp3 r2.w, r4.xyzx, r4.xyzx
  81: rsq r2.w, r2.w
  82: mul r5.xyz, r2.wwww, r4.xyzx
  83: mul r6.xyz, r1.wwww, cb0[2].xyzx
  84: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  85: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  86: dp3 r1.w, r4.xyzx, r4.xyzx
  87: max r1.w, r1.w, l(0.001000)
  88: rsq r1.w, r1.w
  89: mul r4.xyz, r1.wwww, r4.xyzx
  90: dp3 r1.w, r2.xyzx, -r3.xyzx
  91: dp3_sat r2.w, r2.xyzx, r5.xyzx
  92: dp3_sat r2.x, r2.xyzx, r4.xyzx
  93: dp3_sat r2.y, r5.xyzx, r4.xyzx
  94: mul r2.z, r2.y, r2.y
  95: dp2 r2.z, r2.zzzz, r0.wwww
  96: add r2.z, r2.z, l(-0.500000)
  97: add r3.x, -r2.w, l(1.000000)
  98: mul r3.y, r3.x, r3.x
  99: mul r3.y, r3.y, r3.y
 100: mul r3.x, r3.x, r3.y
 101: mad r3.x, r2.z, r3.x, l(1.000000)
 102: add r3.y, -|r1.w|, l(1.000000)
 103: mul r3.z, r3.y, r3.y
 104: mul r3.z, r3.z, r3.z
 105: mul r3.y, r3.y, r3.z
 106: mad r2.z, r2.z, r3.y, l(1.000000)
 107: mul r2.z, r2.z, r3.x
 108: mul r2.z, r2.w, r2.z
 109: mul r0.w, r0.w, r0.w
 110: max r0.w, r0.w, l(0.002000)
 111: add r3.x, -r0.w, l(1.000000)
 112: mad r3.y, |r1.w|, r3.x, r0.w
 113: mad r3.x, r2.w, r3.x, r0.w
 114: mul r1.w, |r1.w|, r3.x
 115: mad r1.w, r2.w, r3.y, r1.w
 116: add r1.w, r1.w, l(0.000010)
 117: div r1.w, l(0.500000), r1.w
 118: mul r0.w, r0.w, r0.w
 119: mad r3.x, r2.x, r0.w, -r2.x
 120: mad r2.x, r3.x, r2.x, l(1.000000)
 121: mul r0.w, r0.w, l(0.318310)
 122: mad r2.x, r2.x, r2.x, l(0.000000)
 123: div r0.w, r0.w, r2.x
 124: mul r0.w, r0.w, r1.w
 125: mul r0.w, r0.w, l(3.141593)
 126: mul r0.w, r2.w, r0.w
 127: max r0.w, r0.w, l(0.000000)
 128: dp3 r1.w, r0.xyzx, r0.xyzx
 129: ne r1.w, r1.w, l(0.000000)
 130: and r1.w, r1.w, l(0x3f800000)
 131: mul r0.w, r0.w, r1.w
 132: mul r2.xzw, r2.zzzz, r6.xxyz
 133: mul r3.xyz, r6.xyzx, r0.wwww
 134: add r0.w, -r2.y, l(1.000000)
 135: mul r1.w, r0.w, r0.w
 136: mul r1.w, r1.w, r1.w
 137: mul r0.w, r0.w, r1.w
 138: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 139: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 140: mul r0.xyz, r0.xyzx, r3.xyzx
 141: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 142: mov o0.w, l(1.000000)
 143: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SPOT UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  22: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  23: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r2.xyz, r1.xxxx, r2.xyzx
  27: mov o3.xyz, r2.xyzx
  28: mad r3.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  29: mov o6.xyz, r1.yzwy
  30: mov o3.w, r3.x
  31: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul r1.xyz, r1.wwww, r1.xyzx
  37: mul r4.xyz, r2.yzxy, r1.zxyz
  38: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  39: mov o5.xyz, r1.xyzx
  40: mul r1.x, v4.w, cb2[9].w
  41: mul o4.xyz, r1.xxxx, r2.xyzx
  42: mov o4.w, r3.y
  43: mov o5.w, r3.z
  44: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  45: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  46: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  47: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  48: mov o8.xyzw, l(0,0,0,0)
  49: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 125 math, 7 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 5
Set 2D Texture "_LightTextureB0" to slot 4 sampler slot 6
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 6 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: mul r4.xyzw, v6.yyyy, cb0[12].xyzw
  25: mad r4.xyzw, cb0[11].xyzw, v6.xxxx, r4.xyzw
  26: mad r4.xyzw, cb0[13].xyzw, v6.zzzz, r4.xyzw
  27: add r4.xyzw, r4.xyzw, cb0[14].xyzw
  28: mov r1.w, cb4[0].x
  29: add r5.xyz, -v6.xyzx, cb3[r1.w + 64].xyzx
  30: ishl r1.w, cb4[0].x, l(2)
  31: mov r6.x, cb3[r1.w + 8].z
  32: mov r6.y, cb3[r1.w + 9].z
  33: mov r6.z, cb3[r1.w + 10].z
  34: dp3 r1.w, r5.xyzx, r6.xyzx
  35: add r5.xyz, v6.xyzx, -cb2[25].xyzx
  36: dp3 r2.w, r5.xyzx, r5.xyzx
  37: sqrt r2.w, r2.w
  38: add r2.w, -r1.w, r2.w
  39: mad r1.w, cb2[25].w, r2.w, r1.w
  40: mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
  41: eq r2.w, cb5[0].x, l(1.000000)
  42: if_nz r2.w
  43:   eq r2.w, cb5[0].y, l(1.000000)
  44:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  45:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  46:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  47:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  48:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  49:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  50:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  51:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  52:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  53:   max r5.x, r2.w, r3.w
  54:   sample r5.xyzw, r5.xzwx, t5.xyzw, s0
  55: else 
  56:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  57: endif 
  58: dp4_sat r2.w, r5.xyzw, cb1[46].xyzw
  59: mul r5.xyzw, v6.yyyy, cb2[9].xyzw
  60: mad r5.xyzw, cb2[8].xyzw, v6.xxxx, r5.xyzw
  61: mad r5.xyzw, cb2[10].xyzw, v6.zzzz, r5.xyzw
  62: add r5.xyzw, r5.xyzw, cb2[11].xyzw
  63: div r5.xyz, r5.xyzx, r5.wwww
  64: sample_c_lz r3.w, r5.xyxx, t6.xxxx, s1, r5.z
  65: add r5.x, -cb2[24].x, l(1.000000)
  66: mad r3.w, r3.w, r5.x, cb2[24].x
  67: add r2.w, r2.w, -r3.w
  68: mad r1.w, r1.w, r2.w, r3.w
  69: lt r2.w, l(0.000000), r4.z
  70: and r2.w, r2.w, l(0x3f800000)
  71: div r5.xy, r4.xyxx, r4.wwww
  72: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  73: sample r5.xyzw, r5.xyxx, t3.xyzw, s5
  74: mul r2.w, r2.w, r5.w
  75: dp3 r3.w, r4.xyzx, r4.xyzx
  76: sample r4.xyzw, r3.wwww, t4.xyzw, s6
  77: mul r2.w, r2.w, r4.x
  78: mul r1.w, r1.w, r2.w
  79: mov r4.x, v3.w
  80: mov r4.y, v4.w
  81: mov r4.z, v5.w
  82: dp3 r2.w, r4.xyzx, r4.xyzx
  83: rsq r2.w, r2.w
  84: mul r5.xyz, r2.wwww, r4.xyzx
  85: mul r6.xyz, r1.wwww, cb0[2].xyzx
  86: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  87: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  88: dp3 r1.w, r4.xyzx, r4.xyzx
  89: max r1.w, r1.w, l(0.001000)
  90: rsq r1.w, r1.w
  91: mul r4.xyz, r1.wwww, r4.xyzx
  92: dp3 r1.w, r2.xyzx, -r3.xyzx
  93: dp3_sat r2.w, r2.xyzx, r5.xyzx
  94: dp3_sat r2.x, r2.xyzx, r4.xyzx
  95: dp3_sat r2.y, r5.xyzx, r4.xyzx
  96: mul r2.z, r2.y, r2.y
  97: dp2 r2.z, r2.zzzz, r0.wwww
  98: add r2.z, r2.z, l(-0.500000)
  99: add r3.x, -r2.w, l(1.000000)
 100: mul r3.y, r3.x, r3.x
 101: mul r3.y, r3.y, r3.y
 102: mul r3.x, r3.x, r3.y
 103: mad r3.x, r2.z, r3.x, l(1.000000)
 104: add r3.y, -|r1.w|, l(1.000000)
 105: mul r3.z, r3.y, r3.y
 106: mul r3.z, r3.z, r3.z
 107: mul r3.y, r3.y, r3.z
 108: mad r2.z, r2.z, r3.y, l(1.000000)
 109: mul r2.z, r2.z, r3.x
 110: mul r2.z, r2.w, r2.z
 111: mul r0.w, r0.w, r0.w
 112: max r0.w, r0.w, l(0.002000)
 113: add r3.x, -r0.w, l(1.000000)
 114: mad r3.y, |r1.w|, r3.x, r0.w
 115: mad r3.x, r2.w, r3.x, r0.w
 116: mul r1.w, |r1.w|, r3.x
 117: mad r1.w, r2.w, r3.y, r1.w
 118: add r1.w, r1.w, l(0.000010)
 119: div r1.w, l(0.500000), r1.w
 120: mul r0.w, r0.w, r0.w
 121: mad r3.x, r2.x, r0.w, -r2.x
 122: mad r2.x, r3.x, r2.x, l(1.000000)
 123: mul r0.w, r0.w, l(0.318310)
 124: mad r2.x, r2.x, r2.x, l(0.000000)
 125: div r0.w, r0.w, r2.x
 126: mul r0.w, r0.w, r1.w
 127: mul r0.w, r0.w, l(3.141593)
 128: mul r0.w, r2.w, r0.w
 129: max r0.w, r0.w, l(0.000000)
 130: dp3 r1.w, r0.xyzx, r0.xyzx
 131: ne r1.w, r1.w, l(0.000000)
 132: and r1.w, r1.w, l(0x3f800000)
 133: mul r0.w, r0.w, r1.w
 134: mul r2.xzw, r2.zzzz, r6.xxyz
 135: mul r3.xyz, r6.xyzx, r0.wwww
 136: add r0.w, -r2.y, l(1.000000)
 137: mul r1.w, r0.w, r0.w
 138: mul r1.w, r1.w, r1.w
 139: mul r0.w, r0.w, r1.w
 140: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 141: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 142: mul r0.xyz, r0.xyzx, r3.xyzx
 143: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 144: mov o0.w, l(1.000000)
 145: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SPOT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  32: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  33: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  34: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 114 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: mul r3.xyzw, v6.yyyy, cb0[12].xyzw
  13: mad r3.xyzw, cb0[11].xyzw, v6.xxxx, r3.xyzw
  14: mad r3.xyzw, cb0[13].xyzw, v6.zzzz, r3.xyzw
  15: add r3.xyzw, r3.xyzw, cb0[14].xyzw
  16: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r5.x, cb4[9].z
  18: mov r5.y, cb4[10].z
  19: mov r5.z, cb4[11].z
  20: dp3 r0.w, r4.xyzx, r5.xyzx
  21: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r1.w, r4.xyzx, r4.xyzx
  23: sqrt r1.w, r1.w
  24: add r1.w, -r0.w, r1.w
  25: mad r0.w, cb3[25].w, r1.w, r0.w
  26: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  27: eq r1.w, cb5[0].x, l(1.000000)
  28: if_nz r1.w
  29:   eq r1.w, cb5[0].y, l(1.000000)
  30:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  32:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  33:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  34:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  35:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  36:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  37:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  38:   mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r4.x, r1.w, r2.w
  40:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r1.w, r4.xyzw, cb2[46].xyzw
  45: mul r4.xyzw, v6.yyyy, cb3[9].xyzw
  46: mad r4.xyzw, cb3[8].xyzw, v6.xxxx, r4.xyzw
  47: mad r4.xyzw, cb3[10].xyzw, v6.zzzz, r4.xyzw
  48: add r4.xyzw, r4.xyzw, cb3[11].xyzw
  49: div r4.xyz, r4.xyzx, r4.wwww
  50: sample_c_lz r2.w, r4.xyxx, t4.xxxx, s1, r4.z
  51: add r4.x, -cb3[24].x, l(1.000000)
  52: mad r2.w, r2.w, r4.x, cb3[24].x
  53: add r1.w, r1.w, -r2.w
  54: mad r0.w, r0.w, r1.w, r2.w
  55: lt r1.w, l(0.000000), r3.z
  56: and r1.w, r1.w, l(0x3f800000)
  57: div r4.xy, r3.xyxx, r3.wwww
  58: add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  59: sample r4.xyzw, r4.xyxx, t1.xyzw, s3
  60: mul r1.w, r1.w, r4.w
  61: dp3 r2.w, r3.xyzx, r3.xyzx
  62: sample r3.xyzw, r2.wwww, t2.xyzw, s4
  63: mul r1.w, r1.w, r3.x
  64: mul r0.w, r0.w, r1.w
  65: mov r3.x, v3.w
  66: mov r3.y, v4.w
  67: mov r3.z, v5.w
  68: dp3 r1.w, r3.xyzx, r3.xyzx
  69: rsq r1.w, r1.w
  70: mul r4.xyz, r1.wwww, r3.xyzx
  71: mul r5.xyz, r0.wwww, cb0[2].xyzx
  72: add r0.w, -cb0[8].w, l(1.000000)
  73: mad r3.xyz, r3.xyzx, r1.wwww, -r2.xyzx
  74: dp3 r1.w, r3.xyzx, r3.xyzx
  75: max r1.w, r1.w, l(0.001000)
  76: rsq r1.w, r1.w
  77: mul r3.xyz, r1.wwww, r3.xyzx
  78: dp3 r1.w, r1.xyzx, -r2.xyzx
  79: dp3_sat r2.x, r1.xyzx, r4.xyzx
  80: dp3_sat r1.x, r1.xyzx, r3.xyzx
  81: dp3_sat r1.y, r4.xyzx, r3.xyzx
  82: mul r1.z, r1.y, r1.y
  83: dp2 r1.z, r1.zzzz, r0.wwww
  84: add r1.z, r1.z, l(-0.500000)
  85: add r2.y, -r2.x, l(1.000000)
  86: mul r2.z, r2.y, r2.y
  87: mul r2.z, r2.z, r2.z
  88: mul r2.y, r2.y, r2.z
  89: mad r2.y, r1.z, r2.y, l(1.000000)
  90: add r2.z, -|r1.w|, l(1.000000)
  91: mul r2.w, r2.z, r2.z
  92: mul r2.w, r2.w, r2.w
  93: mul r2.z, r2.z, r2.w
  94: mad r1.z, r1.z, r2.z, l(1.000000)
  95: mul r1.z, r1.z, r2.y
  96: mul r1.z, r2.x, r1.z
  97: mul r0.w, r0.w, r0.w
  98: max r0.w, r0.w, l(0.002000)
  99: add r2.y, -r0.w, l(1.000000)
 100: mad r2.z, |r1.w|, r2.y, r0.w
 101: mad r2.y, r2.x, r2.y, r0.w
 102: mul r1.w, |r1.w|, r2.y
 103: mad r1.w, r2.x, r2.z, r1.w
 104: add r1.w, r1.w, l(0.000010)
 105: div r1.w, l(0.500000), r1.w
 106: mul r0.w, r0.w, r0.w
 107: mad r2.y, r1.x, r0.w, -r1.x
 108: mad r1.x, r2.y, r1.x, l(1.000000)
 109: mul r0.w, r0.w, l(0.318310)
 110: mad r1.x, r1.x, r1.x, l(0.000000)
 111: div r0.w, r0.w, r1.x
 112: mul r0.w, r0.w, r1.w
 113: mul r0.w, r0.w, l(3.141593)
 114: mul r0.w, r2.x, r0.w
 115: max r0.w, r0.w, l(0.000000)
 116: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
 117: ne r1.x, r1.x, l(0.000000)
 118: and r1.x, r1.x, l(0x3f800000)
 119: mul r0.w, r0.w, r1.x
 120: mul r1.xzw, r1.zzzz, r5.xxyz
 121: mul r2.xyz, r5.xyzx, r0.wwww
 122: add r0.w, -r1.y, l(1.000000)
 123: mul r1.y, r0.w, r0.w
 124: mul r1.y, r1.y, r1.y
 125: mul r0.w, r0.w, r1.y
 126: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 127: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
 128: mul r2.xyz, r2.xyzx, r3.xyzx
 129: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
 130: mov o0.w, l(1.000000)
 131: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SPOT UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  22: mov o6.xyz, r1.yzwy
  23: mov r2.w, l(0)
  24: mov o3.xyzw, r2.wwwx
  25: mov o4.xyzw, r2.wwwy
  26: mov o5.w, r2.z
  27: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul o5.xyz, r1.wwww, r1.xyzx
  33: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  34: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  35: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  36: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  37: mov o8.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 115 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: mul r3.xyzw, v6.yyyy, cb0[12].xyzw
  13: mad r3.xyzw, cb0[11].xyzw, v6.xxxx, r3.xyzw
  14: mad r3.xyzw, cb0[13].xyzw, v6.zzzz, r3.xyzw
  15: add r3.xyzw, r3.xyzw, cb0[14].xyzw
  16: mov r0.w, cb4[0].x
  17: add r4.xyz, -v6.xyzx, cb3[r0.w + 64].xyzx
  18: ishl r0.w, cb4[0].x, l(2)
  19: mov r5.x, cb3[r0.w + 8].z
  20: mov r5.y, cb3[r0.w + 9].z
  21: mov r5.z, cb3[r0.w + 10].z
  22: dp3 r0.w, r4.xyzx, r5.xyzx
  23: add r4.xyz, v6.xyzx, -cb2[25].xyzx
  24: dp3 r1.w, r4.xyzx, r4.xyzx
  25: sqrt r1.w, r1.w
  26: add r1.w, -r0.w, r1.w
  27: mad r0.w, cb2[25].w, r1.w, r0.w
  28: mad_sat r0.w, r0.w, cb2[24].z, cb2[24].w
  29: eq r1.w, cb5[0].x, l(1.000000)
  30: if_nz r1.w
  31:   eq r1.w, cb5[0].y, l(1.000000)
  32:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  33:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  34:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  35:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  36:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  37:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  38:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  39:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  40:   mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
  41:   max r4.x, r1.w, r2.w
  42:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  43: else 
  44:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  45: endif 
  46: dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
  47: mul r4.xyzw, v6.yyyy, cb2[9].xyzw
  48: mad r4.xyzw, cb2[8].xyzw, v6.xxxx, r4.xyzw
  49: mad r4.xyzw, cb2[10].xyzw, v6.zzzz, r4.xyzw
  50: add r4.xyzw, r4.xyzw, cb2[11].xyzw
  51: div r4.xyz, r4.xyzx, r4.wwww
  52: sample_c_lz r2.w, r4.xyxx, t4.xxxx, s1, r4.z
  53: add r4.x, -cb2[24].x, l(1.000000)
  54: mad r2.w, r2.w, r4.x, cb2[24].x
  55: add r1.w, r1.w, -r2.w
  56: mad r0.w, r0.w, r1.w, r2.w
  57: lt r1.w, l(0.000000), r3.z
  58: and r1.w, r1.w, l(0x3f800000)
  59: div r4.xy, r3.xyxx, r3.wwww
  60: add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  61: sample r4.xyzw, r4.xyxx, t1.xyzw, s3
  62: mul r1.w, r1.w, r4.w
  63: dp3 r2.w, r3.xyzx, r3.xyzx
  64: sample r3.xyzw, r2.wwww, t2.xyzw, s4
  65: mul r1.w, r1.w, r3.x
  66: mul r0.w, r0.w, r1.w
  67: mov r3.x, v3.w
  68: mov r3.y, v4.w
  69: mov r3.z, v5.w
  70: dp3 r1.w, r3.xyzx, r3.xyzx
  71: rsq r1.w, r1.w
  72: mul r4.xyz, r1.wwww, r3.xyzx
  73: mul r5.xyz, r0.wwww, cb0[2].xyzx
  74: add r0.w, -cb0[8].w, l(1.000000)
  75: mad r3.xyz, r3.xyzx, r1.wwww, -r2.xyzx
  76: dp3 r1.w, r3.xyzx, r3.xyzx
  77: max r1.w, r1.w, l(0.001000)
  78: rsq r1.w, r1.w
  79: mul r3.xyz, r1.wwww, r3.xyzx
  80: dp3 r1.w, r1.xyzx, -r2.xyzx
  81: dp3_sat r2.x, r1.xyzx, r4.xyzx
  82: dp3_sat r1.x, r1.xyzx, r3.xyzx
  83: dp3_sat r1.y, r4.xyzx, r3.xyzx
  84: mul r1.z, r1.y, r1.y
  85: dp2 r1.z, r1.zzzz, r0.wwww
  86: add r1.z, r1.z, l(-0.500000)
  87: add r2.y, -r2.x, l(1.000000)
  88: mul r2.z, r2.y, r2.y
  89: mul r2.z, r2.z, r2.z
  90: mul r2.y, r2.y, r2.z
  91: mad r2.y, r1.z, r2.y, l(1.000000)
  92: add r2.z, -|r1.w|, l(1.000000)
  93: mul r2.w, r2.z, r2.z
  94: mul r2.w, r2.w, r2.w
  95: mul r2.z, r2.z, r2.w
  96: mad r1.z, r1.z, r2.z, l(1.000000)
  97: mul r1.z, r1.z, r2.y
  98: mul r1.z, r2.x, r1.z
  99: mul r0.w, r0.w, r0.w
 100: max r0.w, r0.w, l(0.002000)
 101: add r2.y, -r0.w, l(1.000000)
 102: mad r2.z, |r1.w|, r2.y, r0.w
 103: mad r2.y, r2.x, r2.y, r0.w
 104: mul r1.w, |r1.w|, r2.y
 105: mad r1.w, r2.x, r2.z, r1.w
 106: add r1.w, r1.w, l(0.000010)
 107: div r1.w, l(0.500000), r1.w
 108: mul r0.w, r0.w, r0.w
 109: mad r2.y, r1.x, r0.w, -r1.x
 110: mad r1.x, r2.y, r1.x, l(1.000000)
 111: mul r0.w, r0.w, l(0.318310)
 112: mad r1.x, r1.x, r1.x, l(0.000000)
 113: div r0.w, r0.w, r1.x
 114: mul r0.w, r0.w, r1.w
 115: mul r0.w, r0.w, l(3.141593)
 116: mul r0.w, r2.x, r0.w
 117: max r0.w, r0.w, l(0.000000)
 118: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
 119: ne r1.x, r1.x, l(0.000000)
 120: and r1.x, r1.x, l(0x3f800000)
 121: mul r0.w, r0.w, r1.x
 122: mul r1.xzw, r1.zzzz, r5.xxyz
 123: mul r2.xyz, r5.xyzx, r0.wwww
 124: add r0.w, -r1.y, l(1.000000)
 125: mul r1.y, r0.w, r0.w
 126: mul r1.y, r1.y, r1.y
 127: mul r0.w, r0.w, r1.y
 128: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 129: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
 130: mul r2.xyz, r2.xyzx, r3.xyzx
 131: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
 132: mov o0.w, l(1.000000)
 133: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SHADOWS_SOFT SPOT 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 256
  Vector4 _MainTex_ST at 176
  Vector4 _DetailAlbedoMap_ST at 192
  Float _UVSec at 236
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[14].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[12].xxxy, cb0[12].zzzw
  12: mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyzw, r0.yyyy, cb0[17].xyzw
  32: mad r1.xyzw, cb0[16].xyzw, r0.xxxx, r1.xyzw
  33: mad r1.xyzw, cb0[18].xyzw, r0.zzzz, r1.xyzw
  34: mad o7.xyzw, cb0[19].xyzw, r0.wwww, r1.xyzw
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 143 math, 11 temp registers, 5 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 5 sampler slot 1

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 256
  Vector4 _LightColor0 at 32
  Vector4 _ShadowMapTexture_TexelSize at 128
  Vector4 _Color at 144
  Float _GlossMapScale at 224
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 11
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[9].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyzw, v6.yyyy, cb0[17].xyzw
  14: mad r4.xyzw, cb0[16].xyzw, v6.xxxx, r4.xyzw
  15: mad r4.xyzw, cb0[18].xyzw, v6.zzzz, r4.xyzw
  16: add r4.xyzw, r4.xyzw, cb0[19].xyzw
  17: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  18: mov r6.x, cb4[9].z
  19: mov r6.y, cb4[10].z
  20: mov r6.z, cb4[11].z
  21: dp3 r1.w, r5.xyzx, r6.xyzx
  22: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  23: dp3 r2.w, r5.xyzx, r5.xyzx
  24: sqrt r2.w, r2.w
  25: add r2.w, -r1.w, r2.w
  26: mad r1.w, cb3[25].w, r2.w, r1.w
  27: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  28: eq r2.w, cb5[0].x, l(1.000000)
  29: if_nz r2.w
  30:   eq r2.w, cb5[0].y, l(1.000000)
  31:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  32:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  33:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  34:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  35:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  36:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  37:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  38:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  39:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  40:   max r5.x, r2.w, r3.w
  41:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  42: else 
  43:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  46: lt r3.w, r1.w, l(0.990000)
  47: if_nz r3.w
  48:   mul r5.xyzw, v6.yyyy, cb3[9].xyzw
  49:   mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
  50:   mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
  51:   add r5.xyzw, r5.xyzw, cb3[11].xyzw
  52:   div r5.xyz, r5.xyzx, r5.wwww
  53:   mad r6.xy, r5.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  54:   round_ni r6.xy, r6.xyxx
  55:   mad r5.xy, r5.xyxx, cb0[8].zwzz, -r6.xyxx
  56:   add r7.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  57:   mul r8.xw, r7.xxxz, r7.xxxz
  58:   mad r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.xxxy
  59:   add r7.xz, -r5.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
  60:   min r9.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  61:   mad r7.xz, -r9.xxyx, r9.xxyx, r7.xxzx
  62:   max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  63:   mad r5.xy, -r5.xyxx, r5.xyxx, r7.ywyy
  64:   mov r9.x, r6.z
  65:   mov r9.y, r7.x
  66:   mov r9.z, r5.x
  67:   mov r9.w, r8.x
  68:   mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  69:   mov r8.x, r6.w
  70:   mov r8.y, r7.z
  71:   mov r8.z, r5.y
  72:   mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  73:   add r8.xyzw, r9.ywyw, r9.xzxz
  74:   add r10.xyzw, r7.yyww, r7.xxzz
  75:   div r5.xy, r9.ywyy, r8.zwzz
  76:   add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  77:   div r6.zw, r7.yyyw, r10.yyyw
  78:   add r6.zw, r6.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
  79:   mul r7.xy, r5.xyxx, cb0[8].xxxx
  80:   mul r7.zw, r6.zzzw, cb0[8].yyyy
  81:   mul r8.xyzw, r8.xyzw, r10.xyzw
  82:   mad r9.xyzw, r6.xyxy, cb0[8].xyxy, r7.xzyz
  83:   sample_c_lz r3.w, r9.xyxx, t5.xxxx, s1, r5.z
  84:   sample_c_lz r5.x, r9.zwzz, t5.xxxx, s1, r5.z
  85:   mul r5.x, r5.x, r8.y
  86:   mad r3.w, r8.x, r3.w, r5.x
  87:   mad r6.xyzw, r6.xyxy, cb0[8].xyxy, r7.xwyw
  88:   sample_c_lz r5.x, r6.xyxx, t5.xxxx, s1, r5.z
  89:   mad r3.w, r8.z, r5.x, r3.w
  90:   sample_c_lz r5.x, r6.zwzz, t5.xxxx, s1, r5.z
  91:   mad r3.w, r8.w, r5.x, r3.w
  92:   add r5.x, -cb3[24].x, l(1.000000)
  93:   mad r3.w, r3.w, r5.x, cb3[24].x
  94: else 
  95:   mov r3.w, l(1.000000)
  96: endif 
  97: add r2.w, r2.w, -r3.w
  98: mad r1.w, r1.w, r2.w, r3.w
  99: lt r2.w, l(0.000000), r4.z
 100: and r2.w, r2.w, l(0x3f800000)
 101: div r5.xy, r4.xyxx, r4.wwww
 102: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 103: sample r5.xyzw, r5.xyxx, t2.xyzw, s4
 104: mul r2.w, r2.w, r5.w
 105: dp3 r3.w, r4.xyzx, r4.xyzx
 106: sample r4.xyzw, r3.wwww, t3.xyzw, s5
 107: mul r2.w, r2.w, r4.x
 108: mul r1.w, r1.w, r2.w
 109: mov r4.x, v3.w
 110: mov r4.y, v4.w
 111: mov r4.z, v5.w
 112: dp3 r2.w, r4.xyzx, r4.xyzx
 113: rsq r2.w, r2.w
 114: mul r5.xyz, r2.wwww, r4.xyzx
 115: mul r6.xyz, r1.wwww, cb0[2].xyzx
 116: mad r0.w, -r0.w, cb0[14].x, l(1.000000)
 117: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
 118: dp3 r1.w, r4.xyzx, r4.xyzx
 119: max r1.w, r1.w, l(0.001000)
 120: rsq r1.w, r1.w
 121: mul r4.xyz, r1.wwww, r4.xyzx
 122: dp3 r1.w, r2.xyzx, -r3.xyzx
 123: dp3_sat r2.w, r2.xyzx, r5.xyzx
 124: dp3_sat r2.x, r2.xyzx, r4.xyzx
 125: dp3_sat r2.y, r5.xyzx, r4.xyzx
 126: mul r2.z, r2.y, r2.y
 127: dp2 r2.z, r2.zzzz, r0.wwww
 128: add r2.z, r2.z, l(-0.500000)
 129: add r3.x, -r2.w, l(1.000000)
 130: mul r3.y, r3.x, r3.x
 131: mul r3.y, r3.y, r3.y
 132: mul r3.x, r3.x, r3.y
 133: mad r3.x, r2.z, r3.x, l(1.000000)
 134: add r3.y, -|r1.w|, l(1.000000)
 135: mul r3.z, r3.y, r3.y
 136: mul r3.z, r3.z, r3.z
 137: mul r3.y, r3.y, r3.z
 138: mad r2.z, r2.z, r3.y, l(1.000000)
 139: mul r2.z, r2.z, r3.x
 140: mul r2.z, r2.w, r2.z
 141: mul r0.w, r0.w, r0.w
 142: max r0.w, r0.w, l(0.002000)
 143: add r3.x, -r0.w, l(1.000000)
 144: mad r3.y, |r1.w|, r3.x, r0.w
 145: mad r3.x, r2.w, r3.x, r0.w
 146: mul r1.w, |r1.w|, r3.x
 147: mad r1.w, r2.w, r3.y, r1.w
 148: add r1.w, r1.w, l(0.000010)
 149: div r1.w, l(0.500000), r1.w
 150: mul r0.w, r0.w, r0.w
 151: mad r3.x, r2.x, r0.w, -r2.x
 152: mad r2.x, r3.x, r2.x, l(1.000000)
 153: mul r0.w, r0.w, l(0.318310)
 154: mad r2.x, r2.x, r2.x, l(0.000000)
 155: div r0.w, r0.w, r2.x
 156: mul r0.w, r0.w, r1.w
 157: mul r0.w, r0.w, l(3.141593)
 158: mul r0.w, r2.w, r0.w
 159: max r0.w, r0.w, l(0.000000)
 160: dp3 r1.w, r0.xyzx, r0.xyzx
 161: ne r1.w, r1.w, l(0.000000)
 162: and r1.w, r1.w, l(0x3f800000)
 163: mul r0.w, r0.w, r1.w
 164: mul r2.xzw, r2.zzzz, r6.xxyz
 165: mul r3.xyz, r6.xyzx, r0.wwww
 166: add r0.w, -r2.y, l(1.000000)
 167: mul r1.w, r0.w, r0.w
 168: mul r1.w, r1.w, r1.w
 169: mul r0.w, r0.w, r1.w
 170: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 171: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 172: mul r0.xyz, r0.xyzx, r3.xyzx
 173: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 174: mov o0.w, l(1.000000)
 175: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SHADOWS_SOFT SPOT UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 256
  Vector4 _MainTex_ST at 176
  Vector4 _DetailAlbedoMap_ST at 192
  Float _UVSec at 236
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[14].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[12].xxxy, cb0[12].zzzw
  13: mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  22: mov o6.xyz, r1.yzwy
  23: mov r2.w, l(0)
  24: mov o3.xyzw, r2.wwwx
  25: mov o4.xyzw, r2.wwwy
  26: mov o5.w, r2.z
  27: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul o5.xyz, r1.wwww, r1.xyzx
  33: mul r1.xyzw, r0.yyyy, cb0[17].xyzw
  34: mad r1.xyzw, cb0[16].xyzw, r0.xxxx, r1.xyzw
  35: mad r1.xyzw, cb0[18].xyzw, r0.zzzz, r1.xyzw
  36: mad o7.xyzw, cb0[19].xyzw, r0.wwww, r1.xyzw
  37: mov o8.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 144 math, 11 temp registers, 5 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 5 sampler slot 1

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 256
  Vector4 _LightColor0 at 32
  Vector4 _ShadowMapTexture_TexelSize at 128
  Vector4 _Color at 144
  Float _GlossMapScale at 224
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 11
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[9].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyzw, v6.yyyy, cb0[17].xyzw
  14: mad r4.xyzw, cb0[16].xyzw, v6.xxxx, r4.xyzw
  15: mad r4.xyzw, cb0[18].xyzw, v6.zzzz, r4.xyzw
  16: add r4.xyzw, r4.xyzw, cb0[19].xyzw
  17: mov r1.w, cb4[0].x
  18: add r5.xyz, -v6.xyzx, cb3[r1.w + 64].xyzx
  19: ishl r1.w, cb4[0].x, l(2)
  20: mov r6.x, cb3[r1.w + 8].z
  21: mov r6.y, cb3[r1.w + 9].z
  22: mov r6.z, cb3[r1.w + 10].z
  23: dp3 r1.w, r5.xyzx, r6.xyzx
  24: add r5.xyz, v6.xyzx, -cb2[25].xyzx
  25: dp3 r2.w, r5.xyzx, r5.xyzx
  26: sqrt r2.w, r2.w
  27: add r2.w, -r1.w, r2.w
  28: mad r1.w, cb2[25].w, r2.w, r1.w
  29: mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
  30: eq r2.w, cb5[0].x, l(1.000000)
  31: if_nz r2.w
  32:   eq r2.w, cb5[0].y, l(1.000000)
  33:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  34:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  35:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  36:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  37:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  38:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  39:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  40:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  41:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  42:   max r5.x, r2.w, r3.w
  43:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  44: else 
  45:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  46: endif 
  47: dp4_sat r2.w, r5.xyzw, cb1[46].xyzw
  48: lt r3.w, r1.w, l(0.990000)
  49: if_nz r3.w
  50:   mul r5.xyzw, v6.yyyy, cb2[9].xyzw
  51:   mad r5.xyzw, cb2[8].xyzw, v6.xxxx, r5.xyzw
  52:   mad r5.xyzw, cb2[10].xyzw, v6.zzzz, r5.xyzw
  53:   add r5.xyzw, r5.xyzw, cb2[11].xyzw
  54:   div r5.xyz, r5.xyzx, r5.wwww
  55:   mad r6.xy, r5.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  56:   round_ni r6.xy, r6.xyxx
  57:   mad r5.xy, r5.xyxx, cb0[8].zwzz, -r6.xyxx
  58:   add r7.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  59:   mul r8.xw, r7.xxxz, r7.xxxz
  60:   mad r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.xxxy
  61:   add r7.xz, -r5.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
  62:   min r9.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  63:   mad r7.xz, -r9.xxyx, r9.xxyx, r7.xxzx
  64:   max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  65:   mad r5.xy, -r5.xyxx, r5.xyxx, r7.ywyy
  66:   mov r9.x, r6.z
  67:   mov r9.y, r7.x
  68:   mov r9.z, r5.x
  69:   mov r9.w, r8.x
  70:   mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  71:   mov r8.x, r6.w
  72:   mov r8.y, r7.z
  73:   mov r8.z, r5.y
  74:   mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  75:   add r8.xyzw, r9.ywyw, r9.xzxz
  76:   add r10.xyzw, r7.yyww, r7.xxzz
  77:   div r5.xy, r9.ywyy, r8.zwzz
  78:   add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  79:   div r6.zw, r7.yyyw, r10.yyyw
  80:   add r6.zw, r6.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
  81:   mul r7.xy, r5.xyxx, cb0[8].xxxx
  82:   mul r7.zw, r6.zzzw, cb0[8].yyyy
  83:   mul r8.xyzw, r8.xyzw, r10.xyzw
  84:   mad r9.xyzw, r6.xyxy, cb0[8].xyxy, r7.xzyz
  85:   sample_c_lz r3.w, r9.xyxx, t5.xxxx, s1, r5.z
  86:   sample_c_lz r5.x, r9.zwzz, t5.xxxx, s1, r5.z
  87:   mul r5.x, r5.x, r8.y
  88:   mad r3.w, r8.x, r3.w, r5.x
  89:   mad r6.xyzw, r6.xyxy, cb0[8].xyxy, r7.xwyw
  90:   sample_c_lz r5.x, r6.xyxx, t5.xxxx, s1, r5.z
  91:   mad r3.w, r8.z, r5.x, r3.w
  92:   sample_c_lz r5.x, r6.zwzz, t5.xxxx, s1, r5.z
  93:   mad r3.w, r8.w, r5.x, r3.w
  94:   add r5.x, -cb2[24].x, l(1.000000)
  95:   mad r3.w, r3.w, r5.x, cb2[24].x
  96: else 
  97:   mov r3.w, l(1.000000)
  98: endif 
  99: add r2.w, r2.w, -r3.w
 100: mad r1.w, r1.w, r2.w, r3.w
 101: lt r2.w, l(0.000000), r4.z
 102: and r2.w, r2.w, l(0x3f800000)
 103: div r5.xy, r4.xyxx, r4.wwww
 104: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 105: sample r5.xyzw, r5.xyxx, t2.xyzw, s4
 106: mul r2.w, r2.w, r5.w
 107: dp3 r3.w, r4.xyzx, r4.xyzx
 108: sample r4.xyzw, r3.wwww, t3.xyzw, s5
 109: mul r2.w, r2.w, r4.x
 110: mul r1.w, r1.w, r2.w
 111: mov r4.x, v3.w
 112: mov r4.y, v4.w
 113: mov r4.z, v5.w
 114: dp3 r2.w, r4.xyzx, r4.xyzx
 115: rsq r2.w, r2.w
 116: mul r5.xyz, r2.wwww, r4.xyzx
 117: mul r6.xyz, r1.wwww, cb0[2].xyzx
 118: mad r0.w, -r0.w, cb0[14].x, l(1.000000)
 119: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
 120: dp3 r1.w, r4.xyzx, r4.xyzx
 121: max r1.w, r1.w, l(0.001000)
 122: rsq r1.w, r1.w
 123: mul r4.xyz, r1.wwww, r4.xyzx
 124: dp3 r1.w, r2.xyzx, -r3.xyzx
 125: dp3_sat r2.w, r2.xyzx, r5.xyzx
 126: dp3_sat r2.x, r2.xyzx, r4.xyzx
 127: dp3_sat r2.y, r5.xyzx, r4.xyzx
 128: mul r2.z, r2.y, r2.y
 129: dp2 r2.z, r2.zzzz, r0.wwww
 130: add r2.z, r2.z, l(-0.500000)
 131: add r3.x, -r2.w, l(1.000000)
 132: mul r3.y, r3.x, r3.x
 133: mul r3.y, r3.y, r3.y
 134: mul r3.x, r3.x, r3.y
 135: mad r3.x, r2.z, r3.x, l(1.000000)
 136: add r3.y, -|r1.w|, l(1.000000)
 137: mul r3.z, r3.y, r3.y
 138: mul r3.z, r3.z, r3.z
 139: mul r3.y, r3.y, r3.z
 140: mad r2.z, r2.z, r3.y, l(1.000000)
 141: mul r2.z, r2.z, r3.x
 142: mul r2.z, r2.w, r2.z
 143: mul r0.w, r0.w, r0.w
 144: max r0.w, r0.w, l(0.002000)
 145: add r3.x, -r0.w, l(1.000000)
 146: mad r3.y, |r1.w|, r3.x, r0.w
 147: mad r3.x, r2.w, r3.x, r0.w
 148: mul r1.w, |r1.w|, r3.x
 149: mad r1.w, r2.w, r3.y, r1.w
 150: add r1.w, r1.w, l(0.000010)
 151: div r1.w, l(0.500000), r1.w
 152: mul r0.w, r0.w, r0.w
 153: mad r3.x, r2.x, r0.w, -r2.x
 154: mad r2.x, r3.x, r2.x, l(1.000000)
 155: mul r0.w, r0.w, l(0.318310)
 156: mad r2.x, r2.x, r2.x, l(0.000000)
 157: div r0.w, r0.w, r2.x
 158: mul r0.w, r0.w, r1.w
 159: mul r0.w, r0.w, l(3.141593)
 160: mul r0.w, r2.w, r0.w
 161: max r0.w, r0.w, l(0.000000)
 162: dp3 r1.w, r0.xyzx, r0.xyzx
 163: ne r1.w, r1.w, l(0.000000)
 164: and r1.w, r1.w, l(0x3f800000)
 165: mul r0.w, r0.w, r1.w
 166: mul r2.xzw, r2.zzzz, r6.xxyz
 167: mul r3.xyz, r6.xyzx, r0.wwww
 168: add r0.w, -r2.y, l(1.000000)
 169: mul r1.w, r0.w, r0.w
 170: mul r1.w, r1.w, r1.w
 171: mul r0.w, r0.w, r1.w
 172: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 173: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 174: mul r0.xyz, r0.xyzx, r3.xyzx
 175: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 176: mov o0.w, l(1.000000)
 177: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SHADOWS_SOFT SPOT 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 256
  Vector4 _MainTex_ST at 176
  Vector4 _DetailAlbedoMap_ST at 192
  Float _UVSec at 236
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[14].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[12].xxxy, cb0[12].zzzw
  12: mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r1.xyzx
  28: mov o3.w, r3.x
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r4.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r1.xyzx
  38: mul r1.x, v4.w, cb3[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r3.y
  41: mov o5.w, r3.z
  42: mul r1.xyzw, r0.yyyy, cb0[17].xyzw
  43: mad r1.xyzw, cb0[16].xyzw, r0.xxxx, r1.xyzw
  44: mad r1.xyzw, cb0[18].xyzw, r0.zzzz, r1.xyzw
  45: mad o7.xyzw, cb0[19].xyzw, r0.wwww, r1.xyzw
  46: mov o8.xyzw, l(0,0,0,0)
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 153 math, 11 temp registers, 6 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 5
Set 2D Texture "_LightTextureB0" to slot 4 sampler slot 6
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 6 sampler slot 1

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 256
  Vector4 _LightColor0 at 32
  Vector4 _ShadowMapTexture_TexelSize at 128
  Vector4 _Color at 144
  Float _BumpScale at 208
  Float _GlossMapScale at 224
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 11
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[9].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[13].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: mul r4.xyzw, v6.yyyy, cb0[17].xyzw
  25: mad r4.xyzw, cb0[16].xyzw, v6.xxxx, r4.xyzw
  26: mad r4.xyzw, cb0[18].xyzw, v6.zzzz, r4.xyzw
  27: add r4.xyzw, r4.xyzw, cb0[19].xyzw
  28: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  29: mov r6.x, cb4[9].z
  30: mov r6.y, cb4[10].z
  31: mov r6.z, cb4[11].z
  32: dp3 r1.w, r5.xyzx, r6.xyzx
  33: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  34: dp3 r2.w, r5.xyzx, r5.xyzx
  35: sqrt r2.w, r2.w
  36: add r2.w, -r1.w, r2.w
  37: mad r1.w, cb3[25].w, r2.w, r1.w
  38: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  39: eq r2.w, cb5[0].x, l(1.000000)
  40: if_nz r2.w
  41:   eq r2.w, cb5[0].y, l(1.000000)
  42:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  43:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  44:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  45:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  46:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  47:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  48:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  49:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  50:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  51:   max r5.x, r2.w, r3.w
  52:   sample r5.xyzw, r5.xzwx, t5.xyzw, s0
  53: else 
  54:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  55: endif 
  56: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  57: lt r3.w, r1.w, l(0.990000)
  58: if_nz r3.w
  59:   mul r5.xyzw, v6.yyyy, cb3[9].xyzw
  60:   mad r5.xyzw, cb3[8].xyzw, v6.xxxx, r5.xyzw
  61:   mad r5.xyzw, cb3[10].xyzw, v6.zzzz, r5.xyzw
  62:   add r5.xyzw, r5.xyzw, cb3[11].xyzw
  63:   div r5.xyz, r5.xyzx, r5.wwww
  64:   mad r6.xy, r5.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  65:   round_ni r6.xy, r6.xyxx
  66:   mad r5.xy, r5.xyxx, cb0[8].zwzz, -r6.xyxx
  67:   add r7.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  68:   mul r8.xw, r7.xxxz, r7.xxxz
  69:   mad r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.xxxy
  70:   add r7.xz, -r5.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
  71:   min r9.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  72:   mad r7.xz, -r9.xxyx, r9.xxyx, r7.xxzx
  73:   max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  74:   mad r5.xy, -r5.xyxx, r5.xyxx, r7.ywyy
  75:   mov r9.x, r6.z
  76:   mov r9.y, r7.x
  77:   mov r9.z, r5.x
  78:   mov r9.w, r8.x
  79:   mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  80:   mov r8.x, r6.w
  81:   mov r8.y, r7.z
  82:   mov r8.z, r5.y
  83:   mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  84:   add r8.xyzw, r9.ywyw, r9.xzxz
  85:   add r10.xyzw, r7.yyww, r7.xxzz
  86:   div r5.xy, r9.ywyy, r8.zwzz
  87:   add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  88:   div r6.zw, r7.yyyw, r10.yyyw
  89:   add r6.zw, r6.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
  90:   mul r7.xy, r5.xyxx, cb0[8].xxxx
  91:   mul r7.zw, r6.zzzw, cb0[8].yyyy
  92:   mul r8.xyzw, r8.xyzw, r10.xyzw
  93:   mad r9.xyzw, r6.xyxy, cb0[8].xyxy, r7.xzyz
  94:   sample_c_lz r3.w, r9.xyxx, t6.xxxx, s1, r5.z
  95:   sample_c_lz r5.x, r9.zwzz, t6.xxxx, s1, r5.z
  96:   mul r5.x, r5.x, r8.y
  97:   mad r3.w, r8.x, r3.w, r5.x
  98:   mad r6.xyzw, r6.xyxy, cb0[8].xyxy, r7.xwyw
  99:   sample_c_lz r5.x, r6.xyxx, t6.xxxx, s1, r5.z
 100:   mad r3.w, r8.z, r5.x, r3.w
 101:   sample_c_lz r5.x, r6.zwzz, t6.xxxx, s1, r5.z
 102:   mad r3.w, r8.w, r5.x, r3.w
 103:   add r5.x, -cb3[24].x, l(1.000000)
 104:   mad r3.w, r3.w, r5.x, cb3[24].x
 105: else 
 106:   mov r3.w, l(1.000000)
 107: endif 
 108: add r2.w, r2.w, -r3.w
 109: mad r1.w, r1.w, r2.w, r3.w
 110: lt r2.w, l(0.000000), r4.z
 111: and r2.w, r2.w, l(0x3f800000)
 112: div r5.xy, r4.xyxx, r4.wwww
 113: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 114: sample r5.xyzw, r5.xyxx, t3.xyzw, s5
 115: mul r2.w, r2.w, r5.w
 116: dp3 r3.w, r4.xyzx, r4.xyzx
 117: sample r4.xyzw, r3.wwww, t4.xyzw, s6
 118: mul r2.w, r2.w, r4.x
 119: mul r1.w, r1.w, r2.w
 120: mov r4.x, v3.w
 121: mov r4.y, v4.w
 122: mov r4.z, v5.w
 123: dp3 r2.w, r4.xyzx, r4.xyzx
 124: rsq r2.w, r2.w
 125: mul r5.xyz, r2.wwww, r4.xyzx
 126: mul r6.xyz, r1.wwww, cb0[2].xyzx
 127: mad r0.w, -r0.w, cb0[14].x, l(1.000000)
 128: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
 129: dp3 r1.w, r4.xyzx, r4.xyzx
 130: max r1.w, r1.w, l(0.001000)
 131: rsq r1.w, r1.w
 132: mul r4.xyz, r1.wwww, r4.xyzx
 133: dp3 r1.w, r2.xyzx, -r3.xyzx
 134: dp3_sat r2.w, r2.xyzx, r5.xyzx
 135: dp3_sat r2.x, r2.xyzx, r4.xyzx
 136: dp3_sat r2.y, r5.xyzx, r4.xyzx
 137: mul r2.z, r2.y, r2.y
 138: dp2 r2.z, r2.zzzz, r0.wwww
 139: add r2.z, r2.z, l(-0.500000)
 140: add r3.x, -r2.w, l(1.000000)
 141: mul r3.y, r3.x, r3.x
 142: mul r3.y, r3.y, r3.y
 143: mul r3.x, r3.x, r3.y
 144: mad r3.x, r2.z, r3.x, l(1.000000)
 145: add r3.y, -|r1.w|, l(1.000000)
 146: mul r3.z, r3.y, r3.y
 147: mul r3.z, r3.z, r3.z
 148: mul r3.y, r3.y, r3.z
 149: mad r2.z, r2.z, r3.y, l(1.000000)
 150: mul r2.z, r2.z, r3.x
 151: mul r2.z, r2.w, r2.z
 152: mul r0.w, r0.w, r0.w
 153: max r0.w, r0.w, l(0.002000)
 154: add r3.x, -r0.w, l(1.000000)
 155: mad r3.y, |r1.w|, r3.x, r0.w
 156: mad r3.x, r2.w, r3.x, r0.w
 157: mul r1.w, |r1.w|, r3.x
 158: mad r1.w, r2.w, r3.y, r1.w
 159: add r1.w, r1.w, l(0.000010)
 160: div r1.w, l(0.500000), r1.w
 161: mul r0.w, r0.w, r0.w
 162: mad r3.x, r2.x, r0.w, -r2.x
 163: mad r2.x, r3.x, r2.x, l(1.000000)
 164: mul r0.w, r0.w, l(0.318310)
 165: mad r2.x, r2.x, r2.x, l(0.000000)
 166: div r0.w, r0.w, r2.x
 167: mul r0.w, r0.w, r1.w
 168: mul r0.w, r0.w, l(3.141593)
 169: mul r0.w, r2.w, r0.w
 170: max r0.w, r0.w, l(0.000000)
 171: dp3 r1.w, r0.xyzx, r0.xyzx
 172: ne r1.w, r1.w, l(0.000000)
 173: and r1.w, r1.w, l(0x3f800000)
 174: mul r0.w, r0.w, r1.w
 175: mul r2.xzw, r2.zzzz, r6.xxyz
 176: mul r3.xyz, r6.xyzx, r0.wwww
 177: add r0.w, -r2.y, l(1.000000)
 178: mul r1.w, r0.w, r0.w
 179: mul r1.w, r1.w, r1.w
 180: mul r0.w, r0.w, r1.w
 181: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 182: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 183: mul r0.xyz, r0.xyzx, r3.xyzx
 184: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 185: mov o0.w, l(1.000000)
 186: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SHADOWS_SOFT SPOT UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 256
  Vector4 _MainTex_ST at 176
  Vector4 _DetailAlbedoMap_ST at 192
  Float _UVSec at 236
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[14].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[12].xxxy, cb0[12].zzzw
  13: mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  22: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  23: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r2.xyz, r1.xxxx, r2.xyzx
  27: mov o3.xyz, r2.xyzx
  28: mad r3.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  29: mov o6.xyz, r1.yzwy
  30: mov o3.w, r3.x
  31: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul r1.xyz, r1.wwww, r1.xyzx
  37: mul r4.xyz, r2.yzxy, r1.zxyz
  38: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  39: mov o5.xyz, r1.xyzx
  40: mul r1.x, v4.w, cb2[9].w
  41: mul o4.xyz, r1.xxxx, r2.xyzx
  42: mov o4.w, r3.y
  43: mov o5.w, r3.z
  44: mul r1.xyzw, r0.yyyy, cb0[17].xyzw
  45: mad r1.xyzw, cb0[16].xyzw, r0.xxxx, r1.xyzw
  46: mad r1.xyzw, cb0[18].xyzw, r0.zzzz, r1.xyzw
  47: mad o7.xyzw, cb0[19].xyzw, r0.wwww, r1.xyzw
  48: mov o8.xyzw, l(0,0,0,0)
  49: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 154 math, 11 temp registers, 6 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 5
Set 2D Texture "_LightTextureB0" to slot 4 sampler slot 6
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 6 sampler slot 1

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 256
  Vector4 _LightColor0 at 32
  Vector4 _ShadowMapTexture_TexelSize at 128
  Vector4 _Color at 144
  Float _BumpScale at 208
  Float _GlossMapScale at 224
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 11
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[9].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[13].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: mul r4.xyzw, v6.yyyy, cb0[17].xyzw
  25: mad r4.xyzw, cb0[16].xyzw, v6.xxxx, r4.xyzw
  26: mad r4.xyzw, cb0[18].xyzw, v6.zzzz, r4.xyzw
  27: add r4.xyzw, r4.xyzw, cb0[19].xyzw
  28: mov r1.w, cb4[0].x
  29: add r5.xyz, -v6.xyzx, cb3[r1.w + 64].xyzx
  30: ishl r1.w, cb4[0].x, l(2)
  31: mov r6.x, cb3[r1.w + 8].z
  32: mov r6.y, cb3[r1.w + 9].z
  33: mov r6.z, cb3[r1.w + 10].z
  34: dp3 r1.w, r5.xyzx, r6.xyzx
  35: add r5.xyz, v6.xyzx, -cb2[25].xyzx
  36: dp3 r2.w, r5.xyzx, r5.xyzx
  37: sqrt r2.w, r2.w
  38: add r2.w, -r1.w, r2.w
  39: mad r1.w, cb2[25].w, r2.w, r1.w
  40: mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
  41: eq r2.w, cb5[0].x, l(1.000000)
  42: if_nz r2.w
  43:   eq r2.w, cb5[0].y, l(1.000000)
  44:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  45:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  46:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  47:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  48:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  49:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  50:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  51:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  52:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  53:   max r5.x, r2.w, r3.w
  54:   sample r5.xyzw, r5.xzwx, t5.xyzw, s0
  55: else 
  56:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  57: endif 
  58: dp4_sat r2.w, r5.xyzw, cb1[46].xyzw
  59: lt r3.w, r1.w, l(0.990000)
  60: if_nz r3.w
  61:   mul r5.xyzw, v6.yyyy, cb2[9].xyzw
  62:   mad r5.xyzw, cb2[8].xyzw, v6.xxxx, r5.xyzw
  63:   mad r5.xyzw, cb2[10].xyzw, v6.zzzz, r5.xyzw
  64:   add r5.xyzw, r5.xyzw, cb2[11].xyzw
  65:   div r5.xyz, r5.xyzx, r5.wwww
  66:   mad r6.xy, r5.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  67:   round_ni r6.xy, r6.xyxx
  68:   mad r5.xy, r5.xyxx, cb0[8].zwzz, -r6.xyxx
  69:   add r7.xyzw, r5.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  70:   mul r8.xw, r7.xxxz, r7.xxxz
  71:   mad r6.zw, r8.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r5.xxxy
  72:   add r7.xz, -r5.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
  73:   min r9.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  74:   mad r7.xz, -r9.xxyx, r9.xxyx, r7.xxzx
  75:   max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  76:   mad r5.xy, -r5.xyxx, r5.xyxx, r7.ywyy
  77:   mov r9.x, r6.z
  78:   mov r9.y, r7.x
  79:   mov r9.z, r5.x
  80:   mov r9.w, r8.x
  81:   mul r9.xyzw, r9.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  82:   mov r8.x, r6.w
  83:   mov r8.y, r7.z
  84:   mov r8.z, r5.y
  85:   mul r7.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  86:   add r8.xyzw, r9.ywyw, r9.xzxz
  87:   add r10.xyzw, r7.yyww, r7.xxzz
  88:   div r5.xy, r9.ywyy, r8.zwzz
  89:   add r5.xy, r5.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  90:   div r6.zw, r7.yyyw, r10.yyyw
  91:   add r6.zw, r6.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
  92:   mul r7.xy, r5.xyxx, cb0[8].xxxx
  93:   mul r7.zw, r6.zzzw, cb0[8].yyyy
  94:   mul r8.xyzw, r8.xyzw, r10.xyzw
  95:   mad r9.xyzw, r6.xyxy, cb0[8].xyxy, r7.xzyz
  96:   sample_c_lz r3.w, r9.xyxx, t6.xxxx, s1, r5.z
  97:   sample_c_lz r5.x, r9.zwzz, t6.xxxx, s1, r5.z
  98:   mul r5.x, r5.x, r8.y
  99:   mad r3.w, r8.x, r3.w, r5.x
 100:   mad r6.xyzw, r6.xyxy, cb0[8].xyxy, r7.xwyw
 101:   sample_c_lz r5.x, r6.xyxx, t6.xxxx, s1, r5.z
 102:   mad r3.w, r8.z, r5.x, r3.w
 103:   sample_c_lz r5.x, r6.zwzz, t6.xxxx, s1, r5.z
 104:   mad r3.w, r8.w, r5.x, r3.w
 105:   add r5.x, -cb2[24].x, l(1.000000)
 106:   mad r3.w, r3.w, r5.x, cb2[24].x
 107: else 
 108:   mov r3.w, l(1.000000)
 109: endif 
 110: add r2.w, r2.w, -r3.w
 111: mad r1.w, r1.w, r2.w, r3.w
 112: lt r2.w, l(0.000000), r4.z
 113: and r2.w, r2.w, l(0x3f800000)
 114: div r5.xy, r4.xyxx, r4.wwww
 115: add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 116: sample r5.xyzw, r5.xyxx, t3.xyzw, s5
 117: mul r2.w, r2.w, r5.w
 118: dp3 r3.w, r4.xyzx, r4.xyzx
 119: sample r4.xyzw, r3.wwww, t4.xyzw, s6
 120: mul r2.w, r2.w, r4.x
 121: mul r1.w, r1.w, r2.w
 122: mov r4.x, v3.w
 123: mov r4.y, v4.w
 124: mov r4.z, v5.w
 125: dp3 r2.w, r4.xyzx, r4.xyzx
 126: rsq r2.w, r2.w
 127: mul r5.xyz, r2.wwww, r4.xyzx
 128: mul r6.xyz, r1.wwww, cb0[2].xyzx
 129: mad r0.w, -r0.w, cb0[14].x, l(1.000000)
 130: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
 131: dp3 r1.w, r4.xyzx, r4.xyzx
 132: max r1.w, r1.w, l(0.001000)
 133: rsq r1.w, r1.w
 134: mul r4.xyz, r1.wwww, r4.xyzx
 135: dp3 r1.w, r2.xyzx, -r3.xyzx
 136: dp3_sat r2.w, r2.xyzx, r5.xyzx
 137: dp3_sat r2.x, r2.xyzx, r4.xyzx
 138: dp3_sat r2.y, r5.xyzx, r4.xyzx
 139: mul r2.z, r2.y, r2.y
 140: dp2 r2.z, r2.zzzz, r0.wwww
 141: add r2.z, r2.z, l(-0.500000)
 142: add r3.x, -r2.w, l(1.000000)
 143: mul r3.y, r3.x, r3.x
 144: mul r3.y, r3.y, r3.y
 145: mul r3.x, r3.x, r3.y
 146: mad r3.x, r2.z, r3.x, l(1.000000)
 147: add r3.y, -|r1.w|, l(1.000000)
 148: mul r3.z, r3.y, r3.y
 149: mul r3.z, r3.z, r3.z
 150: mul r3.y, r3.y, r3.z
 151: mad r2.z, r2.z, r3.y, l(1.000000)
 152: mul r2.z, r2.z, r3.x
 153: mul r2.z, r2.w, r2.z
 154: mul r0.w, r0.w, r0.w
 155: max r0.w, r0.w, l(0.002000)
 156: add r3.x, -r0.w, l(1.000000)
 157: mad r3.y, |r1.w|, r3.x, r0.w
 158: mad r3.x, r2.w, r3.x, r0.w
 159: mul r1.w, |r1.w|, r3.x
 160: mad r1.w, r2.w, r3.y, r1.w
 161: add r1.w, r1.w, l(0.000010)
 162: div r1.w, l(0.500000), r1.w
 163: mul r0.w, r0.w, r0.w
 164: mad r3.x, r2.x, r0.w, -r2.x
 165: mad r2.x, r3.x, r2.x, l(1.000000)
 166: mul r0.w, r0.w, l(0.318310)
 167: mad r2.x, r2.x, r2.x, l(0.000000)
 168: div r0.w, r0.w, r2.x
 169: mul r0.w, r0.w, r1.w
 170: mul r0.w, r0.w, l(3.141593)
 171: mul r0.w, r2.w, r0.w
 172: max r0.w, r0.w, l(0.000000)
 173: dp3 r1.w, r0.xyzx, r0.xyzx
 174: ne r1.w, r1.w, l(0.000000)
 175: and r1.w, r1.w, l(0x3f800000)
 176: mul r0.w, r0.w, r1.w
 177: mul r2.xzw, r2.zzzz, r6.xxyz
 178: mul r3.xyz, r6.xyzx, r0.wwww
 179: add r0.w, -r2.y, l(1.000000)
 180: mul r1.w, r0.w, r0.w
 181: mul r1.w, r1.w, r1.w
 182: mul r0.w, r0.w, r1.w
 183: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 184: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 185: mul r0.xyz, r0.xyzx, r3.xyzx
 186: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 187: mov o0.w, l(1.000000)
 188: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SHADOWS_SOFT SPOT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 256
  Vector4 _MainTex_ST at 176
  Vector4 _DetailAlbedoMap_ST at 192
  Float _UVSec at 236
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[14].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[12].xxxy, cb0[12].zzzw
  12: mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyzw, r0.yyyy, cb0[17].xyzw
  32: mad r1.xyzw, cb0[16].xyzw, r0.xxxx, r1.xyzw
  33: mad r1.xyzw, cb0[18].xyzw, r0.zzzz, r1.xyzw
  34: mad o7.xyzw, cb0[19].xyzw, r0.wwww, r1.xyzw
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 143 math, 10 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 256
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _ShadowMapTexture_TexelSize at 128
  Vector4 _Color at 144
  Float _Glossiness at 220
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 10
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[9].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: mul r3.xyzw, v6.yyyy, cb0[17].xyzw
  13: mad r3.xyzw, cb0[16].xyzw, v6.xxxx, r3.xyzw
  14: mad r3.xyzw, cb0[18].xyzw, v6.zzzz, r3.xyzw
  15: add r3.xyzw, r3.xyzw, cb0[19].xyzw
  16: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r5.x, cb4[9].z
  18: mov r5.y, cb4[10].z
  19: mov r5.z, cb4[11].z
  20: dp3 r0.w, r4.xyzx, r5.xyzx
  21: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r1.w, r4.xyzx, r4.xyzx
  23: sqrt r1.w, r1.w
  24: add r1.w, -r0.w, r1.w
  25: mad r0.w, cb3[25].w, r1.w, r0.w
  26: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  27: eq r1.w, cb5[0].x, l(1.000000)
  28: if_nz r1.w
  29:   eq r1.w, cb5[0].y, l(1.000000)
  30:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  32:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  33:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  34:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  35:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  36:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  37:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  38:   mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r4.x, r1.w, r2.w
  40:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r1.w, r4.xyzw, cb2[46].xyzw
  45: lt r2.w, r0.w, l(0.990000)
  46: if_nz r2.w
  47:   mul r4.xyzw, v6.yyyy, cb3[9].xyzw
  48:   mad r4.xyzw, cb3[8].xyzw, v6.xxxx, r4.xyzw
  49:   mad r4.xyzw, cb3[10].xyzw, v6.zzzz, r4.xyzw
  50:   add r4.xyzw, r4.xyzw, cb3[11].xyzw
  51:   div r4.xyz, r4.xyzx, r4.wwww
  52:   mad r5.xy, r4.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  53:   round_ni r5.xy, r5.xyxx
  54:   mad r4.xy, r4.xyxx, cb0[8].zwzz, -r5.xyxx
  55:   add r6.xyzw, r4.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  56:   mul r7.xw, r6.xxxz, r6.xxxz
  57:   mad r5.zw, r7.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r4.xxxy
  58:   add r6.xz, -r4.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
  59:   min r8.xy, r4.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  60:   mad r6.xz, -r8.xxyx, r8.xxyx, r6.xxzx
  61:   max r4.xy, r4.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  62:   mad r4.xy, -r4.xyxx, r4.xyxx, r6.ywyy
  63:   mov r8.x, r5.z
  64:   mov r8.y, r6.x
  65:   mov r8.z, r4.x
  66:   mov r8.w, r7.x
  67:   mul r8.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  68:   mov r7.x, r5.w
  69:   mov r7.y, r6.z
  70:   mov r7.z, r4.y
  71:   mul r6.xyzw, r7.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  72:   add r7.xyzw, r8.ywyw, r8.xzxz
  73:   add r9.xyzw, r6.yyww, r6.xxzz
  74:   div r4.xy, r8.ywyy, r7.zwzz
  75:   add r4.xy, r4.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  76:   div r5.zw, r6.yyyw, r9.yyyw
  77:   add r5.zw, r5.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
  78:   mul r6.xy, r4.xyxx, cb0[8].xxxx
  79:   mul r6.zw, r5.zzzw, cb0[8].yyyy
  80:   mul r7.xyzw, r7.xyzw, r9.xyzw
  81:   mad r8.xyzw, r5.xyxy, cb0[8].xyxy, r6.xzyz
  82:   sample_c_lz r2.w, r8.xyxx, t4.xxxx, s1, r4.z
  83:   sample_c_lz r4.x, r8.zwzz, t4.xxxx, s1, r4.z
  84:   mul r4.x, r4.x, r7.y
  85:   mad r2.w, r7.x, r2.w, r4.x
  86:   mad r5.xyzw, r5.xyxy, cb0[8].xyxy, r6.xwyw
  87:   sample_c_lz r4.x, r5.xyxx, t4.xxxx, s1, r4.z
  88:   mad r2.w, r7.z, r4.x, r2.w
  89:   sample_c_lz r4.x, r5.zwzz, t4.xxxx, s1, r4.z
  90:   mad r2.w, r7.w, r4.x, r2.w
  91:   add r4.x, -cb3[24].x, l(1.000000)
  92:   mad r2.w, r2.w, r4.x, cb3[24].x
  93: else 
  94:   mov r2.w, l(1.000000)
  95: endif 
  96: add r1.w, r1.w, -r2.w
  97: mad r0.w, r0.w, r1.w, r2.w
  98: lt r1.w, l(0.000000), r3.z
  99: and r1.w, r1.w, l(0x3f800000)
 100: div r4.xy, r3.xyxx, r3.wwww
 101: add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 102: sample r4.xyzw, r4.xyxx, t1.xyzw, s3
 103: mul r1.w, r1.w, r4.w
 104: dp3 r2.w, r3.xyzx, r3.xyzx
 105: sample r3.xyzw, r2.wwww, t2.xyzw, s4
 106: mul r1.w, r1.w, r3.x
 107: mul r0.w, r0.w, r1.w
 108: mov r3.x, v3.w
 109: mov r3.y, v4.w
 110: mov r3.z, v5.w
 111: dp3 r1.w, r3.xyzx, r3.xyzx
 112: rsq r1.w, r1.w
 113: mul r4.xyz, r1.wwww, r3.xyzx
 114: mul r5.xyz, r0.wwww, cb0[2].xyzx
 115: add r0.w, -cb0[13].w, l(1.000000)
 116: mad r3.xyz, r3.xyzx, r1.wwww, -r2.xyzx
 117: dp3 r1.w, r3.xyzx, r3.xyzx
 118: max r1.w, r1.w, l(0.001000)
 119: rsq r1.w, r1.w
 120: mul r3.xyz, r1.wwww, r3.xyzx
 121: dp3 r1.w, r1.xyzx, -r2.xyzx
 122: dp3_sat r2.x, r1.xyzx, r4.xyzx
 123: dp3_sat r1.x, r1.xyzx, r3.xyzx
 124: dp3_sat r1.y, r4.xyzx, r3.xyzx
 125: mul r1.z, r1.y, r1.y
 126: dp2 r1.z, r1.zzzz, r0.wwww
 127: add r1.z, r1.z, l(-0.500000)
 128: add r2.y, -r2.x, l(1.000000)
 129: mul r2.z, r2.y, r2.y
 130: mul r2.z, r2.z, r2.z
 131: mul r2.y, r2.y, r2.z
 132: mad r2.y, r1.z, r2.y, l(1.000000)
 133: add r2.z, -|r1.w|, l(1.000000)
 134: mul r2.w, r2.z, r2.z
 135: mul r2.w, r2.w, r2.w
 136: mul r2.z, r2.z, r2.w
 137: mad r1.z, r1.z, r2.z, l(1.000000)
 138: mul r1.z, r1.z, r2.y
 139: mul r1.z, r2.x, r1.z
 140: mul r0.w, r0.w, r0.w
 141: max r0.w, r0.w, l(0.002000)
 142: add r2.y, -r0.w, l(1.000000)
 143: mad r2.z, |r1.w|, r2.y, r0.w
 144: mad r2.y, r2.x, r2.y, r0.w
 145: mul r1.w, |r1.w|, r2.y
 146: mad r1.w, r2.x, r2.z, r1.w
 147: add r1.w, r1.w, l(0.000010)
 148: div r1.w, l(0.500000), r1.w
 149: mul r0.w, r0.w, r0.w
 150: mad r2.y, r1.x, r0.w, -r1.x
 151: mad r1.x, r2.y, r1.x, l(1.000000)
 152: mul r0.w, r0.w, l(0.318310)
 153: mad r1.x, r1.x, r1.x, l(0.000000)
 154: div r0.w, r0.w, r1.x
 155: mul r0.w, r0.w, r1.w
 156: mul r0.w, r0.w, l(3.141593)
 157: mul r0.w, r2.x, r0.w
 158: max r0.w, r0.w, l(0.000000)
 159: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
 160: ne r1.x, r1.x, l(0.000000)
 161: and r1.x, r1.x, l(0x3f800000)
 162: mul r0.w, r0.w, r1.x
 163: mul r1.xzw, r1.zzzz, r5.xxyz
 164: mul r2.xyz, r5.xyzx, r0.wwww
 165: add r0.w, -r1.y, l(1.000000)
 166: mul r1.y, r0.w, r0.w
 167: mul r1.y, r1.y, r1.y
 168: mul r0.w, r0.w, r1.y
 169: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 170: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
 171: mul r2.xyz, r2.xyzx, r3.xyzx
 172: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
 173: mov o0.w, l(1.000000)
 174: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SHADOWS_SOFT SPOT UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 256
  Vector4 _MainTex_ST at 176
  Vector4 _DetailAlbedoMap_ST at 192
  Float _UVSec at 236
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[14].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[12].xxxy, cb0[12].zzzw
  13: mad o1.xy, v2.xyxx, cb0[11].xyxx, cb0[11].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  22: mov o6.xyz, r1.yzwy
  23: mov r2.w, l(0)
  24: mov o3.xyzw, r2.wwwx
  25: mov o4.xyzw, r2.wwwy
  26: mov o5.w, r2.z
  27: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul o5.xyz, r1.wwww, r1.xyzx
  33: mul r1.xyzw, r0.yyyy, cb0[17].xyzw
  34: mad r1.xyzw, cb0[16].xyzw, r0.xxxx, r1.xyzw
  35: mad r1.xyzw, cb0[18].xyzw, r0.zzzz, r1.xyzw
  36: mad o7.xyzw, cb0[19].xyzw, r0.wwww, r1.xyzw
  37: mov o8.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 144 math, 10 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (320 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 256
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _ShadowMapTexture_TexelSize at 128
  Vector4 _Color at 144
  Float _Glossiness at 220
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[20], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 10
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[9].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: mul r3.xyzw, v6.yyyy, cb0[17].xyzw
  13: mad r3.xyzw, cb0[16].xyzw, v6.xxxx, r3.xyzw
  14: mad r3.xyzw, cb0[18].xyzw, v6.zzzz, r3.xyzw
  15: add r3.xyzw, r3.xyzw, cb0[19].xyzw
  16: mov r0.w, cb4[0].x
  17: add r4.xyz, -v6.xyzx, cb3[r0.w + 64].xyzx
  18: ishl r0.w, cb4[0].x, l(2)
  19: mov r5.x, cb3[r0.w + 8].z
  20: mov r5.y, cb3[r0.w + 9].z
  21: mov r5.z, cb3[r0.w + 10].z
  22: dp3 r0.w, r4.xyzx, r5.xyzx
  23: add r4.xyz, v6.xyzx, -cb2[25].xyzx
  24: dp3 r1.w, r4.xyzx, r4.xyzx
  25: sqrt r1.w, r1.w
  26: add r1.w, -r0.w, r1.w
  27: mad r0.w, cb2[25].w, r1.w, r0.w
  28: mad_sat r0.w, r0.w, cb2[24].z, cb2[24].w
  29: eq r1.w, cb5[0].x, l(1.000000)
  30: if_nz r1.w
  31:   eq r1.w, cb5[0].y, l(1.000000)
  32:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  33:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  34:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  35:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  36:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  37:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  38:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  39:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  40:   mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
  41:   max r4.x, r1.w, r2.w
  42:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  43: else 
  44:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  45: endif 
  46: dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
  47: lt r2.w, r0.w, l(0.990000)
  48: if_nz r2.w
  49:   mul r4.xyzw, v6.yyyy, cb2[9].xyzw
  50:   mad r4.xyzw, cb2[8].xyzw, v6.xxxx, r4.xyzw
  51:   mad r4.xyzw, cb2[10].xyzw, v6.zzzz, r4.xyzw
  52:   add r4.xyzw, r4.xyzw, cb2[11].xyzw
  53:   div r4.xyz, r4.xyzx, r4.wwww
  54:   mad r5.xy, r4.xyxx, cb0[8].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  55:   round_ni r5.xy, r5.xyxx
  56:   mad r4.xy, r4.xyxx, cb0[8].zwzz, -r5.xyxx
  57:   add r6.xyzw, r4.xxyy, l(0.500000, 1.000000, 0.500000, 1.000000)
  58:   mul r7.xw, r6.xxxz, r6.xxxz
  59:   mad r5.zw, r7.xxxw, l(0.000000, 0.000000, 0.500000, 0.500000), -r4.xxxy
  60:   add r6.xz, -r4.xxyx, l(1.000000, 0.000000, 1.000000, 0.000000)
  61:   min r8.xy, r4.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  62:   mad r6.xz, -r8.xxyx, r8.xxyx, r6.xxzx
  63:   max r4.xy, r4.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  64:   mad r4.xy, -r4.xyxx, r4.xyxx, r6.ywyy
  65:   mov r8.x, r5.z
  66:   mov r8.y, r6.x
  67:   mov r8.z, r4.x
  68:   mov r8.w, r7.x
  69:   mul r8.xyzw, r8.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  70:   mov r7.x, r5.w
  71:   mov r7.y, r6.z
  72:   mov r7.z, r4.y
  73:   mul r6.xyzw, r7.xyzw, l(0.444440, 0.444440, 0.444440, 0.222220)
  74:   add r7.xyzw, r8.ywyw, r8.xzxz
  75:   add r9.xyzw, r6.yyww, r6.xxzz
  76:   div r4.xy, r8.ywyy, r7.zwzz
  77:   add r4.xy, r4.xyxx, l(-1.500000, 0.500000, 0.000000, 0.000000)
  78:   div r5.zw, r6.yyyw, r9.yyyw
  79:   add r5.zw, r5.zzzw, l(0.000000, 0.000000, -1.500000, 0.500000)
  80:   mul r6.xy, r4.xyxx, cb0[8].xxxx
  81:   mul r6.zw, r5.zzzw, cb0[8].yyyy
  82:   mul r7.xyzw, r7.xyzw, r9.xyzw
  83:   mad r8.xyzw, r5.xyxy, cb0[8].xyxy, r6.xzyz
  84:   sample_c_lz r2.w, r8.xyxx, t4.xxxx, s1, r4.z
  85:   sample_c_lz r4.x, r8.zwzz, t4.xxxx, s1, r4.z
  86:   mul r4.x, r4.x, r7.y
  87:   mad r2.w, r7.x, r2.w, r4.x
  88:   mad r5.xyzw, r5.xyxy, cb0[8].xyxy, r6.xwyw
  89:   sample_c_lz r4.x, r5.xyxx, t4.xxxx, s1, r4.z
  90:   mad r2.w, r7.z, r4.x, r2.w
  91:   sample_c_lz r4.x, r5.zwzz, t4.xxxx, s1, r4.z
  92:   mad r2.w, r7.w, r4.x, r2.w
  93:   add r4.x, -cb2[24].x, l(1.000000)
  94:   mad r2.w, r2.w, r4.x, cb2[24].x
  95: else 
  96:   mov r2.w, l(1.000000)
  97: endif 
  98: add r1.w, r1.w, -r2.w
  99: mad r0.w, r0.w, r1.w, r2.w
 100: lt r1.w, l(0.000000), r3.z
 101: and r1.w, r1.w, l(0x3f800000)
 102: div r4.xy, r3.xyxx, r3.wwww
 103: add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
 104: sample r4.xyzw, r4.xyxx, t1.xyzw, s3
 105: mul r1.w, r1.w, r4.w
 106: dp3 r2.w, r3.xyzx, r3.xyzx
 107: sample r3.xyzw, r2.wwww, t2.xyzw, s4
 108: mul r1.w, r1.w, r3.x
 109: mul r0.w, r0.w, r1.w
 110: mov r3.x, v3.w
 111: mov r3.y, v4.w
 112: mov r3.z, v5.w
 113: dp3 r1.w, r3.xyzx, r3.xyzx
 114: rsq r1.w, r1.w
 115: mul r4.xyz, r1.wwww, r3.xyzx
 116: mul r5.xyz, r0.wwww, cb0[2].xyzx
 117: add r0.w, -cb0[13].w, l(1.000000)
 118: mad r3.xyz, r3.xyzx, r1.wwww, -r2.xyzx
 119: dp3 r1.w, r3.xyzx, r3.xyzx
 120: max r1.w, r1.w, l(0.001000)
 121: rsq r1.w, r1.w
 122: mul r3.xyz, r1.wwww, r3.xyzx
 123: dp3 r1.w, r1.xyzx, -r2.xyzx
 124: dp3_sat r2.x, r1.xyzx, r4.xyzx
 125: dp3_sat r1.x, r1.xyzx, r3.xyzx
 126: dp3_sat r1.y, r4.xyzx, r3.xyzx
 127: mul r1.z, r1.y, r1.y
 128: dp2 r1.z, r1.zzzz, r0.wwww
 129: add r1.z, r1.z, l(-0.500000)
 130: add r2.y, -r2.x, l(1.000000)
 131: mul r2.z, r2.y, r2.y
 132: mul r2.z, r2.z, r2.z
 133: mul r2.y, r2.y, r2.z
 134: mad r2.y, r1.z, r2.y, l(1.000000)
 135: add r2.z, -|r1.w|, l(1.000000)
 136: mul r2.w, r2.z, r2.z
 137: mul r2.w, r2.w, r2.w
 138: mul r2.z, r2.z, r2.w
 139: mad r1.z, r1.z, r2.z, l(1.000000)
 140: mul r1.z, r1.z, r2.y
 141: mul r1.z, r2.x, r1.z
 142: mul r0.w, r0.w, r0.w
 143: max r0.w, r0.w, l(0.002000)
 144: add r2.y, -r0.w, l(1.000000)
 145: mad r2.z, |r1.w|, r2.y, r0.w
 146: mad r2.y, r2.x, r2.y, r0.w
 147: mul r1.w, |r1.w|, r2.y
 148: mad r1.w, r2.x, r2.z, r1.w
 149: add r1.w, r1.w, l(0.000010)
 150: div r1.w, l(0.500000), r1.w
 151: mul r0.w, r0.w, r0.w
 152: mad r2.y, r1.x, r0.w, -r1.x
 153: mad r1.x, r2.y, r1.x, l(1.000000)
 154: mul r0.w, r0.w, l(0.318310)
 155: mad r1.x, r1.x, r1.x, l(0.000000)
 156: div r0.w, r0.w, r1.x
 157: mul r0.w, r0.w, r1.w
 158: mul r0.w, r0.w, l(3.141593)
 159: mul r0.w, r2.x, r0.w
 160: max r0.w, r0.w, l(0.000000)
 161: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
 162: ne r1.x, r1.x, l(0.000000)
 163: and r1.x, r1.x, l(0x3f800000)
 164: mul r0.w, r0.w, r1.x
 165: mul r1.xzw, r1.zzzz, r5.xxyz
 166: mul r2.xyz, r5.xyzx, r0.wwww
 167: add r0.w, -r1.y, l(1.000000)
 168: mul r1.y, r0.w, r0.w
 169: mul r1.y, r1.y, r1.y
 170: mul r0.w, r0.w, r1.y
 171: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 172: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
 173: mul r2.xyz, r2.xyzx, r3.xyzx
 174: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
 175: mov o0.w, l(1.000000)
 176: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r0.y, r0.y, cb1[5].x
  32: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  33: mov o7.zw, r0.zzzw
  34: add o7.xy, r1.zzzz, r1.xwxx
  35: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 93 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s2
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  14: mov r5.x, cb4[9].z
  15: mov r5.y, cb4[10].z
  16: mov r5.z, cb4[11].z
  17: dp3 r2.w, r4.xyzx, r5.xyzx
  18: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  19: dp3 r3.w, r4.xyzx, r4.xyzx
  20: sqrt r3.w, r3.w
  21: add r3.w, -r2.w, r3.w
  22: mad r2.w, cb3[25].w, r3.w, r2.w
  23: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  24: eq r3.w, cb5[0].x, l(1.000000)
  25: if_nz r3.w
  26:   eq r3.w, cb5[0].y, l(1.000000)
  27:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  28:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  29:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  30:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  31:   movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
  32:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  33:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  34:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  35:   mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
  36:   max r4.x, r3.w, r4.y
  37:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  38: else 
  39:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  40: endif 
  41: dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
  42: div r4.xy, v7.xyxx, v7.wwww
  43: sample r4.xyzw, r4.xyxx, t2.xyzw, s3
  44: add r3.w, r3.w, -r4.x
  45: mad r2.w, r2.w, r3.w, r4.x
  46: mul r4.xyz, r2.wwww, cb0[2].xyzx
  47: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  48: mov r5.x, v3.w
  49: mov r5.y, v4.w
  50: mov r5.z, v5.w
  51: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  52: dp3 r1.w, r6.xyzx, r6.xyzx
  53: max r1.w, r1.w, l(0.001000)
  54: rsq r1.w, r1.w
  55: mul r6.xyz, r1.wwww, r6.xyzx
  56: dp3 r1.w, r2.xyzx, -r3.xyzx
  57: dp3_sat r2.w, r2.xyzx, r5.xyzx
  58: dp3_sat r2.x, r2.xyzx, r6.xyzx
  59: dp3_sat r2.y, r5.xyzx, r6.xyzx
  60: mul r2.z, r2.y, r2.y
  61: dp2 r2.z, r2.zzzz, r0.wwww
  62: add r2.z, r2.z, l(-0.500000)
  63: add r3.x, -r2.w, l(1.000000)
  64: mul r3.y, r3.x, r3.x
  65: mul r3.y, r3.y, r3.y
  66: mul r3.x, r3.x, r3.y
  67: mad r3.x, r2.z, r3.x, l(1.000000)
  68: add r3.y, -|r1.w|, l(1.000000)
  69: mul r3.z, r3.y, r3.y
  70: mul r3.z, r3.z, r3.z
  71: mul r3.y, r3.y, r3.z
  72: mad r2.z, r2.z, r3.y, l(1.000000)
  73: mul r2.z, r2.z, r3.x
  74: mul r2.z, r2.w, r2.z
  75: mul r0.w, r0.w, r0.w
  76: max r0.w, r0.w, l(0.002000)
  77: add r3.x, -r0.w, l(1.000000)
  78: mad r3.y, |r1.w|, r3.x, r0.w
  79: mad r3.x, r2.w, r3.x, r0.w
  80: mul r1.w, |r1.w|, r3.x
  81: mad r1.w, r2.w, r3.y, r1.w
  82: add r1.w, r1.w, l(0.000010)
  83: div r1.w, l(0.500000), r1.w
  84: mul r0.w, r0.w, r0.w
  85: mad r3.x, r2.x, r0.w, -r2.x
  86: mad r2.x, r3.x, r2.x, l(1.000000)
  87: mul r0.w, r0.w, l(0.318310)
  88: mad r2.x, r2.x, r2.x, l(0.000000)
  89: div r0.w, r0.w, r2.x
  90: mul r0.w, r0.w, r1.w
  91: mul r0.w, r0.w, l(3.141593)
  92: mul r0.w, r2.w, r0.w
  93: max r0.w, r0.w, l(0.000000)
  94: dp3 r1.w, r0.xyzx, r0.xyzx
  95: ne r1.w, r1.w, l(0.000000)
  96: and r1.w, r1.w, l(0x3f800000)
  97: mul r0.w, r0.w, r1.w
  98: mul r2.xzw, r2.zzzz, r4.xxyz
  99: mul r3.xyz, r4.xyzx, r0.wwww
 100: add r0.w, -r2.y, l(1.000000)
 101: mul r1.w, r0.w, r0.w
 102: mul r1.w, r1.w, r1.w
 103: mul r0.w, r0.w, r1.w
 104: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 105: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 106: mul r0.xyz, r0.xyzx, r3.xyzx
 107: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 108: mov o0.w, l(1.000000)
 109: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 4 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 5 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[68], dynamicIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: ishl r1.x, cb5[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb4[r1.x + 25].xyzw
   6: mad r2.xyzw, cb4[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb4[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  16: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  19: mov r1.w, cb5[0].x
  20: add o2.xyz, r1.xyzx, -cb4[r1.w + 64].xyzx
  21: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  22: mov o6.xyz, r1.xyzx
  23: mov r2.w, l(0)
  24: mov o3.xyzw, r2.wwwx
  25: mov o4.xyzw, r2.wwwy
  26: mov o5.w, r2.z
  27: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  28: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  29: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  30: dp3 r2.x, r1.xyzx, r1.xyzx
  31: rsq r2.x, r2.x
  32: mul o5.xyz, r1.xyzx, r2.xxxx
  33: mul r0.y, r0.y, cb1[4].x
  34: mul r2.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  35: add r0.xy, r2.zzzz, r2.xwxx
  36: mul r1.xy, r0.wwww, cb4[r1.w + 66].zwzz
  37: mad o7.xy, r0.xyxx, cb4[r1.w + 66].xyxx, r1.xyxx
  38: mov o7.zw, r0.zzzw
  39: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 94 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s2
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mov r2.w, cb4[0].x
  14: add r4.xyz, -v6.xyzx, cb3[r2.w + 64].xyzx
  15: ishl r2.w, cb4[0].x, l(2)
  16: mov r5.x, cb3[r2.w + 8].z
  17: mov r5.y, cb3[r2.w + 9].z
  18: mov r5.z, cb3[r2.w + 10].z
  19: dp3 r2.w, r4.xyzx, r5.xyzx
  20: add r4.xyz, v6.xyzx, -cb2[25].xyzx
  21: dp3 r3.w, r4.xyzx, r4.xyzx
  22: sqrt r3.w, r3.w
  23: add r3.w, -r2.w, r3.w
  24: mad r2.w, cb2[25].w, r3.w, r2.w
  25: mad_sat r2.w, r2.w, cb2[24].z, cb2[24].w
  26: eq r3.w, cb5[0].x, l(1.000000)
  27: if_nz r3.w
  28:   eq r3.w, cb5[0].y, l(1.000000)
  29:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  30:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  31:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  32:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  33:   movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
  34:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  35:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  36:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  37:   mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
  38:   max r4.x, r3.w, r4.y
  39:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  40: else 
  41:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  42: endif 
  43: dp4_sat r3.w, r4.xyzw, cb1[46].xyzw
  44: div r4.xy, v7.xyxx, v7.wwww
  45: sample r4.xyzw, r4.xyxx, t2.xyzw, s3
  46: add r3.w, r3.w, -r4.x
  47: mad r2.w, r2.w, r3.w, r4.x
  48: mul r4.xyz, r2.wwww, cb0[2].xyzx
  49: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  50: mov r5.x, v3.w
  51: mov r5.y, v4.w
  52: mov r5.z, v5.w
  53: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  54: dp3 r1.w, r6.xyzx, r6.xyzx
  55: max r1.w, r1.w, l(0.001000)
  56: rsq r1.w, r1.w
  57: mul r6.xyz, r1.wwww, r6.xyzx
  58: dp3 r1.w, r2.xyzx, -r3.xyzx
  59: dp3_sat r2.w, r2.xyzx, r5.xyzx
  60: dp3_sat r2.x, r2.xyzx, r6.xyzx
  61: dp3_sat r2.y, r5.xyzx, r6.xyzx
  62: mul r2.z, r2.y, r2.y
  63: dp2 r2.z, r2.zzzz, r0.wwww
  64: add r2.z, r2.z, l(-0.500000)
  65: add r3.x, -r2.w, l(1.000000)
  66: mul r3.y, r3.x, r3.x
  67: mul r3.y, r3.y, r3.y
  68: mul r3.x, r3.x, r3.y
  69: mad r3.x, r2.z, r3.x, l(1.000000)
  70: add r3.y, -|r1.w|, l(1.000000)
  71: mul r3.z, r3.y, r3.y
  72: mul r3.z, r3.z, r3.z
  73: mul r3.y, r3.y, r3.z
  74: mad r2.z, r2.z, r3.y, l(1.000000)
  75: mul r2.z, r2.z, r3.x
  76: mul r2.z, r2.w, r2.z
  77: mul r0.w, r0.w, r0.w
  78: max r0.w, r0.w, l(0.002000)
  79: add r3.x, -r0.w, l(1.000000)
  80: mad r3.y, |r1.w|, r3.x, r0.w
  81: mad r3.x, r2.w, r3.x, r0.w
  82: mul r1.w, |r1.w|, r3.x
  83: mad r1.w, r2.w, r3.y, r1.w
  84: add r1.w, r1.w, l(0.000010)
  85: div r1.w, l(0.500000), r1.w
  86: mul r0.w, r0.w, r0.w
  87: mad r3.x, r2.x, r0.w, -r2.x
  88: mad r2.x, r3.x, r2.x, l(1.000000)
  89: mul r0.w, r0.w, l(0.318310)
  90: mad r2.x, r2.x, r2.x, l(0.000000)
  91: div r0.w, r0.w, r2.x
  92: mul r0.w, r0.w, r1.w
  93: mul r0.w, r0.w, l(3.141593)
  94: mul r0.w, r2.w, r0.w
  95: max r0.w, r0.w, l(0.000000)
  96: dp3 r1.w, r0.xyzx, r0.xyzx
  97: ne r1.w, r1.w, l(0.000000)
  98: and r1.w, r1.w, l(0x3f800000)
  99: mul r0.w, r0.w, r1.w
 100: mul r2.xzw, r2.zzzz, r4.xxyz
 101: mul r3.xyz, r4.xyzx, r0.wwww
 102: add r0.w, -r2.y, l(1.000000)
 103: mul r1.w, r0.w, r0.w
 104: mul r1.w, r1.w, r1.w
 105: mul r0.w, r0.w, r1.w
 106: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 107: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 108: mul r0.xyz, r0.xyzx, r3.xyzx
 109: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 110: mov o0.w, l(1.000000)
 111: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 36 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r1.xyzx
  28: mov o3.w, r3.x
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r4.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r1.xyzx
  38: mul r1.x, v4.w, cb3[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r3.y
  41: mov o5.w, r3.z
  42: mul r0.y, r0.y, cb1[5].x
  43: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  44: mov o7.zw, r0.zzzw
  45: add o7.xy, r1.zzzz, r1.xwxx
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 103 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_BumpMap" to slot 2
Set 2D Texture "_ShadowMapTexture" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  25: mov r5.x, cb4[9].z
  26: mov r5.y, cb4[10].z
  27: mov r5.z, cb4[11].z
  28: dp3 r2.w, r4.xyzx, r5.xyzx
  29: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  30: dp3 r3.w, r4.xyzx, r4.xyzx
  31: sqrt r3.w, r3.w
  32: add r3.w, -r2.w, r3.w
  33: mad r2.w, cb3[25].w, r3.w, r2.w
  34: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  35: eq r3.w, cb5[0].x, l(1.000000)
  36: if_nz r3.w
  37:   eq r3.w, cb5[0].y, l(1.000000)
  38:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  39:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  40:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  41:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  42:   movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
  43:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  44:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  45:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  46:   mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
  47:   max r4.x, r3.w, r4.y
  48:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  49: else 
  50:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  51: endif 
  52: dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
  53: div r4.xy, v7.xyxx, v7.wwww
  54: sample r4.xyzw, r4.xyxx, t3.xyzw, s4
  55: add r3.w, r3.w, -r4.x
  56: mad r2.w, r2.w, r3.w, r4.x
  57: mul r4.xyz, r2.wwww, cb0[2].xyzx
  58: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  59: mov r5.x, v3.w
  60: mov r5.y, v4.w
  61: mov r5.z, v5.w
  62: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  63: dp3 r1.w, r6.xyzx, r6.xyzx
  64: max r1.w, r1.w, l(0.001000)
  65: rsq r1.w, r1.w
  66: mul r6.xyz, r1.wwww, r6.xyzx
  67: dp3 r1.w, r2.xyzx, -r3.xyzx
  68: dp3_sat r2.w, r2.xyzx, r5.xyzx
  69: dp3_sat r2.x, r2.xyzx, r6.xyzx
  70: dp3_sat r2.y, r5.xyzx, r6.xyzx
  71: mul r2.z, r2.y, r2.y
  72: dp2 r2.z, r2.zzzz, r0.wwww
  73: add r2.z, r2.z, l(-0.500000)
  74: add r3.x, -r2.w, l(1.000000)
  75: mul r3.y, r3.x, r3.x
  76: mul r3.y, r3.y, r3.y
  77: mul r3.x, r3.x, r3.y
  78: mad r3.x, r2.z, r3.x, l(1.000000)
  79: add r3.y, -|r1.w|, l(1.000000)
  80: mul r3.z, r3.y, r3.y
  81: mul r3.z, r3.z, r3.z
  82: mul r3.y, r3.y, r3.z
  83: mad r2.z, r2.z, r3.y, l(1.000000)
  84: mul r2.z, r2.z, r3.x
  85: mul r2.z, r2.w, r2.z
  86: mul r0.w, r0.w, r0.w
  87: max r0.w, r0.w, l(0.002000)
  88: add r3.x, -r0.w, l(1.000000)
  89: mad r3.y, |r1.w|, r3.x, r0.w
  90: mad r3.x, r2.w, r3.x, r0.w
  91: mul r1.w, |r1.w|, r3.x
  92: mad r1.w, r2.w, r3.y, r1.w
  93: add r1.w, r1.w, l(0.000010)
  94: div r1.w, l(0.500000), r1.w
  95: mul r0.w, r0.w, r0.w
  96: mad r3.x, r2.x, r0.w, -r2.x
  97: mad r2.x, r3.x, r2.x, l(1.000000)
  98: mul r0.w, r0.w, l(0.318310)
  99: mad r2.x, r2.x, r2.x, l(0.000000)
 100: div r0.w, r0.w, r2.x
 101: mul r0.w, r0.w, r1.w
 102: mul r0.w, r0.w, l(3.141593)
 103: mul r0.w, r2.w, r0.w
 104: max r0.w, r0.w, l(0.000000)
 105: dp3 r1.w, r0.xyzx, r0.xyzx
 106: ne r1.w, r1.w, l(0.000000)
 107: and r1.w, r1.w, l(0x3f800000)
 108: mul r0.w, r0.w, r1.w
 109: mul r2.xzw, r2.zzzz, r4.xxyz
 110: mul r3.xyz, r4.xyzx, r0.wwww
 111: add r0.w, -r2.y, l(1.000000)
 112: mul r1.w, r0.w, r0.w
 113: mul r1.w, r1.w, r1.w
 114: mul r0.w, r0.w, r1.w
 115: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 116: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 117: mul r0.xyz, r0.xyzx, r3.xyzx
 118: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 119: mov o0.w, l(1.000000)
 120: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 4 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 5 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[68], dynamicIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: ishl r1.x, cb5[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb4[r1.x + 25].xyzw
   6: mad r2.xyzw, cb4[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb4[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  16: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  19: mov r1.w, cb5[0].x
  20: add o2.xyz, r1.xyzx, -cb4[r1.w + 64].xyzx
  21: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  22: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  23: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  24: dp3 r2.w, r2.xyzx, r2.xyzx
  25: rsq r2.w, r2.w
  26: mul r2.xyz, r2.wwww, r2.xyzx
  27: mov o3.xyz, r2.xyzx
  28: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  29: mov o6.xyz, r1.xyzx
  30: mov o3.w, r3.x
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r2.w, r1.xyzx, r1.xyzx
  35: rsq r2.w, r2.w
  36: mul r1.xyz, r1.xyzx, r2.wwww
  37: mul r4.xyz, r2.yzxy, r1.zxyz
  38: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  39: mov o5.xyz, r1.xyzx
  40: mul r1.x, v4.w, cb3[9].w
  41: mul o4.xyz, r1.xxxx, r2.xyzx
  42: mov o4.w, r3.y
  43: mov o5.w, r3.z
  44: mul r0.y, r0.y, cb1[4].x
  45: mul r2.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  46: add r0.xy, r2.zzzz, r2.xwxx
  47: mul r1.xy, r0.wwww, cb4[r1.w + 66].zwzz
  48: mad o7.xy, r0.xyxx, cb4[r1.w + 66].xyxx, r1.xyxx
  49: mov o7.zw, r0.zzzw
  50: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 104 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_BumpMap" to slot 2
Set 2D Texture "_ShadowMapTexture" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: mov r2.w, cb4[0].x
  25: add r4.xyz, -v6.xyzx, cb3[r2.w + 64].xyzx
  26: ishl r2.w, cb4[0].x, l(2)
  27: mov r5.x, cb3[r2.w + 8].z
  28: mov r5.y, cb3[r2.w + 9].z
  29: mov r5.z, cb3[r2.w + 10].z
  30: dp3 r2.w, r4.xyzx, r5.xyzx
  31: add r4.xyz, v6.xyzx, -cb2[25].xyzx
  32: dp3 r3.w, r4.xyzx, r4.xyzx
  33: sqrt r3.w, r3.w
  34: add r3.w, -r2.w, r3.w
  35: mad r2.w, cb2[25].w, r3.w, r2.w
  36: mad_sat r2.w, r2.w, cb2[24].z, cb2[24].w
  37: eq r3.w, cb5[0].x, l(1.000000)
  38: if_nz r3.w
  39:   eq r3.w, cb5[0].y, l(1.000000)
  40:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  41:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  42:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  43:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  44:   movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
  45:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  46:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  47:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  48:   mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
  49:   max r4.x, r3.w, r4.y
  50:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  51: else 
  52:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  53: endif 
  54: dp4_sat r3.w, r4.xyzw, cb1[46].xyzw
  55: div r4.xy, v7.xyxx, v7.wwww
  56: sample r4.xyzw, r4.xyxx, t3.xyzw, s4
  57: add r3.w, r3.w, -r4.x
  58: mad r2.w, r2.w, r3.w, r4.x
  59: mul r4.xyz, r2.wwww, cb0[2].xyzx
  60: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  61: mov r5.x, v3.w
  62: mov r5.y, v4.w
  63: mov r5.z, v5.w
  64: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  65: dp3 r1.w, r6.xyzx, r6.xyzx
  66: max r1.w, r1.w, l(0.001000)
  67: rsq r1.w, r1.w
  68: mul r6.xyz, r1.wwww, r6.xyzx
  69: dp3 r1.w, r2.xyzx, -r3.xyzx
  70: dp3_sat r2.w, r2.xyzx, r5.xyzx
  71: dp3_sat r2.x, r2.xyzx, r6.xyzx
  72: dp3_sat r2.y, r5.xyzx, r6.xyzx
  73: mul r2.z, r2.y, r2.y
  74: dp2 r2.z, r2.zzzz, r0.wwww
  75: add r2.z, r2.z, l(-0.500000)
  76: add r3.x, -r2.w, l(1.000000)
  77: mul r3.y, r3.x, r3.x
  78: mul r3.y, r3.y, r3.y
  79: mul r3.x, r3.x, r3.y
  80: mad r3.x, r2.z, r3.x, l(1.000000)
  81: add r3.y, -|r1.w|, l(1.000000)
  82: mul r3.z, r3.y, r3.y
  83: mul r3.z, r3.z, r3.z
  84: mul r3.y, r3.y, r3.z
  85: mad r2.z, r2.z, r3.y, l(1.000000)
  86: mul r2.z, r2.z, r3.x
  87: mul r2.z, r2.w, r2.z
  88: mul r0.w, r0.w, r0.w
  89: max r0.w, r0.w, l(0.002000)
  90: add r3.x, -r0.w, l(1.000000)
  91: mad r3.y, |r1.w|, r3.x, r0.w
  92: mad r3.x, r2.w, r3.x, r0.w
  93: mul r1.w, |r1.w|, r3.x
  94: mad r1.w, r2.w, r3.y, r1.w
  95: add r1.w, r1.w, l(0.000010)
  96: div r1.w, l(0.500000), r1.w
  97: mul r0.w, r0.w, r0.w
  98: mad r3.x, r2.x, r0.w, -r2.x
  99: mad r2.x, r3.x, r2.x, l(1.000000)
 100: mul r0.w, r0.w, l(0.318310)
 101: mad r2.x, r2.x, r2.x, l(0.000000)
 102: div r0.w, r0.w, r2.x
 103: mul r0.w, r0.w, r1.w
 104: mul r0.w, r0.w, l(3.141593)
 105: mul r0.w, r2.w, r0.w
 106: max r0.w, r0.w, l(0.000000)
 107: dp3 r1.w, r0.xyzx, r0.xyzx
 108: ne r1.w, r1.w, l(0.000000)
 109: and r1.w, r1.w, l(0x3f800000)
 110: mul r0.w, r0.w, r1.w
 111: mul r2.xzw, r2.zzzz, r4.xxyz
 112: mul r3.xyz, r4.xyzx, r0.wwww
 113: add r0.w, -r2.y, l(1.000000)
 114: mul r1.w, r0.w, r0.w
 115: mul r1.w, r1.w, r1.w
 116: mul r0.w, r0.w, r1.w
 117: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 118: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 119: mul r0.xyz, r0.xyzx, r3.xyzx
 120: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 121: mov o0.w, l(1.000000)
 122: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r0.y, r0.y, cb1[5].x
  32: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  33: mov o7.zw, r0.zzzw
  34: add o7.xy, r1.zzzz, r1.xwxx
  35: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 93 math, 6 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: add r3.xyz, -v6.xyzx, cb1[4].xyzx
  13: mov r4.x, cb4[9].z
  14: mov r4.y, cb4[10].z
  15: mov r4.z, cb4[11].z
  16: dp3 r1.w, r3.xyzx, r4.xyzx
  17: add r3.xyz, v6.xyzx, -cb3[25].xyzx
  18: dp3 r2.w, r3.xyzx, r3.xyzx
  19: sqrt r2.w, r2.w
  20: add r2.w, -r1.w, r2.w
  21: mad r1.w, cb3[25].w, r2.w, r1.w
  22: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  23: eq r2.w, cb5[0].x, l(1.000000)
  24: if_nz r2.w
  25:   eq r2.w, cb5[0].y, l(1.000000)
  26:   mul r3.xyz, v6.yyyy, cb5[2].xyzx
  27:   mad r3.xyz, cb5[1].xyzx, v6.xxxx, r3.xyzx
  28:   mad r3.xyz, cb5[3].xyzx, v6.zzzz, r3.xyzx
  29:   add r3.xyz, r3.xyzx, cb5[4].xyzx
  30:   movc r3.xyz, r2.wwww, r3.xyzx, v6.xyzx
  31:   add r3.xyz, r3.xyzx, -cb5[6].xyzx
  32:   mul r3.yzw, r3.xxyz, cb5[5].xxyz
  33:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  34:   mad r3.y, cb5[0].z, l(0.500000), l(0.750000)
  35:   max r3.x, r2.w, r3.y
  36:   sample r3.xyzw, r3.xzwx, t2.xyzw, s0
  37: else 
  38:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  39: endif 
  40: dp4_sat r2.w, r3.xyzw, cb2[46].xyzw
  41: div r3.xy, v7.xyxx, v7.wwww
  42: sample r3.xyzw, r3.xyxx, t1.xyzw, s2
  43: add r2.w, r2.w, -r3.x
  44: mad r1.w, r1.w, r2.w, r3.x
  45: mul r3.xyz, r1.wwww, cb0[2].xyzx
  46: add r1.w, -cb0[8].w, l(1.000000)
  47: mov r4.x, v3.w
  48: mov r4.y, v4.w
  49: mov r4.z, v5.w
  50: mad r5.xyz, -v2.xyzx, r0.wwww, r4.xyzx
  51: dp3 r0.w, r5.xyzx, r5.xyzx
  52: max r0.w, r0.w, l(0.001000)
  53: rsq r0.w, r0.w
  54: mul r5.xyz, r0.wwww, r5.xyzx
  55: dp3 r0.w, r1.xyzx, -r2.xyzx
  56: dp3_sat r2.x, r1.xyzx, r4.xyzx
  57: dp3_sat r1.x, r1.xyzx, r5.xyzx
  58: dp3_sat r1.y, r4.xyzx, r5.xyzx
  59: mul r1.z, r1.y, r1.y
  60: dp2 r1.z, r1.zzzz, r1.wwww
  61: add r1.z, r1.z, l(-0.500000)
  62: add r2.y, -r2.x, l(1.000000)
  63: mul r2.z, r2.y, r2.y
  64: mul r2.z, r2.z, r2.z
  65: mul r2.y, r2.y, r2.z
  66: mad r2.y, r1.z, r2.y, l(1.000000)
  67: add r2.z, -|r0.w|, l(1.000000)
  68: mul r2.w, r2.z, r2.z
  69: mul r2.w, r2.w, r2.w
  70: mul r2.z, r2.z, r2.w
  71: mad r1.z, r1.z, r2.z, l(1.000000)
  72: mul r1.z, r1.z, r2.y
  73: mul r1.z, r2.x, r1.z
  74: mul r1.w, r1.w, r1.w
  75: max r1.w, r1.w, l(0.002000)
  76: add r2.y, -r1.w, l(1.000000)
  77: mad r2.z, |r0.w|, r2.y, r1.w
  78: mad r2.y, r2.x, r2.y, r1.w
  79: mul r0.w, |r0.w|, r2.y
  80: mad r0.w, r2.x, r2.z, r0.w
  81: add r0.w, r0.w, l(0.000010)
  82: div r0.w, l(0.500000), r0.w
  83: mul r1.w, r1.w, r1.w
  84: mad r2.y, r1.x, r1.w, -r1.x
  85: mad r1.x, r2.y, r1.x, l(1.000000)
  86: mul r1.w, r1.w, l(0.318310)
  87: mad r1.x, r1.x, r1.x, l(0.000000)
  88: div r1.x, r1.w, r1.x
  89: mul r0.w, r0.w, r1.x
  90: mul r0.w, r0.w, l(3.141593)
  91: mul r0.w, r2.x, r0.w
  92: max r0.w, r0.w, l(0.000000)
  93: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
  94: ne r1.x, r1.x, l(0.000000)
  95: and r1.x, r1.x, l(0x3f800000)
  96: mul r0.w, r0.w, r1.x
  97: mul r1.xzw, r1.zzzz, r3.xxyz
  98: mul r2.xyz, r3.xyzx, r0.wwww
  99: add r0.w, -r1.y, l(1.000000)
 100: mul r1.y, r0.w, r0.w
 101: mul r1.y, r1.y, r1.y
 102: mul r0.w, r0.w, r1.y
 103: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 104: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
 105: mul r2.xyz, r2.xyzx, r3.xyzx
 106: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
 107: mov o0.w, l(1.000000)
 108: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 4 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 5 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[68], dynamicIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: ishl r1.x, cb5[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb4[r1.x + 25].xyzw
   6: mad r2.xyzw, cb4[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb4[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  16: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  19: mov r1.w, cb5[0].x
  20: add o2.xyz, r1.xyzx, -cb4[r1.w + 64].xyzx
  21: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  22: mov o6.xyz, r1.xyzx
  23: mov r2.w, l(0)
  24: mov o3.xyzw, r2.wwwx
  25: mov o4.xyzw, r2.wwwy
  26: mov o5.w, r2.z
  27: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  28: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  29: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  30: dp3 r2.x, r1.xyzx, r1.xyzx
  31: rsq r2.x, r2.x
  32: mul o5.xyz, r1.xyzx, r2.xxxx
  33: mul r0.y, r0.y, cb1[4].x
  34: mul r2.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  35: add r0.xy, r2.zzzz, r2.xwxx
  36: mul r1.xy, r0.wwww, cb4[r1.w + 66].zwzz
  37: mad o7.xy, r0.xyxx, cb4[r1.w + 66].xyxx, r1.xyxx
  38: mov o7.zw, r0.zzzw
  39: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 94 math, 6 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: mov r1.w, cb4[0].x
  13: add r3.xyz, -v6.xyzx, cb3[r1.w + 64].xyzx
  14: ishl r1.w, cb4[0].x, l(2)
  15: mov r4.x, cb3[r1.w + 8].z
  16: mov r4.y, cb3[r1.w + 9].z
  17: mov r4.z, cb3[r1.w + 10].z
  18: dp3 r1.w, r3.xyzx, r4.xyzx
  19: add r3.xyz, v6.xyzx, -cb2[25].xyzx
  20: dp3 r2.w, r3.xyzx, r3.xyzx
  21: sqrt r2.w, r2.w
  22: add r2.w, -r1.w, r2.w
  23: mad r1.w, cb2[25].w, r2.w, r1.w
  24: mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
  25: eq r2.w, cb5[0].x, l(1.000000)
  26: if_nz r2.w
  27:   eq r2.w, cb5[0].y, l(1.000000)
  28:   mul r3.xyz, v6.yyyy, cb5[2].xyzx
  29:   mad r3.xyz, cb5[1].xyzx, v6.xxxx, r3.xyzx
  30:   mad r3.xyz, cb5[3].xyzx, v6.zzzz, r3.xyzx
  31:   add r3.xyz, r3.xyzx, cb5[4].xyzx
  32:   movc r3.xyz, r2.wwww, r3.xyzx, v6.xyzx
  33:   add r3.xyz, r3.xyzx, -cb5[6].xyzx
  34:   mul r3.yzw, r3.xxyz, cb5[5].xxyz
  35:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  36:   mad r3.y, cb5[0].z, l(0.500000), l(0.750000)
  37:   max r3.x, r2.w, r3.y
  38:   sample r3.xyzw, r3.xzwx, t2.xyzw, s0
  39: else 
  40:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  41: endif 
  42: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  43: div r3.xy, v7.xyxx, v7.wwww
  44: sample r3.xyzw, r3.xyxx, t1.xyzw, s2
  45: add r2.w, r2.w, -r3.x
  46: mad r1.w, r1.w, r2.w, r3.x
  47: mul r3.xyz, r1.wwww, cb0[2].xyzx
  48: add r1.w, -cb0[8].w, l(1.000000)
  49: mov r4.x, v3.w
  50: mov r4.y, v4.w
  51: mov r4.z, v5.w
  52: mad r5.xyz, -v2.xyzx, r0.wwww, r4.xyzx
  53: dp3 r0.w, r5.xyzx, r5.xyzx
  54: max r0.w, r0.w, l(0.001000)
  55: rsq r0.w, r0.w
  56: mul r5.xyz, r0.wwww, r5.xyzx
  57: dp3 r0.w, r1.xyzx, -r2.xyzx
  58: dp3_sat r2.x, r1.xyzx, r4.xyzx
  59: dp3_sat r1.x, r1.xyzx, r5.xyzx
  60: dp3_sat r1.y, r4.xyzx, r5.xyzx
  61: mul r1.z, r1.y, r1.y
  62: dp2 r1.z, r1.zzzz, r1.wwww
  63: add r1.z, r1.z, l(-0.500000)
  64: add r2.y, -r2.x, l(1.000000)
  65: mul r2.z, r2.y, r2.y
  66: mul r2.z, r2.z, r2.z
  67: mul r2.y, r2.y, r2.z
  68: mad r2.y, r1.z, r2.y, l(1.000000)
  69: add r2.z, -|r0.w|, l(1.000000)
  70: mul r2.w, r2.z, r2.z
  71: mul r2.w, r2.w, r2.w
  72: mul r2.z, r2.z, r2.w
  73: mad r1.z, r1.z, r2.z, l(1.000000)
  74: mul r1.z, r1.z, r2.y
  75: mul r1.z, r2.x, r1.z
  76: mul r1.w, r1.w, r1.w
  77: max r1.w, r1.w, l(0.002000)
  78: add r2.y, -r1.w, l(1.000000)
  79: mad r2.z, |r0.w|, r2.y, r1.w
  80: mad r2.y, r2.x, r2.y, r1.w
  81: mul r0.w, |r0.w|, r2.y
  82: mad r0.w, r2.x, r2.z, r0.w
  83: add r0.w, r0.w, l(0.000010)
  84: div r0.w, l(0.500000), r0.w
  85: mul r1.w, r1.w, r1.w
  86: mad r2.y, r1.x, r1.w, -r1.x
  87: mad r1.x, r2.y, r1.x, l(1.000000)
  88: mul r1.w, r1.w, l(0.318310)
  89: mad r1.x, r1.x, r1.x, l(0.000000)
  90: div r1.x, r1.w, r1.x
  91: mul r0.w, r0.w, r1.x
  92: mul r0.w, r0.w, l(3.141593)
  93: mul r0.w, r2.x, r0.w
  94: max r0.w, r0.w, l(0.000000)
  95: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
  96: ne r1.x, r1.x, l(0.000000)
  97: and r1.x, r1.x, l(0x3f800000)
  98: mul r0.w, r0.w, r1.x
  99: mul r1.xzw, r1.zzzz, r3.xxyz
 100: mul r2.xyz, r3.xyzx, r0.wwww
 101: add r0.w, -r1.y, l(1.000000)
 102: mul r1.y, r0.w, r0.w
 103: mul r1.y, r1.y, r1.y
 104: mul r0.w, r0.w, r1.y
 105: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 106: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
 107: mul r2.xyz, r2.xyzx, r3.xyzx
 108: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
 109: mov o0.w, l(1.000000)
 110: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE SHADOWS_SCREEN 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: mov o0.xyzw, r1.xyzw
  10: eq r2.x, cb0[9].w, l(0.000000)
  11: movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r2.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
  16: mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
  17: mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
  18: add o2.xyz, r2.xyzx, -cb1[4].xyzx
  19: mov o2.w, l(0)
  20: mad r3.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r2.xyzx
  22: mov r3.w, l(0)
  23: mov o3.xyzw, r3.wwwx
  24: mov o4.xyzw, r3.wwwy
  25: mov o5.w, r3.z
  26: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  27: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  28: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  29: dp3 r2.w, r2.xyzx, r2.xyzx
  30: rsq r2.w, r2.w
  31: mul o5.xyz, r2.wwww, r2.xyzx
  32: mul r2.xy, r0.yyyy, cb0[12].xyxx
  33: mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
  34: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  35: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  36: mul r0.x, r1.y, cb1[5].x
  37: mul r0.w, r0.x, l(0.500000)
  38: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  39: mov o8.zw, r1.zzzw
  40: add o8.xy, r0.zzzz, r0.xwxx
  41: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 98 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v8.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s2
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xy, v6.yyyy, cb0[12].xyxx
  14: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  15: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  16: add r4.xy, r4.xyxx, cb0[14].xyxx
  17: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  18: mov r6.x, cb4[9].z
  19: mov r6.y, cb4[10].z
  20: mov r6.z, cb4[11].z
  21: dp3 r2.w, r5.xyzx, r6.xyzx
  22: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  23: dp3 r3.w, r5.xyzx, r5.xyzx
  24: sqrt r3.w, r3.w
  25: add r3.w, -r2.w, r3.w
  26: mad r2.w, cb3[25].w, r3.w, r2.w
  27: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  28: eq r3.w, cb5[0].x, l(1.000000)
  29: if_nz r3.w
  30:   eq r3.w, cb5[0].y, l(1.000000)
  31:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  32:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  33:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  34:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  35:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  36:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  37:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  38:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  39:   mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
  40:   max r5.x, r3.w, r4.z
  41:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  42: else 
  43:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
  46: div r4.zw, v8.xxxy, v8.wwww
  47: sample r5.xyzw, r4.zwzz, t2.xyzw, s3
  48: add r3.w, r3.w, -r5.x
  49: mad r2.w, r2.w, r3.w, r5.x
  50: sample r4.xyzw, r4.xyxx, t3.xyzw, s4
  51: mul r2.w, r2.w, r4.w
  52: mul r4.xyz, r2.wwww, cb0[2].xyzx
  53: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  54: mov r5.x, v3.w
  55: mov r5.y, v4.w
  56: mov r5.z, v5.w
  57: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  58: dp3 r1.w, r6.xyzx, r6.xyzx
  59: max r1.w, r1.w, l(0.001000)
  60: rsq r1.w, r1.w
  61: mul r6.xyz, r1.wwww, r6.xyzx
  62: dp3 r1.w, r2.xyzx, -r3.xyzx
  63: dp3_sat r2.w, r2.xyzx, r5.xyzx
  64: dp3_sat r2.x, r2.xyzx, r6.xyzx
  65: dp3_sat r2.y, r5.xyzx, r6.xyzx
  66: mul r2.z, r2.y, r2.y
  67: dp2 r2.z, r2.zzzz, r0.wwww
  68: add r2.z, r2.z, l(-0.500000)
  69: add r3.x, -r2.w, l(1.000000)
  70: mul r3.y, r3.x, r3.x
  71: mul r3.y, r3.y, r3.y
  72: mul r3.x, r3.x, r3.y
  73: mad r3.x, r2.z, r3.x, l(1.000000)
  74: add r3.y, -|r1.w|, l(1.000000)
  75: mul r3.z, r3.y, r3.y
  76: mul r3.z, r3.z, r3.z
  77: mul r3.y, r3.y, r3.z
  78: mad r2.z, r2.z, r3.y, l(1.000000)
  79: mul r2.z, r2.z, r3.x
  80: mul r2.z, r2.w, r2.z
  81: mul r0.w, r0.w, r0.w
  82: max r0.w, r0.w, l(0.002000)
  83: add r3.x, -r0.w, l(1.000000)
  84: mad r3.y, |r1.w|, r3.x, r0.w
  85: mad r3.x, r2.w, r3.x, r0.w
  86: mul r1.w, |r1.w|, r3.x
  87: mad r1.w, r2.w, r3.y, r1.w
  88: add r1.w, r1.w, l(0.000010)
  89: div r1.w, l(0.500000), r1.w
  90: mul r0.w, r0.w, r0.w
  91: mad r3.x, r2.x, r0.w, -r2.x
  92: mad r2.x, r3.x, r2.x, l(1.000000)
  93: mul r0.w, r0.w, l(0.318310)
  94: mad r2.x, r2.x, r2.x, l(0.000000)
  95: div r0.w, r0.w, r2.x
  96: mul r0.w, r0.w, r1.w
  97: mul r0.w, r0.w, l(3.141593)
  98: mul r0.w, r2.w, r0.w
  99: max r0.w, r0.w, l(0.000000)
 100: dp3 r1.w, r0.xyzx, r0.xyzx
 101: ne r1.w, r1.w, l(0.000000)
 102: and r1.w, r1.w, l(0x3f800000)
 103: mul r0.w, r0.w, r1.w
 104: mul r2.xzw, r2.zzzz, r4.xxyz
 105: mul r3.xyz, r4.xyzx, r0.wwww
 106: add r0.w, -r2.y, l(1.000000)
 107: mul r1.w, r0.w, r0.w
 108: mul r1.w, r1.w, r1.w
 109: mul r0.w, r0.w, r1.w
 110: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 111: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 112: mul r0.xyz, r0.xyzx, r3.xyzx
 113: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 114: mov o0.w, l(1.000000)
 115: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 4 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 5 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[68], dynamicIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb5[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb4[r2.x + 25].xyzw
   7: mad r3.xyzw, cb4[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb4[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad r1.xyzw, cb4[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: mov o0.xyzw, r1.xyzw
  11: eq r2.x, cb0[9].w, l(0.000000)
  12: movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
  13: mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
  14: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mov o2.w, l(0)
  16: mul r2.xyz, v0.yyyy, cb3[1].xyzx
  17: mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
  18: mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
  19: mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
  20: mov r2.w, cb5[0].x
  21: add o2.xyz, r2.xyzx, -cb4[r2.w + 64].xyzx
  22: mad r3.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r2.xyzx
  24: mov r3.w, l(0)
  25: mov o3.xyzw, r3.wwwx
  26: mov o4.xyzw, r3.wwwy
  27: mov o5.w, r3.z
  28: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  29: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  30: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  31: dp3 r3.x, r2.xyzx, r2.xyzx
  32: rsq r3.x, r3.x
  33: mul o5.xyz, r2.xyzx, r3.xxxx
  34: mul r2.xy, r0.yyyy, cb0[12].xyxx
  35: mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
  36: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  37: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  38: mul r0.x, r1.y, cb1[4].x
  39: mul r0.w, r0.x, l(0.500000)
  40: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  41: add r0.xy, r0.zzzz, r0.xwxx
  42: mul r0.zw, r1.wwww, cb4[r2.w + 66].zzzw
  43: mad o8.xy, r0.xyxx, cb4[r2.w + 66].xyxx, r0.zwzz
  44: mov o8.zw, r1.zzzw
  45: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 99 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v8.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s2
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xy, v6.yyyy, cb0[12].xyxx
  14: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  15: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  16: add r4.xy, r4.xyxx, cb0[14].xyxx
  17: mov r2.w, cb4[0].x
  18: add r5.xyz, -v6.xyzx, cb3[r2.w + 64].xyzx
  19: ishl r2.w, cb4[0].x, l(2)
  20: mov r6.x, cb3[r2.w + 8].z
  21: mov r6.y, cb3[r2.w + 9].z
  22: mov r6.z, cb3[r2.w + 10].z
  23: dp3 r2.w, r5.xyzx, r6.xyzx
  24: add r5.xyz, v6.xyzx, -cb2[25].xyzx
  25: dp3 r3.w, r5.xyzx, r5.xyzx
  26: sqrt r3.w, r3.w
  27: add r3.w, -r2.w, r3.w
  28: mad r2.w, cb2[25].w, r3.w, r2.w
  29: mad_sat r2.w, r2.w, cb2[24].z, cb2[24].w
  30: eq r3.w, cb5[0].x, l(1.000000)
  31: if_nz r3.w
  32:   eq r3.w, cb5[0].y, l(1.000000)
  33:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  34:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  35:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  36:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  37:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  38:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  39:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  40:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  41:   mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
  42:   max r5.x, r3.w, r4.z
  43:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  44: else 
  45:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  46: endif 
  47: dp4_sat r3.w, r5.xyzw, cb1[46].xyzw
  48: div r4.zw, v8.xxxy, v8.wwww
  49: sample r5.xyzw, r4.zwzz, t2.xyzw, s3
  50: add r3.w, r3.w, -r5.x
  51: mad r2.w, r2.w, r3.w, r5.x
  52: sample r4.xyzw, r4.xyxx, t3.xyzw, s4
  53: mul r2.w, r2.w, r4.w
  54: mul r4.xyz, r2.wwww, cb0[2].xyzx
  55: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  56: mov r5.x, v3.w
  57: mov r5.y, v4.w
  58: mov r5.z, v5.w
  59: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  60: dp3 r1.w, r6.xyzx, r6.xyzx
  61: max r1.w, r1.w, l(0.001000)
  62: rsq r1.w, r1.w
  63: mul r6.xyz, r1.wwww, r6.xyzx
  64: dp3 r1.w, r2.xyzx, -r3.xyzx
  65: dp3_sat r2.w, r2.xyzx, r5.xyzx
  66: dp3_sat r2.x, r2.xyzx, r6.xyzx
  67: dp3_sat r2.y, r5.xyzx, r6.xyzx
  68: mul r2.z, r2.y, r2.y
  69: dp2 r2.z, r2.zzzz, r0.wwww
  70: add r2.z, r2.z, l(-0.500000)
  71: add r3.x, -r2.w, l(1.000000)
  72: mul r3.y, r3.x, r3.x
  73: mul r3.y, r3.y, r3.y
  74: mul r3.x, r3.x, r3.y
  75: mad r3.x, r2.z, r3.x, l(1.000000)
  76: add r3.y, -|r1.w|, l(1.000000)
  77: mul r3.z, r3.y, r3.y
  78: mul r3.z, r3.z, r3.z
  79: mul r3.y, r3.y, r3.z
  80: mad r2.z, r2.z, r3.y, l(1.000000)
  81: mul r2.z, r2.z, r3.x
  82: mul r2.z, r2.w, r2.z
  83: mul r0.w, r0.w, r0.w
  84: max r0.w, r0.w, l(0.002000)
  85: add r3.x, -r0.w, l(1.000000)
  86: mad r3.y, |r1.w|, r3.x, r0.w
  87: mad r3.x, r2.w, r3.x, r0.w
  88: mul r1.w, |r1.w|, r3.x
  89: mad r1.w, r2.w, r3.y, r1.w
  90: add r1.w, r1.w, l(0.000010)
  91: div r1.w, l(0.500000), r1.w
  92: mul r0.w, r0.w, r0.w
  93: mad r3.x, r2.x, r0.w, -r2.x
  94: mad r2.x, r3.x, r2.x, l(1.000000)
  95: mul r0.w, r0.w, l(0.318310)
  96: mad r2.x, r2.x, r2.x, l(0.000000)
  97: div r0.w, r0.w, r2.x
  98: mul r0.w, r0.w, r1.w
  99: mul r0.w, r0.w, l(3.141593)
 100: mul r0.w, r2.w, r0.w
 101: max r0.w, r0.w, l(0.000000)
 102: dp3 r1.w, r0.xyzx, r0.xyzx
 103: ne r1.w, r1.w, l(0.000000)
 104: and r1.w, r1.w, l(0x3f800000)
 105: mul r0.w, r0.w, r1.w
 106: mul r2.xzw, r2.zzzz, r4.xxyz
 107: mul r3.xyz, r4.xyzx, r0.wwww
 108: add r0.w, -r2.y, l(1.000000)
 109: mul r1.w, r0.w, r0.w
 110: mul r1.w, r1.w, r1.w
 111: mul r0.w, r0.w, r1.w
 112: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 113: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 114: mul r0.xyz, r0.xyzx, r3.xyzx
 115: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 116: mov o0.w, l(1.000000)
 117: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE SHADOWS_SCREEN 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 42 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: mov o0.xyzw, r1.xyzw
  10: eq r2.x, cb0[9].w, l(0.000000)
  11: movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r2.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
  16: mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
  17: mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
  18: add o2.xyz, r2.xyzx, -cb1[4].xyzx
  19: mov o2.w, l(0)
  20: mul r3.xyz, v4.yyyy, cb3[1].xyzx
  21: mad r3.xyz, cb3[0].xyzx, v4.xxxx, r3.xyzx
  22: mad r3.xyz, cb3[2].xyzx, v4.zzzz, r3.xyzx
  23: dp3 r2.w, r3.xyzx, r3.xyzx
  24: rsq r2.w, r2.w
  25: mul r3.xyz, r2.wwww, r3.xyzx
  26: mov o3.xyz, r3.xyzx
  27: mad r4.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
  28: mov o6.xyz, r2.xyzx
  29: mov o3.w, r4.x
  30: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  31: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  32: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  33: dp3 r2.w, r2.xyzx, r2.xyzx
  34: rsq r2.w, r2.w
  35: mul r2.xyz, r2.wwww, r2.xyzx
  36: mul r5.xyz, r3.yzxy, r2.zxyz
  37: mad r3.xyz, r2.yzxy, r3.zxyz, -r5.xyzx
  38: mov o5.xyz, r2.xyzx
  39: mul r2.x, v4.w, cb3[9].w
  40: mul o4.xyz, r2.xxxx, r3.xyzx
  41: mov o4.w, r4.y
  42: mov o5.w, r4.z
  43: mul r2.xy, r0.yyyy, cb0[12].xyxx
  44: mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
  45: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  46: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  47: mul r0.x, r1.y, cb1[5].x
  48: mul r0.w, r0.x, l(0.500000)
  49: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  50: mov o8.zw, r1.zzzw
  51: add o8.xy, r0.zzzz, r0.xwxx
  52: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 108 math, 7 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_BumpMap" to slot 2
Set 2D Texture "_ShadowMapTexture" to slot 3 sampler slot 4
Set 2D Texture "_LightTexture0" to slot 4 sampler slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v8.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: mul r4.xy, v6.yyyy, cb0[12].xyxx
  25: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  26: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  27: add r4.xy, r4.xyxx, cb0[14].xyxx
  28: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  29: mov r6.x, cb4[9].z
  30: mov r6.y, cb4[10].z
  31: mov r6.z, cb4[11].z
  32: dp3 r2.w, r5.xyzx, r6.xyzx
  33: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  34: dp3 r3.w, r5.xyzx, r5.xyzx
  35: sqrt r3.w, r3.w
  36: add r3.w, -r2.w, r3.w
  37: mad r2.w, cb3[25].w, r3.w, r2.w
  38: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  39: eq r3.w, cb5[0].x, l(1.000000)
  40: if_nz r3.w
  41:   eq r3.w, cb5[0].y, l(1.000000)
  42:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  43:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  44:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  45:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  46:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  47:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  48:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  49:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  50:   mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
  51:   max r5.x, r3.w, r4.z
  52:   sample r5.xyzw, r5.xzwx, t5.xyzw, s0
  53: else 
  54:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  55: endif 
  56: dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
  57: div r4.zw, v8.xxxy, v8.wwww
  58: sample r5.xyzw, r4.zwzz, t3.xyzw, s4
  59: add r3.w, r3.w, -r5.x
  60: mad r2.w, r2.w, r3.w, r5.x
  61: sample r4.xyzw, r4.xyxx, t4.xyzw, s5
  62: mul r2.w, r2.w, r4.w
  63: mul r4.xyz, r2.wwww, cb0[2].xyzx
  64: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  65: mov r5.x, v3.w
  66: mov r5.y, v4.w
  67: mov r5.z, v5.w
  68: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  69: dp3 r1.w, r6.xyzx, r6.xyzx
  70: max r1.w, r1.w, l(0.001000)
  71: rsq r1.w, r1.w
  72: mul r6.xyz, r1.wwww, r6.xyzx
  73: dp3 r1.w, r2.xyzx, -r3.xyzx
  74: dp3_sat r2.w, r2.xyzx, r5.xyzx
  75: dp3_sat r2.x, r2.xyzx, r6.xyzx
  76: dp3_sat r2.y, r5.xyzx, r6.xyzx
  77: mul r2.z, r2.y, r2.y
  78: dp2 r2.z, r2.zzzz, r0.wwww
  79: add r2.z, r2.z, l(-0.500000)
  80: add r3.x, -r2.w, l(1.000000)
  81: mul r3.y, r3.x, r3.x
  82: mul r3.y, r3.y, r3.y
  83: mul r3.x, r3.x, r3.y
  84: mad r3.x, r2.z, r3.x, l(1.000000)
  85: add r3.y, -|r1.w|, l(1.000000)
  86: mul r3.z, r3.y, r3.y
  87: mul r3.z, r3.z, r3.z
  88: mul r3.y, r3.y, r3.z
  89: mad r2.z, r2.z, r3.y, l(1.000000)
  90: mul r2.z, r2.z, r3.x
  91: mul r2.z, r2.w, r2.z
  92: mul r0.w, r0.w, r0.w
  93: max r0.w, r0.w, l(0.002000)
  94: add r3.x, -r0.w, l(1.000000)
  95: mad r3.y, |r1.w|, r3.x, r0.w
  96: mad r3.x, r2.w, r3.x, r0.w
  97: mul r1.w, |r1.w|, r3.x
  98: mad r1.w, r2.w, r3.y, r1.w
  99: add r1.w, r1.w, l(0.000010)
 100: div r1.w, l(0.500000), r1.w
 101: mul r0.w, r0.w, r0.w
 102: mad r3.x, r2.x, r0.w, -r2.x
 103: mad r2.x, r3.x, r2.x, l(1.000000)
 104: mul r0.w, r0.w, l(0.318310)
 105: mad r2.x, r2.x, r2.x, l(0.000000)
 106: div r0.w, r0.w, r2.x
 107: mul r0.w, r0.w, r1.w
 108: mul r0.w, r0.w, l(3.141593)
 109: mul r0.w, r2.w, r0.w
 110: max r0.w, r0.w, l(0.000000)
 111: dp3 r1.w, r0.xyzx, r0.xyzx
 112: ne r1.w, r1.w, l(0.000000)
 113: and r1.w, r1.w, l(0x3f800000)
 114: mul r0.w, r0.w, r1.w
 115: mul r2.xzw, r2.zzzz, r4.xxyz
 116: mul r3.xyz, r4.xyzx, r0.wwww
 117: add r0.w, -r2.y, l(1.000000)
 118: mul r1.w, r0.w, r0.w
 119: mul r1.w, r1.w, r1.w
 120: mul r0.w, r0.w, r1.w
 121: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 122: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 123: mul r0.xyz, r0.xyzx, r3.xyzx
 124: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 125: mov o0.w, l(1.000000)
 126: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 45 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 4 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 5 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[68], dynamicIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb5[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb4[r2.x + 25].xyzw
   7: mad r3.xyzw, cb4[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb4[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad r1.xyzw, cb4[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: mov o0.xyzw, r1.xyzw
  11: eq r2.x, cb0[9].w, l(0.000000)
  12: movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
  13: mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
  14: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mov o2.w, l(0)
  16: mul r2.xyz, v0.yyyy, cb3[1].xyzx
  17: mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
  18: mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
  19: mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
  20: mov r2.w, cb5[0].x
  21: add o2.xyz, r2.xyzx, -cb4[r2.w + 64].xyzx
  22: mul r3.xyz, v4.yyyy, cb3[1].xyzx
  23: mad r3.xyz, cb3[0].xyzx, v4.xxxx, r3.xyzx
  24: mad r3.xyz, cb3[2].xyzx, v4.zzzz, r3.xyzx
  25: dp3 r3.w, r3.xyzx, r3.xyzx
  26: rsq r3.w, r3.w
  27: mul r3.xyz, r3.wwww, r3.xyzx
  28: mov o3.xyz, r3.xyzx
  29: mad r4.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
  30: mov o6.xyz, r2.xyzx
  31: mov o3.w, r4.x
  32: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  33: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  34: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  35: dp3 r3.w, r2.xyzx, r2.xyzx
  36: rsq r3.w, r3.w
  37: mul r2.xyz, r2.xyzx, r3.wwww
  38: mul r5.xyz, r3.yzxy, r2.zxyz
  39: mad r3.xyz, r2.yzxy, r3.zxyz, -r5.xyzx
  40: mov o5.xyz, r2.xyzx
  41: mul r2.x, v4.w, cb3[9].w
  42: mul o4.xyz, r2.xxxx, r3.xyzx
  43: mov o4.w, r4.y
  44: mov o5.w, r4.z
  45: mul r2.xy, r0.yyyy, cb0[12].xyxx
  46: mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
  47: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  48: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  49: mul r0.x, r1.y, cb1[4].x
  50: mul r0.w, r0.x, l(0.500000)
  51: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  52: add r0.xy, r0.zzzz, r0.xwxx
  53: mul r0.zw, r1.wwww, cb4[r2.w + 66].zzzw
  54: mad o8.xy, r0.xyxx, cb4[r2.w + 66].xyxx, r0.zwzz
  55: mov o8.zw, r1.zzzw
  56: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 109 math, 7 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_BumpMap" to slot 2
Set 2D Texture "_ShadowMapTexture" to slot 3 sampler slot 4
Set 2D Texture "_LightTexture0" to slot 4 sampler slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v8.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: mul r4.xy, v6.yyyy, cb0[12].xyxx
  25: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  26: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  27: add r4.xy, r4.xyxx, cb0[14].xyxx
  28: mov r2.w, cb4[0].x
  29: add r5.xyz, -v6.xyzx, cb3[r2.w + 64].xyzx
  30: ishl r2.w, cb4[0].x, l(2)
  31: mov r6.x, cb3[r2.w + 8].z
  32: mov r6.y, cb3[r2.w + 9].z
  33: mov r6.z, cb3[r2.w + 10].z
  34: dp3 r2.w, r5.xyzx, r6.xyzx
  35: add r5.xyz, v6.xyzx, -cb2[25].xyzx
  36: dp3 r3.w, r5.xyzx, r5.xyzx
  37: sqrt r3.w, r3.w
  38: add r3.w, -r2.w, r3.w
  39: mad r2.w, cb2[25].w, r3.w, r2.w
  40: mad_sat r2.w, r2.w, cb2[24].z, cb2[24].w
  41: eq r3.w, cb5[0].x, l(1.000000)
  42: if_nz r3.w
  43:   eq r3.w, cb5[0].y, l(1.000000)
  44:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  45:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  46:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  47:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  48:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  49:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  50:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  51:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  52:   mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
  53:   max r5.x, r3.w, r4.z
  54:   sample r5.xyzw, r5.xzwx, t5.xyzw, s0
  55: else 
  56:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  57: endif 
  58: dp4_sat r3.w, r5.xyzw, cb1[46].xyzw
  59: div r4.zw, v8.xxxy, v8.wwww
  60: sample r5.xyzw, r4.zwzz, t3.xyzw, s4
  61: add r3.w, r3.w, -r5.x
  62: mad r2.w, r2.w, r3.w, r5.x
  63: sample r4.xyzw, r4.xyxx, t4.xyzw, s5
  64: mul r2.w, r2.w, r4.w
  65: mul r4.xyz, r2.wwww, cb0[2].xyzx
  66: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  67: mov r5.x, v3.w
  68: mov r5.y, v4.w
  69: mov r5.z, v5.w
  70: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  71: dp3 r1.w, r6.xyzx, r6.xyzx
  72: max r1.w, r1.w, l(0.001000)
  73: rsq r1.w, r1.w
  74: mul r6.xyz, r1.wwww, r6.xyzx
  75: dp3 r1.w, r2.xyzx, -r3.xyzx
  76: dp3_sat r2.w, r2.xyzx, r5.xyzx
  77: dp3_sat r2.x, r2.xyzx, r6.xyzx
  78: dp3_sat r2.y, r5.xyzx, r6.xyzx
  79: mul r2.z, r2.y, r2.y
  80: dp2 r2.z, r2.zzzz, r0.wwww
  81: add r2.z, r2.z, l(-0.500000)
  82: add r3.x, -r2.w, l(1.000000)
  83: mul r3.y, r3.x, r3.x
  84: mul r3.y, r3.y, r3.y
  85: mul r3.x, r3.x, r3.y
  86: mad r3.x, r2.z, r3.x, l(1.000000)
  87: add r3.y, -|r1.w|, l(1.000000)
  88: mul r3.z, r3.y, r3.y
  89: mul r3.z, r3.z, r3.z
  90: mul r3.y, r3.y, r3.z
  91: mad r2.z, r2.z, r3.y, l(1.000000)
  92: mul r2.z, r2.z, r3.x
  93: mul r2.z, r2.w, r2.z
  94: mul r0.w, r0.w, r0.w
  95: max r0.w, r0.w, l(0.002000)
  96: add r3.x, -r0.w, l(1.000000)
  97: mad r3.y, |r1.w|, r3.x, r0.w
  98: mad r3.x, r2.w, r3.x, r0.w
  99: mul r1.w, |r1.w|, r3.x
 100: mad r1.w, r2.w, r3.y, r1.w
 101: add r1.w, r1.w, l(0.000010)
 102: div r1.w, l(0.500000), r1.w
 103: mul r0.w, r0.w, r0.w
 104: mad r3.x, r2.x, r0.w, -r2.x
 105: mad r2.x, r3.x, r2.x, l(1.000000)
 106: mul r0.w, r0.w, l(0.318310)
 107: mad r2.x, r2.x, r2.x, l(0.000000)
 108: div r0.w, r0.w, r2.x
 109: mul r0.w, r0.w, r1.w
 110: mul r0.w, r0.w, l(3.141593)
 111: mul r0.w, r2.w, r0.w
 112: max r0.w, r0.w, l(0.000000)
 113: dp3 r1.w, r0.xyzx, r0.xyzx
 114: ne r1.w, r1.w, l(0.000000)
 115: and r1.w, r1.w, l(0x3f800000)
 116: mul r0.w, r0.w, r1.w
 117: mul r2.xzw, r2.zzzz, r4.xxyz
 118: mul r3.xyz, r4.xyzx, r0.wwww
 119: add r0.w, -r2.y, l(1.000000)
 120: mul r1.w, r0.w, r0.w
 121: mul r1.w, r1.w, r1.w
 122: mul r0.w, r0.w, r1.w
 123: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 124: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 125: mul r0.xyz, r0.xyzx, r3.xyzx
 126: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 127: mov o0.w, l(1.000000)
 128: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: mov o0.xyzw, r1.xyzw
  10: eq r2.x, cb0[9].w, l(0.000000)
  11: movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r2.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
  16: mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
  17: mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
  18: add o2.xyz, r2.xyzx, -cb1[4].xyzx
  19: mov o2.w, l(0)
  20: mad r3.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r2.xyzx
  22: mov r3.w, l(0)
  23: mov o3.xyzw, r3.wwwx
  24: mov o4.xyzw, r3.wwwy
  25: mov o5.w, r3.z
  26: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  27: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  28: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  29: dp3 r2.w, r2.xyzx, r2.xyzx
  30: rsq r2.w, r2.w
  31: mul o5.xyz, r2.wwww, r2.xyzx
  32: mul r2.xy, r0.yyyy, cb0[12].xyxx
  33: mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
  34: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  35: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  36: mul r0.x, r1.y, cb1[5].x
  37: mul r0.w, r0.x, l(0.500000)
  38: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  39: mov o8.zw, r1.zzzw
  40: add o8.xy, r0.zzzz, r0.xwxx
  41: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 98 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v8.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: mul r3.xy, v6.yyyy, cb0[12].xyxx
  13: mad r3.xy, cb0[11].xyxx, v6.xxxx, r3.xyxx
  14: mad r3.xy, cb0[13].xyxx, v6.zzzz, r3.xyxx
  15: add r3.xy, r3.xyxx, cb0[14].xyxx
  16: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r5.x, cb4[9].z
  18: mov r5.y, cb4[10].z
  19: mov r5.z, cb4[11].z
  20: dp3 r1.w, r4.xyzx, r5.xyzx
  21: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r2.w, r4.xyzx, r4.xyzx
  23: sqrt r2.w, r2.w
  24: add r2.w, -r1.w, r2.w
  25: mad r1.w, cb3[25].w, r2.w, r1.w
  26: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  27: eq r2.w, cb5[0].x, l(1.000000)
  28: if_nz r2.w
  29:   eq r2.w, cb5[0].y, l(1.000000)
  30:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  32:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  33:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  34:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  35:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  36:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  37:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  38:   mad r3.z, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r4.x, r2.w, r3.z
  40:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
  45: div r3.zw, v8.xxxy, v8.wwww
  46: sample r4.xyzw, r3.zwzz, t1.xyzw, s2
  47: add r2.w, r2.w, -r4.x
  48: mad r1.w, r1.w, r2.w, r4.x
  49: sample r3.xyzw, r3.xyxx, t2.xyzw, s3
  50: mul r1.w, r1.w, r3.w
  51: mul r3.xyz, r1.wwww, cb0[2].xyzx
  52: add r1.w, -cb0[8].w, l(1.000000)
  53: mov r4.x, v3.w
  54: mov r4.y, v4.w
  55: mov r4.z, v5.w
  56: mad r5.xyz, -v2.xyzx, r0.wwww, r4.xyzx
  57: dp3 r0.w, r5.xyzx, r5.xyzx
  58: max r0.w, r0.w, l(0.001000)
  59: rsq r0.w, r0.w
  60: mul r5.xyz, r0.wwww, r5.xyzx
  61: dp3 r0.w, r1.xyzx, -r2.xyzx
  62: dp3_sat r2.x, r1.xyzx, r4.xyzx
  63: dp3_sat r1.x, r1.xyzx, r5.xyzx
  64: dp3_sat r1.y, r4.xyzx, r5.xyzx
  65: mul r1.z, r1.y, r1.y
  66: dp2 r1.z, r1.zzzz, r1.wwww
  67: add r1.z, r1.z, l(-0.500000)
  68: add r2.y, -r2.x, l(1.000000)
  69: mul r2.z, r2.y, r2.y
  70: mul r2.z, r2.z, r2.z
  71: mul r2.y, r2.y, r2.z
  72: mad r2.y, r1.z, r2.y, l(1.000000)
  73: add r2.z, -|r0.w|, l(1.000000)
  74: mul r2.w, r2.z, r2.z
  75: mul r2.w, r2.w, r2.w
  76: mul r2.z, r2.z, r2.w
  77: mad r1.z, r1.z, r2.z, l(1.000000)
  78: mul r1.z, r1.z, r2.y
  79: mul r1.z, r2.x, r1.z
  80: mul r1.w, r1.w, r1.w
  81: max r1.w, r1.w, l(0.002000)
  82: add r2.y, -r1.w, l(1.000000)
  83: mad r2.z, |r0.w|, r2.y, r1.w
  84: mad r2.y, r2.x, r2.y, r1.w
  85: mul r0.w, |r0.w|, r2.y
  86: mad r0.w, r2.x, r2.z, r0.w
  87: add r0.w, r0.w, l(0.000010)
  88: div r0.w, l(0.500000), r0.w
  89: mul r1.w, r1.w, r1.w
  90: mad r2.y, r1.x, r1.w, -r1.x
  91: mad r1.x, r2.y, r1.x, l(1.000000)
  92: mul r1.w, r1.w, l(0.318310)
  93: mad r1.x, r1.x, r1.x, l(0.000000)
  94: div r1.x, r1.w, r1.x
  95: mul r0.w, r0.w, r1.x
  96: mul r0.w, r0.w, l(3.141593)
  97: mul r0.w, r2.x, r0.w
  98: max r0.w, r0.w, l(0.000000)
  99: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
 100: ne r1.x, r1.x, l(0.000000)
 101: and r1.x, r1.x, l(0x3f800000)
 102: mul r0.w, r0.w, r1.x
 103: mul r1.xzw, r1.zzzz, r3.xxyz
 104: mul r2.xyz, r3.xyzx, r0.wwww
 105: add r0.w, -r1.y, l(1.000000)
 106: mul r1.y, r0.w, r0.w
 107: mul r1.y, r1.y, r1.y
 108: mul r0.w, r0.w, r1.y
 109: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 110: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
 111: mul r2.xyz, r2.xyzx, r3.xyzx
 112: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
 113: mov o0.w, l(1.000000)
 114: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 4 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 5 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[68], dynamicIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb5[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb4[r2.x + 25].xyzw
   7: mad r3.xyzw, cb4[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb4[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad r1.xyzw, cb4[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: mov o0.xyzw, r1.xyzw
  11: eq r2.x, cb0[9].w, l(0.000000)
  12: movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
  13: mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
  14: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mov o2.w, l(0)
  16: mul r2.xyz, v0.yyyy, cb3[1].xyzx
  17: mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
  18: mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
  19: mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
  20: mov r2.w, cb5[0].x
  21: add o2.xyz, r2.xyzx, -cb4[r2.w + 64].xyzx
  22: mad r3.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r2.xyzx
  24: mov r3.w, l(0)
  25: mov o3.xyzw, r3.wwwx
  26: mov o4.xyzw, r3.wwwy
  27: mov o5.w, r3.z
  28: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  29: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  30: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  31: dp3 r3.x, r2.xyzx, r2.xyzx
  32: rsq r3.x, r3.x
  33: mul o5.xyz, r2.xyzx, r3.xxxx
  34: mul r2.xy, r0.yyyy, cb0[12].xyxx
  35: mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
  36: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  37: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  38: mul r0.x, r1.y, cb1[4].x
  39: mul r0.w, r0.x, l(0.500000)
  40: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  41: add r0.xy, r0.zzzz, r0.xwxx
  42: mul r0.zw, r1.wwww, cb4[r2.w + 66].zzzw
  43: mad o8.xy, r0.xyxx, cb4[r2.w + 66].xyxx, r0.zwzz
  44: mov o8.zw, r1.zzzw
  45: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 99 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v8.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: mul r3.xy, v6.yyyy, cb0[12].xyxx
  13: mad r3.xy, cb0[11].xyxx, v6.xxxx, r3.xyxx
  14: mad r3.xy, cb0[13].xyxx, v6.zzzz, r3.xyxx
  15: add r3.xy, r3.xyxx, cb0[14].xyxx
  16: mov r1.w, cb4[0].x
  17: add r4.xyz, -v6.xyzx, cb3[r1.w + 64].xyzx
  18: ishl r1.w, cb4[0].x, l(2)
  19: mov r5.x, cb3[r1.w + 8].z
  20: mov r5.y, cb3[r1.w + 9].z
  21: mov r5.z, cb3[r1.w + 10].z
  22: dp3 r1.w, r4.xyzx, r5.xyzx
  23: add r4.xyz, v6.xyzx, -cb2[25].xyzx
  24: dp3 r2.w, r4.xyzx, r4.xyzx
  25: sqrt r2.w, r2.w
  26: add r2.w, -r1.w, r2.w
  27: mad r1.w, cb2[25].w, r2.w, r1.w
  28: mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
  29: eq r2.w, cb5[0].x, l(1.000000)
  30: if_nz r2.w
  31:   eq r2.w, cb5[0].y, l(1.000000)
  32:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  33:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  34:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  35:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  36:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  37:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  38:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  39:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  40:   mad r3.z, cb5[0].z, l(0.500000), l(0.750000)
  41:   max r4.x, r2.w, r3.z
  42:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  43: else 
  44:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  45: endif 
  46: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  47: div r3.zw, v8.xxxy, v8.wwww
  48: sample r4.xyzw, r3.zwzz, t1.xyzw, s2
  49: add r2.w, r2.w, -r4.x
  50: mad r1.w, r1.w, r2.w, r4.x
  51: sample r3.xyzw, r3.xyxx, t2.xyzw, s3
  52: mul r1.w, r1.w, r3.w
  53: mul r3.xyz, r1.wwww, cb0[2].xyzx
  54: add r1.w, -cb0[8].w, l(1.000000)
  55: mov r4.x, v3.w
  56: mov r4.y, v4.w
  57: mov r4.z, v5.w
  58: mad r5.xyz, -v2.xyzx, r0.wwww, r4.xyzx
  59: dp3 r0.w, r5.xyzx, r5.xyzx
  60: max r0.w, r0.w, l(0.001000)
  61: rsq r0.w, r0.w
  62: mul r5.xyz, r0.wwww, r5.xyzx
  63: dp3 r0.w, r1.xyzx, -r2.xyzx
  64: dp3_sat r2.x, r1.xyzx, r4.xyzx
  65: dp3_sat r1.x, r1.xyzx, r5.xyzx
  66: dp3_sat r1.y, r4.xyzx, r5.xyzx
  67: mul r1.z, r1.y, r1.y
  68: dp2 r1.z, r1.zzzz, r1.wwww
  69: add r1.z, r1.z, l(-0.500000)
  70: add r2.y, -r2.x, l(1.000000)
  71: mul r2.z, r2.y, r2.y
  72: mul r2.z, r2.z, r2.z
  73: mul r2.y, r2.y, r2.z
  74: mad r2.y, r1.z, r2.y, l(1.000000)
  75: add r2.z, -|r0.w|, l(1.000000)
  76: mul r2.w, r2.z, r2.z
  77: mul r2.w, r2.w, r2.w
  78: mul r2.z, r2.z, r2.w
  79: mad r1.z, r1.z, r2.z, l(1.000000)
  80: mul r1.z, r1.z, r2.y
  81: mul r1.z, r2.x, r1.z
  82: mul r1.w, r1.w, r1.w
  83: max r1.w, r1.w, l(0.002000)
  84: add r2.y, -r1.w, l(1.000000)
  85: mad r2.z, |r0.w|, r2.y, r1.w
  86: mad r2.y, r2.x, r2.y, r1.w
  87: mul r0.w, |r0.w|, r2.y
  88: mad r0.w, r2.x, r2.z, r0.w
  89: add r0.w, r0.w, l(0.000010)
  90: div r0.w, l(0.500000), r0.w
  91: mul r1.w, r1.w, r1.w
  92: mad r2.y, r1.x, r1.w, -r1.x
  93: mad r1.x, r2.y, r1.x, l(1.000000)
  94: mul r1.w, r1.w, l(0.318310)
  95: mad r1.x, r1.x, r1.x, l(0.000000)
  96: div r1.x, r1.w, r1.x
  97: mul r0.w, r0.w, r1.x
  98: mul r0.w, r0.w, l(3.141593)
  99: mul r0.w, r2.x, r0.w
 100: max r0.w, r0.w, l(0.000000)
 101: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
 102: ne r1.x, r1.x, l(0.000000)
 103: and r1.x, r1.x, l(0x3f800000)
 104: mul r0.w, r0.w, r1.x
 105: mul r1.xzw, r1.zzzz, r3.xxyz
 106: mul r2.xyz, r3.xyzx, r0.wwww
 107: add r0.w, -r1.y, l(1.000000)
 108: mul r1.y, r0.w, r0.w
 109: mul r1.y, r1.y, r1.y
 110: mul r0.w, r0.w, r1.y
 111: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 112: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
 113: mul r2.xyz, r2.xyzx, r3.xyzx
 114: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
 115: mov o0.w, l(1.000000)
 116: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  32: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  33: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  34: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 112 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  14: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  15: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  16: add r4.xyz, r4.xyzx, cb0[14].xyzx
  17: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  18: mov r6.x, cb4[9].z
  19: mov r6.y, cb4[10].z
  20: mov r6.z, cb4[11].z
  21: dp3 r1.w, r5.xyzx, r6.xyzx
  22: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  23: dp3 r2.w, r5.xyzx, r5.xyzx
  24: sqrt r2.w, r2.w
  25: add r2.w, -r1.w, r2.w
  26: mad r1.w, cb3[25].w, r2.w, r1.w
  27: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  28: eq r2.w, cb5[0].x, l(1.000000)
  29: if_nz r2.w
  30:   eq r2.w, cb5[0].y, l(1.000000)
  31:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  32:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  33:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  34:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  35:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  36:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  37:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  38:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  39:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  40:   max r5.x, r2.w, r3.w
  41:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  42: else 
  43:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  46: add r5.xyz, v6.xyzx, -cb2[1].xyzx
  47: max r3.w, |r5.y|, |r5.x|
  48: max r3.w, |r5.z|, r3.w
  49: add r3.w, r3.w, -cb2[2].z
  50: max r3.w, r3.w, l(0.000010)
  51: mul r3.w, r3.w, cb2[2].w
  52: div r3.w, cb2[2].y, r3.w
  53: add r3.w, r3.w, -cb2[2].x
  54: add r3.w, -r3.w, l(1.000000)
  55: sample_c_lz r3.w, r5.xyzx, t4.xxxx, s1, r3.w
  56: add r4.w, -cb3[24].x, l(1.000000)
  57: mad r3.w, r3.w, r4.w, cb3[24].x
  58: add r2.w, r2.w, -r3.w
  59: mad r1.w, r1.w, r2.w, r3.w
  60: dp3 r2.w, r4.xyzx, r4.xyzx
  61: sample r4.xyzw, r2.wwww, t2.xyzw, s4
  62: mul r1.w, r1.w, r4.x
  63: mov r4.x, v3.w
  64: mov r4.y, v4.w
  65: mov r4.z, v5.w
  66: dp3 r2.w, r4.xyzx, r4.xyzx
  67: rsq r2.w, r2.w
  68: mul r5.xyz, r2.wwww, r4.xyzx
  69: mul r6.xyz, r1.wwww, cb0[2].xyzx
  70: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  71: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  72: dp3 r1.w, r4.xyzx, r4.xyzx
  73: max r1.w, r1.w, l(0.001000)
  74: rsq r1.w, r1.w
  75: mul r4.xyz, r1.wwww, r4.xyzx
  76: dp3 r1.w, r2.xyzx, -r3.xyzx
  77: dp3_sat r2.w, r2.xyzx, r5.xyzx
  78: dp3_sat r2.x, r2.xyzx, r4.xyzx
  79: dp3_sat r2.y, r5.xyzx, r4.xyzx
  80: mul r2.z, r2.y, r2.y
  81: dp2 r2.z, r2.zzzz, r0.wwww
  82: add r2.z, r2.z, l(-0.500000)
  83: add r3.x, -r2.w, l(1.000000)
  84: mul r3.y, r3.x, r3.x
  85: mul r3.y, r3.y, r3.y
  86: mul r3.x, r3.x, r3.y
  87: mad r3.x, r2.z, r3.x, l(1.000000)
  88: add r3.y, -|r1.w|, l(1.000000)
  89: mul r3.z, r3.y, r3.y
  90: mul r3.z, r3.z, r3.z
  91: mul r3.y, r3.y, r3.z
  92: mad r2.z, r2.z, r3.y, l(1.000000)
  93: mul r2.z, r2.z, r3.x
  94: mul r2.z, r2.w, r2.z
  95: mul r0.w, r0.w, r0.w
  96: max r0.w, r0.w, l(0.002000)
  97: add r3.x, -r0.w, l(1.000000)
  98: mad r3.y, |r1.w|, r3.x, r0.w
  99: mad r3.x, r2.w, r3.x, r0.w
 100: mul r1.w, |r1.w|, r3.x
 101: mad r1.w, r2.w, r3.y, r1.w
 102: add r1.w, r1.w, l(0.000010)
 103: div r1.w, l(0.500000), r1.w
 104: mul r0.w, r0.w, r0.w
 105: mad r3.x, r2.x, r0.w, -r2.x
 106: mad r2.x, r3.x, r2.x, l(1.000000)
 107: mul r0.w, r0.w, l(0.318310)
 108: mad r2.x, r2.x, r2.x, l(0.000000)
 109: div r0.w, r0.w, r2.x
 110: mul r0.w, r0.w, r1.w
 111: mul r0.w, r0.w, l(3.141593)
 112: mul r0.w, r2.w, r0.w
 113: max r0.w, r0.w, l(0.000000)
 114: dp3 r1.w, r0.xyzx, r0.xyzx
 115: ne r1.w, r1.w, l(0.000000)
 116: and r1.w, r1.w, l(0x3f800000)
 117: mul r0.w, r0.w, r1.w
 118: mul r2.xzw, r2.zzzz, r6.xxyz
 119: mul r3.xyz, r6.xyzx, r0.wwww
 120: add r0.w, -r2.y, l(1.000000)
 121: mul r1.w, r0.w, r0.w
 122: mul r1.w, r1.w, r1.w
 123: mul r0.w, r0.w, r1.w
 124: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 125: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 126: mul r0.xyz, r0.xyzx, r3.xyzx
 127: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 128: mov o0.w, l(1.000000)
 129: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  22: mov o6.xyz, r1.yzwy
  23: mov r2.w, l(0)
  24: mov o3.xyzw, r2.wwwx
  25: mov o4.xyzw, r2.wwwy
  26: mov o5.w, r2.z
  27: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul o5.xyz, r1.wwww, r1.xyzx
  33: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  34: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  35: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  36: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  37: mov o8.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 113 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  14: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  15: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  16: add r4.xyz, r4.xyzx, cb0[14].xyzx
  17: mov r1.w, cb4[0].x
  18: add r5.xyz, -v6.xyzx, cb3[r1.w + 64].xyzx
  19: ishl r1.w, cb4[0].x, l(2)
  20: mov r6.x, cb3[r1.w + 8].z
  21: mov r6.y, cb3[r1.w + 9].z
  22: mov r6.z, cb3[r1.w + 10].z
  23: dp3 r1.w, r5.xyzx, r6.xyzx
  24: add r5.xyz, v6.xyzx, -cb2[25].xyzx
  25: dp3 r2.w, r5.xyzx, r5.xyzx
  26: sqrt r2.w, r2.w
  27: add r2.w, -r1.w, r2.w
  28: mad r1.w, cb2[25].w, r2.w, r1.w
  29: mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
  30: eq r2.w, cb5[0].x, l(1.000000)
  31: if_nz r2.w
  32:   eq r2.w, cb5[0].y, l(1.000000)
  33:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  34:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  35:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  36:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  37:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  38:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  39:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  40:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  41:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  42:   max r5.x, r2.w, r3.w
  43:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  44: else 
  45:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  46: endif 
  47: dp4_sat r2.w, r5.xyzw, cb1[46].xyzw
  48: add r5.xyz, v6.xyzx, -cb1[1].xyzx
  49: max r3.w, |r5.y|, |r5.x|
  50: max r3.w, |r5.z|, r3.w
  51: add r3.w, r3.w, -cb1[2].z
  52: max r3.w, r3.w, l(0.000010)
  53: mul r3.w, r3.w, cb1[2].w
  54: div r3.w, cb1[2].y, r3.w
  55: add r3.w, r3.w, -cb1[2].x
  56: add r3.w, -r3.w, l(1.000000)
  57: sample_c_lz r3.w, r5.xyzx, t4.xxxx, s1, r3.w
  58: add r4.w, -cb2[24].x, l(1.000000)
  59: mad r3.w, r3.w, r4.w, cb2[24].x
  60: add r2.w, r2.w, -r3.w
  61: mad r1.w, r1.w, r2.w, r3.w
  62: dp3 r2.w, r4.xyzx, r4.xyzx
  63: sample r4.xyzw, r2.wwww, t2.xyzw, s4
  64: mul r1.w, r1.w, r4.x
  65: mov r4.x, v3.w
  66: mov r4.y, v4.w
  67: mov r4.z, v5.w
  68: dp3 r2.w, r4.xyzx, r4.xyzx
  69: rsq r2.w, r2.w
  70: mul r5.xyz, r2.wwww, r4.xyzx
  71: mul r6.xyz, r1.wwww, cb0[2].xyzx
  72: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  73: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  74: dp3 r1.w, r4.xyzx, r4.xyzx
  75: max r1.w, r1.w, l(0.001000)
  76: rsq r1.w, r1.w
  77: mul r4.xyz, r1.wwww, r4.xyzx
  78: dp3 r1.w, r2.xyzx, -r3.xyzx
  79: dp3_sat r2.w, r2.xyzx, r5.xyzx
  80: dp3_sat r2.x, r2.xyzx, r4.xyzx
  81: dp3_sat r2.y, r5.xyzx, r4.xyzx
  82: mul r2.z, r2.y, r2.y
  83: dp2 r2.z, r2.zzzz, r0.wwww
  84: add r2.z, r2.z, l(-0.500000)
  85: add r3.x, -r2.w, l(1.000000)
  86: mul r3.y, r3.x, r3.x
  87: mul r3.y, r3.y, r3.y
  88: mul r3.x, r3.x, r3.y
  89: mad r3.x, r2.z, r3.x, l(1.000000)
  90: add r3.y, -|r1.w|, l(1.000000)
  91: mul r3.z, r3.y, r3.y
  92: mul r3.z, r3.z, r3.z
  93: mul r3.y, r3.y, r3.z
  94: mad r2.z, r2.z, r3.y, l(1.000000)
  95: mul r2.z, r2.z, r3.x
  96: mul r2.z, r2.w, r2.z
  97: mul r0.w, r0.w, r0.w
  98: max r0.w, r0.w, l(0.002000)
  99: add r3.x, -r0.w, l(1.000000)
 100: mad r3.y, |r1.w|, r3.x, r0.w
 101: mad r3.x, r2.w, r3.x, r0.w
 102: mul r1.w, |r1.w|, r3.x
 103: mad r1.w, r2.w, r3.y, r1.w
 104: add r1.w, r1.w, l(0.000010)
 105: div r1.w, l(0.500000), r1.w
 106: mul r0.w, r0.w, r0.w
 107: mad r3.x, r2.x, r0.w, -r2.x
 108: mad r2.x, r3.x, r2.x, l(1.000000)
 109: mul r0.w, r0.w, l(0.318310)
 110: mad r2.x, r2.x, r2.x, l(0.000000)
 111: div r0.w, r0.w, r2.x
 112: mul r0.w, r0.w, r1.w
 113: mul r0.w, r0.w, l(3.141593)
 114: mul r0.w, r2.w, r0.w
 115: max r0.w, r0.w, l(0.000000)
 116: dp3 r1.w, r0.xyzx, r0.xyzx
 117: ne r1.w, r1.w, l(0.000000)
 118: and r1.w, r1.w, l(0x3f800000)
 119: mul r0.w, r0.w, r1.w
 120: mul r2.xzw, r2.zzzz, r6.xxyz
 121: mul r3.xyz, r6.xyzx, r0.wwww
 122: add r0.w, -r2.y, l(1.000000)
 123: mul r1.w, r0.w, r0.w
 124: mul r1.w, r1.w, r1.w
 125: mul r0.w, r0.w, r1.w
 126: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 127: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 128: mul r0.xyz, r0.xyzx, r3.xyzx
 129: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 130: mov o0.w, l(1.000000)
 131: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r1.xyzx
  28: mov o3.w, r3.x
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r4.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r1.xyzx
  38: mul r1.x, v4.w, cb3[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r3.y
  41: mov o5.w, r3.z
  42: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  43: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  44: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  45: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  46: mov o8.xyzw, l(0,0,0,0)
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 122 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 5 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  25: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  26: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  27: add r4.xyz, r4.xyzx, cb0[14].xyzx
  28: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  29: mov r6.x, cb4[9].z
  30: mov r6.y, cb4[10].z
  31: mov r6.z, cb4[11].z
  32: dp3 r1.w, r5.xyzx, r6.xyzx
  33: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  34: dp3 r2.w, r5.xyzx, r5.xyzx
  35: sqrt r2.w, r2.w
  36: add r2.w, -r1.w, r2.w
  37: mad r1.w, cb3[25].w, r2.w, r1.w
  38: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  39: eq r2.w, cb5[0].x, l(1.000000)
  40: if_nz r2.w
  41:   eq r2.w, cb5[0].y, l(1.000000)
  42:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  43:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  44:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  45:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  46:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  47:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  48:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  49:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  50:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  51:   max r5.x, r2.w, r3.w
  52:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  53: else 
  54:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  55: endif 
  56: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  57: add r5.xyz, v6.xyzx, -cb2[1].xyzx
  58: max r3.w, |r5.y|, |r5.x|
  59: max r3.w, |r5.z|, r3.w
  60: add r3.w, r3.w, -cb2[2].z
  61: max r3.w, r3.w, l(0.000010)
  62: mul r3.w, r3.w, cb2[2].w
  63: div r3.w, cb2[2].y, r3.w
  64: add r3.w, r3.w, -cb2[2].x
  65: add r3.w, -r3.w, l(1.000000)
  66: sample_c_lz r3.w, r5.xyzx, t5.xxxx, s1, r3.w
  67: add r4.w, -cb3[24].x, l(1.000000)
  68: mad r3.w, r3.w, r4.w, cb3[24].x
  69: add r2.w, r2.w, -r3.w
  70: mad r1.w, r1.w, r2.w, r3.w
  71: dp3 r2.w, r4.xyzx, r4.xyzx
  72: sample r4.xyzw, r2.wwww, t3.xyzw, s5
  73: mul r1.w, r1.w, r4.x
  74: mov r4.x, v3.w
  75: mov r4.y, v4.w
  76: mov r4.z, v5.w
  77: dp3 r2.w, r4.xyzx, r4.xyzx
  78: rsq r2.w, r2.w
  79: mul r5.xyz, r2.wwww, r4.xyzx
  80: mul r6.xyz, r1.wwww, cb0[2].xyzx
  81: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  82: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  83: dp3 r1.w, r4.xyzx, r4.xyzx
  84: max r1.w, r1.w, l(0.001000)
  85: rsq r1.w, r1.w
  86: mul r4.xyz, r1.wwww, r4.xyzx
  87: dp3 r1.w, r2.xyzx, -r3.xyzx
  88: dp3_sat r2.w, r2.xyzx, r5.xyzx
  89: dp3_sat r2.x, r2.xyzx, r4.xyzx
  90: dp3_sat r2.y, r5.xyzx, r4.xyzx
  91: mul r2.z, r2.y, r2.y
  92: dp2 r2.z, r2.zzzz, r0.wwww
  93: add r2.z, r2.z, l(-0.500000)
  94: add r3.x, -r2.w, l(1.000000)
  95: mul r3.y, r3.x, r3.x
  96: mul r3.y, r3.y, r3.y
  97: mul r3.x, r3.x, r3.y
  98: mad r3.x, r2.z, r3.x, l(1.000000)
  99: add r3.y, -|r1.w|, l(1.000000)
 100: mul r3.z, r3.y, r3.y
 101: mul r3.z, r3.z, r3.z
 102: mul r3.y, r3.y, r3.z
 103: mad r2.z, r2.z, r3.y, l(1.000000)
 104: mul r2.z, r2.z, r3.x
 105: mul r2.z, r2.w, r2.z
 106: mul r0.w, r0.w, r0.w
 107: max r0.w, r0.w, l(0.002000)
 108: add r3.x, -r0.w, l(1.000000)
 109: mad r3.y, |r1.w|, r3.x, r0.w
 110: mad r3.x, r2.w, r3.x, r0.w
 111: mul r1.w, |r1.w|, r3.x
 112: mad r1.w, r2.w, r3.y, r1.w
 113: add r1.w, r1.w, l(0.000010)
 114: div r1.w, l(0.500000), r1.w
 115: mul r0.w, r0.w, r0.w
 116: mad r3.x, r2.x, r0.w, -r2.x
 117: mad r2.x, r3.x, r2.x, l(1.000000)
 118: mul r0.w, r0.w, l(0.318310)
 119: mad r2.x, r2.x, r2.x, l(0.000000)
 120: div r0.w, r0.w, r2.x
 121: mul r0.w, r0.w, r1.w
 122: mul r0.w, r0.w, l(3.141593)
 123: mul r0.w, r2.w, r0.w
 124: max r0.w, r0.w, l(0.000000)
 125: dp3 r1.w, r0.xyzx, r0.xyzx
 126: ne r1.w, r1.w, l(0.000000)
 127: and r1.w, r1.w, l(0x3f800000)
 128: mul r0.w, r0.w, r1.w
 129: mul r2.xzw, r2.zzzz, r6.xxyz
 130: mul r3.xyz, r6.xyzx, r0.wwww
 131: add r0.w, -r2.y, l(1.000000)
 132: mul r1.w, r0.w, r0.w
 133: mul r1.w, r1.w, r1.w
 134: mul r0.w, r0.w, r1.w
 135: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 136: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 137: mul r0.xyz, r0.xyzx, r3.xyzx
 138: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 139: mov o0.w, l(1.000000)
 140: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  22: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  23: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r2.xyz, r1.xxxx, r2.xyzx
  27: mov o3.xyz, r2.xyzx
  28: mad r3.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  29: mov o6.xyz, r1.yzwy
  30: mov o3.w, r3.x
  31: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul r1.xyz, r1.wwww, r1.xyzx
  37: mul r4.xyz, r2.yzxy, r1.zxyz
  38: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  39: mov o5.xyz, r1.xyzx
  40: mul r1.x, v4.w, cb2[9].w
  41: mul o4.xyz, r1.xxxx, r2.xyzx
  42: mov o4.w, r3.y
  43: mov o5.w, r3.z
  44: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  45: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  46: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  47: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  48: mov o8.xyzw, l(0,0,0,0)
  49: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 123 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 5 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  25: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  26: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  27: add r4.xyz, r4.xyzx, cb0[14].xyzx
  28: mov r1.w, cb4[0].x
  29: add r5.xyz, -v6.xyzx, cb3[r1.w + 64].xyzx
  30: ishl r1.w, cb4[0].x, l(2)
  31: mov r6.x, cb3[r1.w + 8].z
  32: mov r6.y, cb3[r1.w + 9].z
  33: mov r6.z, cb3[r1.w + 10].z
  34: dp3 r1.w, r5.xyzx, r6.xyzx
  35: add r5.xyz, v6.xyzx, -cb2[25].xyzx
  36: dp3 r2.w, r5.xyzx, r5.xyzx
  37: sqrt r2.w, r2.w
  38: add r2.w, -r1.w, r2.w
  39: mad r1.w, cb2[25].w, r2.w, r1.w
  40: mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
  41: eq r2.w, cb5[0].x, l(1.000000)
  42: if_nz r2.w
  43:   eq r2.w, cb5[0].y, l(1.000000)
  44:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  45:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  46:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  47:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  48:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  49:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  50:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  51:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  52:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  53:   max r5.x, r2.w, r3.w
  54:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  55: else 
  56:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  57: endif 
  58: dp4_sat r2.w, r5.xyzw, cb1[46].xyzw
  59: add r5.xyz, v6.xyzx, -cb1[1].xyzx
  60: max r3.w, |r5.y|, |r5.x|
  61: max r3.w, |r5.z|, r3.w
  62: add r3.w, r3.w, -cb1[2].z
  63: max r3.w, r3.w, l(0.000010)
  64: mul r3.w, r3.w, cb1[2].w
  65: div r3.w, cb1[2].y, r3.w
  66: add r3.w, r3.w, -cb1[2].x
  67: add r3.w, -r3.w, l(1.000000)
  68: sample_c_lz r3.w, r5.xyzx, t5.xxxx, s1, r3.w
  69: add r4.w, -cb2[24].x, l(1.000000)
  70: mad r3.w, r3.w, r4.w, cb2[24].x
  71: add r2.w, r2.w, -r3.w
  72: mad r1.w, r1.w, r2.w, r3.w
  73: dp3 r2.w, r4.xyzx, r4.xyzx
  74: sample r4.xyzw, r2.wwww, t3.xyzw, s5
  75: mul r1.w, r1.w, r4.x
  76: mov r4.x, v3.w
  77: mov r4.y, v4.w
  78: mov r4.z, v5.w
  79: dp3 r2.w, r4.xyzx, r4.xyzx
  80: rsq r2.w, r2.w
  81: mul r5.xyz, r2.wwww, r4.xyzx
  82: mul r6.xyz, r1.wwww, cb0[2].xyzx
  83: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  84: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  85: dp3 r1.w, r4.xyzx, r4.xyzx
  86: max r1.w, r1.w, l(0.001000)
  87: rsq r1.w, r1.w
  88: mul r4.xyz, r1.wwww, r4.xyzx
  89: dp3 r1.w, r2.xyzx, -r3.xyzx
  90: dp3_sat r2.w, r2.xyzx, r5.xyzx
  91: dp3_sat r2.x, r2.xyzx, r4.xyzx
  92: dp3_sat r2.y, r5.xyzx, r4.xyzx
  93: mul r2.z, r2.y, r2.y
  94: dp2 r2.z, r2.zzzz, r0.wwww
  95: add r2.z, r2.z, l(-0.500000)
  96: add r3.x, -r2.w, l(1.000000)
  97: mul r3.y, r3.x, r3.x
  98: mul r3.y, r3.y, r3.y
  99: mul r3.x, r3.x, r3.y
 100: mad r3.x, r2.z, r3.x, l(1.000000)
 101: add r3.y, -|r1.w|, l(1.000000)
 102: mul r3.z, r3.y, r3.y
 103: mul r3.z, r3.z, r3.z
 104: mul r3.y, r3.y, r3.z
 105: mad r2.z, r2.z, r3.y, l(1.000000)
 106: mul r2.z, r2.z, r3.x
 107: mul r2.z, r2.w, r2.z
 108: mul r0.w, r0.w, r0.w
 109: max r0.w, r0.w, l(0.002000)
 110: add r3.x, -r0.w, l(1.000000)
 111: mad r3.y, |r1.w|, r3.x, r0.w
 112: mad r3.x, r2.w, r3.x, r0.w
 113: mul r1.w, |r1.w|, r3.x
 114: mad r1.w, r2.w, r3.y, r1.w
 115: add r1.w, r1.w, l(0.000010)
 116: div r1.w, l(0.500000), r1.w
 117: mul r0.w, r0.w, r0.w
 118: mad r3.x, r2.x, r0.w, -r2.x
 119: mad r2.x, r3.x, r2.x, l(1.000000)
 120: mul r0.w, r0.w, l(0.318310)
 121: mad r2.x, r2.x, r2.x, l(0.000000)
 122: div r0.w, r0.w, r2.x
 123: mul r0.w, r0.w, r1.w
 124: mul r0.w, r0.w, l(3.141593)
 125: mul r0.w, r2.w, r0.w
 126: max r0.w, r0.w, l(0.000000)
 127: dp3 r1.w, r0.xyzx, r0.xyzx
 128: ne r1.w, r1.w, l(0.000000)
 129: and r1.w, r1.w, l(0x3f800000)
 130: mul r0.w, r0.w, r1.w
 131: mul r2.xzw, r2.zzzz, r6.xxyz
 132: mul r3.xyz, r6.xyzx, r0.wwww
 133: add r0.w, -r2.y, l(1.000000)
 134: mul r1.w, r0.w, r0.w
 135: mul r1.w, r1.w, r1.w
 136: mul r0.w, r0.w, r1.w
 137: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 138: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 139: mul r0.xyz, r0.xyzx, r3.xyzx
 140: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 141: mov o0.w, l(1.000000)
 142: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  32: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  33: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  34: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 112 math, 6 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 3 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: mul r3.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  14: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  15: add r3.xyz, r3.xyzx, cb0[14].xyzx
  16: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r5.x, cb4[9].z
  18: mov r5.y, cb4[10].z
  19: mov r5.z, cb4[11].z
  20: dp3 r0.w, r4.xyzx, r5.xyzx
  21: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r1.w, r4.xyzx, r4.xyzx
  23: sqrt r1.w, r1.w
  24: add r1.w, -r0.w, r1.w
  25: mad r0.w, cb3[25].w, r1.w, r0.w
  26: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  27: eq r1.w, cb5[0].x, l(1.000000)
  28: if_nz r1.w
  29:   eq r1.w, cb5[0].y, l(1.000000)
  30:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  32:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  33:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  34:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  35:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  36:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  37:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  38:   mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r4.x, r1.w, r2.w
  40:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  41: else 
  42:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r1.w, r4.xyzw, cb2[46].xyzw
  45: add r4.xyz, v6.xyzx, -cb2[1].xyzx
  46: max r2.w, |r4.y|, |r4.x|
  47: max r2.w, |r4.z|, r2.w
  48: add r2.w, r2.w, -cb2[2].z
  49: max r2.w, r2.w, l(0.000010)
  50: mul r2.w, r2.w, cb2[2].w
  51: div r2.w, cb2[2].y, r2.w
  52: add r2.w, r2.w, -cb2[2].x
  53: add r2.w, -r2.w, l(1.000000)
  54: sample_c_lz r2.w, r4.xyzx, t3.xxxx, s1, r2.w
  55: add r3.w, -cb3[24].x, l(1.000000)
  56: mad r2.w, r2.w, r3.w, cb3[24].x
  57: add r1.w, r1.w, -r2.w
  58: mad r0.w, r0.w, r1.w, r2.w
  59: dp3 r1.w, r3.xyzx, r3.xyzx
  60: sample r3.xyzw, r1.wwww, t1.xyzw, s3
  61: mul r0.w, r0.w, r3.x
  62: mov r3.x, v3.w
  63: mov r3.y, v4.w
  64: mov r3.z, v5.w
  65: dp3 r1.w, r3.xyzx, r3.xyzx
  66: rsq r1.w, r1.w
  67: mul r4.xyz, r1.wwww, r3.xyzx
  68: mul r5.xyz, r0.wwww, cb0[2].xyzx
  69: add r0.w, -cb0[8].w, l(1.000000)
  70: mad r3.xyz, r3.xyzx, r1.wwww, -r2.xyzx
  71: dp3 r1.w, r3.xyzx, r3.xyzx
  72: max r1.w, r1.w, l(0.001000)
  73: rsq r1.w, r1.w
  74: mul r3.xyz, r1.wwww, r3.xyzx
  75: dp3 r1.w, r1.xyzx, -r2.xyzx
  76: dp3_sat r2.x, r1.xyzx, r4.xyzx
  77: dp3_sat r1.x, r1.xyzx, r3.xyzx
  78: dp3_sat r1.y, r4.xyzx, r3.xyzx
  79: mul r1.z, r1.y, r1.y
  80: dp2 r1.z, r1.zzzz, r0.wwww
  81: add r1.z, r1.z, l(-0.500000)
  82: add r2.y, -r2.x, l(1.000000)
  83: mul r2.z, r2.y, r2.y
  84: mul r2.z, r2.z, r2.z
  85: mul r2.y, r2.y, r2.z
  86: mad r2.y, r1.z, r2.y, l(1.000000)
  87: add r2.z, -|r1.w|, l(1.000000)
  88: mul r2.w, r2.z, r2.z
  89: mul r2.w, r2.w, r2.w
  90: mul r2.z, r2.z, r2.w
  91: mad r1.z, r1.z, r2.z, l(1.000000)
  92: mul r1.z, r1.z, r2.y
  93: mul r1.z, r2.x, r1.z
  94: mul r0.w, r0.w, r0.w
  95: max r0.w, r0.w, l(0.002000)
  96: add r2.y, -r0.w, l(1.000000)
  97: mad r2.z, |r1.w|, r2.y, r0.w
  98: mad r2.y, r2.x, r2.y, r0.w
  99: mul r1.w, |r1.w|, r2.y
 100: mad r1.w, r2.x, r2.z, r1.w
 101: add r1.w, r1.w, l(0.000010)
 102: div r1.w, l(0.500000), r1.w
 103: mul r0.w, r0.w, r0.w
 104: mad r2.y, r1.x, r0.w, -r1.x
 105: mad r1.x, r2.y, r1.x, l(1.000000)
 106: mul r0.w, r0.w, l(0.318310)
 107: mad r1.x, r1.x, r1.x, l(0.000000)
 108: div r0.w, r0.w, r1.x
 109: mul r0.w, r0.w, r1.w
 110: mul r0.w, r0.w, l(3.141593)
 111: mul r0.w, r2.x, r0.w
 112: max r0.w, r0.w, l(0.000000)
 113: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
 114: ne r1.x, r1.x, l(0.000000)
 115: and r1.x, r1.x, l(0x3f800000)
 116: mul r0.w, r0.w, r1.x
 117: mul r1.xzw, r1.zzzz, r5.xxyz
 118: mul r2.xyz, r5.xyzx, r0.wwww
 119: add r0.w, -r1.y, l(1.000000)
 120: mul r1.y, r0.w, r0.w
 121: mul r1.y, r1.y, r1.y
 122: mul r0.w, r0.w, r1.y
 123: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 124: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
 125: mul r2.xyz, r2.xyzx, r3.xyzx
 126: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
 127: mov o0.w, l(1.000000)
 128: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  22: mov o6.xyz, r1.yzwy
  23: mov r2.w, l(0)
  24: mov o3.xyzw, r2.wwwx
  25: mov o4.xyzw, r2.wwwy
  26: mov o5.w, r2.z
  27: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul o5.xyz, r1.wwww, r1.xyzx
  33: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  34: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  35: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  36: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  37: mov o8.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 113 math, 6 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 3 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: mul r3.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  14: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  15: add r3.xyz, r3.xyzx, cb0[14].xyzx
  16: mov r0.w, cb4[0].x
  17: add r4.xyz, -v6.xyzx, cb3[r0.w + 64].xyzx
  18: ishl r0.w, cb4[0].x, l(2)
  19: mov r5.x, cb3[r0.w + 8].z
  20: mov r5.y, cb3[r0.w + 9].z
  21: mov r5.z, cb3[r0.w + 10].z
  22: dp3 r0.w, r4.xyzx, r5.xyzx
  23: add r4.xyz, v6.xyzx, -cb2[25].xyzx
  24: dp3 r1.w, r4.xyzx, r4.xyzx
  25: sqrt r1.w, r1.w
  26: add r1.w, -r0.w, r1.w
  27: mad r0.w, cb2[25].w, r1.w, r0.w
  28: mad_sat r0.w, r0.w, cb2[24].z, cb2[24].w
  29: eq r1.w, cb5[0].x, l(1.000000)
  30: if_nz r1.w
  31:   eq r1.w, cb5[0].y, l(1.000000)
  32:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  33:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  34:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  35:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  36:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  37:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  38:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  39:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  40:   mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
  41:   max r4.x, r1.w, r2.w
  42:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  43: else 
  44:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  45: endif 
  46: dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
  47: add r4.xyz, v6.xyzx, -cb1[1].xyzx
  48: max r2.w, |r4.y|, |r4.x|
  49: max r2.w, |r4.z|, r2.w
  50: add r2.w, r2.w, -cb1[2].z
  51: max r2.w, r2.w, l(0.000010)
  52: mul r2.w, r2.w, cb1[2].w
  53: div r2.w, cb1[2].y, r2.w
  54: add r2.w, r2.w, -cb1[2].x
  55: add r2.w, -r2.w, l(1.000000)
  56: sample_c_lz r2.w, r4.xyzx, t3.xxxx, s1, r2.w
  57: add r3.w, -cb2[24].x, l(1.000000)
  58: mad r2.w, r2.w, r3.w, cb2[24].x
  59: add r1.w, r1.w, -r2.w
  60: mad r0.w, r0.w, r1.w, r2.w
  61: dp3 r1.w, r3.xyzx, r3.xyzx
  62: sample r3.xyzw, r1.wwww, t1.xyzw, s3
  63: mul r0.w, r0.w, r3.x
  64: mov r3.x, v3.w
  65: mov r3.y, v4.w
  66: mov r3.z, v5.w
  67: dp3 r1.w, r3.xyzx, r3.xyzx
  68: rsq r1.w, r1.w
  69: mul r4.xyz, r1.wwww, r3.xyzx
  70: mul r5.xyz, r0.wwww, cb0[2].xyzx
  71: add r0.w, -cb0[8].w, l(1.000000)
  72: mad r3.xyz, r3.xyzx, r1.wwww, -r2.xyzx
  73: dp3 r1.w, r3.xyzx, r3.xyzx
  74: max r1.w, r1.w, l(0.001000)
  75: rsq r1.w, r1.w
  76: mul r3.xyz, r1.wwww, r3.xyzx
  77: dp3 r1.w, r1.xyzx, -r2.xyzx
  78: dp3_sat r2.x, r1.xyzx, r4.xyzx
  79: dp3_sat r1.x, r1.xyzx, r3.xyzx
  80: dp3_sat r1.y, r4.xyzx, r3.xyzx
  81: mul r1.z, r1.y, r1.y
  82: dp2 r1.z, r1.zzzz, r0.wwww
  83: add r1.z, r1.z, l(-0.500000)
  84: add r2.y, -r2.x, l(1.000000)
  85: mul r2.z, r2.y, r2.y
  86: mul r2.z, r2.z, r2.z
  87: mul r2.y, r2.y, r2.z
  88: mad r2.y, r1.z, r2.y, l(1.000000)
  89: add r2.z, -|r1.w|, l(1.000000)
  90: mul r2.w, r2.z, r2.z
  91: mul r2.w, r2.w, r2.w
  92: mul r2.z, r2.z, r2.w
  93: mad r1.z, r1.z, r2.z, l(1.000000)
  94: mul r1.z, r1.z, r2.y
  95: mul r1.z, r2.x, r1.z
  96: mul r0.w, r0.w, r0.w
  97: max r0.w, r0.w, l(0.002000)
  98: add r2.y, -r0.w, l(1.000000)
  99: mad r2.z, |r1.w|, r2.y, r0.w
 100: mad r2.y, r2.x, r2.y, r0.w
 101: mul r1.w, |r1.w|, r2.y
 102: mad r1.w, r2.x, r2.z, r1.w
 103: add r1.w, r1.w, l(0.000010)
 104: div r1.w, l(0.500000), r1.w
 105: mul r0.w, r0.w, r0.w
 106: mad r2.y, r1.x, r0.w, -r1.x
 107: mad r1.x, r2.y, r1.x, l(1.000000)
 108: mul r0.w, r0.w, l(0.318310)
 109: mad r1.x, r1.x, r1.x, l(0.000000)
 110: div r0.w, r0.w, r1.x
 111: mul r0.w, r0.w, r1.w
 112: mul r0.w, r0.w, l(3.141593)
 113: mul r0.w, r2.x, r0.w
 114: max r0.w, r0.w, l(0.000000)
 115: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
 116: ne r1.x, r1.x, l(0.000000)
 117: and r1.x, r1.x, l(0x3f800000)
 118: mul r0.w, r0.w, r1.x
 119: mul r1.xzw, r1.zzzz, r5.xxyz
 120: mul r2.xyz, r5.xyzx, r0.wwww
 121: add r0.w, -r1.y, l(1.000000)
 122: mul r1.y, r0.w, r0.w
 123: mul r1.y, r1.y, r1.y
 124: mul r0.w, r0.w, r1.y
 125: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 126: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
 127: mul r2.xyz, r2.xyzx, r3.xyzx
 128: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
 129: mov o0.w, l(1.000000)
 130: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  32: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  33: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  34: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 118 math, 8 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  14: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  15: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  16: add r4.xyz, r4.xyzx, cb0[14].xyzx
  17: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  18: mov r6.x, cb4[9].z
  19: mov r6.y, cb4[10].z
  20: mov r6.z, cb4[11].z
  21: dp3 r1.w, r5.xyzx, r6.xyzx
  22: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  23: dp3 r2.w, r5.xyzx, r5.xyzx
  24: sqrt r2.w, r2.w
  25: add r2.w, -r1.w, r2.w
  26: mad r1.w, cb3[25].w, r2.w, r1.w
  27: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  28: eq r2.w, cb5[0].x, l(1.000000)
  29: if_nz r2.w
  30:   eq r2.w, cb5[0].y, l(1.000000)
  31:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  32:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  33:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  34:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  35:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  36:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  37:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  38:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  39:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  40:   max r5.x, r2.w, r3.w
  41:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  42: else 
  43:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  46: lt r3.w, r1.w, l(0.990000)
  47: if_nz r3.w
  48:   add r5.xyz, v6.xyzx, -cb2[1].xyzx
  49:   max r3.w, |r5.y|, |r5.x|
  50:   max r3.w, |r5.z|, r3.w
  51:   add r3.w, r3.w, -cb2[2].z
  52:   max r3.w, r3.w, l(0.000010)
  53:   mul r3.w, r3.w, cb2[2].w
  54:   div r3.w, cb2[2].y, r3.w
  55:   add r3.w, r3.w, -cb2[2].x
  56:   add r3.w, -r3.w, l(1.000000)
  57:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  58:   sample_c_lz r6.x, r6.xyzx, t4.xxxx, s1, r3.w
  59:   add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  60:   sample_c_lz r6.y, r7.xyzx, t4.xxxx, s1, r3.w
  61:   add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  62:   sample_c_lz r6.z, r7.xyzx, t4.xxxx, s1, r3.w
  63:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  64:   sample_c_lz r6.w, r5.xyzx, t4.xxxx, s1, r3.w
  65:   dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  66:   add r4.w, -cb3[24].x, l(1.000000)
  67:   mad r3.w, r3.w, r4.w, cb3[24].x
  68: else 
  69:   mov r3.w, l(1.000000)
  70: endif 
  71: add r2.w, r2.w, -r3.w
  72: mad r1.w, r1.w, r2.w, r3.w
  73: dp3 r2.w, r4.xyzx, r4.xyzx
  74: sample r4.xyzw, r2.wwww, t2.xyzw, s4
  75: mul r1.w, r1.w, r4.x
  76: mov r4.x, v3.w
  77: mov r4.y, v4.w
  78: mov r4.z, v5.w
  79: dp3 r2.w, r4.xyzx, r4.xyzx
  80: rsq r2.w, r2.w
  81: mul r5.xyz, r2.wwww, r4.xyzx
  82: mul r6.xyz, r1.wwww, cb0[2].xyzx
  83: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  84: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  85: dp3 r1.w, r4.xyzx, r4.xyzx
  86: max r1.w, r1.w, l(0.001000)
  87: rsq r1.w, r1.w
  88: mul r4.xyz, r1.wwww, r4.xyzx
  89: dp3 r1.w, r2.xyzx, -r3.xyzx
  90: dp3_sat r2.w, r2.xyzx, r5.xyzx
  91: dp3_sat r2.x, r2.xyzx, r4.xyzx
  92: dp3_sat r2.y, r5.xyzx, r4.xyzx
  93: mul r2.z, r2.y, r2.y
  94: dp2 r2.z, r2.zzzz, r0.wwww
  95: add r2.z, r2.z, l(-0.500000)
  96: add r3.x, -r2.w, l(1.000000)
  97: mul r3.y, r3.x, r3.x
  98: mul r3.y, r3.y, r3.y
  99: mul r3.x, r3.x, r3.y
 100: mad r3.x, r2.z, r3.x, l(1.000000)
 101: add r3.y, -|r1.w|, l(1.000000)
 102: mul r3.z, r3.y, r3.y
 103: mul r3.z, r3.z, r3.z
 104: mul r3.y, r3.y, r3.z
 105: mad r2.z, r2.z, r3.y, l(1.000000)
 106: mul r2.z, r2.z, r3.x
 107: mul r2.z, r2.w, r2.z
 108: mul r0.w, r0.w, r0.w
 109: max r0.w, r0.w, l(0.002000)
 110: add r3.x, -r0.w, l(1.000000)
 111: mad r3.y, |r1.w|, r3.x, r0.w
 112: mad r3.x, r2.w, r3.x, r0.w
 113: mul r1.w, |r1.w|, r3.x
 114: mad r1.w, r2.w, r3.y, r1.w
 115: add r1.w, r1.w, l(0.000010)
 116: div r1.w, l(0.500000), r1.w
 117: mul r0.w, r0.w, r0.w
 118: mad r3.x, r2.x, r0.w, -r2.x
 119: mad r2.x, r3.x, r2.x, l(1.000000)
 120: mul r0.w, r0.w, l(0.318310)
 121: mad r2.x, r2.x, r2.x, l(0.000000)
 122: div r0.w, r0.w, r2.x
 123: mul r0.w, r0.w, r1.w
 124: mul r0.w, r0.w, l(3.141593)
 125: mul r0.w, r2.w, r0.w
 126: max r0.w, r0.w, l(0.000000)
 127: dp3 r1.w, r0.xyzx, r0.xyzx
 128: ne r1.w, r1.w, l(0.000000)
 129: and r1.w, r1.w, l(0x3f800000)
 130: mul r0.w, r0.w, r1.w
 131: mul r2.xzw, r2.zzzz, r6.xxyz
 132: mul r3.xyz, r6.xyzx, r0.wwww
 133: add r0.w, -r2.y, l(1.000000)
 134: mul r1.w, r0.w, r0.w
 135: mul r1.w, r1.w, r1.w
 136: mul r0.w, r0.w, r1.w
 137: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 138: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 139: mul r0.xyz, r0.xyzx, r3.xyzx
 140: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 141: mov o0.w, l(1.000000)
 142: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE SHADOWS_SOFT UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  22: mov o6.xyz, r1.yzwy
  23: mov r2.w, l(0)
  24: mov o3.xyzw, r2.wwwx
  25: mov o4.xyzw, r2.wwwy
  26: mov o5.w, r2.z
  27: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul o5.xyz, r1.wwww, r1.xyzx
  33: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  34: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  35: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  36: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  37: mov o8.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 119 math, 8 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  14: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  15: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  16: add r4.xyz, r4.xyzx, cb0[14].xyzx
  17: mov r1.w, cb4[0].x
  18: add r5.xyz, -v6.xyzx, cb3[r1.w + 64].xyzx
  19: ishl r1.w, cb4[0].x, l(2)
  20: mov r6.x, cb3[r1.w + 8].z
  21: mov r6.y, cb3[r1.w + 9].z
  22: mov r6.z, cb3[r1.w + 10].z
  23: dp3 r1.w, r5.xyzx, r6.xyzx
  24: add r5.xyz, v6.xyzx, -cb2[25].xyzx
  25: dp3 r2.w, r5.xyzx, r5.xyzx
  26: sqrt r2.w, r2.w
  27: add r2.w, -r1.w, r2.w
  28: mad r1.w, cb2[25].w, r2.w, r1.w
  29: mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
  30: eq r2.w, cb5[0].x, l(1.000000)
  31: if_nz r2.w
  32:   eq r2.w, cb5[0].y, l(1.000000)
  33:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  34:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  35:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  36:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  37:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  38:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  39:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  40:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  41:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  42:   max r5.x, r2.w, r3.w
  43:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  44: else 
  45:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  46: endif 
  47: dp4_sat r2.w, r5.xyzw, cb1[46].xyzw
  48: lt r3.w, r1.w, l(0.990000)
  49: if_nz r3.w
  50:   add r5.xyz, v6.xyzx, -cb1[1].xyzx
  51:   max r3.w, |r5.y|, |r5.x|
  52:   max r3.w, |r5.z|, r3.w
  53:   add r3.w, r3.w, -cb1[2].z
  54:   max r3.w, r3.w, l(0.000010)
  55:   mul r3.w, r3.w, cb1[2].w
  56:   div r3.w, cb1[2].y, r3.w
  57:   add r3.w, r3.w, -cb1[2].x
  58:   add r3.w, -r3.w, l(1.000000)
  59:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  60:   sample_c_lz r6.x, r6.xyzx, t4.xxxx, s1, r3.w
  61:   add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  62:   sample_c_lz r6.y, r7.xyzx, t4.xxxx, s1, r3.w
  63:   add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  64:   sample_c_lz r6.z, r7.xyzx, t4.xxxx, s1, r3.w
  65:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  66:   sample_c_lz r6.w, r5.xyzx, t4.xxxx, s1, r3.w
  67:   dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  68:   add r4.w, -cb2[24].x, l(1.000000)
  69:   mad r3.w, r3.w, r4.w, cb2[24].x
  70: else 
  71:   mov r3.w, l(1.000000)
  72: endif 
  73: add r2.w, r2.w, -r3.w
  74: mad r1.w, r1.w, r2.w, r3.w
  75: dp3 r2.w, r4.xyzx, r4.xyzx
  76: sample r4.xyzw, r2.wwww, t2.xyzw, s4
  77: mul r1.w, r1.w, r4.x
  78: mov r4.x, v3.w
  79: mov r4.y, v4.w
  80: mov r4.z, v5.w
  81: dp3 r2.w, r4.xyzx, r4.xyzx
  82: rsq r2.w, r2.w
  83: mul r5.xyz, r2.wwww, r4.xyzx
  84: mul r6.xyz, r1.wwww, cb0[2].xyzx
  85: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  86: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  87: dp3 r1.w, r4.xyzx, r4.xyzx
  88: max r1.w, r1.w, l(0.001000)
  89: rsq r1.w, r1.w
  90: mul r4.xyz, r1.wwww, r4.xyzx
  91: dp3 r1.w, r2.xyzx, -r3.xyzx
  92: dp3_sat r2.w, r2.xyzx, r5.xyzx
  93: dp3_sat r2.x, r2.xyzx, r4.xyzx
  94: dp3_sat r2.y, r5.xyzx, r4.xyzx
  95: mul r2.z, r2.y, r2.y
  96: dp2 r2.z, r2.zzzz, r0.wwww
  97: add r2.z, r2.z, l(-0.500000)
  98: add r3.x, -r2.w, l(1.000000)
  99: mul r3.y, r3.x, r3.x
 100: mul r3.y, r3.y, r3.y
 101: mul r3.x, r3.x, r3.y
 102: mad r3.x, r2.z, r3.x, l(1.000000)
 103: add r3.y, -|r1.w|, l(1.000000)
 104: mul r3.z, r3.y, r3.y
 105: mul r3.z, r3.z, r3.z
 106: mul r3.y, r3.y, r3.z
 107: mad r2.z, r2.z, r3.y, l(1.000000)
 108: mul r2.z, r2.z, r3.x
 109: mul r2.z, r2.w, r2.z
 110: mul r0.w, r0.w, r0.w
 111: max r0.w, r0.w, l(0.002000)
 112: add r3.x, -r0.w, l(1.000000)
 113: mad r3.y, |r1.w|, r3.x, r0.w
 114: mad r3.x, r2.w, r3.x, r0.w
 115: mul r1.w, |r1.w|, r3.x
 116: mad r1.w, r2.w, r3.y, r1.w
 117: add r1.w, r1.w, l(0.000010)
 118: div r1.w, l(0.500000), r1.w
 119: mul r0.w, r0.w, r0.w
 120: mad r3.x, r2.x, r0.w, -r2.x
 121: mad r2.x, r3.x, r2.x, l(1.000000)
 122: mul r0.w, r0.w, l(0.318310)
 123: mad r2.x, r2.x, r2.x, l(0.000000)
 124: div r0.w, r0.w, r2.x
 125: mul r0.w, r0.w, r1.w
 126: mul r0.w, r0.w, l(3.141593)
 127: mul r0.w, r2.w, r0.w
 128: max r0.w, r0.w, l(0.000000)
 129: dp3 r1.w, r0.xyzx, r0.xyzx
 130: ne r1.w, r1.w, l(0.000000)
 131: and r1.w, r1.w, l(0x3f800000)
 132: mul r0.w, r0.w, r1.w
 133: mul r2.xzw, r2.zzzz, r6.xxyz
 134: mul r3.xyz, r6.xyzx, r0.wwww
 135: add r0.w, -r2.y, l(1.000000)
 136: mul r1.w, r0.w, r0.w
 137: mul r1.w, r1.w, r1.w
 138: mul r0.w, r0.w, r1.w
 139: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 140: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 141: mul r0.xyz, r0.xyzx, r3.xyzx
 142: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 143: mov o0.w, l(1.000000)
 144: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r1.xyzx
  28: mov o3.w, r3.x
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r4.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r1.xyzx
  38: mul r1.x, v4.w, cb3[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r3.y
  41: mov o5.w, r3.z
  42: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  43: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  44: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  45: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  46: mov o8.xyzw, l(0,0,0,0)
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 128 math, 8 temp registers, 5 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 5 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  25: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  26: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  27: add r4.xyz, r4.xyzx, cb0[14].xyzx
  28: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  29: mov r6.x, cb4[9].z
  30: mov r6.y, cb4[10].z
  31: mov r6.z, cb4[11].z
  32: dp3 r1.w, r5.xyzx, r6.xyzx
  33: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  34: dp3 r2.w, r5.xyzx, r5.xyzx
  35: sqrt r2.w, r2.w
  36: add r2.w, -r1.w, r2.w
  37: mad r1.w, cb3[25].w, r2.w, r1.w
  38: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  39: eq r2.w, cb5[0].x, l(1.000000)
  40: if_nz r2.w
  41:   eq r2.w, cb5[0].y, l(1.000000)
  42:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  43:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  44:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  45:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  46:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  47:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  48:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  49:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  50:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  51:   max r5.x, r2.w, r3.w
  52:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  53: else 
  54:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  55: endif 
  56: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  57: lt r3.w, r1.w, l(0.990000)
  58: if_nz r3.w
  59:   add r5.xyz, v6.xyzx, -cb2[1].xyzx
  60:   max r3.w, |r5.y|, |r5.x|
  61:   max r3.w, |r5.z|, r3.w
  62:   add r3.w, r3.w, -cb2[2].z
  63:   max r3.w, r3.w, l(0.000010)
  64:   mul r3.w, r3.w, cb2[2].w
  65:   div r3.w, cb2[2].y, r3.w
  66:   add r3.w, r3.w, -cb2[2].x
  67:   add r3.w, -r3.w, l(1.000000)
  68:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  69:   sample_c_lz r6.x, r6.xyzx, t5.xxxx, s1, r3.w
  70:   add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  71:   sample_c_lz r6.y, r7.xyzx, t5.xxxx, s1, r3.w
  72:   add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  73:   sample_c_lz r6.z, r7.xyzx, t5.xxxx, s1, r3.w
  74:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  75:   sample_c_lz r6.w, r5.xyzx, t5.xxxx, s1, r3.w
  76:   dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  77:   add r4.w, -cb3[24].x, l(1.000000)
  78:   mad r3.w, r3.w, r4.w, cb3[24].x
  79: else 
  80:   mov r3.w, l(1.000000)
  81: endif 
  82: add r2.w, r2.w, -r3.w
  83: mad r1.w, r1.w, r2.w, r3.w
  84: dp3 r2.w, r4.xyzx, r4.xyzx
  85: sample r4.xyzw, r2.wwww, t3.xyzw, s5
  86: mul r1.w, r1.w, r4.x
  87: mov r4.x, v3.w
  88: mov r4.y, v4.w
  89: mov r4.z, v5.w
  90: dp3 r2.w, r4.xyzx, r4.xyzx
  91: rsq r2.w, r2.w
  92: mul r5.xyz, r2.wwww, r4.xyzx
  93: mul r6.xyz, r1.wwww, cb0[2].xyzx
  94: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  95: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  96: dp3 r1.w, r4.xyzx, r4.xyzx
  97: max r1.w, r1.w, l(0.001000)
  98: rsq r1.w, r1.w
  99: mul r4.xyz, r1.wwww, r4.xyzx
 100: dp3 r1.w, r2.xyzx, -r3.xyzx
 101: dp3_sat r2.w, r2.xyzx, r5.xyzx
 102: dp3_sat r2.x, r2.xyzx, r4.xyzx
 103: dp3_sat r2.y, r5.xyzx, r4.xyzx
 104: mul r2.z, r2.y, r2.y
 105: dp2 r2.z, r2.zzzz, r0.wwww
 106: add r2.z, r2.z, l(-0.500000)
 107: add r3.x, -r2.w, l(1.000000)
 108: mul r3.y, r3.x, r3.x
 109: mul r3.y, r3.y, r3.y
 110: mul r3.x, r3.x, r3.y
 111: mad r3.x, r2.z, r3.x, l(1.000000)
 112: add r3.y, -|r1.w|, l(1.000000)
 113: mul r3.z, r3.y, r3.y
 114: mul r3.z, r3.z, r3.z
 115: mul r3.y, r3.y, r3.z
 116: mad r2.z, r2.z, r3.y, l(1.000000)
 117: mul r2.z, r2.z, r3.x
 118: mul r2.z, r2.w, r2.z
 119: mul r0.w, r0.w, r0.w
 120: max r0.w, r0.w, l(0.002000)
 121: add r3.x, -r0.w, l(1.000000)
 122: mad r3.y, |r1.w|, r3.x, r0.w
 123: mad r3.x, r2.w, r3.x, r0.w
 124: mul r1.w, |r1.w|, r3.x
 125: mad r1.w, r2.w, r3.y, r1.w
 126: add r1.w, r1.w, l(0.000010)
 127: div r1.w, l(0.500000), r1.w
 128: mul r0.w, r0.w, r0.w
 129: mad r3.x, r2.x, r0.w, -r2.x
 130: mad r2.x, r3.x, r2.x, l(1.000000)
 131: mul r0.w, r0.w, l(0.318310)
 132: mad r2.x, r2.x, r2.x, l(0.000000)
 133: div r0.w, r0.w, r2.x
 134: mul r0.w, r0.w, r1.w
 135: mul r0.w, r0.w, l(3.141593)
 136: mul r0.w, r2.w, r0.w
 137: max r0.w, r0.w, l(0.000000)
 138: dp3 r1.w, r0.xyzx, r0.xyzx
 139: ne r1.w, r1.w, l(0.000000)
 140: and r1.w, r1.w, l(0x3f800000)
 141: mul r0.w, r0.w, r1.w
 142: mul r2.xzw, r2.zzzz, r6.xxyz
 143: mul r3.xyz, r6.xyzx, r0.wwww
 144: add r0.w, -r2.y, l(1.000000)
 145: mul r1.w, r0.w, r0.w
 146: mul r1.w, r1.w, r1.w
 147: mul r0.w, r0.w, r1.w
 148: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 149: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 150: mul r0.xyz, r0.xyzx, r3.xyzx
 151: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 152: mov o0.w, l(1.000000)
 153: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE SHADOWS_SOFT UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  22: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  23: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r2.xyz, r1.xxxx, r2.xyzx
  27: mov o3.xyz, r2.xyzx
  28: mad r3.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  29: mov o6.xyz, r1.yzwy
  30: mov o3.w, r3.x
  31: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul r1.xyz, r1.wwww, r1.xyzx
  37: mul r4.xyz, r2.yzxy, r1.zxyz
  38: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  39: mov o5.xyz, r1.xyzx
  40: mul r1.x, v4.w, cb2[9].w
  41: mul o4.xyz, r1.xxxx, r2.xyzx
  42: mov o4.w, r3.y
  43: mov o5.w, r3.z
  44: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  45: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  46: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  47: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  48: mov o8.xyzw, l(0,0,0,0)
  49: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 129 math, 8 temp registers, 5 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 5 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  25: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  26: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  27: add r4.xyz, r4.xyzx, cb0[14].xyzx
  28: mov r1.w, cb4[0].x
  29: add r5.xyz, -v6.xyzx, cb3[r1.w + 64].xyzx
  30: ishl r1.w, cb4[0].x, l(2)
  31: mov r6.x, cb3[r1.w + 8].z
  32: mov r6.y, cb3[r1.w + 9].z
  33: mov r6.z, cb3[r1.w + 10].z
  34: dp3 r1.w, r5.xyzx, r6.xyzx
  35: add r5.xyz, v6.xyzx, -cb2[25].xyzx
  36: dp3 r2.w, r5.xyzx, r5.xyzx
  37: sqrt r2.w, r2.w
  38: add r2.w, -r1.w, r2.w
  39: mad r1.w, cb2[25].w, r2.w, r1.w
  40: mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
  41: eq r2.w, cb5[0].x, l(1.000000)
  42: if_nz r2.w
  43:   eq r2.w, cb5[0].y, l(1.000000)
  44:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  45:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  46:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  47:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  48:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  49:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  50:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  51:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  52:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  53:   max r5.x, r2.w, r3.w
  54:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  55: else 
  56:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  57: endif 
  58: dp4_sat r2.w, r5.xyzw, cb1[46].xyzw
  59: lt r3.w, r1.w, l(0.990000)
  60: if_nz r3.w
  61:   add r5.xyz, v6.xyzx, -cb1[1].xyzx
  62:   max r3.w, |r5.y|, |r5.x|
  63:   max r3.w, |r5.z|, r3.w
  64:   add r3.w, r3.w, -cb1[2].z
  65:   max r3.w, r3.w, l(0.000010)
  66:   mul r3.w, r3.w, cb1[2].w
  67:   div r3.w, cb1[2].y, r3.w
  68:   add r3.w, r3.w, -cb1[2].x
  69:   add r3.w, -r3.w, l(1.000000)
  70:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  71:   sample_c_lz r6.x, r6.xyzx, t5.xxxx, s1, r3.w
  72:   add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  73:   sample_c_lz r6.y, r7.xyzx, t5.xxxx, s1, r3.w
  74:   add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  75:   sample_c_lz r6.z, r7.xyzx, t5.xxxx, s1, r3.w
  76:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  77:   sample_c_lz r6.w, r5.xyzx, t5.xxxx, s1, r3.w
  78:   dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  79:   add r4.w, -cb2[24].x, l(1.000000)
  80:   mad r3.w, r3.w, r4.w, cb2[24].x
  81: else 
  82:   mov r3.w, l(1.000000)
  83: endif 
  84: add r2.w, r2.w, -r3.w
  85: mad r1.w, r1.w, r2.w, r3.w
  86: dp3 r2.w, r4.xyzx, r4.xyzx
  87: sample r4.xyzw, r2.wwww, t3.xyzw, s5
  88: mul r1.w, r1.w, r4.x
  89: mov r4.x, v3.w
  90: mov r4.y, v4.w
  91: mov r4.z, v5.w
  92: dp3 r2.w, r4.xyzx, r4.xyzx
  93: rsq r2.w, r2.w
  94: mul r5.xyz, r2.wwww, r4.xyzx
  95: mul r6.xyz, r1.wwww, cb0[2].xyzx
  96: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  97: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  98: dp3 r1.w, r4.xyzx, r4.xyzx
  99: max r1.w, r1.w, l(0.001000)
 100: rsq r1.w, r1.w
 101: mul r4.xyz, r1.wwww, r4.xyzx
 102: dp3 r1.w, r2.xyzx, -r3.xyzx
 103: dp3_sat r2.w, r2.xyzx, r5.xyzx
 104: dp3_sat r2.x, r2.xyzx, r4.xyzx
 105: dp3_sat r2.y, r5.xyzx, r4.xyzx
 106: mul r2.z, r2.y, r2.y
 107: dp2 r2.z, r2.zzzz, r0.wwww
 108: add r2.z, r2.z, l(-0.500000)
 109: add r3.x, -r2.w, l(1.000000)
 110: mul r3.y, r3.x, r3.x
 111: mul r3.y, r3.y, r3.y
 112: mul r3.x, r3.x, r3.y
 113: mad r3.x, r2.z, r3.x, l(1.000000)
 114: add r3.y, -|r1.w|, l(1.000000)
 115: mul r3.z, r3.y, r3.y
 116: mul r3.z, r3.z, r3.z
 117: mul r3.y, r3.y, r3.z
 118: mad r2.z, r2.z, r3.y, l(1.000000)
 119: mul r2.z, r2.z, r3.x
 120: mul r2.z, r2.w, r2.z
 121: mul r0.w, r0.w, r0.w
 122: max r0.w, r0.w, l(0.002000)
 123: add r3.x, -r0.w, l(1.000000)
 124: mad r3.y, |r1.w|, r3.x, r0.w
 125: mad r3.x, r2.w, r3.x, r0.w
 126: mul r1.w, |r1.w|, r3.x
 127: mad r1.w, r2.w, r3.y, r1.w
 128: add r1.w, r1.w, l(0.000010)
 129: div r1.w, l(0.500000), r1.w
 130: mul r0.w, r0.w, r0.w
 131: mad r3.x, r2.x, r0.w, -r2.x
 132: mad r2.x, r3.x, r2.x, l(1.000000)
 133: mul r0.w, r0.w, l(0.318310)
 134: mad r2.x, r2.x, r2.x, l(0.000000)
 135: div r0.w, r0.w, r2.x
 136: mul r0.w, r0.w, r1.w
 137: mul r0.w, r0.w, l(3.141593)
 138: mul r0.w, r2.w, r0.w
 139: max r0.w, r0.w, l(0.000000)
 140: dp3 r1.w, r0.xyzx, r0.xyzx
 141: ne r1.w, r1.w, l(0.000000)
 142: and r1.w, r1.w, l(0x3f800000)
 143: mul r0.w, r0.w, r1.w
 144: mul r2.xzw, r2.zzzz, r6.xxyz
 145: mul r3.xyz, r6.xyzx, r0.wwww
 146: add r0.w, -r2.y, l(1.000000)
 147: mul r1.w, r0.w, r0.w
 148: mul r1.w, r1.w, r1.w
 149: mul r0.w, r0.w, r1.w
 150: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 151: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 152: mul r0.xyz, r0.xyzx, r3.xyzx
 153: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 154: mov o0.w, l(1.000000)
 155: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  32: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  33: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  34: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 118 math, 7 temp registers, 3 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 3 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: mul r3.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  14: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  15: add r3.xyz, r3.xyzx, cb0[14].xyzx
  16: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r5.x, cb4[9].z
  18: mov r5.y, cb4[10].z
  19: mov r5.z, cb4[11].z
  20: dp3 r0.w, r4.xyzx, r5.xyzx
  21: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r1.w, r4.xyzx, r4.xyzx
  23: sqrt r1.w, r1.w
  24: add r1.w, -r0.w, r1.w
  25: mad r0.w, cb3[25].w, r1.w, r0.w
  26: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  27: eq r1.w, cb5[0].x, l(1.000000)
  28: if_nz r1.w
  29:   eq r1.w, cb5[0].y, l(1.000000)
  30:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  32:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  33:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  34:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  35:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  36:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  37:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  38:   mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r4.x, r1.w, r2.w
  40:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  41: else 
  42:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r1.w, r4.xyzw, cb2[46].xyzw
  45: lt r2.w, r0.w, l(0.990000)
  46: if_nz r2.w
  47:   add r4.xyz, v6.xyzx, -cb2[1].xyzx
  48:   max r2.w, |r4.y|, |r4.x|
  49:   max r2.w, |r4.z|, r2.w
  50:   add r2.w, r2.w, -cb2[2].z
  51:   max r2.w, r2.w, l(0.000010)
  52:   mul r2.w, r2.w, cb2[2].w
  53:   div r2.w, cb2[2].y, r2.w
  54:   add r2.w, r2.w, -cb2[2].x
  55:   add r2.w, -r2.w, l(1.000000)
  56:   add r5.xyz, r4.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  57:   sample_c_lz r5.x, r5.xyzx, t3.xxxx, s1, r2.w
  58:   add r6.xyz, r4.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  59:   sample_c_lz r5.y, r6.xyzx, t3.xxxx, s1, r2.w
  60:   add r6.xyz, r4.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  61:   sample_c_lz r5.z, r6.xyzx, t3.xxxx, s1, r2.w
  62:   add r4.xyz, r4.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  63:   sample_c_lz r5.w, r4.xyzx, t3.xxxx, s1, r2.w
  64:   dp4 r2.w, r5.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  65:   add r3.w, -cb3[24].x, l(1.000000)
  66:   mad r2.w, r2.w, r3.w, cb3[24].x
  67: else 
  68:   mov r2.w, l(1.000000)
  69: endif 
  70: add r1.w, r1.w, -r2.w
  71: mad r0.w, r0.w, r1.w, r2.w
  72: dp3 r1.w, r3.xyzx, r3.xyzx
  73: sample r3.xyzw, r1.wwww, t1.xyzw, s3
  74: mul r0.w, r0.w, r3.x
  75: mov r3.x, v3.w
  76: mov r3.y, v4.w
  77: mov r3.z, v5.w
  78: dp3 r1.w, r3.xyzx, r3.xyzx
  79: rsq r1.w, r1.w
  80: mul r4.xyz, r1.wwww, r3.xyzx
  81: mul r5.xyz, r0.wwww, cb0[2].xyzx
  82: add r0.w, -cb0[8].w, l(1.000000)
  83: mad r3.xyz, r3.xyzx, r1.wwww, -r2.xyzx
  84: dp3 r1.w, r3.xyzx, r3.xyzx
  85: max r1.w, r1.w, l(0.001000)
  86: rsq r1.w, r1.w
  87: mul r3.xyz, r1.wwww, r3.xyzx
  88: dp3 r1.w, r1.xyzx, -r2.xyzx
  89: dp3_sat r2.x, r1.xyzx, r4.xyzx
  90: dp3_sat r1.x, r1.xyzx, r3.xyzx
  91: dp3_sat r1.y, r4.xyzx, r3.xyzx
  92: mul r1.z, r1.y, r1.y
  93: dp2 r1.z, r1.zzzz, r0.wwww
  94: add r1.z, r1.z, l(-0.500000)
  95: add r2.y, -r2.x, l(1.000000)
  96: mul r2.z, r2.y, r2.y
  97: mul r2.z, r2.z, r2.z
  98: mul r2.y, r2.y, r2.z
  99: mad r2.y, r1.z, r2.y, l(1.000000)
 100: add r2.z, -|r1.w|, l(1.000000)
 101: mul r2.w, r2.z, r2.z
 102: mul r2.w, r2.w, r2.w
 103: mul r2.z, r2.z, r2.w
 104: mad r1.z, r1.z, r2.z, l(1.000000)
 105: mul r1.z, r1.z, r2.y
 106: mul r1.z, r2.x, r1.z
 107: mul r0.w, r0.w, r0.w
 108: max r0.w, r0.w, l(0.002000)
 109: add r2.y, -r0.w, l(1.000000)
 110: mad r2.z, |r1.w|, r2.y, r0.w
 111: mad r2.y, r2.x, r2.y, r0.w
 112: mul r1.w, |r1.w|, r2.y
 113: mad r1.w, r2.x, r2.z, r1.w
 114: add r1.w, r1.w, l(0.000010)
 115: div r1.w, l(0.500000), r1.w
 116: mul r0.w, r0.w, r0.w
 117: mad r2.y, r1.x, r0.w, -r1.x
 118: mad r1.x, r2.y, r1.x, l(1.000000)
 119: mul r0.w, r0.w, l(0.318310)
 120: mad r1.x, r1.x, r1.x, l(0.000000)
 121: div r0.w, r0.w, r1.x
 122: mul r0.w, r0.w, r1.w
 123: mul r0.w, r0.w, l(3.141593)
 124: mul r0.w, r2.x, r0.w
 125: max r0.w, r0.w, l(0.000000)
 126: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
 127: ne r1.x, r1.x, l(0.000000)
 128: and r1.x, r1.x, l(0x3f800000)
 129: mul r0.w, r0.w, r1.x
 130: mul r1.xzw, r1.zzzz, r5.xxyz
 131: mul r2.xyz, r5.xyzx, r0.wwww
 132: add r0.w, -r1.y, l(1.000000)
 133: mul r1.y, r0.w, r0.w
 134: mul r1.y, r1.y, r1.y
 135: mul r0.w, r0.w, r1.y
 136: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 137: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
 138: mul r2.xyz, r2.xyzx, r3.xyzx
 139: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
 140: mov o0.w, l(1.000000)
 141: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE SHADOWS_SOFT UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  22: mov o6.xyz, r1.yzwy
  23: mov r2.w, l(0)
  24: mov o3.xyzw, r2.wwwx
  25: mov o4.xyzw, r2.wwwy
  26: mov o5.w, r2.z
  27: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul o5.xyz, r1.wwww, r1.xyzx
  33: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  34: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  35: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  36: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  37: mov o8.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 119 math, 7 temp registers, 3 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 3 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: mul r3.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  14: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  15: add r3.xyz, r3.xyzx, cb0[14].xyzx
  16: mov r0.w, cb4[0].x
  17: add r4.xyz, -v6.xyzx, cb3[r0.w + 64].xyzx
  18: ishl r0.w, cb4[0].x, l(2)
  19: mov r5.x, cb3[r0.w + 8].z
  20: mov r5.y, cb3[r0.w + 9].z
  21: mov r5.z, cb3[r0.w + 10].z
  22: dp3 r0.w, r4.xyzx, r5.xyzx
  23: add r4.xyz, v6.xyzx, -cb2[25].xyzx
  24: dp3 r1.w, r4.xyzx, r4.xyzx
  25: sqrt r1.w, r1.w
  26: add r1.w, -r0.w, r1.w
  27: mad r0.w, cb2[25].w, r1.w, r0.w
  28: mad_sat r0.w, r0.w, cb2[24].z, cb2[24].w
  29: eq r1.w, cb5[0].x, l(1.000000)
  30: if_nz r1.w
  31:   eq r1.w, cb5[0].y, l(1.000000)
  32:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  33:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  34:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  35:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  36:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  37:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  38:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  39:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  40:   mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
  41:   max r4.x, r1.w, r2.w
  42:   sample r4.xyzw, r4.xzwx, t2.xyzw, s0
  43: else 
  44:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  45: endif 
  46: dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
  47: lt r2.w, r0.w, l(0.990000)
  48: if_nz r2.w
  49:   add r4.xyz, v6.xyzx, -cb1[1].xyzx
  50:   max r2.w, |r4.y|, |r4.x|
  51:   max r2.w, |r4.z|, r2.w
  52:   add r2.w, r2.w, -cb1[2].z
  53:   max r2.w, r2.w, l(0.000010)
  54:   mul r2.w, r2.w, cb1[2].w
  55:   div r2.w, cb1[2].y, r2.w
  56:   add r2.w, r2.w, -cb1[2].x
  57:   add r2.w, -r2.w, l(1.000000)
  58:   add r5.xyz, r4.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  59:   sample_c_lz r5.x, r5.xyzx, t3.xxxx, s1, r2.w
  60:   add r6.xyz, r4.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  61:   sample_c_lz r5.y, r6.xyzx, t3.xxxx, s1, r2.w
  62:   add r6.xyz, r4.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  63:   sample_c_lz r5.z, r6.xyzx, t3.xxxx, s1, r2.w
  64:   add r4.xyz, r4.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  65:   sample_c_lz r5.w, r4.xyzx, t3.xxxx, s1, r2.w
  66:   dp4 r2.w, r5.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  67:   add r3.w, -cb2[24].x, l(1.000000)
  68:   mad r2.w, r2.w, r3.w, cb2[24].x
  69: else 
  70:   mov r2.w, l(1.000000)
  71: endif 
  72: add r1.w, r1.w, -r2.w
  73: mad r0.w, r0.w, r1.w, r2.w
  74: dp3 r1.w, r3.xyzx, r3.xyzx
  75: sample r3.xyzw, r1.wwww, t1.xyzw, s3
  76: mul r0.w, r0.w, r3.x
  77: mov r3.x, v3.w
  78: mov r3.y, v4.w
  79: mov r3.z, v5.w
  80: dp3 r1.w, r3.xyzx, r3.xyzx
  81: rsq r1.w, r1.w
  82: mul r4.xyz, r1.wwww, r3.xyzx
  83: mul r5.xyz, r0.wwww, cb0[2].xyzx
  84: add r0.w, -cb0[8].w, l(1.000000)
  85: mad r3.xyz, r3.xyzx, r1.wwww, -r2.xyzx
  86: dp3 r1.w, r3.xyzx, r3.xyzx
  87: max r1.w, r1.w, l(0.001000)
  88: rsq r1.w, r1.w
  89: mul r3.xyz, r1.wwww, r3.xyzx
  90: dp3 r1.w, r1.xyzx, -r2.xyzx
  91: dp3_sat r2.x, r1.xyzx, r4.xyzx
  92: dp3_sat r1.x, r1.xyzx, r3.xyzx
  93: dp3_sat r1.y, r4.xyzx, r3.xyzx
  94: mul r1.z, r1.y, r1.y
  95: dp2 r1.z, r1.zzzz, r0.wwww
  96: add r1.z, r1.z, l(-0.500000)
  97: add r2.y, -r2.x, l(1.000000)
  98: mul r2.z, r2.y, r2.y
  99: mul r2.z, r2.z, r2.z
 100: mul r2.y, r2.y, r2.z
 101: mad r2.y, r1.z, r2.y, l(1.000000)
 102: add r2.z, -|r1.w|, l(1.000000)
 103: mul r2.w, r2.z, r2.z
 104: mul r2.w, r2.w, r2.w
 105: mul r2.z, r2.z, r2.w
 106: mad r1.z, r1.z, r2.z, l(1.000000)
 107: mul r1.z, r1.z, r2.y
 108: mul r1.z, r2.x, r1.z
 109: mul r0.w, r0.w, r0.w
 110: max r0.w, r0.w, l(0.002000)
 111: add r2.y, -r0.w, l(1.000000)
 112: mad r2.z, |r1.w|, r2.y, r0.w
 113: mad r2.y, r2.x, r2.y, r0.w
 114: mul r1.w, |r1.w|, r2.y
 115: mad r1.w, r2.x, r2.z, r1.w
 116: add r1.w, r1.w, l(0.000010)
 117: div r1.w, l(0.500000), r1.w
 118: mul r0.w, r0.w, r0.w
 119: mad r2.y, r1.x, r0.w, -r1.x
 120: mad r1.x, r2.y, r1.x, l(1.000000)
 121: mul r0.w, r0.w, l(0.318310)
 122: mad r1.x, r1.x, r1.x, l(0.000000)
 123: div r0.w, r0.w, r1.x
 124: mul r0.w, r0.w, r1.w
 125: mul r0.w, r0.w, l(3.141593)
 126: mul r0.w, r2.x, r0.w
 127: max r0.w, r0.w, l(0.000000)
 128: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
 129: ne r1.x, r1.x, l(0.000000)
 130: and r1.x, r1.x, l(0x3f800000)
 131: mul r0.w, r0.w, r1.x
 132: mul r1.xzw, r1.zzzz, r5.xxyz
 133: mul r2.xyz, r5.xyzx, r0.wwww
 134: add r0.w, -r1.y, l(1.000000)
 135: mul r1.y, r0.w, r0.w
 136: mul r1.y, r1.y, r1.y
 137: mul r0.w, r0.w, r1.y
 138: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 139: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
 140: mul r2.xyz, r2.xyzx, r3.xyzx
 141: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
 142: mov o0.w, l(1.000000)
 143: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  32: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  33: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  34: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 113 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 5
Set CUBE Texture "_LightTexture0" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 5 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  14: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  15: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  16: add r4.xyz, r4.xyzx, cb0[14].xyzx
  17: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  18: mov r6.x, cb4[9].z
  19: mov r6.y, cb4[10].z
  20: mov r6.z, cb4[11].z
  21: dp3 r1.w, r5.xyzx, r6.xyzx
  22: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  23: dp3 r2.w, r5.xyzx, r5.xyzx
  24: sqrt r2.w, r2.w
  25: add r2.w, -r1.w, r2.w
  26: mad r1.w, cb3[25].w, r2.w, r1.w
  27: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  28: eq r2.w, cb5[0].x, l(1.000000)
  29: if_nz r2.w
  30:   eq r2.w, cb5[0].y, l(1.000000)
  31:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  32:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  33:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  34:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  35:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  36:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  37:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  38:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  39:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  40:   max r5.x, r2.w, r3.w
  41:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  42: else 
  43:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  46: add r5.xyz, v6.xyzx, -cb2[1].xyzx
  47: max r3.w, |r5.y|, |r5.x|
  48: max r3.w, |r5.z|, r3.w
  49: add r3.w, r3.w, -cb2[2].z
  50: max r3.w, r3.w, l(0.000010)
  51: mul r3.w, r3.w, cb2[2].w
  52: div r3.w, cb2[2].y, r3.w
  53: add r3.w, r3.w, -cb2[2].x
  54: add r3.w, -r3.w, l(1.000000)
  55: sample_c_lz r3.w, r5.xyzx, t5.xxxx, s1, r3.w
  56: add r4.w, -cb3[24].x, l(1.000000)
  57: mad r3.w, r3.w, r4.w, cb3[24].x
  58: add r2.w, r2.w, -r3.w
  59: mad r1.w, r1.w, r2.w, r3.w
  60: dp3 r2.w, r4.xyzx, r4.xyzx
  61: sample r5.xyzw, r2.wwww, t2.xyzw, s5
  62: sample r4.xyzw, r4.xyzx, t3.xyzw, s4
  63: mul r2.w, r4.w, r5.x
  64: mul r1.w, r1.w, r2.w
  65: mov r4.x, v3.w
  66: mov r4.y, v4.w
  67: mov r4.z, v5.w
  68: dp3 r2.w, r4.xyzx, r4.xyzx
  69: rsq r2.w, r2.w
  70: mul r5.xyz, r2.wwww, r4.xyzx
  71: mul r6.xyz, r1.wwww, cb0[2].xyzx
  72: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  73: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  74: dp3 r1.w, r4.xyzx, r4.xyzx
  75: max r1.w, r1.w, l(0.001000)
  76: rsq r1.w, r1.w
  77: mul r4.xyz, r1.wwww, r4.xyzx
  78: dp3 r1.w, r2.xyzx, -r3.xyzx
  79: dp3_sat r2.w, r2.xyzx, r5.xyzx
  80: dp3_sat r2.x, r2.xyzx, r4.xyzx
  81: dp3_sat r2.y, r5.xyzx, r4.xyzx
  82: mul r2.z, r2.y, r2.y
  83: dp2 r2.z, r2.zzzz, r0.wwww
  84: add r2.z, r2.z, l(-0.500000)
  85: add r3.x, -r2.w, l(1.000000)
  86: mul r3.y, r3.x, r3.x
  87: mul r3.y, r3.y, r3.y
  88: mul r3.x, r3.x, r3.y
  89: mad r3.x, r2.z, r3.x, l(1.000000)
  90: add r3.y, -|r1.w|, l(1.000000)
  91: mul r3.z, r3.y, r3.y
  92: mul r3.z, r3.z, r3.z
  93: mul r3.y, r3.y, r3.z
  94: mad r2.z, r2.z, r3.y, l(1.000000)
  95: mul r2.z, r2.z, r3.x
  96: mul r2.z, r2.w, r2.z
  97: mul r0.w, r0.w, r0.w
  98: max r0.w, r0.w, l(0.002000)
  99: add r3.x, -r0.w, l(1.000000)
 100: mad r3.y, |r1.w|, r3.x, r0.w
 101: mad r3.x, r2.w, r3.x, r0.w
 102: mul r1.w, |r1.w|, r3.x
 103: mad r1.w, r2.w, r3.y, r1.w
 104: add r1.w, r1.w, l(0.000010)
 105: div r1.w, l(0.500000), r1.w
 106: mul r0.w, r0.w, r0.w
 107: mad r3.x, r2.x, r0.w, -r2.x
 108: mad r2.x, r3.x, r2.x, l(1.000000)
 109: mul r0.w, r0.w, l(0.318310)
 110: mad r2.x, r2.x, r2.x, l(0.000000)
 111: div r0.w, r0.w, r2.x
 112: mul r0.w, r0.w, r1.w
 113: mul r0.w, r0.w, l(3.141593)
 114: mul r0.w, r2.w, r0.w
 115: max r0.w, r0.w, l(0.000000)
 116: dp3 r1.w, r0.xyzx, r0.xyzx
 117: ne r1.w, r1.w, l(0.000000)
 118: and r1.w, r1.w, l(0x3f800000)
 119: mul r0.w, r0.w, r1.w
 120: mul r2.xzw, r2.zzzz, r6.xxyz
 121: mul r3.xyz, r6.xyzx, r0.wwww
 122: add r0.w, -r2.y, l(1.000000)
 123: mul r1.w, r0.w, r0.w
 124: mul r1.w, r1.w, r1.w
 125: mul r0.w, r0.w, r1.w
 126: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 127: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 128: mul r0.xyz, r0.xyzx, r3.xyzx
 129: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 130: mov o0.w, l(1.000000)
 131: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  22: mov o6.xyz, r1.yzwy
  23: mov r2.w, l(0)
  24: mov o3.xyzw, r2.wwwx
  25: mov o4.xyzw, r2.wwwy
  26: mov o5.w, r2.z
  27: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul o5.xyz, r1.wwww, r1.xyzx
  33: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  34: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  35: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  36: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  37: mov o8.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 114 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 5
Set CUBE Texture "_LightTexture0" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 5 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  14: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  15: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  16: add r4.xyz, r4.xyzx, cb0[14].xyzx
  17: mov r1.w, cb4[0].x
  18: add r5.xyz, -v6.xyzx, cb3[r1.w + 64].xyzx
  19: ishl r1.w, cb4[0].x, l(2)
  20: mov r6.x, cb3[r1.w + 8].z
  21: mov r6.y, cb3[r1.w + 9].z
  22: mov r6.z, cb3[r1.w + 10].z
  23: dp3 r1.w, r5.xyzx, r6.xyzx
  24: add r5.xyz, v6.xyzx, -cb2[25].xyzx
  25: dp3 r2.w, r5.xyzx, r5.xyzx
  26: sqrt r2.w, r2.w
  27: add r2.w, -r1.w, r2.w
  28: mad r1.w, cb2[25].w, r2.w, r1.w
  29: mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
  30: eq r2.w, cb5[0].x, l(1.000000)
  31: if_nz r2.w
  32:   eq r2.w, cb5[0].y, l(1.000000)
  33:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  34:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  35:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  36:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  37:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  38:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  39:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  40:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  41:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  42:   max r5.x, r2.w, r3.w
  43:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  44: else 
  45:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  46: endif 
  47: dp4_sat r2.w, r5.xyzw, cb1[46].xyzw
  48: add r5.xyz, v6.xyzx, -cb1[1].xyzx
  49: max r3.w, |r5.y|, |r5.x|
  50: max r3.w, |r5.z|, r3.w
  51: add r3.w, r3.w, -cb1[2].z
  52: max r3.w, r3.w, l(0.000010)
  53: mul r3.w, r3.w, cb1[2].w
  54: div r3.w, cb1[2].y, r3.w
  55: add r3.w, r3.w, -cb1[2].x
  56: add r3.w, -r3.w, l(1.000000)
  57: sample_c_lz r3.w, r5.xyzx, t5.xxxx, s1, r3.w
  58: add r4.w, -cb2[24].x, l(1.000000)
  59: mad r3.w, r3.w, r4.w, cb2[24].x
  60: add r2.w, r2.w, -r3.w
  61: mad r1.w, r1.w, r2.w, r3.w
  62: dp3 r2.w, r4.xyzx, r4.xyzx
  63: sample r5.xyzw, r2.wwww, t2.xyzw, s5
  64: sample r4.xyzw, r4.xyzx, t3.xyzw, s4
  65: mul r2.w, r4.w, r5.x
  66: mul r1.w, r1.w, r2.w
  67: mov r4.x, v3.w
  68: mov r4.y, v4.w
  69: mov r4.z, v5.w
  70: dp3 r2.w, r4.xyzx, r4.xyzx
  71: rsq r2.w, r2.w
  72: mul r5.xyz, r2.wwww, r4.xyzx
  73: mul r6.xyz, r1.wwww, cb0[2].xyzx
  74: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  75: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  76: dp3 r1.w, r4.xyzx, r4.xyzx
  77: max r1.w, r1.w, l(0.001000)
  78: rsq r1.w, r1.w
  79: mul r4.xyz, r1.wwww, r4.xyzx
  80: dp3 r1.w, r2.xyzx, -r3.xyzx
  81: dp3_sat r2.w, r2.xyzx, r5.xyzx
  82: dp3_sat r2.x, r2.xyzx, r4.xyzx
  83: dp3_sat r2.y, r5.xyzx, r4.xyzx
  84: mul r2.z, r2.y, r2.y
  85: dp2 r2.z, r2.zzzz, r0.wwww
  86: add r2.z, r2.z, l(-0.500000)
  87: add r3.x, -r2.w, l(1.000000)
  88: mul r3.y, r3.x, r3.x
  89: mul r3.y, r3.y, r3.y
  90: mul r3.x, r3.x, r3.y
  91: mad r3.x, r2.z, r3.x, l(1.000000)
  92: add r3.y, -|r1.w|, l(1.000000)
  93: mul r3.z, r3.y, r3.y
  94: mul r3.z, r3.z, r3.z
  95: mul r3.y, r3.y, r3.z
  96: mad r2.z, r2.z, r3.y, l(1.000000)
  97: mul r2.z, r2.z, r3.x
  98: mul r2.z, r2.w, r2.z
  99: mul r0.w, r0.w, r0.w
 100: max r0.w, r0.w, l(0.002000)
 101: add r3.x, -r0.w, l(1.000000)
 102: mad r3.y, |r1.w|, r3.x, r0.w
 103: mad r3.x, r2.w, r3.x, r0.w
 104: mul r1.w, |r1.w|, r3.x
 105: mad r1.w, r2.w, r3.y, r1.w
 106: add r1.w, r1.w, l(0.000010)
 107: div r1.w, l(0.500000), r1.w
 108: mul r0.w, r0.w, r0.w
 109: mad r3.x, r2.x, r0.w, -r2.x
 110: mad r2.x, r3.x, r2.x, l(1.000000)
 111: mul r0.w, r0.w, l(0.318310)
 112: mad r2.x, r2.x, r2.x, l(0.000000)
 113: div r0.w, r0.w, r2.x
 114: mul r0.w, r0.w, r1.w
 115: mul r0.w, r0.w, l(3.141593)
 116: mul r0.w, r2.w, r0.w
 117: max r0.w, r0.w, l(0.000000)
 118: dp3 r1.w, r0.xyzx, r0.xyzx
 119: ne r1.w, r1.w, l(0.000000)
 120: and r1.w, r1.w, l(0x3f800000)
 121: mul r0.w, r0.w, r1.w
 122: mul r2.xzw, r2.zzzz, r6.xxyz
 123: mul r3.xyz, r6.xyzx, r0.wwww
 124: add r0.w, -r2.y, l(1.000000)
 125: mul r1.w, r0.w, r0.w
 126: mul r1.w, r1.w, r1.w
 127: mul r0.w, r0.w, r1.w
 128: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 129: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 130: mul r0.xyz, r0.xyzx, r3.xyzx
 131: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 132: mov o0.w, l(1.000000)
 133: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r1.xyzx
  28: mov o3.w, r3.x
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r4.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r1.xyzx
  38: mul r1.x, v4.w, cb3[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r3.y
  41: mov o5.w, r3.z
  42: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  43: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  44: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  45: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  46: mov o8.xyzw, l(0,0,0,0)
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 123 math, 7 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 6
Set CUBE Texture "_LightTexture0" to slot 4 sampler slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 6 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  25: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  26: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  27: add r4.xyz, r4.xyzx, cb0[14].xyzx
  28: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  29: mov r6.x, cb4[9].z
  30: mov r6.y, cb4[10].z
  31: mov r6.z, cb4[11].z
  32: dp3 r1.w, r5.xyzx, r6.xyzx
  33: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  34: dp3 r2.w, r5.xyzx, r5.xyzx
  35: sqrt r2.w, r2.w
  36: add r2.w, -r1.w, r2.w
  37: mad r1.w, cb3[25].w, r2.w, r1.w
  38: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  39: eq r2.w, cb5[0].x, l(1.000000)
  40: if_nz r2.w
  41:   eq r2.w, cb5[0].y, l(1.000000)
  42:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  43:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  44:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  45:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  46:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  47:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  48:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  49:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  50:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  51:   max r5.x, r2.w, r3.w
  52:   sample r5.xyzw, r5.xzwx, t5.xyzw, s0
  53: else 
  54:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  55: endif 
  56: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  57: add r5.xyz, v6.xyzx, -cb2[1].xyzx
  58: max r3.w, |r5.y|, |r5.x|
  59: max r3.w, |r5.z|, r3.w
  60: add r3.w, r3.w, -cb2[2].z
  61: max r3.w, r3.w, l(0.000010)
  62: mul r3.w, r3.w, cb2[2].w
  63: div r3.w, cb2[2].y, r3.w
  64: add r3.w, r3.w, -cb2[2].x
  65: add r3.w, -r3.w, l(1.000000)
  66: sample_c_lz r3.w, r5.xyzx, t6.xxxx, s1, r3.w
  67: add r4.w, -cb3[24].x, l(1.000000)
  68: mad r3.w, r3.w, r4.w, cb3[24].x
  69: add r2.w, r2.w, -r3.w
  70: mad r1.w, r1.w, r2.w, r3.w
  71: dp3 r2.w, r4.xyzx, r4.xyzx
  72: sample r5.xyzw, r2.wwww, t3.xyzw, s6
  73: sample r4.xyzw, r4.xyzx, t4.xyzw, s5
  74: mul r2.w, r4.w, r5.x
  75: mul r1.w, r1.w, r2.w
  76: mov r4.x, v3.w
  77: mov r4.y, v4.w
  78: mov r4.z, v5.w
  79: dp3 r2.w, r4.xyzx, r4.xyzx
  80: rsq r2.w, r2.w
  81: mul r5.xyz, r2.wwww, r4.xyzx
  82: mul r6.xyz, r1.wwww, cb0[2].xyzx
  83: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  84: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  85: dp3 r1.w, r4.xyzx, r4.xyzx
  86: max r1.w, r1.w, l(0.001000)
  87: rsq r1.w, r1.w
  88: mul r4.xyz, r1.wwww, r4.xyzx
  89: dp3 r1.w, r2.xyzx, -r3.xyzx
  90: dp3_sat r2.w, r2.xyzx, r5.xyzx
  91: dp3_sat r2.x, r2.xyzx, r4.xyzx
  92: dp3_sat r2.y, r5.xyzx, r4.xyzx
  93: mul r2.z, r2.y, r2.y
  94: dp2 r2.z, r2.zzzz, r0.wwww
  95: add r2.z, r2.z, l(-0.500000)
  96: add r3.x, -r2.w, l(1.000000)
  97: mul r3.y, r3.x, r3.x
  98: mul r3.y, r3.y, r3.y
  99: mul r3.x, r3.x, r3.y
 100: mad r3.x, r2.z, r3.x, l(1.000000)
 101: add r3.y, -|r1.w|, l(1.000000)
 102: mul r3.z, r3.y, r3.y
 103: mul r3.z, r3.z, r3.z
 104: mul r3.y, r3.y, r3.z
 105: mad r2.z, r2.z, r3.y, l(1.000000)
 106: mul r2.z, r2.z, r3.x
 107: mul r2.z, r2.w, r2.z
 108: mul r0.w, r0.w, r0.w
 109: max r0.w, r0.w, l(0.002000)
 110: add r3.x, -r0.w, l(1.000000)
 111: mad r3.y, |r1.w|, r3.x, r0.w
 112: mad r3.x, r2.w, r3.x, r0.w
 113: mul r1.w, |r1.w|, r3.x
 114: mad r1.w, r2.w, r3.y, r1.w
 115: add r1.w, r1.w, l(0.000010)
 116: div r1.w, l(0.500000), r1.w
 117: mul r0.w, r0.w, r0.w
 118: mad r3.x, r2.x, r0.w, -r2.x
 119: mad r2.x, r3.x, r2.x, l(1.000000)
 120: mul r0.w, r0.w, l(0.318310)
 121: mad r2.x, r2.x, r2.x, l(0.000000)
 122: div r0.w, r0.w, r2.x
 123: mul r0.w, r0.w, r1.w
 124: mul r0.w, r0.w, l(3.141593)
 125: mul r0.w, r2.w, r0.w
 126: max r0.w, r0.w, l(0.000000)
 127: dp3 r1.w, r0.xyzx, r0.xyzx
 128: ne r1.w, r1.w, l(0.000000)
 129: and r1.w, r1.w, l(0x3f800000)
 130: mul r0.w, r0.w, r1.w
 131: mul r2.xzw, r2.zzzz, r6.xxyz
 132: mul r3.xyz, r6.xyzx, r0.wwww
 133: add r0.w, -r2.y, l(1.000000)
 134: mul r1.w, r0.w, r0.w
 135: mul r1.w, r1.w, r1.w
 136: mul r0.w, r0.w, r1.w
 137: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 138: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 139: mul r0.xyz, r0.xyzx, r3.xyzx
 140: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 141: mov o0.w, l(1.000000)
 142: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  22: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  23: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r2.xyz, r1.xxxx, r2.xyzx
  27: mov o3.xyz, r2.xyzx
  28: mad r3.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  29: mov o6.xyz, r1.yzwy
  30: mov o3.w, r3.x
  31: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul r1.xyz, r1.wwww, r1.xyzx
  37: mul r4.xyz, r2.yzxy, r1.zxyz
  38: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  39: mov o5.xyz, r1.xyzx
  40: mul r1.x, v4.w, cb2[9].w
  41: mul o4.xyz, r1.xxxx, r2.xyzx
  42: mov o4.w, r3.y
  43: mov o5.w, r3.z
  44: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  45: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  46: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  47: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  48: mov o8.xyzw, l(0,0,0,0)
  49: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 124 math, 7 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 6
Set CUBE Texture "_LightTexture0" to slot 4 sampler slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 6 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  25: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  26: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  27: add r4.xyz, r4.xyzx, cb0[14].xyzx
  28: mov r1.w, cb4[0].x
  29: add r5.xyz, -v6.xyzx, cb3[r1.w + 64].xyzx
  30: ishl r1.w, cb4[0].x, l(2)
  31: mov r6.x, cb3[r1.w + 8].z
  32: mov r6.y, cb3[r1.w + 9].z
  33: mov r6.z, cb3[r1.w + 10].z
  34: dp3 r1.w, r5.xyzx, r6.xyzx
  35: add r5.xyz, v6.xyzx, -cb2[25].xyzx
  36: dp3 r2.w, r5.xyzx, r5.xyzx
  37: sqrt r2.w, r2.w
  38: add r2.w, -r1.w, r2.w
  39: mad r1.w, cb2[25].w, r2.w, r1.w
  40: mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
  41: eq r2.w, cb5[0].x, l(1.000000)
  42: if_nz r2.w
  43:   eq r2.w, cb5[0].y, l(1.000000)
  44:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  45:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  46:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  47:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  48:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  49:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  50:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  51:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  52:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  53:   max r5.x, r2.w, r3.w
  54:   sample r5.xyzw, r5.xzwx, t5.xyzw, s0
  55: else 
  56:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  57: endif 
  58: dp4_sat r2.w, r5.xyzw, cb1[46].xyzw
  59: add r5.xyz, v6.xyzx, -cb1[1].xyzx
  60: max r3.w, |r5.y|, |r5.x|
  61: max r3.w, |r5.z|, r3.w
  62: add r3.w, r3.w, -cb1[2].z
  63: max r3.w, r3.w, l(0.000010)
  64: mul r3.w, r3.w, cb1[2].w
  65: div r3.w, cb1[2].y, r3.w
  66: add r3.w, r3.w, -cb1[2].x
  67: add r3.w, -r3.w, l(1.000000)
  68: sample_c_lz r3.w, r5.xyzx, t6.xxxx, s1, r3.w
  69: add r4.w, -cb2[24].x, l(1.000000)
  70: mad r3.w, r3.w, r4.w, cb2[24].x
  71: add r2.w, r2.w, -r3.w
  72: mad r1.w, r1.w, r2.w, r3.w
  73: dp3 r2.w, r4.xyzx, r4.xyzx
  74: sample r5.xyzw, r2.wwww, t3.xyzw, s6
  75: sample r4.xyzw, r4.xyzx, t4.xyzw, s5
  76: mul r2.w, r4.w, r5.x
  77: mul r1.w, r1.w, r2.w
  78: mov r4.x, v3.w
  79: mov r4.y, v4.w
  80: mov r4.z, v5.w
  81: dp3 r2.w, r4.xyzx, r4.xyzx
  82: rsq r2.w, r2.w
  83: mul r5.xyz, r2.wwww, r4.xyzx
  84: mul r6.xyz, r1.wwww, cb0[2].xyzx
  85: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  86: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  87: dp3 r1.w, r4.xyzx, r4.xyzx
  88: max r1.w, r1.w, l(0.001000)
  89: rsq r1.w, r1.w
  90: mul r4.xyz, r1.wwww, r4.xyzx
  91: dp3 r1.w, r2.xyzx, -r3.xyzx
  92: dp3_sat r2.w, r2.xyzx, r5.xyzx
  93: dp3_sat r2.x, r2.xyzx, r4.xyzx
  94: dp3_sat r2.y, r5.xyzx, r4.xyzx
  95: mul r2.z, r2.y, r2.y
  96: dp2 r2.z, r2.zzzz, r0.wwww
  97: add r2.z, r2.z, l(-0.500000)
  98: add r3.x, -r2.w, l(1.000000)
  99: mul r3.y, r3.x, r3.x
 100: mul r3.y, r3.y, r3.y
 101: mul r3.x, r3.x, r3.y
 102: mad r3.x, r2.z, r3.x, l(1.000000)
 103: add r3.y, -|r1.w|, l(1.000000)
 104: mul r3.z, r3.y, r3.y
 105: mul r3.z, r3.z, r3.z
 106: mul r3.y, r3.y, r3.z
 107: mad r2.z, r2.z, r3.y, l(1.000000)
 108: mul r2.z, r2.z, r3.x
 109: mul r2.z, r2.w, r2.z
 110: mul r0.w, r0.w, r0.w
 111: max r0.w, r0.w, l(0.002000)
 112: add r3.x, -r0.w, l(1.000000)
 113: mad r3.y, |r1.w|, r3.x, r0.w
 114: mad r3.x, r2.w, r3.x, r0.w
 115: mul r1.w, |r1.w|, r3.x
 116: mad r1.w, r2.w, r3.y, r1.w
 117: add r1.w, r1.w, l(0.000010)
 118: div r1.w, l(0.500000), r1.w
 119: mul r0.w, r0.w, r0.w
 120: mad r3.x, r2.x, r0.w, -r2.x
 121: mad r2.x, r3.x, r2.x, l(1.000000)
 122: mul r0.w, r0.w, l(0.318310)
 123: mad r2.x, r2.x, r2.x, l(0.000000)
 124: div r0.w, r0.w, r2.x
 125: mul r0.w, r0.w, r1.w
 126: mul r0.w, r0.w, l(3.141593)
 127: mul r0.w, r2.w, r0.w
 128: max r0.w, r0.w, l(0.000000)
 129: dp3 r1.w, r0.xyzx, r0.xyzx
 130: ne r1.w, r1.w, l(0.000000)
 131: and r1.w, r1.w, l(0x3f800000)
 132: mul r0.w, r0.w, r1.w
 133: mul r2.xzw, r2.zzzz, r6.xxyz
 134: mul r3.xyz, r6.xyzx, r0.wwww
 135: add r0.w, -r2.y, l(1.000000)
 136: mul r1.w, r0.w, r0.w
 137: mul r1.w, r1.w, r1.w
 138: mul r0.w, r0.w, r1.w
 139: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 140: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 141: mul r0.xyz, r0.xyzx, r3.xyzx
 142: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 143: mov o0.w, l(1.000000)
 144: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  32: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  33: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  34: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 113 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: mul r3.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  14: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  15: add r3.xyz, r3.xyzx, cb0[14].xyzx
  16: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r5.x, cb4[9].z
  18: mov r5.y, cb4[10].z
  19: mov r5.z, cb4[11].z
  20: dp3 r0.w, r4.xyzx, r5.xyzx
  21: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r1.w, r4.xyzx, r4.xyzx
  23: sqrt r1.w, r1.w
  24: add r1.w, -r0.w, r1.w
  25: mad r0.w, cb3[25].w, r1.w, r0.w
  26: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  27: eq r1.w, cb5[0].x, l(1.000000)
  28: if_nz r1.w
  29:   eq r1.w, cb5[0].y, l(1.000000)
  30:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  32:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  33:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  34:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  35:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  36:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  37:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  38:   mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r4.x, r1.w, r2.w
  40:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r1.w, r4.xyzw, cb2[46].xyzw
  45: add r4.xyz, v6.xyzx, -cb2[1].xyzx
  46: max r2.w, |r4.y|, |r4.x|
  47: max r2.w, |r4.z|, r2.w
  48: add r2.w, r2.w, -cb2[2].z
  49: max r2.w, r2.w, l(0.000010)
  50: mul r2.w, r2.w, cb2[2].w
  51: div r2.w, cb2[2].y, r2.w
  52: add r2.w, r2.w, -cb2[2].x
  53: add r2.w, -r2.w, l(1.000000)
  54: sample_c_lz r2.w, r4.xyzx, t4.xxxx, s1, r2.w
  55: add r3.w, -cb3[24].x, l(1.000000)
  56: mad r2.w, r2.w, r3.w, cb3[24].x
  57: add r1.w, r1.w, -r2.w
  58: mad r0.w, r0.w, r1.w, r2.w
  59: dp3 r1.w, r3.xyzx, r3.xyzx
  60: sample r4.xyzw, r1.wwww, t1.xyzw, s4
  61: sample r3.xyzw, r3.xyzx, t2.xyzw, s3
  62: mul r1.w, r3.w, r4.x
  63: mul r0.w, r0.w, r1.w
  64: mov r3.x, v3.w
  65: mov r3.y, v4.w
  66: mov r3.z, v5.w
  67: dp3 r1.w, r3.xyzx, r3.xyzx
  68: rsq r1.w, r1.w
  69: mul r4.xyz, r1.wwww, r3.xyzx
  70: mul r5.xyz, r0.wwww, cb0[2].xyzx
  71: add r0.w, -cb0[8].w, l(1.000000)
  72: mad r3.xyz, r3.xyzx, r1.wwww, -r2.xyzx
  73: dp3 r1.w, r3.xyzx, r3.xyzx
  74: max r1.w, r1.w, l(0.001000)
  75: rsq r1.w, r1.w
  76: mul r3.xyz, r1.wwww, r3.xyzx
  77: dp3 r1.w, r1.xyzx, -r2.xyzx
  78: dp3_sat r2.x, r1.xyzx, r4.xyzx
  79: dp3_sat r1.x, r1.xyzx, r3.xyzx
  80: dp3_sat r1.y, r4.xyzx, r3.xyzx
  81: mul r1.z, r1.y, r1.y
  82: dp2 r1.z, r1.zzzz, r0.wwww
  83: add r1.z, r1.z, l(-0.500000)
  84: add r2.y, -r2.x, l(1.000000)
  85: mul r2.z, r2.y, r2.y
  86: mul r2.z, r2.z, r2.z
  87: mul r2.y, r2.y, r2.z
  88: mad r2.y, r1.z, r2.y, l(1.000000)
  89: add r2.z, -|r1.w|, l(1.000000)
  90: mul r2.w, r2.z, r2.z
  91: mul r2.w, r2.w, r2.w
  92: mul r2.z, r2.z, r2.w
  93: mad r1.z, r1.z, r2.z, l(1.000000)
  94: mul r1.z, r1.z, r2.y
  95: mul r1.z, r2.x, r1.z
  96: mul r0.w, r0.w, r0.w
  97: max r0.w, r0.w, l(0.002000)
  98: add r2.y, -r0.w, l(1.000000)
  99: mad r2.z, |r1.w|, r2.y, r0.w
 100: mad r2.y, r2.x, r2.y, r0.w
 101: mul r1.w, |r1.w|, r2.y
 102: mad r1.w, r2.x, r2.z, r1.w
 103: add r1.w, r1.w, l(0.000010)
 104: div r1.w, l(0.500000), r1.w
 105: mul r0.w, r0.w, r0.w
 106: mad r2.y, r1.x, r0.w, -r1.x
 107: mad r1.x, r2.y, r1.x, l(1.000000)
 108: mul r0.w, r0.w, l(0.318310)
 109: mad r1.x, r1.x, r1.x, l(0.000000)
 110: div r0.w, r0.w, r1.x
 111: mul r0.w, r0.w, r1.w
 112: mul r0.w, r0.w, l(3.141593)
 113: mul r0.w, r2.x, r0.w
 114: max r0.w, r0.w, l(0.000000)
 115: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
 116: ne r1.x, r1.x, l(0.000000)
 117: and r1.x, r1.x, l(0x3f800000)
 118: mul r0.w, r0.w, r1.x
 119: mul r1.xzw, r1.zzzz, r5.xxyz
 120: mul r2.xyz, r5.xyzx, r0.wwww
 121: add r0.w, -r1.y, l(1.000000)
 122: mul r1.y, r0.w, r0.w
 123: mul r1.y, r1.y, r1.y
 124: mul r0.w, r0.w, r1.y
 125: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 126: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
 127: mul r2.xyz, r2.xyzx, r3.xyzx
 128: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
 129: mov o0.w, l(1.000000)
 130: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  22: mov o6.xyz, r1.yzwy
  23: mov r2.w, l(0)
  24: mov o3.xyzw, r2.wwwx
  25: mov o4.xyzw, r2.wwwy
  26: mov o5.w, r2.z
  27: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul o5.xyz, r1.wwww, r1.xyzx
  33: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  34: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  35: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  36: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  37: mov o8.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 114 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: mul r3.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  14: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  15: add r3.xyz, r3.xyzx, cb0[14].xyzx
  16: mov r0.w, cb4[0].x
  17: add r4.xyz, -v6.xyzx, cb3[r0.w + 64].xyzx
  18: ishl r0.w, cb4[0].x, l(2)
  19: mov r5.x, cb3[r0.w + 8].z
  20: mov r5.y, cb3[r0.w + 9].z
  21: mov r5.z, cb3[r0.w + 10].z
  22: dp3 r0.w, r4.xyzx, r5.xyzx
  23: add r4.xyz, v6.xyzx, -cb2[25].xyzx
  24: dp3 r1.w, r4.xyzx, r4.xyzx
  25: sqrt r1.w, r1.w
  26: add r1.w, -r0.w, r1.w
  27: mad r0.w, cb2[25].w, r1.w, r0.w
  28: mad_sat r0.w, r0.w, cb2[24].z, cb2[24].w
  29: eq r1.w, cb5[0].x, l(1.000000)
  30: if_nz r1.w
  31:   eq r1.w, cb5[0].y, l(1.000000)
  32:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  33:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  34:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  35:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  36:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  37:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  38:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  39:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  40:   mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
  41:   max r4.x, r1.w, r2.w
  42:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  43: else 
  44:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  45: endif 
  46: dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
  47: add r4.xyz, v6.xyzx, -cb1[1].xyzx
  48: max r2.w, |r4.y|, |r4.x|
  49: max r2.w, |r4.z|, r2.w
  50: add r2.w, r2.w, -cb1[2].z
  51: max r2.w, r2.w, l(0.000010)
  52: mul r2.w, r2.w, cb1[2].w
  53: div r2.w, cb1[2].y, r2.w
  54: add r2.w, r2.w, -cb1[2].x
  55: add r2.w, -r2.w, l(1.000000)
  56: sample_c_lz r2.w, r4.xyzx, t4.xxxx, s1, r2.w
  57: add r3.w, -cb2[24].x, l(1.000000)
  58: mad r2.w, r2.w, r3.w, cb2[24].x
  59: add r1.w, r1.w, -r2.w
  60: mad r0.w, r0.w, r1.w, r2.w
  61: dp3 r1.w, r3.xyzx, r3.xyzx
  62: sample r4.xyzw, r1.wwww, t1.xyzw, s4
  63: sample r3.xyzw, r3.xyzx, t2.xyzw, s3
  64: mul r1.w, r3.w, r4.x
  65: mul r0.w, r0.w, r1.w
  66: mov r3.x, v3.w
  67: mov r3.y, v4.w
  68: mov r3.z, v5.w
  69: dp3 r1.w, r3.xyzx, r3.xyzx
  70: rsq r1.w, r1.w
  71: mul r4.xyz, r1.wwww, r3.xyzx
  72: mul r5.xyz, r0.wwww, cb0[2].xyzx
  73: add r0.w, -cb0[8].w, l(1.000000)
  74: mad r3.xyz, r3.xyzx, r1.wwww, -r2.xyzx
  75: dp3 r1.w, r3.xyzx, r3.xyzx
  76: max r1.w, r1.w, l(0.001000)
  77: rsq r1.w, r1.w
  78: mul r3.xyz, r1.wwww, r3.xyzx
  79: dp3 r1.w, r1.xyzx, -r2.xyzx
  80: dp3_sat r2.x, r1.xyzx, r4.xyzx
  81: dp3_sat r1.x, r1.xyzx, r3.xyzx
  82: dp3_sat r1.y, r4.xyzx, r3.xyzx
  83: mul r1.z, r1.y, r1.y
  84: dp2 r1.z, r1.zzzz, r0.wwww
  85: add r1.z, r1.z, l(-0.500000)
  86: add r2.y, -r2.x, l(1.000000)
  87: mul r2.z, r2.y, r2.y
  88: mul r2.z, r2.z, r2.z
  89: mul r2.y, r2.y, r2.z
  90: mad r2.y, r1.z, r2.y, l(1.000000)
  91: add r2.z, -|r1.w|, l(1.000000)
  92: mul r2.w, r2.z, r2.z
  93: mul r2.w, r2.w, r2.w
  94: mul r2.z, r2.z, r2.w
  95: mad r1.z, r1.z, r2.z, l(1.000000)
  96: mul r1.z, r1.z, r2.y
  97: mul r1.z, r2.x, r1.z
  98: mul r0.w, r0.w, r0.w
  99: max r0.w, r0.w, l(0.002000)
 100: add r2.y, -r0.w, l(1.000000)
 101: mad r2.z, |r1.w|, r2.y, r0.w
 102: mad r2.y, r2.x, r2.y, r0.w
 103: mul r1.w, |r1.w|, r2.y
 104: mad r1.w, r2.x, r2.z, r1.w
 105: add r1.w, r1.w, l(0.000010)
 106: div r1.w, l(0.500000), r1.w
 107: mul r0.w, r0.w, r0.w
 108: mad r2.y, r1.x, r0.w, -r1.x
 109: mad r1.x, r2.y, r1.x, l(1.000000)
 110: mul r0.w, r0.w, l(0.318310)
 111: mad r1.x, r1.x, r1.x, l(0.000000)
 112: div r0.w, r0.w, r1.x
 113: mul r0.w, r0.w, r1.w
 114: mul r0.w, r0.w, l(3.141593)
 115: mul r0.w, r2.x, r0.w
 116: max r0.w, r0.w, l(0.000000)
 117: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
 118: ne r1.x, r1.x, l(0.000000)
 119: and r1.x, r1.x, l(0x3f800000)
 120: mul r0.w, r0.w, r1.x
 121: mul r1.xzw, r1.zzzz, r5.xxyz
 122: mul r2.xyz, r5.xyzx, r0.wwww
 123: add r0.w, -r1.y, l(1.000000)
 124: mul r1.y, r0.w, r0.w
 125: mul r1.y, r1.y, r1.y
 126: mul r0.w, r0.w, r1.y
 127: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 128: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
 129: mul r2.xyz, r2.xyzx, r3.xyzx
 130: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
 131: mov o0.w, l(1.000000)
 132: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  32: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  33: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  34: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 119 math, 8 temp registers, 5 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 5
Set CUBE Texture "_LightTexture0" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 5 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  14: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  15: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  16: add r4.xyz, r4.xyzx, cb0[14].xyzx
  17: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  18: mov r6.x, cb4[9].z
  19: mov r6.y, cb4[10].z
  20: mov r6.z, cb4[11].z
  21: dp3 r1.w, r5.xyzx, r6.xyzx
  22: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  23: dp3 r2.w, r5.xyzx, r5.xyzx
  24: sqrt r2.w, r2.w
  25: add r2.w, -r1.w, r2.w
  26: mad r1.w, cb3[25].w, r2.w, r1.w
  27: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  28: eq r2.w, cb5[0].x, l(1.000000)
  29: if_nz r2.w
  30:   eq r2.w, cb5[0].y, l(1.000000)
  31:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  32:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  33:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  34:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  35:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  36:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  37:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  38:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  39:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  40:   max r5.x, r2.w, r3.w
  41:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  42: else 
  43:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  46: lt r3.w, r1.w, l(0.990000)
  47: if_nz r3.w
  48:   add r5.xyz, v6.xyzx, -cb2[1].xyzx
  49:   max r3.w, |r5.y|, |r5.x|
  50:   max r3.w, |r5.z|, r3.w
  51:   add r3.w, r3.w, -cb2[2].z
  52:   max r3.w, r3.w, l(0.000010)
  53:   mul r3.w, r3.w, cb2[2].w
  54:   div r3.w, cb2[2].y, r3.w
  55:   add r3.w, r3.w, -cb2[2].x
  56:   add r3.w, -r3.w, l(1.000000)
  57:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  58:   sample_c_lz r6.x, r6.xyzx, t5.xxxx, s1, r3.w
  59:   add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  60:   sample_c_lz r6.y, r7.xyzx, t5.xxxx, s1, r3.w
  61:   add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  62:   sample_c_lz r6.z, r7.xyzx, t5.xxxx, s1, r3.w
  63:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  64:   sample_c_lz r6.w, r5.xyzx, t5.xxxx, s1, r3.w
  65:   dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  66:   add r4.w, -cb3[24].x, l(1.000000)
  67:   mad r3.w, r3.w, r4.w, cb3[24].x
  68: else 
  69:   mov r3.w, l(1.000000)
  70: endif 
  71: add r2.w, r2.w, -r3.w
  72: mad r1.w, r1.w, r2.w, r3.w
  73: dp3 r2.w, r4.xyzx, r4.xyzx
  74: sample r5.xyzw, r2.wwww, t2.xyzw, s5
  75: sample r4.xyzw, r4.xyzx, t3.xyzw, s4
  76: mul r2.w, r4.w, r5.x
  77: mul r1.w, r1.w, r2.w
  78: mov r4.x, v3.w
  79: mov r4.y, v4.w
  80: mov r4.z, v5.w
  81: dp3 r2.w, r4.xyzx, r4.xyzx
  82: rsq r2.w, r2.w
  83: mul r5.xyz, r2.wwww, r4.xyzx
  84: mul r6.xyz, r1.wwww, cb0[2].xyzx
  85: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  86: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  87: dp3 r1.w, r4.xyzx, r4.xyzx
  88: max r1.w, r1.w, l(0.001000)
  89: rsq r1.w, r1.w
  90: mul r4.xyz, r1.wwww, r4.xyzx
  91: dp3 r1.w, r2.xyzx, -r3.xyzx
  92: dp3_sat r2.w, r2.xyzx, r5.xyzx
  93: dp3_sat r2.x, r2.xyzx, r4.xyzx
  94: dp3_sat r2.y, r5.xyzx, r4.xyzx
  95: mul r2.z, r2.y, r2.y
  96: dp2 r2.z, r2.zzzz, r0.wwww
  97: add r2.z, r2.z, l(-0.500000)
  98: add r3.x, -r2.w, l(1.000000)
  99: mul r3.y, r3.x, r3.x
 100: mul r3.y, r3.y, r3.y
 101: mul r3.x, r3.x, r3.y
 102: mad r3.x, r2.z, r3.x, l(1.000000)
 103: add r3.y, -|r1.w|, l(1.000000)
 104: mul r3.z, r3.y, r3.y
 105: mul r3.z, r3.z, r3.z
 106: mul r3.y, r3.y, r3.z
 107: mad r2.z, r2.z, r3.y, l(1.000000)
 108: mul r2.z, r2.z, r3.x
 109: mul r2.z, r2.w, r2.z
 110: mul r0.w, r0.w, r0.w
 111: max r0.w, r0.w, l(0.002000)
 112: add r3.x, -r0.w, l(1.000000)
 113: mad r3.y, |r1.w|, r3.x, r0.w
 114: mad r3.x, r2.w, r3.x, r0.w
 115: mul r1.w, |r1.w|, r3.x
 116: mad r1.w, r2.w, r3.y, r1.w
 117: add r1.w, r1.w, l(0.000010)
 118: div r1.w, l(0.500000), r1.w
 119: mul r0.w, r0.w, r0.w
 120: mad r3.x, r2.x, r0.w, -r2.x
 121: mad r2.x, r3.x, r2.x, l(1.000000)
 122: mul r0.w, r0.w, l(0.318310)
 123: mad r2.x, r2.x, r2.x, l(0.000000)
 124: div r0.w, r0.w, r2.x
 125: mul r0.w, r0.w, r1.w
 126: mul r0.w, r0.w, l(3.141593)
 127: mul r0.w, r2.w, r0.w
 128: max r0.w, r0.w, l(0.000000)
 129: dp3 r1.w, r0.xyzx, r0.xyzx
 130: ne r1.w, r1.w, l(0.000000)
 131: and r1.w, r1.w, l(0x3f800000)
 132: mul r0.w, r0.w, r1.w
 133: mul r2.xzw, r2.zzzz, r6.xxyz
 134: mul r3.xyz, r6.xyzx, r0.wwww
 135: add r0.w, -r2.y, l(1.000000)
 136: mul r1.w, r0.w, r0.w
 137: mul r1.w, r1.w, r1.w
 138: mul r0.w, r0.w, r1.w
 139: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 140: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 141: mul r0.xyz, r0.xyzx, r3.xyzx
 142: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 143: mov o0.w, l(1.000000)
 144: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  22: mov o6.xyz, r1.yzwy
  23: mov r2.w, l(0)
  24: mov o3.xyzw, r2.wwwx
  25: mov o4.xyzw, r2.wwwy
  26: mov o5.w, r2.z
  27: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul o5.xyz, r1.wwww, r1.xyzx
  33: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  34: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  35: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  36: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  37: mov o8.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 120 math, 8 temp registers, 5 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 5
Set CUBE Texture "_LightTexture0" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 5 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  14: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  15: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  16: add r4.xyz, r4.xyzx, cb0[14].xyzx
  17: mov r1.w, cb4[0].x
  18: add r5.xyz, -v6.xyzx, cb3[r1.w + 64].xyzx
  19: ishl r1.w, cb4[0].x, l(2)
  20: mov r6.x, cb3[r1.w + 8].z
  21: mov r6.y, cb3[r1.w + 9].z
  22: mov r6.z, cb3[r1.w + 10].z
  23: dp3 r1.w, r5.xyzx, r6.xyzx
  24: add r5.xyz, v6.xyzx, -cb2[25].xyzx
  25: dp3 r2.w, r5.xyzx, r5.xyzx
  26: sqrt r2.w, r2.w
  27: add r2.w, -r1.w, r2.w
  28: mad r1.w, cb2[25].w, r2.w, r1.w
  29: mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
  30: eq r2.w, cb5[0].x, l(1.000000)
  31: if_nz r2.w
  32:   eq r2.w, cb5[0].y, l(1.000000)
  33:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  34:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  35:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  36:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  37:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  38:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  39:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  40:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  41:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  42:   max r5.x, r2.w, r3.w
  43:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  44: else 
  45:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  46: endif 
  47: dp4_sat r2.w, r5.xyzw, cb1[46].xyzw
  48: lt r3.w, r1.w, l(0.990000)
  49: if_nz r3.w
  50:   add r5.xyz, v6.xyzx, -cb1[1].xyzx
  51:   max r3.w, |r5.y|, |r5.x|
  52:   max r3.w, |r5.z|, r3.w
  53:   add r3.w, r3.w, -cb1[2].z
  54:   max r3.w, r3.w, l(0.000010)
  55:   mul r3.w, r3.w, cb1[2].w
  56:   div r3.w, cb1[2].y, r3.w
  57:   add r3.w, r3.w, -cb1[2].x
  58:   add r3.w, -r3.w, l(1.000000)
  59:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  60:   sample_c_lz r6.x, r6.xyzx, t5.xxxx, s1, r3.w
  61:   add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  62:   sample_c_lz r6.y, r7.xyzx, t5.xxxx, s1, r3.w
  63:   add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  64:   sample_c_lz r6.z, r7.xyzx, t5.xxxx, s1, r3.w
  65:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  66:   sample_c_lz r6.w, r5.xyzx, t5.xxxx, s1, r3.w
  67:   dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  68:   add r4.w, -cb2[24].x, l(1.000000)
  69:   mad r3.w, r3.w, r4.w, cb2[24].x
  70: else 
  71:   mov r3.w, l(1.000000)
  72: endif 
  73: add r2.w, r2.w, -r3.w
  74: mad r1.w, r1.w, r2.w, r3.w
  75: dp3 r2.w, r4.xyzx, r4.xyzx
  76: sample r5.xyzw, r2.wwww, t2.xyzw, s5
  77: sample r4.xyzw, r4.xyzx, t3.xyzw, s4
  78: mul r2.w, r4.w, r5.x
  79: mul r1.w, r1.w, r2.w
  80: mov r4.x, v3.w
  81: mov r4.y, v4.w
  82: mov r4.z, v5.w
  83: dp3 r2.w, r4.xyzx, r4.xyzx
  84: rsq r2.w, r2.w
  85: mul r5.xyz, r2.wwww, r4.xyzx
  86: mul r6.xyz, r1.wwww, cb0[2].xyzx
  87: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  88: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  89: dp3 r1.w, r4.xyzx, r4.xyzx
  90: max r1.w, r1.w, l(0.001000)
  91: rsq r1.w, r1.w
  92: mul r4.xyz, r1.wwww, r4.xyzx
  93: dp3 r1.w, r2.xyzx, -r3.xyzx
  94: dp3_sat r2.w, r2.xyzx, r5.xyzx
  95: dp3_sat r2.x, r2.xyzx, r4.xyzx
  96: dp3_sat r2.y, r5.xyzx, r4.xyzx
  97: mul r2.z, r2.y, r2.y
  98: dp2 r2.z, r2.zzzz, r0.wwww
  99: add r2.z, r2.z, l(-0.500000)
 100: add r3.x, -r2.w, l(1.000000)
 101: mul r3.y, r3.x, r3.x
 102: mul r3.y, r3.y, r3.y
 103: mul r3.x, r3.x, r3.y
 104: mad r3.x, r2.z, r3.x, l(1.000000)
 105: add r3.y, -|r1.w|, l(1.000000)
 106: mul r3.z, r3.y, r3.y
 107: mul r3.z, r3.z, r3.z
 108: mul r3.y, r3.y, r3.z
 109: mad r2.z, r2.z, r3.y, l(1.000000)
 110: mul r2.z, r2.z, r3.x
 111: mul r2.z, r2.w, r2.z
 112: mul r0.w, r0.w, r0.w
 113: max r0.w, r0.w, l(0.002000)
 114: add r3.x, -r0.w, l(1.000000)
 115: mad r3.y, |r1.w|, r3.x, r0.w
 116: mad r3.x, r2.w, r3.x, r0.w
 117: mul r1.w, |r1.w|, r3.x
 118: mad r1.w, r2.w, r3.y, r1.w
 119: add r1.w, r1.w, l(0.000010)
 120: div r1.w, l(0.500000), r1.w
 121: mul r0.w, r0.w, r0.w
 122: mad r3.x, r2.x, r0.w, -r2.x
 123: mad r2.x, r3.x, r2.x, l(1.000000)
 124: mul r0.w, r0.w, l(0.318310)
 125: mad r2.x, r2.x, r2.x, l(0.000000)
 126: div r0.w, r0.w, r2.x
 127: mul r0.w, r0.w, r1.w
 128: mul r0.w, r0.w, l(3.141593)
 129: mul r0.w, r2.w, r0.w
 130: max r0.w, r0.w, l(0.000000)
 131: dp3 r1.w, r0.xyzx, r0.xyzx
 132: ne r1.w, r1.w, l(0.000000)
 133: and r1.w, r1.w, l(0x3f800000)
 134: mul r0.w, r0.w, r1.w
 135: mul r2.xzw, r2.zzzz, r6.xxyz
 136: mul r3.xyz, r6.xyzx, r0.wwww
 137: add r0.w, -r2.y, l(1.000000)
 138: mul r1.w, r0.w, r0.w
 139: mul r1.w, r1.w, r1.w
 140: mul r0.w, r0.w, r1.w
 141: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 142: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 143: mul r0.xyz, r0.xyzx, r3.xyzx
 144: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 145: mov o0.w, l(1.000000)
 146: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r1.xyzx
  28: mov o3.w, r3.x
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r4.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r1.xyzx
  38: mul r1.x, v4.w, cb3[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r3.y
  41: mov o5.w, r3.z
  42: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  43: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  44: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  45: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  46: mov o8.xyzw, l(0,0,0,0)
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 129 math, 8 temp registers, 6 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 6
Set CUBE Texture "_LightTexture0" to slot 4 sampler slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 6 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  25: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  26: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  27: add r4.xyz, r4.xyzx, cb0[14].xyzx
  28: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  29: mov r6.x, cb4[9].z
  30: mov r6.y, cb4[10].z
  31: mov r6.z, cb4[11].z
  32: dp3 r1.w, r5.xyzx, r6.xyzx
  33: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  34: dp3 r2.w, r5.xyzx, r5.xyzx
  35: sqrt r2.w, r2.w
  36: add r2.w, -r1.w, r2.w
  37: mad r1.w, cb3[25].w, r2.w, r1.w
  38: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  39: eq r2.w, cb5[0].x, l(1.000000)
  40: if_nz r2.w
  41:   eq r2.w, cb5[0].y, l(1.000000)
  42:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  43:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  44:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  45:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  46:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  47:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  48:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  49:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  50:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  51:   max r5.x, r2.w, r3.w
  52:   sample r5.xyzw, r5.xzwx, t5.xyzw, s0
  53: else 
  54:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  55: endif 
  56: dp4_sat r2.w, r5.xyzw, cb2[46].xyzw
  57: lt r3.w, r1.w, l(0.990000)
  58: if_nz r3.w
  59:   add r5.xyz, v6.xyzx, -cb2[1].xyzx
  60:   max r3.w, |r5.y|, |r5.x|
  61:   max r3.w, |r5.z|, r3.w
  62:   add r3.w, r3.w, -cb2[2].z
  63:   max r3.w, r3.w, l(0.000010)
  64:   mul r3.w, r3.w, cb2[2].w
  65:   div r3.w, cb2[2].y, r3.w
  66:   add r3.w, r3.w, -cb2[2].x
  67:   add r3.w, -r3.w, l(1.000000)
  68:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  69:   sample_c_lz r6.x, r6.xyzx, t6.xxxx, s1, r3.w
  70:   add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  71:   sample_c_lz r6.y, r7.xyzx, t6.xxxx, s1, r3.w
  72:   add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  73:   sample_c_lz r6.z, r7.xyzx, t6.xxxx, s1, r3.w
  74:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  75:   sample_c_lz r6.w, r5.xyzx, t6.xxxx, s1, r3.w
  76:   dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  77:   add r4.w, -cb3[24].x, l(1.000000)
  78:   mad r3.w, r3.w, r4.w, cb3[24].x
  79: else 
  80:   mov r3.w, l(1.000000)
  81: endif 
  82: add r2.w, r2.w, -r3.w
  83: mad r1.w, r1.w, r2.w, r3.w
  84: dp3 r2.w, r4.xyzx, r4.xyzx
  85: sample r5.xyzw, r2.wwww, t3.xyzw, s6
  86: sample r4.xyzw, r4.xyzx, t4.xyzw, s5
  87: mul r2.w, r4.w, r5.x
  88: mul r1.w, r1.w, r2.w
  89: mov r4.x, v3.w
  90: mov r4.y, v4.w
  91: mov r4.z, v5.w
  92: dp3 r2.w, r4.xyzx, r4.xyzx
  93: rsq r2.w, r2.w
  94: mul r5.xyz, r2.wwww, r4.xyzx
  95: mul r6.xyz, r1.wwww, cb0[2].xyzx
  96: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  97: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  98: dp3 r1.w, r4.xyzx, r4.xyzx
  99: max r1.w, r1.w, l(0.001000)
 100: rsq r1.w, r1.w
 101: mul r4.xyz, r1.wwww, r4.xyzx
 102: dp3 r1.w, r2.xyzx, -r3.xyzx
 103: dp3_sat r2.w, r2.xyzx, r5.xyzx
 104: dp3_sat r2.x, r2.xyzx, r4.xyzx
 105: dp3_sat r2.y, r5.xyzx, r4.xyzx
 106: mul r2.z, r2.y, r2.y
 107: dp2 r2.z, r2.zzzz, r0.wwww
 108: add r2.z, r2.z, l(-0.500000)
 109: add r3.x, -r2.w, l(1.000000)
 110: mul r3.y, r3.x, r3.x
 111: mul r3.y, r3.y, r3.y
 112: mul r3.x, r3.x, r3.y
 113: mad r3.x, r2.z, r3.x, l(1.000000)
 114: add r3.y, -|r1.w|, l(1.000000)
 115: mul r3.z, r3.y, r3.y
 116: mul r3.z, r3.z, r3.z
 117: mul r3.y, r3.y, r3.z
 118: mad r2.z, r2.z, r3.y, l(1.000000)
 119: mul r2.z, r2.z, r3.x
 120: mul r2.z, r2.w, r2.z
 121: mul r0.w, r0.w, r0.w
 122: max r0.w, r0.w, l(0.002000)
 123: add r3.x, -r0.w, l(1.000000)
 124: mad r3.y, |r1.w|, r3.x, r0.w
 125: mad r3.x, r2.w, r3.x, r0.w
 126: mul r1.w, |r1.w|, r3.x
 127: mad r1.w, r2.w, r3.y, r1.w
 128: add r1.w, r1.w, l(0.000010)
 129: div r1.w, l(0.500000), r1.w
 130: mul r0.w, r0.w, r0.w
 131: mad r3.x, r2.x, r0.w, -r2.x
 132: mad r2.x, r3.x, r2.x, l(1.000000)
 133: mul r0.w, r0.w, l(0.318310)
 134: mad r2.x, r2.x, r2.x, l(0.000000)
 135: div r0.w, r0.w, r2.x
 136: mul r0.w, r0.w, r1.w
 137: mul r0.w, r0.w, l(3.141593)
 138: mul r0.w, r2.w, r0.w
 139: max r0.w, r0.w, l(0.000000)
 140: dp3 r1.w, r0.xyzx, r0.xyzx
 141: ne r1.w, r1.w, l(0.000000)
 142: and r1.w, r1.w, l(0x3f800000)
 143: mul r0.w, r0.w, r1.w
 144: mul r2.xzw, r2.zzzz, r6.xxyz
 145: mul r3.xyz, r6.xyzx, r0.wwww
 146: add r0.w, -r2.y, l(1.000000)
 147: mul r1.w, r0.w, r0.w
 148: mul r1.w, r1.w, r1.w
 149: mul r0.w, r0.w, r1.w
 150: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 151: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 152: mul r0.xyz, r0.xyzx, r3.xyzx
 153: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 154: mov o0.w, l(1.000000)
 155: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  22: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  23: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r2.xyz, r1.xxxx, r2.xyzx
  27: mov o3.xyz, r2.xyzx
  28: mad r3.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  29: mov o6.xyz, r1.yzwy
  30: mov o3.w, r3.x
  31: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul r1.xyz, r1.wwww, r1.xyzx
  37: mul r4.xyz, r2.yzxy, r1.zxyz
  38: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  39: mov o5.xyz, r1.xyzx
  40: mul r1.x, v4.w, cb2[9].w
  41: mul o4.xyz, r1.xxxx, r2.xyzx
  42: mov o4.w, r3.y
  43: mov o5.w, r3.z
  44: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  45: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  46: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  47: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  48: mov o8.xyzw, l(0,0,0,0)
  49: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 130 math, 8 temp registers, 6 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 6
Set CUBE Texture "_LightTexture0" to slot 4 sampler slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 6 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  25: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  26: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  27: add r4.xyz, r4.xyzx, cb0[14].xyzx
  28: mov r1.w, cb4[0].x
  29: add r5.xyz, -v6.xyzx, cb3[r1.w + 64].xyzx
  30: ishl r1.w, cb4[0].x, l(2)
  31: mov r6.x, cb3[r1.w + 8].z
  32: mov r6.y, cb3[r1.w + 9].z
  33: mov r6.z, cb3[r1.w + 10].z
  34: dp3 r1.w, r5.xyzx, r6.xyzx
  35: add r5.xyz, v6.xyzx, -cb2[25].xyzx
  36: dp3 r2.w, r5.xyzx, r5.xyzx
  37: sqrt r2.w, r2.w
  38: add r2.w, -r1.w, r2.w
  39: mad r1.w, cb2[25].w, r2.w, r1.w
  40: mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
  41: eq r2.w, cb5[0].x, l(1.000000)
  42: if_nz r2.w
  43:   eq r2.w, cb5[0].y, l(1.000000)
  44:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  45:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  46:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  47:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  48:   movc r5.xyz, r2.wwww, r5.xyzx, v6.xyzx
  49:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  50:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  51:   mad r2.w, r5.y, l(0.250000), l(0.750000)
  52:   mad r3.w, cb5[0].z, l(0.500000), l(0.750000)
  53:   max r5.x, r2.w, r3.w
  54:   sample r5.xyzw, r5.xzwx, t5.xyzw, s0
  55: else 
  56:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  57: endif 
  58: dp4_sat r2.w, r5.xyzw, cb1[46].xyzw
  59: lt r3.w, r1.w, l(0.990000)
  60: if_nz r3.w
  61:   add r5.xyz, v6.xyzx, -cb1[1].xyzx
  62:   max r3.w, |r5.y|, |r5.x|
  63:   max r3.w, |r5.z|, r3.w
  64:   add r3.w, r3.w, -cb1[2].z
  65:   max r3.w, r3.w, l(0.000010)
  66:   mul r3.w, r3.w, cb1[2].w
  67:   div r3.w, cb1[2].y, r3.w
  68:   add r3.w, r3.w, -cb1[2].x
  69:   add r3.w, -r3.w, l(1.000000)
  70:   add r6.xyz, r5.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  71:   sample_c_lz r6.x, r6.xyzx, t6.xxxx, s1, r3.w
  72:   add r7.xyz, r5.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  73:   sample_c_lz r6.y, r7.xyzx, t6.xxxx, s1, r3.w
  74:   add r7.xyz, r5.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  75:   sample_c_lz r6.z, r7.xyzx, t6.xxxx, s1, r3.w
  76:   add r5.xyz, r5.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  77:   sample_c_lz r6.w, r5.xyzx, t6.xxxx, s1, r3.w
  78:   dp4 r3.w, r6.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  79:   add r4.w, -cb2[24].x, l(1.000000)
  80:   mad r3.w, r3.w, r4.w, cb2[24].x
  81: else 
  82:   mov r3.w, l(1.000000)
  83: endif 
  84: add r2.w, r2.w, -r3.w
  85: mad r1.w, r1.w, r2.w, r3.w
  86: dp3 r2.w, r4.xyzx, r4.xyzx
  87: sample r5.xyzw, r2.wwww, t3.xyzw, s6
  88: sample r4.xyzw, r4.xyzx, t4.xyzw, s5
  89: mul r2.w, r4.w, r5.x
  90: mul r1.w, r1.w, r2.w
  91: mov r4.x, v3.w
  92: mov r4.y, v4.w
  93: mov r4.z, v5.w
  94: dp3 r2.w, r4.xyzx, r4.xyzx
  95: rsq r2.w, r2.w
  96: mul r5.xyz, r2.wwww, r4.xyzx
  97: mul r6.xyz, r1.wwww, cb0[2].xyzx
  98: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  99: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
 100: dp3 r1.w, r4.xyzx, r4.xyzx
 101: max r1.w, r1.w, l(0.001000)
 102: rsq r1.w, r1.w
 103: mul r4.xyz, r1.wwww, r4.xyzx
 104: dp3 r1.w, r2.xyzx, -r3.xyzx
 105: dp3_sat r2.w, r2.xyzx, r5.xyzx
 106: dp3_sat r2.x, r2.xyzx, r4.xyzx
 107: dp3_sat r2.y, r5.xyzx, r4.xyzx
 108: mul r2.z, r2.y, r2.y
 109: dp2 r2.z, r2.zzzz, r0.wwww
 110: add r2.z, r2.z, l(-0.500000)
 111: add r3.x, -r2.w, l(1.000000)
 112: mul r3.y, r3.x, r3.x
 113: mul r3.y, r3.y, r3.y
 114: mul r3.x, r3.x, r3.y
 115: mad r3.x, r2.z, r3.x, l(1.000000)
 116: add r3.y, -|r1.w|, l(1.000000)
 117: mul r3.z, r3.y, r3.y
 118: mul r3.z, r3.z, r3.z
 119: mul r3.y, r3.y, r3.z
 120: mad r2.z, r2.z, r3.y, l(1.000000)
 121: mul r2.z, r2.z, r3.x
 122: mul r2.z, r2.w, r2.z
 123: mul r0.w, r0.w, r0.w
 124: max r0.w, r0.w, l(0.002000)
 125: add r3.x, -r0.w, l(1.000000)
 126: mad r3.y, |r1.w|, r3.x, r0.w
 127: mad r3.x, r2.w, r3.x, r0.w
 128: mul r1.w, |r1.w|, r3.x
 129: mad r1.w, r2.w, r3.y, r1.w
 130: add r1.w, r1.w, l(0.000010)
 131: div r1.w, l(0.500000), r1.w
 132: mul r0.w, r0.w, r0.w
 133: mad r3.x, r2.x, r0.w, -r2.x
 134: mad r2.x, r3.x, r2.x, l(1.000000)
 135: mul r0.w, r0.w, l(0.318310)
 136: mad r2.x, r2.x, r2.x, l(0.000000)
 137: div r0.w, r0.w, r2.x
 138: mul r0.w, r0.w, r1.w
 139: mul r0.w, r0.w, l(3.141593)
 140: mul r0.w, r2.w, r0.w
 141: max r0.w, r0.w, l(0.000000)
 142: dp3 r1.w, r0.xyzx, r0.xyzx
 143: ne r1.w, r1.w, l(0.000000)
 144: and r1.w, r1.w, l(0x3f800000)
 145: mul r0.w, r0.w, r1.w
 146: mul r2.xzw, r2.zzzz, r6.xxyz
 147: mul r3.xyz, r6.xyzx, r0.wwww
 148: add r0.w, -r2.y, l(1.000000)
 149: mul r1.w, r0.w, r0.w
 150: mul r1.w, r1.w, r1.w
 151: mul r0.w, r0.w, r1.w
 152: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 153: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 154: mul r0.xyz, r0.xyzx, r3.xyzx
 155: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 156: mov o0.w, l(1.000000)
 157: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  32: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  33: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  34: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 119 math, 7 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: mul r3.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  14: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  15: add r3.xyz, r3.xyzx, cb0[14].xyzx
  16: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r5.x, cb4[9].z
  18: mov r5.y, cb4[10].z
  19: mov r5.z, cb4[11].z
  20: dp3 r0.w, r4.xyzx, r5.xyzx
  21: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r1.w, r4.xyzx, r4.xyzx
  23: sqrt r1.w, r1.w
  24: add r1.w, -r0.w, r1.w
  25: mad r0.w, cb3[25].w, r1.w, r0.w
  26: mad_sat r0.w, r0.w, cb3[24].z, cb3[24].w
  27: eq r1.w, cb5[0].x, l(1.000000)
  28: if_nz r1.w
  29:   eq r1.w, cb5[0].y, l(1.000000)
  30:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  32:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  33:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  34:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  35:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  36:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  37:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  38:   mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r4.x, r1.w, r2.w
  40:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r1.w, r4.xyzw, cb2[46].xyzw
  45: lt r2.w, r0.w, l(0.990000)
  46: if_nz r2.w
  47:   add r4.xyz, v6.xyzx, -cb2[1].xyzx
  48:   max r2.w, |r4.y|, |r4.x|
  49:   max r2.w, |r4.z|, r2.w
  50:   add r2.w, r2.w, -cb2[2].z
  51:   max r2.w, r2.w, l(0.000010)
  52:   mul r2.w, r2.w, cb2[2].w
  53:   div r2.w, cb2[2].y, r2.w
  54:   add r2.w, r2.w, -cb2[2].x
  55:   add r2.w, -r2.w, l(1.000000)
  56:   add r5.xyz, r4.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  57:   sample_c_lz r5.x, r5.xyzx, t4.xxxx, s1, r2.w
  58:   add r6.xyz, r4.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  59:   sample_c_lz r5.y, r6.xyzx, t4.xxxx, s1, r2.w
  60:   add r6.xyz, r4.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  61:   sample_c_lz r5.z, r6.xyzx, t4.xxxx, s1, r2.w
  62:   add r4.xyz, r4.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  63:   sample_c_lz r5.w, r4.xyzx, t4.xxxx, s1, r2.w
  64:   dp4 r2.w, r5.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  65:   add r3.w, -cb3[24].x, l(1.000000)
  66:   mad r2.w, r2.w, r3.w, cb3[24].x
  67: else 
  68:   mov r2.w, l(1.000000)
  69: endif 
  70: add r1.w, r1.w, -r2.w
  71: mad r0.w, r0.w, r1.w, r2.w
  72: dp3 r1.w, r3.xyzx, r3.xyzx
  73: sample r4.xyzw, r1.wwww, t1.xyzw, s4
  74: sample r3.xyzw, r3.xyzx, t2.xyzw, s3
  75: mul r1.w, r3.w, r4.x
  76: mul r0.w, r0.w, r1.w
  77: mov r3.x, v3.w
  78: mov r3.y, v4.w
  79: mov r3.z, v5.w
  80: dp3 r1.w, r3.xyzx, r3.xyzx
  81: rsq r1.w, r1.w
  82: mul r4.xyz, r1.wwww, r3.xyzx
  83: mul r5.xyz, r0.wwww, cb0[2].xyzx
  84: add r0.w, -cb0[8].w, l(1.000000)
  85: mad r3.xyz, r3.xyzx, r1.wwww, -r2.xyzx
  86: dp3 r1.w, r3.xyzx, r3.xyzx
  87: max r1.w, r1.w, l(0.001000)
  88: rsq r1.w, r1.w
  89: mul r3.xyz, r1.wwww, r3.xyzx
  90: dp3 r1.w, r1.xyzx, -r2.xyzx
  91: dp3_sat r2.x, r1.xyzx, r4.xyzx
  92: dp3_sat r1.x, r1.xyzx, r3.xyzx
  93: dp3_sat r1.y, r4.xyzx, r3.xyzx
  94: mul r1.z, r1.y, r1.y
  95: dp2 r1.z, r1.zzzz, r0.wwww
  96: add r1.z, r1.z, l(-0.500000)
  97: add r2.y, -r2.x, l(1.000000)
  98: mul r2.z, r2.y, r2.y
  99: mul r2.z, r2.z, r2.z
 100: mul r2.y, r2.y, r2.z
 101: mad r2.y, r1.z, r2.y, l(1.000000)
 102: add r2.z, -|r1.w|, l(1.000000)
 103: mul r2.w, r2.z, r2.z
 104: mul r2.w, r2.w, r2.w
 105: mul r2.z, r2.z, r2.w
 106: mad r1.z, r1.z, r2.z, l(1.000000)
 107: mul r1.z, r1.z, r2.y
 108: mul r1.z, r2.x, r1.z
 109: mul r0.w, r0.w, r0.w
 110: max r0.w, r0.w, l(0.002000)
 111: add r2.y, -r0.w, l(1.000000)
 112: mad r2.z, |r1.w|, r2.y, r0.w
 113: mad r2.y, r2.x, r2.y, r0.w
 114: mul r1.w, |r1.w|, r2.y
 115: mad r1.w, r2.x, r2.z, r1.w
 116: add r1.w, r1.w, l(0.000010)
 117: div r1.w, l(0.500000), r1.w
 118: mul r0.w, r0.w, r0.w
 119: mad r2.y, r1.x, r0.w, -r1.x
 120: mad r1.x, r2.y, r1.x, l(1.000000)
 121: mul r0.w, r0.w, l(0.318310)
 122: mad r1.x, r1.x, r1.x, l(0.000000)
 123: div r0.w, r0.w, r1.x
 124: mul r0.w, r0.w, r1.w
 125: mul r0.w, r0.w, l(3.141593)
 126: mul r0.w, r2.x, r0.w
 127: max r0.w, r0.w, l(0.000000)
 128: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
 129: ne r1.x, r1.x, l(0.000000)
 130: and r1.x, r1.x, l(0x3f800000)
 131: mul r0.w, r0.w, r1.x
 132: mul r1.xzw, r1.zzzz, r5.xxyz
 133: mul r2.xyz, r5.xyzx, r0.wwww
 134: add r0.w, -r1.y, l(1.000000)
 135: mul r1.y, r0.w, r0.w
 136: mul r1.y, r1.y, r1.y
 137: mul r0.w, r0.w, r1.y
 138: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 139: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
 140: mul r2.xyz, r2.xyzx, r3.xyzx
 141: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
 142: mov o0.w, l(1.000000)
 143: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE SHADOWS_SOFT UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  22: mov o6.xyz, r1.yzwy
  23: mov r2.w, l(0)
  24: mov o3.xyzw, r2.wwwx
  25: mov o4.xyzw, r2.wwwy
  26: mov o5.w, r2.z
  27: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul o5.xyz, r1.wwww, r1.xyzx
  33: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  34: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  35: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  36: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  37: mov o8.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 120 math, 7 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: mul r3.xyz, v6.yyyy, cb0[12].xyzx
  13: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  14: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  15: add r3.xyz, r3.xyzx, cb0[14].xyzx
  16: mov r0.w, cb4[0].x
  17: add r4.xyz, -v6.xyzx, cb3[r0.w + 64].xyzx
  18: ishl r0.w, cb4[0].x, l(2)
  19: mov r5.x, cb3[r0.w + 8].z
  20: mov r5.y, cb3[r0.w + 9].z
  21: mov r5.z, cb3[r0.w + 10].z
  22: dp3 r0.w, r4.xyzx, r5.xyzx
  23: add r4.xyz, v6.xyzx, -cb2[25].xyzx
  24: dp3 r1.w, r4.xyzx, r4.xyzx
  25: sqrt r1.w, r1.w
  26: add r1.w, -r0.w, r1.w
  27: mad r0.w, cb2[25].w, r1.w, r0.w
  28: mad_sat r0.w, r0.w, cb2[24].z, cb2[24].w
  29: eq r1.w, cb5[0].x, l(1.000000)
  30: if_nz r1.w
  31:   eq r1.w, cb5[0].y, l(1.000000)
  32:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  33:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  34:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  35:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  36:   movc r4.xyz, r1.wwww, r4.xyzx, v6.xyzx
  37:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  38:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  39:   mad r1.w, r4.y, l(0.250000), l(0.750000)
  40:   mad r2.w, cb5[0].z, l(0.500000), l(0.750000)
  41:   max r4.x, r1.w, r2.w
  42:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  43: else 
  44:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  45: endif 
  46: dp4_sat r1.w, r4.xyzw, cb1[46].xyzw
  47: lt r2.w, r0.w, l(0.990000)
  48: if_nz r2.w
  49:   add r4.xyz, v6.xyzx, -cb1[1].xyzx
  50:   max r2.w, |r4.y|, |r4.x|
  51:   max r2.w, |r4.z|, r2.w
  52:   add r2.w, r2.w, -cb1[2].z
  53:   max r2.w, r2.w, l(0.000010)
  54:   mul r2.w, r2.w, cb1[2].w
  55:   div r2.w, cb1[2].y, r2.w
  56:   add r2.w, r2.w, -cb1[2].x
  57:   add r2.w, -r2.w, l(1.000000)
  58:   add r5.xyz, r4.xyzx, l(0.007813, 0.007813, 0.007813, 0.000000)
  59:   sample_c_lz r5.x, r5.xyzx, t4.xxxx, s1, r2.w
  60:   add r6.xyz, r4.xyzx, l(-0.007813, -0.007813, 0.007813, 0.000000)
  61:   sample_c_lz r5.y, r6.xyzx, t4.xxxx, s1, r2.w
  62:   add r6.xyz, r4.xyzx, l(-0.007813, 0.007813, -0.007813, 0.000000)
  63:   sample_c_lz r5.z, r6.xyzx, t4.xxxx, s1, r2.w
  64:   add r4.xyz, r4.xyzx, l(0.007813, -0.007813, -0.007813, 0.000000)
  65:   sample_c_lz r5.w, r4.xyzx, t4.xxxx, s1, r2.w
  66:   dp4 r2.w, r5.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  67:   add r3.w, -cb2[24].x, l(1.000000)
  68:   mad r2.w, r2.w, r3.w, cb2[24].x
  69: else 
  70:   mov r2.w, l(1.000000)
  71: endif 
  72: add r1.w, r1.w, -r2.w
  73: mad r0.w, r0.w, r1.w, r2.w
  74: dp3 r1.w, r3.xyzx, r3.xyzx
  75: sample r4.xyzw, r1.wwww, t1.xyzw, s4
  76: sample r3.xyzw, r3.xyzx, t2.xyzw, s3
  77: mul r1.w, r3.w, r4.x
  78: mul r0.w, r0.w, r1.w
  79: mov r3.x, v3.w
  80: mov r3.y, v4.w
  81: mov r3.z, v5.w
  82: dp3 r1.w, r3.xyzx, r3.xyzx
  83: rsq r1.w, r1.w
  84: mul r4.xyz, r1.wwww, r3.xyzx
  85: mul r5.xyz, r0.wwww, cb0[2].xyzx
  86: add r0.w, -cb0[8].w, l(1.000000)
  87: mad r3.xyz, r3.xyzx, r1.wwww, -r2.xyzx
  88: dp3 r1.w, r3.xyzx, r3.xyzx
  89: max r1.w, r1.w, l(0.001000)
  90: rsq r1.w, r1.w
  91: mul r3.xyz, r1.wwww, r3.xyzx
  92: dp3 r1.w, r1.xyzx, -r2.xyzx
  93: dp3_sat r2.x, r1.xyzx, r4.xyzx
  94: dp3_sat r1.x, r1.xyzx, r3.xyzx
  95: dp3_sat r1.y, r4.xyzx, r3.xyzx
  96: mul r1.z, r1.y, r1.y
  97: dp2 r1.z, r1.zzzz, r0.wwww
  98: add r1.z, r1.z, l(-0.500000)
  99: add r2.y, -r2.x, l(1.000000)
 100: mul r2.z, r2.y, r2.y
 101: mul r2.z, r2.z, r2.z
 102: mul r2.y, r2.y, r2.z
 103: mad r2.y, r1.z, r2.y, l(1.000000)
 104: add r2.z, -|r1.w|, l(1.000000)
 105: mul r2.w, r2.z, r2.z
 106: mul r2.w, r2.w, r2.w
 107: mul r2.z, r2.z, r2.w
 108: mad r1.z, r1.z, r2.z, l(1.000000)
 109: mul r1.z, r1.z, r2.y
 110: mul r1.z, r2.x, r1.z
 111: mul r0.w, r0.w, r0.w
 112: max r0.w, r0.w, l(0.002000)
 113: add r2.y, -r0.w, l(1.000000)
 114: mad r2.z, |r1.w|, r2.y, r0.w
 115: mad r2.y, r2.x, r2.y, r0.w
 116: mul r1.w, |r1.w|, r2.y
 117: mad r1.w, r2.x, r2.z, r1.w
 118: add r1.w, r1.w, l(0.000010)
 119: div r1.w, l(0.500000), r1.w
 120: mul r0.w, r0.w, r0.w
 121: mad r2.y, r1.x, r0.w, -r1.x
 122: mad r1.x, r2.y, r1.x, l(1.000000)
 123: mul r0.w, r0.w, l(0.318310)
 124: mad r1.x, r1.x, r1.x, l(0.000000)
 125: div r0.w, r0.w, r1.x
 126: mul r0.w, r0.w, r1.w
 127: mul r0.w, r0.w, l(3.141593)
 128: mul r0.w, r2.x, r0.w
 129: max r0.w, r0.w, l(0.000000)
 130: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
 131: ne r1.x, r1.x, l(0.000000)
 132: and r1.x, r1.x, l(0x3f800000)
 133: mul r0.w, r0.w, r1.x
 134: mul r1.xzw, r1.zzzz, r5.xxyz
 135: mul r2.xyz, r5.xyzx, r0.wwww
 136: add r0.w, -r1.y, l(1.000000)
 137: mul r1.y, r0.w, r0.w
 138: mul r1.y, r1.y, r1.y
 139: mul r0.w, r0.w, r1.y
 140: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 141: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
 142: mul r2.xyz, r2.xyzx, r3.xyzx
 143: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
 144: mov o0.w, l(1.000000)
 145: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  32: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  33: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  34: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  35: mov o8.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 91 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s2
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  14: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  15: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  16: add r4.xyz, r4.xyzx, cb0[14].xyzx
  17: eq r1.w, cb2[0].x, l(1.000000)
  18: if_nz r1.w
  19:   eq r1.w, cb2[0].y, l(1.000000)
  20:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  21:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  22:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  23:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  24:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  25:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  26:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  27:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  28:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  29:   max r5.x, r1.w, r2.w
  30:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  31: else 
  32:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  33: endif 
  34: dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
  35: dp3 r2.w, r4.xyzx, r4.xyzx
  36: sample r4.xyzw, r2.wwww, t2.xyzw, s3
  37: mul r1.w, r1.w, r4.x
  38: mov r4.x, v3.w
  39: mov r4.y, v4.w
  40: mov r4.z, v5.w
  41: dp3 r2.w, r4.xyzx, r4.xyzx
  42: rsq r2.w, r2.w
  43: mul r5.xyz, r2.wwww, r4.xyzx
  44: mul r6.xyz, r1.wwww, cb0[2].xyzx
  45: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  46: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  47: dp3 r1.w, r4.xyzx, r4.xyzx
  48: max r1.w, r1.w, l(0.001000)
  49: rsq r1.w, r1.w
  50: mul r4.xyz, r1.wwww, r4.xyzx
  51: dp3 r1.w, r2.xyzx, -r3.xyzx
  52: dp3_sat r2.w, r2.xyzx, r5.xyzx
  53: dp3_sat r2.x, r2.xyzx, r4.xyzx
  54: dp3_sat r2.y, r5.xyzx, r4.xyzx
  55: mul r2.z, r2.y, r2.y
  56: dp2 r2.z, r2.zzzz, r0.wwww
  57: add r2.z, r2.z, l(-0.500000)
  58: add r3.x, -r2.w, l(1.000000)
  59: mul r3.y, r3.x, r3.x
  60: mul r3.y, r3.y, r3.y
  61: mul r3.x, r3.x, r3.y
  62: mad r3.x, r2.z, r3.x, l(1.000000)
  63: add r3.y, -|r1.w|, l(1.000000)
  64: mul r3.z, r3.y, r3.y
  65: mul r3.z, r3.z, r3.z
  66: mul r3.y, r3.y, r3.z
  67: mad r2.z, r2.z, r3.y, l(1.000000)
  68: mul r2.z, r2.z, r3.x
  69: mul r2.z, r2.w, r2.z
  70: mul r0.w, r0.w, r0.w
  71: max r0.w, r0.w, l(0.002000)
  72: add r3.x, -r0.w, l(1.000000)
  73: mad r3.y, |r1.w|, r3.x, r0.w
  74: mad r3.x, r2.w, r3.x, r0.w
  75: mul r1.w, |r1.w|, r3.x
  76: mad r1.w, r2.w, r3.y, r1.w
  77: add r1.w, r1.w, l(0.000010)
  78: div r1.w, l(0.500000), r1.w
  79: mul r0.w, r0.w, r0.w
  80: mad r3.x, r2.x, r0.w, -r2.x
  81: mad r2.x, r3.x, r2.x, l(1.000000)
  82: mul r0.w, r0.w, l(0.318310)
  83: mad r2.x, r2.x, r2.x, l(0.000000)
  84: div r0.w, r0.w, r2.x
  85: mul r0.w, r0.w, r1.w
  86: mul r0.w, r0.w, l(3.141593)
  87: mul r0.w, r2.w, r0.w
  88: max r0.w, r0.w, l(0.000000)
  89: dp3 r1.w, r0.xyzx, r0.xyzx
  90: ne r1.w, r1.w, l(0.000000)
  91: and r1.w, r1.w, l(0x3f800000)
  92: mul r0.w, r0.w, r1.w
  93: mul r2.xzw, r2.zzzz, r6.xxyz
  94: mul r3.xyz, r6.xyzx, r0.wwww
  95: add r0.w, -r2.y, l(1.000000)
  96: mul r1.w, r0.w, r0.w
  97: mul r1.w, r1.w, r1.w
  98: mul r0.w, r0.w, r1.w
  99: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 100: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 101: mul r0.xyz, r0.xyzx, r3.xyzx
 102: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 103: mov o0.w, l(1.000000)
 104: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  22: mov o6.xyz, r1.yzwy
  23: mov r2.w, l(0)
  24: mov o3.xyzw, r2.wwwx
  25: mov o4.xyzw, r2.wwwy
  26: mov o5.w, r2.z
  27: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.w, r1.xyzx, r1.xyzx
  31: rsq r1.w, r1.w
  32: mul o5.xyz, r1.wwww, r1.xyzx
  33: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  34: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  35: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  36: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  37: mov o8.xyzw, l(0,0,0,0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 91 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s2
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  14: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  15: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  16: add r4.xyz, r4.xyzx, cb0[14].xyzx
  17: eq r1.w, cb2[0].x, l(1.000000)
  18: if_nz r1.w
  19:   eq r1.w, cb2[0].y, l(1.000000)
  20:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  21:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  22:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  23:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  24:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  25:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  26:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  27:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  28:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  29:   max r5.x, r1.w, r2.w
  30:   sample r5.xyzw, r5.xzwx, t3.xyzw, s0
  31: else 
  32:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  33: endif 
  34: dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
  35: dp3 r2.w, r4.xyzx, r4.xyzx
  36: sample r4.xyzw, r2.wwww, t2.xyzw, s3
  37: mul r1.w, r1.w, r4.x
  38: mov r4.x, v3.w
  39: mov r4.y, v4.w
  40: mov r4.z, v5.w
  41: dp3 r2.w, r4.xyzx, r4.xyzx
  42: rsq r2.w, r2.w
  43: mul r5.xyz, r2.wwww, r4.xyzx
  44: mul r6.xyz, r1.wwww, cb0[2].xyzx
  45: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  46: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  47: dp3 r1.w, r4.xyzx, r4.xyzx
  48: max r1.w, r1.w, l(0.001000)
  49: rsq r1.w, r1.w
  50: mul r4.xyz, r1.wwww, r4.xyzx
  51: dp3 r1.w, r2.xyzx, -r3.xyzx
  52: dp3_sat r2.w, r2.xyzx, r5.xyzx
  53: dp3_sat r2.x, r2.xyzx, r4.xyzx
  54: dp3_sat r2.y, r5.xyzx, r4.xyzx
  55: mul r2.z, r2.y, r2.y
  56: dp2 r2.z, r2.zzzz, r0.wwww
  57: add r2.z, r2.z, l(-0.500000)
  58: add r3.x, -r2.w, l(1.000000)
  59: mul r3.y, r3.x, r3.x
  60: mul r3.y, r3.y, r3.y
  61: mul r3.x, r3.x, r3.y
  62: mad r3.x, r2.z, r3.x, l(1.000000)
  63: add r3.y, -|r1.w|, l(1.000000)
  64: mul r3.z, r3.y, r3.y
  65: mul r3.z, r3.z, r3.z
  66: mul r3.y, r3.y, r3.z
  67: mad r2.z, r2.z, r3.y, l(1.000000)
  68: mul r2.z, r2.z, r3.x
  69: mul r2.z, r2.w, r2.z
  70: mul r0.w, r0.w, r0.w
  71: max r0.w, r0.w, l(0.002000)
  72: add r3.x, -r0.w, l(1.000000)
  73: mad r3.y, |r1.w|, r3.x, r0.w
  74: mad r3.x, r2.w, r3.x, r0.w
  75: mul r1.w, |r1.w|, r3.x
  76: mad r1.w, r2.w, r3.y, r1.w
  77: add r1.w, r1.w, l(0.000010)
  78: div r1.w, l(0.500000), r1.w
  79: mul r0.w, r0.w, r0.w
  80: mad r3.x, r2.x, r0.w, -r2.x
  81: mad r2.x, r3.x, r2.x, l(1.000000)
  82: mul r0.w, r0.w, l(0.318310)
  83: mad r2.x, r2.x, r2.x, l(0.000000)
  84: div r0.w, r0.w, r2.x
  85: mul r0.w, r0.w, r1.w
  86: mul r0.w, r0.w, l(3.141593)
  87: mul r0.w, r2.w, r0.w
  88: max r0.w, r0.w, l(0.000000)
  89: dp3 r1.w, r0.xyzx, r0.xyzx
  90: ne r1.w, r1.w, l(0.000000)
  91: and r1.w, r1.w, l(0x3f800000)
  92: mul r0.w, r0.w, r1.w
  93: mul r2.xzw, r2.zzzz, r6.xxyz
  94: mul r3.xyz, r6.xyzx, r0.wwww
  95: add r0.w, -r2.y, l(1.000000)
  96: mul r1.w, r0.w, r0.w
  97: mul r1.w, r1.w, r1.w
  98: mul r0.w, r0.w, r1.w
  99: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 100: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 101: mul r0.xyz, r0.xyzx, r3.xyzx
 102: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 103: mov o0.w, l(1.000000)
 104: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r1.xyzx
  28: mov o3.w, r3.x
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r4.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r1.xyzx
  38: mul r1.x, v4.w, cb3[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r3.y
  41: mov o5.w, r3.z
  42: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  43: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  44: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  45: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  46: mov o8.xyzw, l(0,0,0,0)
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 101 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_BumpMap" to slot 2
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  25: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  26: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  27: add r4.xyz, r4.xyzx, cb0[14].xyzx
  28: eq r1.w, cb2[0].x, l(1.000000)
  29: if_nz r1.w
  30:   eq r1.w, cb2[0].y, l(1.000000)
  31:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  32:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  33:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  34:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  35:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  36:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  37:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  38:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  39:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  40:   max r5.x, r1.w, r2.w
  41:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  42: else 
  43:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
  46: dp3 r2.w, r4.xyzx, r4.xyzx
  47: sample r4.xyzw, r2.wwww, t3.xyzw, s4
  48: mul r1.w, r1.w, r4.x
  49: mov r4.x, v3.w
  50: mov r4.y, v4.w
  51: mov r4.z, v5.w
  52: dp3 r2.w, r4.xyzx, r4.xyzx
  53: rsq r2.w, r2.w
  54: mul r5.xyz, r2.wwww, r4.xyzx
  55: mul r6.xyz, r1.wwww, cb0[2].xyzx
  56: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  57: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  58: dp3 r1.w, r4.xyzx, r4.xyzx
  59: max r1.w, r1.w, l(0.001000)
  60: rsq r1.w, r1.w
  61: mul r4.xyz, r1.wwww, r4.xyzx
  62: dp3 r1.w, r2.xyzx, -r3.xyzx
  63: dp3_sat r2.w, r2.xyzx, r5.xyzx
  64: dp3_sat r2.x, r2.xyzx, r4.xyzx
  65: dp3_sat r2.y, r5.xyzx, r4.xyzx
  66: mul r2.z, r2.y, r2.y
  67: dp2 r2.z, r2.zzzz, r0.wwww
  68: add r2.z, r2.z, l(-0.500000)
  69: add r3.x, -r2.w, l(1.000000)
  70: mul r3.y, r3.x, r3.x
  71: mul r3.y, r3.y, r3.y
  72: mul r3.x, r3.x, r3.y
  73: mad r3.x, r2.z, r3.x, l(1.000000)
  74: add r3.y, -|r1.w|, l(1.000000)
  75: mul r3.z, r3.y, r3.y
  76: mul r3.z, r3.z, r3.z
  77: mul r3.y, r3.y, r3.z
  78: mad r2.z, r2.z, r3.y, l(1.000000)
  79: mul r2.z, r2.z, r3.x
  80: mul r2.z, r2.w, r2.z
  81: mul r0.w, r0.w, r0.w
  82: max r0.w, r0.w, l(0.002000)
  83: add r3.x, -r0.w, l(1.000000)
  84: mad r3.y, |r1.w|, r3.x, r0.w
  85: mad r3.x, r2.w, r3.x, r0.w
  86: mul r1.w, |r1.w|, r3.x
  87: mad r1.w, r2.w, r3.y, r1.w
  88: add r1.w, r1.w, l(0.000010)
  89: div r1.w, l(0.500000), r1.w
  90: mul r0.w, r0.w, r0.w
  91: mad r3.x, r2.x, r0.w, -r2.x
  92: mad r2.x, r3.x, r2.x, l(1.000000)
  93: mul r0.w, r0.w, l(0.318310)
  94: mad r2.x, r2.x, r2.x, l(0.000000)
  95: div r0.w, r0.w, r2.x
  96: mul r0.w, r0.w, r1.w
  97: mul r0.w, r0.w, l(3.141593)
  98: mul r0.w, r2.w, r0.w
  99: max r0.w, r0.w, l(0.000000)
 100: dp3 r1.w, r0.xyzx, r0.xyzx
 101: ne r1.w, r1.w, l(0.000000)
 102: and r1.w, r1.w, l(0x3f800000)
 103: mul r0.w, r0.w, r1.w
 104: mul r2.xzw, r2.zzzz, r6.xxyz
 105: mul r3.xyz, r6.xyzx, r0.wwww
 106: add r0.w, -r2.y, l(1.000000)
 107: mul r1.w, r0.w, r0.w
 108: mul r1.w, r1.w, r1.w
 109: mul r0.w, r0.w, r1.w
 110: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 111: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 112: mul r0.xyz, r0.xyzx, r3.xyzx
 113: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 114: mov o0.w, l(1.000000)
 115: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add o2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: mov o2.w, l(0)
  21: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  22: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  23: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r2.xyz, r1.xxxx, r2.xyzx
  27: mov o3.xyz, r2.xyzx
  28: mad r3.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  29: mov o6.xyz, r1.yzwy
  30: mov o3.w, r3.x
  31: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul r1.xyz, r1.wwww, r1.xyzx
  37: mul r4.xyz, r2.yzxy, r1.zxyz
  38: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  39: mov o5.xyz, r1.xyzx
  40: mul r1.x, v4.w, cb2[9].w
  41: mul o4.xyz, r1.xxxx, r2.xyzx
  42: mov o4.w, r3.y
  43: mov o5.w, r3.z
  44: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  45: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  46: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  47: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  48: mov o8.xyzw, l(0,0,0,0)
  49: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 101 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_BumpMap" to slot 2
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: mul r4.xyz, v6.yyyy, cb0[12].xyzx
  25: mad r4.xyz, cb0[11].xyzx, v6.xxxx, r4.xyzx
  26: mad r4.xyz, cb0[13].xyzx, v6.zzzz, r4.xyzx
  27: add r4.xyz, r4.xyzx, cb0[14].xyzx
  28: eq r1.w, cb2[0].x, l(1.000000)
  29: if_nz r1.w
  30:   eq r1.w, cb2[0].y, l(1.000000)
  31:   mul r5.xyz, v6.yyyy, cb2[2].xyzx
  32:   mad r5.xyz, cb2[1].xyzx, v6.xxxx, r5.xyzx
  33:   mad r5.xyz, cb2[3].xyzx, v6.zzzz, r5.xyzx
  34:   add r5.xyz, r5.xyzx, cb2[4].xyzx
  35:   movc r5.xyz, r1.wwww, r5.xyzx, v6.xyzx
  36:   add r5.xyz, r5.xyzx, -cb2[6].xyzx
  37:   mul r5.yzw, r5.xxyz, cb2[5].xxyz
  38:   mad r1.w, r5.y, l(0.250000), l(0.750000)
  39:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  40:   max r5.x, r1.w, r2.w
  41:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  42: else 
  43:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r1.w, r5.xyzw, cb1[46].xyzw
  46: dp3 r2.w, r4.xyzx, r4.xyzx
  47: sample r4.xyzw, r2.wwww, t3.xyzw, s4
  48: mul r1.w, r1.w, r4.x
  49: mov r4.x, v3.w
  50: mov r4.y, v4.w
  51: mov r4.z, v5.w
  52: dp3 r2.w, r4.xyzx, r4.xyzx
  53: rsq r2.w, r2.w
  54: mul r5.xyz, r2.wwww, r4.xyzx
  55: mul r6.xyz, r1.wwww, cb0[2].xyzx
  56: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  57: mad r4.xyz, r4.xyzx, r2.wwww, -r3.xyzx
  58: dp3 r1.w, r4.xyzx, r4.xyzx
  59: max r1.w, r1.w, l(0.001000)
  60: rsq r1.w, r1.w
  61: mul r4.xyz, r1.wwww, r4.xyzx
  62: dp3 r1.w, r2.xyzx, -r3.xyzx
  63: dp3_sat r2.w, r2.xyzx, r5.xyzx
  64: dp3_sat r2.x, r2.xyzx, r4.xyzx
  65: dp3_sat r2.y, r5.xyzx, r4.xyzx
  66: mul r2.z, r2.y, r2.y
  67: dp2 r2.z, r2.zzzz, r0.wwww
  68: add r2.z, r2.z, l(-0.500000)
  69: add r3.x, -r2.w, l(1.000000)
  70: mul r3.y, r3.x, r3.x
  71: mul r3.y, r3.y, r3.y
  72: mul r3.x, r3.x, r3.y
  73: mad r3.x, r2.z, r3.x, l(1.000000)
  74: add r3.y, -|r1.w|, l(1.000000)
  75: mul r3.z, r3.y, r3.y
  76: mul r3.z, r3.z, r3.z
  77: mul r3.y, r3.y, r3.z
  78: mad r2.z, r2.z, r3.y, l(1.000000)
  79: mul r2.z, r2.z, r3.x
  80: mul r2.z, r2.w, r2.z
  81: mul r0.w, r0.w, r0.w
  82: max r0.w, r0.w, l(0.002000)
  83: add r3.x, -r0.w, l(1.000000)
  84: mad r3.y, |r1.w|, r3.x, r0.w
  85: mad r3.x, r2.w, r3.x, r0.w
  86: mul r1.w, |r1.w|, r3.x
  87: mad r1.w, r2.w, r3.y, r1.w
  88: add r1.w, r1.w, l(0.000010)
  89: div r1.w, l(0.500000), r1.w
  90: mul r0.w, r0.w, r0.w
  91: mad r3.x, r2.x, r0.w, -r2.x
  92: mad r2.x, r3.x, r2.x, l(1.000000)
  93: mul r0.w, r0.w, l(0.318310)
  94: mad r2.x, r2.x, r2.x, l(0.000000)
  95: div r0.w, r0.w, r2.x
  96: mul r0.w, r0.w, r1.w
  97: mul r0.w, r0.w, l(3.141593)
  98: mul r0.w, r2.w, r0.w
  99: max r0.w, r0.w, l(0.000000)
 100: dp3 r1.w, r0.xyzx, r0.xyzx
 101: ne r1.w, r1.w, l(0.000000)
 102: and r1.w, r1.w, l(0x3f800000)
 103: mul r0.w, r0.w, r1.w
 104: mul r2.xzw, r2.zzzz, r6.xxyz
 105: mul r3.xyz, r6.xyzx, r0.wwww
 106: add r0.w, -r2.y, l(1.000000)
 107: mul r1.w, r0.w, r0.w
 108: mul r1.w, r1.w, r1.w
 109: mul r0.w, r0.w, r1.w
 110: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 111: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 112: mul r0.xyz, r0.xyzx, r3.xyzx
 113: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 114: mov o0.w, l(1.000000)
 115: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 29 avg math (27..32)
 Pass {
  Name "ShadowCaster"
  Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb2[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb2[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb2[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb3[18].xyzw
  22: mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
  25: div r1.x, cb1[5].x, r0.w
  26: min r1.x, r1.x, l(0.000000)
  27: max r1.x, r1.x, l(-1.000000)
  28: add r0.z, r0.z, r1.x
  29: min r1.x, r0.w, r0.z
  30: mov o0.xyw, r0.xyxw
  31: add r0.x, -r0.z, r1.x
  32: mad o0.z, cb1[5].y, r0.x, r0.z
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[32], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb2[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb2[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb2[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: ishl r0.w, cb4[0].x, l(2)
  22: mul r2.xyzw, r0.yyyy, cb3[r0.w + 25].xyzw
  23: mad r2.xyzw, cb3[r0.w + 24].xyzw, r0.xxxx, r2.xyzw
  24: mad r2.xyzw, cb3[r0.w + 26].xyzw, r0.zzzz, r2.xyzw
  25: mad r0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
  26: div r1.x, cb1[5].x, r0.w
  27: min r1.x, r1.x, l(0.000000)
  28: max r1.x, r1.x, l(-1.000000)
  29: add r0.z, r0.z, r1.x
  30: min r1.x, r0.w, r0.z
  31: mov o0.xyw, r0.xyxw
  32: add r0.x, -r0.z, r1.x
  33: mad o0.z, cb1[5].y, r0.x, r0.z
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_CUBE 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 27 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb2[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb2[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb2[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb3[18].xyzw
  22: mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
  25: min r1.x, r0.w, r0.z
  26: add r1.x, -r0.z, r1.x
  27: mad o0.z, cb1[5].y, r1.x, r0.z
  28: mov o0.xyw, r0.xyxw
  29: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_CUBE UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[32], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb2[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb2[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb2[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: ishl r0.w, cb4[0].x, l(2)
  22: mul r2.xyzw, r0.yyyy, cb3[r0.w + 25].xyzw
  23: mad r2.xyzw, cb3[r0.w + 24].xyzw, r0.xxxx, r2.xyzw
  24: mad r2.xyzw, cb3[r0.w + 26].xyzw, r0.zzzz, r2.xyzw
  25: mad r0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
  26: min r1.x, r0.w, r0.z
  27: add r1.x, -r0.z, r1.x
  28: mad o0.z, cb1[5].y, r1.x, r0.z
  29: mov o0.xyw, r0.xyxw
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_CUBE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 27 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb2[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb2[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb2[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb3[18].xyzw
  22: mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
  25: min r1.x, r0.w, r0.z
  26: add r1.x, -r0.z, r1.x
  27: mad o0.z, cb1[5].y, r1.x, r0.z
  28: mov o0.xyw, r0.xyxw
  29: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_CUBE UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[32], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb2[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb2[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb2[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: ishl r0.w, cb4[0].x, l(2)
  22: mul r2.xyzw, r0.yyyy, cb3[r0.w + 25].xyzw
  23: mad r2.xyzw, cb3[r0.w + 24].xyzw, r0.xxxx, r2.xyzw
  24: mad r2.xyzw, cb3[r0.w + 26].xyzw, r0.zzzz, r2.xyzw
  25: mad r0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
  26: min r1.x, r0.w, r0.z
  27: add r1.x, -r0.z, r1.x
  28: mad o0.z, cb1[5].y, r1.x, r0.z
  29: mov o0.xyw, r0.xyxw
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb2[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb2[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb2[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb3[18].xyzw
  22: mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
  25: div r1.x, cb1[5].x, r0.w
  26: min r1.x, r1.x, l(0.000000)
  27: max r1.x, r1.x, l(-1.000000)
  28: add r0.z, r0.z, r1.x
  29: min r1.x, r0.w, r0.z
  30: mov o0.xyw, r0.xyxw
  31: add r0.x, -r0.z, r1.x
  32: mad o0.z, cb1[5].y, r0.x, r0.z
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[32], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb2[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb2[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb2[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: ishl r0.w, cb4[0].x, l(2)
  22: mul r2.xyzw, r0.yyyy, cb3[r0.w + 25].xyzw
  23: mad r2.xyzw, cb3[r0.w + 24].xyzw, r0.xxxx, r2.xyzw
  24: mad r2.xyzw, cb3[r0.w + 26].xyzw, r0.zzzz, r2.xyzw
  25: mad r0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
  26: div r1.x, cb1[5].x, r0.w
  27: min r1.x, r1.x, l(0.000000)
  28: max r1.x, r1.x, l(-1.000000)
  29: add r0.z, r0.z, r1.x
  30: min r1.x, r0.w, r0.z
  31: mov o0.xyw, r0.xyxw
  32: add r0.x, -r0.z, r1.x
  33: mad o0.z, cb1[5].y, r0.x, r0.z
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 28 avg math (22..40)
 // Stats for Fragment shader:
 //        d3d11: 30 avg math (11..56), 5 avg texture (2..8), 1 avg branch (0..2)
 Pass {
  Name "DEFERRED"
  Tags { "LIGHTMODE"="DEFERRED" "RenderType"="Opaque" "PerformanceChecks"="False" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul o5.xyz, r0.wwww, r0.xyzx
  27: mov o6.xyzw, l(0,0,0,0)
  28: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 11 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: max r0.x, cb0[3].y, cb0[3].x
   1: max r0.x, r0.x, cb0[3].z
   2: add r0.x, -r0.x, l(1.000000)
   3: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   4: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   5: mul o0.xyz, r0.xxxx, r0.yzwy
   6: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   7: add r0.x, -cb0[9].y, l(1.000000)
   8: mad o0.w, r0.y, cb0[9].y, r0.x
   9: mov o1.xyz, cb0[3].xyzx
  10: mov o1.w, cb0[8].w
  11: dp3 r0.x, v5.xyzx, v5.xyzx
  12: rsq r0.x, r0.x
  13: mul r0.xyz, r0.xxxx, v5.xyzx
  14: mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  15: mov o2.w, l(1.000000)
  16: mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  17: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  18: add o2.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o6.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 11 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: max r0.x, cb0[3].y, cb0[3].x
   1: max r0.x, r0.x, cb0[3].z
   2: add r0.x, -r0.x, l(1.000000)
   3: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   4: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   5: mul o0.xyz, r0.xxxx, r0.yzwy
   6: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   7: add r0.x, -cb0[9].y, l(1.000000)
   8: mad o0.w, r0.y, cb0[9].y, r0.x
   9: mov o1.xyz, cb0[3].xyzx
  10: mov o1.w, cb0[8].w
  11: dp3 r0.x, v5.xyzx, v5.xyzx
  12: rsq r0.x, r0.x
  13: mul r0.xyz, r0.xxxx, v5.xyzx
  14: mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  15: mov o2.w, l(1.000000)
  16: mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  17: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul r0.xyz, r0.wwww, r0.xyzx
  27: mov o5.xyz, r0.xyzx
  28: mul r0.w, r0.y, r0.y
  29: mad r0.w, r0.x, r0.x, -r0.w
  30: mul r1.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r0.x, cb2[42].xyzw, r1.xyzw
  32: dp4 r0.y, cb2[43].xyzw, r1.xyzw
  33: dp4 r0.z, cb2[44].xyzw, r1.xyzw
  34: mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  35: mov o6.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 38 math, 6 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s2
   1: mul o1.w, r0.w, cb0[9].x
   2: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   3: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   4: max r0.w, r0.y, r0.x
   5: max r0.w, r0.z, r0.w
   6: add r0.w, -r0.w, l(1.000000)
   7: mul r1.xyz, r0.wwww, r1.xyzx
   8: dp3 r0.w, v5.xyzx, v5.xyzx
   9: rsq r0.w, r0.w
  10: mul r2.xyz, r0.wwww, v5.xyzx
  11: sample r3.xyzw, v1.xyxx, t2.xyzw, s3
  12: add r0.w, -cb0[9].y, l(1.000000)
  13: mad r1.w, r3.y, cb0[9].y, r0.w
  14: eq r0.w, cb2[0].x, l(1.000000)
  15: if_nz r0.w
  16:   eq r0.w, cb2[0].y, l(1.000000)
  17:   mul r3.xyz, v4.wwww, cb2[2].xyzx
  18:   mad r3.xyz, cb2[1].xyzx, v3.wwww, r3.xyzx
  19:   mad r3.xyz, cb2[3].xyzx, v5.wwww, r3.xyzx
  20:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  21:   mov r4.y, v3.w
  22:   mov r4.z, v4.w
  23:   mov r4.w, v5.w
  24:   movc r3.xyz, r0.wwww, r3.xyzx, r4.yzwy
  25:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  26:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  27:   mul r0.w, r3.y, l(0.250000)
  28:   mul r3.y, cb2[0].z, l(0.500000)
  29:   mad r4.x, -cb2[0].z, l(0.500000), l(0.250000)
  30:   max r0.w, r0.w, r3.y
  31:   min r3.x, r4.x, r0.w
  32:   sample r4.xyzw, r3.xzwx, t3.xyzw, s0
  33:   add r5.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  34:   sample r5.xyzw, r5.xyzx, t3.xyzw, s0
  35:   add r3.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  36:   sample r3.xyzw, r3.xyzx, t3.xyzw, s0
  37:   mov r2.w, l(1.000000)
  38:   dp4 r4.x, r4.xyzw, r2.xyzw
  39:   dp4 r4.y, r5.xyzw, r2.xyzw
  40:   dp4 r4.z, r3.xyzw, r2.xyzw
  41: else 
  42:   mov r2.w, l(1.000000)
  43:   dp4 r4.x, cb1[39].xyzw, r2.xyzw
  44:   dp4 r4.y, cb1[40].xyzw, r2.xyzw
  45:   dp4 r4.z, cb1[41].xyzw, r2.xyzw
  46: endif 
  47: add r3.xyz, r4.xyzx, v6.xyzx
  48: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: mul r3.xyz, r1.wwww, r3.xyzx
  50: mul r3.xyz, r1.xyzx, r3.xyzx
  51: exp o3.xyz, -r3.xyzx
  52: mad o2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  53: mov o0.xyzw, r1.xyzw
  54: mov o1.xyz, r0.xyzx
  55: mov o2.w, l(1.000000)
  56: mov o3.w, l(1.000000)
  57: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb4[0].x
  14: mul r0.yzw, v0.yyyy, cb2[1].xxyz
  15: mad r0.yzw, cb2[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb2[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r0.yzwy
  18: add o2.xyz, r1.xyzx, -cb3[r0.x + 64].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul r0.xyz, r0.wwww, r0.xyzx
  29: mov o5.xyz, r0.xyzx
  30: mul r0.w, r0.y, r0.y
  31: mad r0.w, r0.x, r0.x, -r0.w
  32: mul r1.xyzw, r0.yzzx, r0.xyzz
  33: dp4 r0.x, cb1[42].xyzw, r1.xyzw
  34: dp4 r0.y, cb1[43].xyzw, r1.xyzw
  35: dp4 r0.z, cb1[44].xyzw, r1.xyzw
  36: mad o6.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
  37: mov o6.w, l(0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 38 math, 6 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s2
   1: mul o1.w, r0.w, cb0[9].x
   2: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   3: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   4: max r0.w, r0.y, r0.x
   5: max r0.w, r0.z, r0.w
   6: add r0.w, -r0.w, l(1.000000)
   7: mul r1.xyz, r0.wwww, r1.xyzx
   8: dp3 r0.w, v5.xyzx, v5.xyzx
   9: rsq r0.w, r0.w
  10: mul r2.xyz, r0.wwww, v5.xyzx
  11: sample r3.xyzw, v1.xyxx, t2.xyzw, s3
  12: add r0.w, -cb0[9].y, l(1.000000)
  13: mad r1.w, r3.y, cb0[9].y, r0.w
  14: eq r0.w, cb2[0].x, l(1.000000)
  15: if_nz r0.w
  16:   eq r0.w, cb2[0].y, l(1.000000)
  17:   mul r3.xyz, v4.wwww, cb2[2].xyzx
  18:   mad r3.xyz, cb2[1].xyzx, v3.wwww, r3.xyzx
  19:   mad r3.xyz, cb2[3].xyzx, v5.wwww, r3.xyzx
  20:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  21:   mov r4.y, v3.w
  22:   mov r4.z, v4.w
  23:   mov r4.w, v5.w
  24:   movc r3.xyz, r0.wwww, r3.xyzx, r4.yzwy
  25:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  26:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  27:   mul r0.w, r3.y, l(0.250000)
  28:   mul r3.y, cb2[0].z, l(0.500000)
  29:   mad r4.x, -cb2[0].z, l(0.500000), l(0.250000)
  30:   max r0.w, r0.w, r3.y
  31:   min r3.x, r4.x, r0.w
  32:   sample r4.xyzw, r3.xzwx, t3.xyzw, s0
  33:   add r5.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  34:   sample r5.xyzw, r5.xyzx, t3.xyzw, s0
  35:   add r3.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  36:   sample r3.xyzw, r3.xyzx, t3.xyzw, s0
  37:   mov r2.w, l(1.000000)
  38:   dp4 r4.x, r4.xyzw, r2.xyzw
  39:   dp4 r4.y, r5.xyzw, r2.xyzw
  40:   dp4 r4.z, r3.xyzw, r2.xyzw
  41: else 
  42:   mov r2.w, l(1.000000)
  43:   dp4 r4.x, cb1[39].xyzw, r2.xyzw
  44:   dp4 r4.y, cb1[40].xyzw, r2.xyzw
  45:   dp4 r4.z, cb1[41].xyzw, r2.xyzw
  46: endif 
  47: add r3.xyz, r4.xyzx, v6.xyzx
  48: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: mul r3.xyz, r1.wwww, r3.xyzx
  50: mul r3.xyz, r1.xyzx, r3.xyzx
  51: exp o3.xyz, -r3.xyzx
  52: mad o2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  53: mov o0.xyzw, r1.xyzw
  54: mov o1.xyz, r0.xyzx
  55: mov o2.w, l(1.000000)
  56: mov o3.w, l(1.000000)
  57: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v4.yyyy, cb3[1].xyzx
  19: mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
  20: mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: mov o4.w, r0.y
  26: mov o5.w, r0.z
  27: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  28: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  29: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  30: dp3 r0.w, r0.xyzx, r0.xyzx
  31: rsq r0.w, r0.w
  32: mul r0.xyz, r0.wwww, r0.xyzx
  33: mul r2.xyz, r1.yzxy, r0.zxyz
  34: mad r1.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
  35: mul r0.w, v4.w, cb3[9].w
  36: mul o4.xyz, r0.wwww, r1.xyzx
  37: mov o5.xyz, r0.xyzx
  38: mul r0.w, r0.y, r0.y
  39: mad r0.w, r0.x, r0.x, -r0.w
  40: mul r1.xyzw, r0.yzzx, r0.xyzz
  41: dp4 r0.x, cb2[42].xyzw, r1.xyzw
  42: dp4 r0.y, cb2[43].xyzw, r1.xyzw
  43: dp4 r0.z, cb2[44].xyzw, r1.xyzw
  44: mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  45: mov o6.w, l(0)
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 48 math, 6 temp registers, 7 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_BumpMap" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: mul o1.w, r0.w, cb0[9].x
   2: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   3: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   4: max r0.w, r0.y, r0.x
   5: max r0.w, r0.z, r0.w
   6: add r0.w, -r0.w, l(1.000000)
   7: mul r1.xyz, r0.wwww, r1.xyzx
   8: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
   9: mul r2.x, r2.w, r2.x
  10: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  11: mul r2.xy, r2.xyxx, cb0[8].xxxx
  12: dp2 r0.w, r2.xyxx, r2.xyxx
  13: min r0.w, r0.w, l(1.000000)
  14: add r0.w, -r0.w, l(1.000000)
  15: sqrt r0.w, r0.w
  16: mul r2.yzw, r2.yyyy, v4.xxyz
  17: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  18: mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
  19: dp3 r0.w, r2.xyzx, r2.xyzx
  20: rsq r0.w, r0.w
  21: mul r2.xyz, r0.wwww, r2.xyzx
  22: sample r3.xyzw, v1.xyxx, t3.xyzw, s4
  23: add r0.w, -cb0[9].y, l(1.000000)
  24: mad r1.w, r3.y, cb0[9].y, r0.w
  25: eq r0.w, cb2[0].x, l(1.000000)
  26: if_nz r0.w
  27:   eq r0.w, cb2[0].y, l(1.000000)
  28:   mul r3.xyz, v4.wwww, cb2[2].xyzx
  29:   mad r3.xyz, cb2[1].xyzx, v3.wwww, r3.xyzx
  30:   mad r3.xyz, cb2[3].xyzx, v5.wwww, r3.xyzx
  31:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  32:   mov r4.y, v3.w
  33:   mov r4.z, v4.w
  34:   mov r4.w, v5.w
  35:   movc r3.xyz, r0.wwww, r3.xyzx, r4.yzwy
  36:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  37:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  38:   mul r0.w, r3.y, l(0.250000)
  39:   mul r3.y, cb2[0].z, l(0.500000)
  40:   mad r4.x, -cb2[0].z, l(0.500000), l(0.250000)
  41:   max r0.w, r0.w, r3.y
  42:   min r3.x, r4.x, r0.w
  43:   sample r4.xyzw, r3.xzwx, t4.xyzw, s0
  44:   add r5.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  45:   sample r5.xyzw, r5.xyzx, t4.xyzw, s0
  46:   add r3.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  47:   sample r3.xyzw, r3.xyzx, t4.xyzw, s0
  48:   mov r2.w, l(1.000000)
  49:   dp4 r4.x, r4.xyzw, r2.xyzw
  50:   dp4 r4.y, r5.xyzw, r2.xyzw
  51:   dp4 r4.z, r3.xyzw, r2.xyzw
  52: else 
  53:   mov r2.w, l(1.000000)
  54:   dp4 r4.x, cb1[39].xyzw, r2.xyzw
  55:   dp4 r4.y, cb1[40].xyzw, r2.xyzw
  56:   dp4 r4.z, cb1[41].xyzw, r2.xyzw
  57: endif 
  58: add r3.xyz, r4.xyzx, v6.xyzx
  59: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  60: mul r3.xyz, r1.wwww, r3.xyzx
  61: mul r3.xyz, r1.xyzx, r3.xyzx
  62: exp o3.xyz, -r3.xyzx
  63: mad o2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  64: mov o0.xyzw, r1.xyzw
  65: mov o1.xyz, r0.xyzx
  66: mov o2.w, l(1.000000)
  67: mov o3.w, l(1.000000)
  68: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 40 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb4[0].x
  14: mul r0.yzw, v0.yyyy, cb2[1].xxyz
  15: mad r0.yzw, cb2[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb2[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r0.yzw, cb2[3].xxyz, v0.wwww, r0.yyzw
  18: add o2.xyz, r0.yzwy, -cb3[r0.x + 64].xyzx
  19: mov o3.w, r0.y
  20: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  21: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  22: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  23: dp3 r0.x, r1.xyzx, r1.xyzx
  24: rsq r0.x, r0.x
  25: mul r1.xyz, r0.xxxx, r1.xyzx
  26: mov o3.xyz, r1.xyzx
  27: mov o4.w, r0.z
  28: mov o5.w, r0.w
  29: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul r0.xyz, r0.wwww, r0.xyzx
  35: mul r2.xyz, r1.yzxy, r0.zxyz
  36: mad r1.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
  37: mul r0.w, v4.w, cb2[9].w
  38: mul o4.xyz, r0.wwww, r1.xyzx
  39: mov o5.xyz, r0.xyzx
  40: mul r0.w, r0.y, r0.y
  41: mad r0.w, r0.x, r0.x, -r0.w
  42: mul r1.xyzw, r0.yzzx, r0.xyzz
  43: dp4 r0.x, cb1[42].xyzw, r1.xyzw
  44: dp4 r0.y, cb1[43].xyzw, r1.xyzw
  45: dp4 r0.z, cb1[44].xyzw, r1.xyzw
  46: mad o6.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
  47: mov o6.w, l(0)
  48: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 48 math, 6 temp registers, 7 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_BumpMap" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: mul o1.w, r0.w, cb0[9].x
   2: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   3: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   4: max r0.w, r0.y, r0.x
   5: max r0.w, r0.z, r0.w
   6: add r0.w, -r0.w, l(1.000000)
   7: mul r1.xyz, r0.wwww, r1.xyzx
   8: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
   9: mul r2.x, r2.w, r2.x
  10: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  11: mul r2.xy, r2.xyxx, cb0[8].xxxx
  12: dp2 r0.w, r2.xyxx, r2.xyxx
  13: min r0.w, r0.w, l(1.000000)
  14: add r0.w, -r0.w, l(1.000000)
  15: sqrt r0.w, r0.w
  16: mul r2.yzw, r2.yyyy, v4.xxyz
  17: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  18: mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
  19: dp3 r0.w, r2.xyzx, r2.xyzx
  20: rsq r0.w, r0.w
  21: mul r2.xyz, r0.wwww, r2.xyzx
  22: sample r3.xyzw, v1.xyxx, t3.xyzw, s4
  23: add r0.w, -cb0[9].y, l(1.000000)
  24: mad r1.w, r3.y, cb0[9].y, r0.w
  25: eq r0.w, cb2[0].x, l(1.000000)
  26: if_nz r0.w
  27:   eq r0.w, cb2[0].y, l(1.000000)
  28:   mul r3.xyz, v4.wwww, cb2[2].xyzx
  29:   mad r3.xyz, cb2[1].xyzx, v3.wwww, r3.xyzx
  30:   mad r3.xyz, cb2[3].xyzx, v5.wwww, r3.xyzx
  31:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  32:   mov r4.y, v3.w
  33:   mov r4.z, v4.w
  34:   mov r4.w, v5.w
  35:   movc r3.xyz, r0.wwww, r3.xyzx, r4.yzwy
  36:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  37:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  38:   mul r0.w, r3.y, l(0.250000)
  39:   mul r3.y, cb2[0].z, l(0.500000)
  40:   mad r4.x, -cb2[0].z, l(0.500000), l(0.250000)
  41:   max r0.w, r0.w, r3.y
  42:   min r3.x, r4.x, r0.w
  43:   sample r4.xyzw, r3.xzwx, t4.xyzw, s0
  44:   add r5.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  45:   sample r5.xyzw, r5.xyzx, t4.xyzw, s0
  46:   add r3.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  47:   sample r3.xyzw, r3.xyzx, t4.xyzw, s0
  48:   mov r2.w, l(1.000000)
  49:   dp4 r4.x, r4.xyzw, r2.xyzw
  50:   dp4 r4.y, r5.xyzw, r2.xyzw
  51:   dp4 r4.z, r3.xyzw, r2.xyzw
  52: else 
  53:   mov r2.w, l(1.000000)
  54:   dp4 r4.x, cb1[39].xyzw, r2.xyzw
  55:   dp4 r4.y, cb1[40].xyzw, r2.xyzw
  56:   dp4 r4.z, cb1[41].xyzw, r2.xyzw
  57: endif 
  58: add r3.xyz, r4.xyzx, v6.xyzx
  59: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  60: mul r3.xyz, r1.wwww, r3.xyzx
  61: mul r3.xyz, r1.xyzx, r3.xyzx
  62: exp o3.xyz, -r3.xyzx
  63: mad o2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  64: mov o0.xyzw, r1.xyzw
  65: mov o1.xyz, r0.xyzx
  66: mov o2.w, l(1.000000)
  67: mov o3.w, l(1.000000)
  68: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul r0.xyz, r0.wwww, r0.xyzx
  27: mov o5.xyz, r0.xyzx
  28: mul r0.w, r0.y, r0.y
  29: mad r0.w, r0.x, r0.x, -r0.w
  30: mul r1.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r0.x, cb2[42].xyzw, r1.xyzw
  32: dp4 r0.y, cb2[43].xyzw, r1.xyzw
  33: dp4 r0.z, cb2[44].xyzw, r1.xyzw
  34: mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  35: mov o6.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 37 math, 5 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  10: add r2.x, -cb0[9].y, l(1.000000)
  11: mad r0.w, r2.y, cb0[9].y, r2.x
  12: eq r2.x, cb2[0].x, l(1.000000)
  13: if_nz r2.x
  14:   eq r2.x, cb2[0].y, l(1.000000)
  15:   mul r2.yzw, v4.wwww, cb2[2].xxyz
  16:   mad r2.yzw, cb2[1].xxyz, v3.wwww, r2.yyzw
  17:   mad r2.yzw, cb2[3].xxyz, v5.wwww, r2.yyzw
  18:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  19:   mov r3.y, v3.w
  20:   mov r3.z, v4.w
  21:   mov r3.w, v5.w
  22:   movc r2.xyz, r2.xxxx, r2.yzwy, r3.yzwy
  23:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  24:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  25:   mul r2.y, r2.y, l(0.250000)
  26:   mul r3.x, cb2[0].z, l(0.500000)
  27:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  28:   max r2.y, r2.y, r3.x
  29:   min r2.x, r3.y, r2.y
  30:   sample r3.xyzw, r2.xzwx, t2.xyzw, s0
  31:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  32:   sample r4.xyzw, r4.xyzx, t2.xyzw, s0
  33:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  34:   sample r2.xyzw, r2.xyzx, t2.xyzw, s0
  35:   mov r1.w, l(1.000000)
  36:   dp4 r3.x, r3.xyzw, r1.xyzw
  37:   dp4 r3.y, r4.xyzw, r1.xyzw
  38:   dp4 r3.z, r2.xyzw, r1.xyzw
  39: else 
  40:   mov r1.w, l(1.000000)
  41:   dp4 r3.x, cb1[39].xyzw, r1.xyzw
  42:   dp4 r3.y, cb1[40].xyzw, r1.xyzw
  43:   dp4 r3.z, cb1[41].xyzw, r1.xyzw
  44: endif 
  45: add r2.xyz, r3.xyzx, v6.xyzx
  46: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: mul r2.xyz, r0.wwww, r2.xyzx
  48: mul r2.xyz, r0.xyzx, r2.xyzx
  49: exp o3.xyz, -r2.xyzx
  50: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  51: mov o0.xyzw, r0.xyzw
  52: mov o1.xyz, cb0[3].xyzx
  53: mov o1.w, cb0[8].w
  54: mov o2.w, l(1.000000)
  55: mov o3.w, l(1.000000)
  56: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb4[0].x
  14: mul r0.yzw, v0.yyyy, cb2[1].xxyz
  15: mad r0.yzw, cb2[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb2[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r0.yzwy
  18: add o2.xyz, r1.xyzx, -cb3[r0.x + 64].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul r0.xyz, r0.wwww, r0.xyzx
  29: mov o5.xyz, r0.xyzx
  30: mul r0.w, r0.y, r0.y
  31: mad r0.w, r0.x, r0.x, -r0.w
  32: mul r1.xyzw, r0.yzzx, r0.xyzz
  33: dp4 r0.x, cb1[42].xyzw, r1.xyzw
  34: dp4 r0.y, cb1[43].xyzw, r1.xyzw
  35: dp4 r0.z, cb1[44].xyzw, r1.xyzw
  36: mad o6.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
  37: mov o6.w, l(0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 37 math, 5 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  10: add r2.x, -cb0[9].y, l(1.000000)
  11: mad r0.w, r2.y, cb0[9].y, r2.x
  12: eq r2.x, cb2[0].x, l(1.000000)
  13: if_nz r2.x
  14:   eq r2.x, cb2[0].y, l(1.000000)
  15:   mul r2.yzw, v4.wwww, cb2[2].xxyz
  16:   mad r2.yzw, cb2[1].xxyz, v3.wwww, r2.yyzw
  17:   mad r2.yzw, cb2[3].xxyz, v5.wwww, r2.yyzw
  18:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  19:   mov r3.y, v3.w
  20:   mov r3.z, v4.w
  21:   mov r3.w, v5.w
  22:   movc r2.xyz, r2.xxxx, r2.yzwy, r3.yzwy
  23:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  24:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  25:   mul r2.y, r2.y, l(0.250000)
  26:   mul r3.x, cb2[0].z, l(0.500000)
  27:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  28:   max r2.y, r2.y, r3.x
  29:   min r2.x, r3.y, r2.y
  30:   sample r3.xyzw, r2.xzwx, t2.xyzw, s0
  31:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  32:   sample r4.xyzw, r4.xyzx, t2.xyzw, s0
  33:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  34:   sample r2.xyzw, r2.xyzx, t2.xyzw, s0
  35:   mov r1.w, l(1.000000)
  36:   dp4 r3.x, r3.xyzw, r1.xyzw
  37:   dp4 r3.y, r4.xyzw, r1.xyzw
  38:   dp4 r3.z, r2.xyzw, r1.xyzw
  39: else 
  40:   mov r1.w, l(1.000000)
  41:   dp4 r3.x, cb1[39].xyzw, r1.xyzw
  42:   dp4 r3.y, cb1[40].xyzw, r1.xyzw
  43:   dp4 r3.z, cb1[41].xyzw, r1.xyzw
  44: endif 
  45: add r2.xyz, r3.xyzx, v6.xyzx
  46: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: mul r2.xyz, r0.wwww, r2.xyzx
  48: mul r2.xyz, r0.xyzx, r2.xyzx
  49: exp o3.xyz, -r2.xyzx
  50: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  51: mov o0.xyzw, r0.xyzw
  52: mov o1.xyz, cb0[3].xyzx
  53: mov o1.w, cb0[8].w
  54: mov o2.w, l(1.000000)
  55: mov o3.w, l(1.000000)
  56: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTMAP_ON 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul o5.xyz, r0.wwww, r0.xyzx
  27: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  28: mov o6.zw, l(0,0,0,0)
  29: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 15 math, 3 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set 2D Texture "unity_Lightmap" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: sample r1.xyzw, v1.xyxx, t1.xyzw, s2
   3: max r0.w, r1.y, r1.x
   4: max r0.w, r1.z, r0.w
   5: add r0.w, -r0.w, l(1.000000)
   6: mul r0.xyz, r0.wwww, r0.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: add r2.x, -cb0[9].y, l(1.000000)
   9: mad r0.w, r2.y, cb0[9].y, r2.x
  10: mov o0.xyzw, r0.xyzw
  11: mul o1.w, r1.w, cb0[9].x
  12: mov o1.xyz, r1.xyzx
  13: dp3 r1.x, v5.xyzx, v5.xyzx
  14: rsq r1.x, r1.x
  15: mul r1.xyz, r1.xxxx, v5.xyzx
  16: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  17: mov o2.w, l(1.000000)
  18: sample r1.xyzw, v6.xyxx, t3.xyzw, s0
  19: mul r1.xyz, r0.wwww, r1.xyzx
  20: mul r0.xyz, r0.xyzx, r1.xyzx
  21: exp o3.xyz, -r0.xyzx
  22: mov o3.w, l(1.000000)
  23: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTMAP_ON UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  18: add o2.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  30: mov o6.zw, l(0,0,0,0)
  31: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 15 math, 3 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set 2D Texture "unity_Lightmap" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: sample r1.xyzw, v1.xyxx, t1.xyzw, s2
   3: max r0.w, r1.y, r1.x
   4: max r0.w, r1.z, r0.w
   5: add r0.w, -r0.w, l(1.000000)
   6: mul r0.xyz, r0.wwww, r0.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: add r2.x, -cb0[9].y, l(1.000000)
   9: mad r0.w, r2.y, cb0[9].y, r2.x
  10: mov o0.xyzw, r0.xyzw
  11: mul o1.w, r1.w, cb0[9].x
  12: mov o1.xyz, r1.xyzx
  13: dp3 r1.x, v5.xyzx, v5.xyzx
  14: rsq r1.x, r1.x
  15: mul r1.xyz, r1.xxxx, v5.xyzx
  16: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  17: mov o2.w, l(1.000000)
  18: sample r1.xyzw, v6.xyxx, t3.xyzw, s0
  19: mul r1.xyz, r0.wwww, r1.xyzx
  20: mul r0.xyz, r0.xyzx, r1.xyzx
  21: exp o3.xyz, -r0.xyzx
  22: mov o3.w, l(1.000000)
  23: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTMAP_ON 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  19: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  20: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.x, r2.xyzx, r2.xyzx
  29: rsq r0.x, r0.x
  30: mul r2.xyz, r0.xxxx, r2.xyzx
  31: mul r3.xyz, r1.yzxy, r2.zxyz
  32: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  33: mov o5.xyz, r2.xyzx
  34: mul r0.x, v4.w, cb2[9].w
  35: mul o4.xyz, r0.xxxx, r1.xyzx
  36: mov o4.w, r0.y
  37: mov o5.w, r0.z
  38: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  39: mov o6.zw, l(0,0,0,0)
  40: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 25 math, 3 temp registers, 5 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_BumpMap" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set 2D Texture "unity_Lightmap" to slot 4 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: sample r1.xyzw, v1.xyxx, t1.xyzw, s3
   3: max r0.w, r1.y, r1.x
   4: max r0.w, r1.z, r0.w
   5: add r0.w, -r0.w, l(1.000000)
   6: mul r0.xyz, r0.wwww, r0.xyzx
   7: sample r2.xyzw, v1.xyxx, t3.xyzw, s4
   8: add r2.x, -cb0[9].y, l(1.000000)
   9: mad r0.w, r2.y, cb0[9].y, r2.x
  10: mov o0.xyzw, r0.xyzw
  11: mul o1.w, r1.w, cb0[9].x
  12: mov o1.xyz, r1.xyzx
  13: sample r1.xyzw, v1.xyxx, t2.xyzw, s2
  14: mul r1.x, r1.w, r1.x
  15: mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  16: mul r1.xy, r1.xyxx, cb0[8].xxxx
  17: mul r2.xyz, r1.yyyy, v4.xyzx
  18: mad r2.xyz, v3.xyzx, r1.xxxx, r2.xyzx
  19: dp2 r1.x, r1.xyxx, r1.xyxx
  20: min r1.x, r1.x, l(1.000000)
  21: add r1.x, -r1.x, l(1.000000)
  22: sqrt r1.x, r1.x
  23: mad r1.xyz, v5.xyzx, r1.xxxx, r2.xyzx
  24: dp3 r1.w, r1.xyzx, r1.xyzx
  25: rsq r1.w, r1.w
  26: mul r1.xyz, r1.wwww, r1.xyzx
  27: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  28: mov o2.w, l(1.000000)
  29: sample r1.xyzw, v6.xyxx, t4.xyzw, s0
  30: mul r1.xyz, r0.wwww, r1.xyzx
  31: mul r0.xyz, r0.xyzx, r1.xyzx
  32: exp o3.xyz, -r0.xyzx
  33: mov o3.w, l(1.000000)
  34: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTMAP_ON UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r0.yzw, cb1[3].xxyz, v0.wwww, r0.yyzw
  18: add o2.xyz, r0.yzwy, -cb2[r0.x + 64].xyzx
  19: mov o3.w, r0.y
  20: mul r1.xyz, v4.yyyy, cb1[1].xyzx
  21: mad r1.xyz, cb1[0].xyzx, v4.xxxx, r1.xyzx
  22: mad r1.xyz, cb1[2].xyzx, v4.zzzz, r1.xyzx
  23: dp3 r0.x, r1.xyzx, r1.xyzx
  24: rsq r0.x, r0.x
  25: mul r1.xyz, r0.xxxx, r1.xyzx
  26: mov o3.xyz, r1.xyzx
  27: dp3 r2.x, v1.xyzx, cb1[4].xyzx
  28: dp3 r2.y, v1.xyzx, cb1[5].xyzx
  29: dp3 r2.z, v1.xyzx, cb1[6].xyzx
  30: dp3 r0.x, r2.xyzx, r2.xyzx
  31: rsq r0.x, r0.x
  32: mul r2.xyz, r0.xxxx, r2.xyzx
  33: mul r3.xyz, r1.yzxy, r2.zxyz
  34: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  35: mov o5.xyz, r2.xyzx
  36: mul r0.x, v4.w, cb1[9].w
  37: mul o4.xyz, r0.xxxx, r1.xyzx
  38: mov o4.w, r0.z
  39: mov o5.w, r0.w
  40: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  41: mov o6.zw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 25 math, 3 temp registers, 5 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_BumpMap" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set 2D Texture "unity_Lightmap" to slot 4 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: sample r1.xyzw, v1.xyxx, t1.xyzw, s3
   3: max r0.w, r1.y, r1.x
   4: max r0.w, r1.z, r0.w
   5: add r0.w, -r0.w, l(1.000000)
   6: mul r0.xyz, r0.wwww, r0.xyzx
   7: sample r2.xyzw, v1.xyxx, t3.xyzw, s4
   8: add r2.x, -cb0[9].y, l(1.000000)
   9: mad r0.w, r2.y, cb0[9].y, r2.x
  10: mov o0.xyzw, r0.xyzw
  11: mul o1.w, r1.w, cb0[9].x
  12: mov o1.xyz, r1.xyzx
  13: sample r1.xyzw, v1.xyxx, t2.xyzw, s2
  14: mul r1.x, r1.w, r1.x
  15: mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  16: mul r1.xy, r1.xyxx, cb0[8].xxxx
  17: mul r2.xyz, r1.yyyy, v4.xyzx
  18: mad r2.xyz, v3.xyzx, r1.xxxx, r2.xyzx
  19: dp2 r1.x, r1.xyxx, r1.xyxx
  20: min r1.x, r1.x, l(1.000000)
  21: add r1.x, -r1.x, l(1.000000)
  22: sqrt r1.x, r1.x
  23: mad r1.xyz, v5.xyzx, r1.xxxx, r2.xyzx
  24: dp3 r1.w, r1.xyzx, r1.xyzx
  25: rsq r1.w, r1.w
  26: mul r1.xyz, r1.wwww, r1.xyzx
  27: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  28: mov o2.w, l(1.000000)
  29: sample r1.xyzw, v6.xyxx, t4.xyzw, s0
  30: mul r1.xyz, r0.wwww, r1.xyzx
  31: mul r0.xyz, r0.xyzx, r1.xyzx
  32: exp o3.xyz, -r0.xyzx
  33: mov o3.w, l(1.000000)
  34: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTMAP_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul o5.xyz, r0.wwww, r0.xyzx
  27: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  28: mov o6.zw, l(0,0,0,0)
  29: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 14 math, 2 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 2
Set 2D Texture "unity_Lightmap" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: max r0.x, cb0[3].y, cb0[3].x
   1: max r0.x, r0.x, cb0[3].z
   2: add r0.x, -r0.x, l(1.000000)
   3: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   4: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   5: mul r0.xyz, r0.xxxx, r0.yzwy
   6: sample r1.xyzw, v1.xyxx, t1.xyzw, s2
   7: add r1.x, -cb0[9].y, l(1.000000)
   8: mad r0.w, r1.y, cb0[9].y, r1.x
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.xyz, cb0[3].xyzx
  11: mov o1.w, cb0[8].w
  12: dp3 r1.x, v5.xyzx, v5.xyzx
  13: rsq r1.x, r1.x
  14: mul r1.xyz, r1.xxxx, v5.xyzx
  15: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: mov o2.w, l(1.000000)
  17: sample r1.xyzw, v6.xyxx, t2.xyzw, s0
  18: mul r1.xyz, r0.wwww, r1.xyzx
  19: mul r0.xyz, r0.xyzx, r1.xyzx
  20: exp o3.xyz, -r0.xyzx
  21: mov o3.w, l(1.000000)
  22: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTMAP_ON UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  18: add o2.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  30: mov o6.zw, l(0,0,0,0)
  31: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 14 math, 2 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 2
Set 2D Texture "unity_Lightmap" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: max r0.x, cb0[3].y, cb0[3].x
   1: max r0.x, r0.x, cb0[3].z
   2: add r0.x, -r0.x, l(1.000000)
   3: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   4: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   5: mul r0.xyz, r0.xxxx, r0.yzwy
   6: sample r1.xyzw, v1.xyxx, t1.xyzw, s2
   7: add r1.x, -cb0[9].y, l(1.000000)
   8: mad r0.w, r1.y, cb0[9].y, r1.x
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.xyz, cb0[3].xyzx
  11: mov o1.w, cb0[8].w
  12: dp3 r1.x, v5.xyzx, v5.xyzx
  13: rsq r1.x, r1.x
  14: mul r1.xyz, r1.xxxx, v5.xyzx
  15: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: mov o2.w, l(1.000000)
  17: sample r1.xyzw, v6.xyxx, t2.xyzw, s0
  18: mul r1.xyz, r0.wwww, r1.xyzx
  19: mul r0.xyz, r0.xyzx, r1.xyzx
  20: exp o3.xyz, -r0.xyzx
  21: mov o3.w, l(1.000000)
  22: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTMAP_ON LIGHTPROBE_SH 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul o5.xyz, r0.wwww, r0.xyzx
  27: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  28: mov o6.zw, l(0,0,0,0)
  29: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 46 math, 6 temp registers, 7 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 4
Set 2D Texture "unity_Lightmap" to slot 3 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: mul o1.w, r0.w, cb0[9].x
   2: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   3: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   4: max r0.w, r0.y, r0.x
   5: max r0.w, r0.z, r0.w
   6: add r0.w, -r0.w, l(1.000000)
   7: mul r1.xyz, r0.wwww, r1.xyzx
   8: dp3 r0.w, v5.xyzx, v5.xyzx
   9: rsq r0.w, r0.w
  10: mul r2.xyz, r0.wwww, v5.xyzx
  11: sample r3.xyzw, v1.xyxx, t2.xyzw, s4
  12: add r0.w, -cb0[9].y, l(1.000000)
  13: mad r1.w, r3.y, cb0[9].y, r0.w
  14: eq r0.w, cb2[0].x, l(1.000000)
  15: if_nz r0.w
  16:   eq r0.w, cb2[0].y, l(1.000000)
  17:   mul r3.xyz, v4.wwww, cb2[2].xyzx
  18:   mad r3.xyz, cb2[1].xyzx, v3.wwww, r3.xyzx
  19:   mad r3.xyz, cb2[3].xyzx, v5.wwww, r3.xyzx
  20:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  21:   mov r4.y, v3.w
  22:   mov r4.z, v4.w
  23:   mov r4.w, v5.w
  24:   movc r3.xyz, r0.wwww, r3.xyzx, r4.yzwy
  25:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  26:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  27:   mul r0.w, r3.y, l(0.250000)
  28:   mul r3.y, cb2[0].z, l(0.500000)
  29:   mad r4.x, -cb2[0].z, l(0.500000), l(0.250000)
  30:   max r0.w, r0.w, r3.y
  31:   min r3.x, r4.x, r0.w
  32:   sample r4.xyzw, r3.xzwx, t4.xyzw, s1
  33:   add r5.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  34:   sample r5.xyzw, r5.xyzx, t4.xyzw, s1
  35:   add r3.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  36:   sample r3.xyzw, r3.xyzx, t4.xyzw, s1
  37:   mov r2.w, l(1.000000)
  38:   dp4 r4.x, r4.xyzw, r2.xyzw
  39:   dp4 r4.y, r5.xyzw, r2.xyzw
  40:   dp4 r4.z, r3.xyzw, r2.xyzw
  41: else 
  42:   mov r2.w, l(1.000000)
  43:   dp4 r4.x, cb1[39].xyzw, r2.xyzw
  44:   dp4 r4.y, cb1[40].xyzw, r2.xyzw
  45:   dp4 r4.z, cb1[41].xyzw, r2.xyzw
  46: endif 
  47: mul r3.xyzw, r2.yzzx, r2.xyzz
  48: dp4 r5.x, cb1[42].xyzw, r3.xyzw
  49: dp4 r5.y, cb1[43].xyzw, r3.xyzw
  50: dp4 r5.z, cb1[44].xyzw, r3.xyzw
  51: mul r0.w, r2.y, r2.y
  52: mad r0.w, r2.x, r2.x, -r0.w
  53: mad r3.xyz, cb1[45].xyzx, r0.wwww, r5.xyzx
  54: add r3.xyz, r3.xyzx, r4.xyzx
  55: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: sample r4.xyzw, v6.xyxx, t3.xyzw, s0
  57: add r3.xyz, r3.xyzx, r4.xyzx
  58: mul r3.xyz, r1.wwww, r3.xyzx
  59: mul r3.xyz, r1.xyzx, r3.xyzx
  60: exp o3.xyz, -r3.xyzx
  61: mad o2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  62: mov o0.xyzw, r1.xyzw
  63: mov o1.xyz, r0.xyzx
  64: mov o2.w, l(1.000000)
  65: mov o3.w, l(1.000000)
  66: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTMAP_ON LIGHTPROBE_SH UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  18: add o2.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  30: mov o6.zw, l(0,0,0,0)
  31: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 46 math, 6 temp registers, 7 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 4
Set 2D Texture "unity_Lightmap" to slot 3 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: mul o1.w, r0.w, cb0[9].x
   2: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   3: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   4: max r0.w, r0.y, r0.x
   5: max r0.w, r0.z, r0.w
   6: add r0.w, -r0.w, l(1.000000)
   7: mul r1.xyz, r0.wwww, r1.xyzx
   8: dp3 r0.w, v5.xyzx, v5.xyzx
   9: rsq r0.w, r0.w
  10: mul r2.xyz, r0.wwww, v5.xyzx
  11: sample r3.xyzw, v1.xyxx, t2.xyzw, s4
  12: add r0.w, -cb0[9].y, l(1.000000)
  13: mad r1.w, r3.y, cb0[9].y, r0.w
  14: eq r0.w, cb2[0].x, l(1.000000)
  15: if_nz r0.w
  16:   eq r0.w, cb2[0].y, l(1.000000)
  17:   mul r3.xyz, v4.wwww, cb2[2].xyzx
  18:   mad r3.xyz, cb2[1].xyzx, v3.wwww, r3.xyzx
  19:   mad r3.xyz, cb2[3].xyzx, v5.wwww, r3.xyzx
  20:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  21:   mov r4.y, v3.w
  22:   mov r4.z, v4.w
  23:   mov r4.w, v5.w
  24:   movc r3.xyz, r0.wwww, r3.xyzx, r4.yzwy
  25:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  26:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  27:   mul r0.w, r3.y, l(0.250000)
  28:   mul r3.y, cb2[0].z, l(0.500000)
  29:   mad r4.x, -cb2[0].z, l(0.500000), l(0.250000)
  30:   max r0.w, r0.w, r3.y
  31:   min r3.x, r4.x, r0.w
  32:   sample r4.xyzw, r3.xzwx, t4.xyzw, s1
  33:   add r5.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  34:   sample r5.xyzw, r5.xyzx, t4.xyzw, s1
  35:   add r3.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  36:   sample r3.xyzw, r3.xyzx, t4.xyzw, s1
  37:   mov r2.w, l(1.000000)
  38:   dp4 r4.x, r4.xyzw, r2.xyzw
  39:   dp4 r4.y, r5.xyzw, r2.xyzw
  40:   dp4 r4.z, r3.xyzw, r2.xyzw
  41: else 
  42:   mov r2.w, l(1.000000)
  43:   dp4 r4.x, cb1[39].xyzw, r2.xyzw
  44:   dp4 r4.y, cb1[40].xyzw, r2.xyzw
  45:   dp4 r4.z, cb1[41].xyzw, r2.xyzw
  46: endif 
  47: mul r3.xyzw, r2.yzzx, r2.xyzz
  48: dp4 r5.x, cb1[42].xyzw, r3.xyzw
  49: dp4 r5.y, cb1[43].xyzw, r3.xyzw
  50: dp4 r5.z, cb1[44].xyzw, r3.xyzw
  51: mul r0.w, r2.y, r2.y
  52: mad r0.w, r2.x, r2.x, -r0.w
  53: mad r3.xyz, cb1[45].xyzx, r0.wwww, r5.xyzx
  54: add r3.xyz, r3.xyzx, r4.xyzx
  55: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: sample r4.xyzw, v6.xyxx, t3.xyzw, s0
  57: add r3.xyz, r3.xyzx, r4.xyzx
  58: mul r3.xyz, r1.wwww, r3.xyzx
  59: mul r3.xyz, r1.xyzx, r3.xyzx
  60: exp o3.xyz, -r3.xyzx
  61: mad o2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  62: mov o0.xyzw, r1.xyzw
  63: mov o1.xyz, r0.xyzx
  64: mov o2.w, l(1.000000)
  65: mov o3.w, l(1.000000)
  66: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTMAP_ON LIGHTPROBE_SH 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  19: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  20: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.x, r2.xyzx, r2.xyzx
  29: rsq r0.x, r0.x
  30: mul r2.xyz, r0.xxxx, r2.xyzx
  31: mul r3.xyz, r1.yzxy, r2.zxyz
  32: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  33: mov o5.xyz, r2.xyzx
  34: mul r0.x, v4.w, cb2[9].w
  35: mul o4.xyz, r0.xxxx, r1.xyzx
  36: mov o4.w, r0.y
  37: mov o5.w, r0.z
  38: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  39: mov o6.zw, l(0,0,0,0)
  40: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 56 math, 6 temp registers, 8 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 5
Set 2D Texture "unity_Lightmap" to slot 4 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: mul o1.w, r0.w, cb0[9].x
   2: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   3: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   4: max r0.w, r0.y, r0.x
   5: max r0.w, r0.z, r0.w
   6: add r0.w, -r0.w, l(1.000000)
   7: mul r1.xyz, r0.wwww, r1.xyzx
   8: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   9: mul r2.x, r2.w, r2.x
  10: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  11: mul r2.xy, r2.xyxx, cb0[8].xxxx
  12: dp2 r0.w, r2.xyxx, r2.xyxx
  13: min r0.w, r0.w, l(1.000000)
  14: add r0.w, -r0.w, l(1.000000)
  15: sqrt r0.w, r0.w
  16: mul r2.yzw, r2.yyyy, v4.xxyz
  17: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  18: mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
  19: dp3 r0.w, r2.xyzx, r2.xyzx
  20: rsq r0.w, r0.w
  21: mul r2.xyz, r0.wwww, r2.xyzx
  22: sample r3.xyzw, v1.xyxx, t3.xyzw, s5
  23: add r0.w, -cb0[9].y, l(1.000000)
  24: mad r1.w, r3.y, cb0[9].y, r0.w
  25: eq r0.w, cb2[0].x, l(1.000000)
  26: if_nz r0.w
  27:   eq r0.w, cb2[0].y, l(1.000000)
  28:   mul r3.xyz, v4.wwww, cb2[2].xyzx
  29:   mad r3.xyz, cb2[1].xyzx, v3.wwww, r3.xyzx
  30:   mad r3.xyz, cb2[3].xyzx, v5.wwww, r3.xyzx
  31:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  32:   mov r4.y, v3.w
  33:   mov r4.z, v4.w
  34:   mov r4.w, v5.w
  35:   movc r3.xyz, r0.wwww, r3.xyzx, r4.yzwy
  36:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  37:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  38:   mul r0.w, r3.y, l(0.250000)
  39:   mul r3.y, cb2[0].z, l(0.500000)
  40:   mad r4.x, -cb2[0].z, l(0.500000), l(0.250000)
  41:   max r0.w, r0.w, r3.y
  42:   min r3.x, r4.x, r0.w
  43:   sample r4.xyzw, r3.xzwx, t5.xyzw, s1
  44:   add r5.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  45:   sample r5.xyzw, r5.xyzx, t5.xyzw, s1
  46:   add r3.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  47:   sample r3.xyzw, r3.xyzx, t5.xyzw, s1
  48:   mov r2.w, l(1.000000)
  49:   dp4 r4.x, r4.xyzw, r2.xyzw
  50:   dp4 r4.y, r5.xyzw, r2.xyzw
  51:   dp4 r4.z, r3.xyzw, r2.xyzw
  52: else 
  53:   mov r2.w, l(1.000000)
  54:   dp4 r4.x, cb1[39].xyzw, r2.xyzw
  55:   dp4 r4.y, cb1[40].xyzw, r2.xyzw
  56:   dp4 r4.z, cb1[41].xyzw, r2.xyzw
  57: endif 
  58: mul r3.xyzw, r2.yzzx, r2.xyzz
  59: dp4 r5.x, cb1[42].xyzw, r3.xyzw
  60: dp4 r5.y, cb1[43].xyzw, r3.xyzw
  61: dp4 r5.z, cb1[44].xyzw, r3.xyzw
  62: mul r0.w, r2.y, r2.y
  63: mad r0.w, r2.x, r2.x, -r0.w
  64: mad r3.xyz, cb1[45].xyzx, r0.wwww, r5.xyzx
  65: add r3.xyz, r3.xyzx, r4.xyzx
  66: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  67: sample r4.xyzw, v6.xyxx, t4.xyzw, s0
  68: add r3.xyz, r3.xyzx, r4.xyzx
  69: mul r3.xyz, r1.wwww, r3.xyzx
  70: mul r3.xyz, r1.xyzx, r3.xyzx
  71: exp o3.xyz, -r3.xyzx
  72: mad o2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  73: mov o0.xyzw, r1.xyzw
  74: mov o1.xyz, r0.xyzx
  75: mov o2.w, l(1.000000)
  76: mov o3.w, l(1.000000)
  77: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTMAP_ON LIGHTPROBE_SH UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r0.yzw, cb1[3].xxyz, v0.wwww, r0.yyzw
  18: add o2.xyz, r0.yzwy, -cb2[r0.x + 64].xyzx
  19: mov o3.w, r0.y
  20: mul r1.xyz, v4.yyyy, cb1[1].xyzx
  21: mad r1.xyz, cb1[0].xyzx, v4.xxxx, r1.xyzx
  22: mad r1.xyz, cb1[2].xyzx, v4.zzzz, r1.xyzx
  23: dp3 r0.x, r1.xyzx, r1.xyzx
  24: rsq r0.x, r0.x
  25: mul r1.xyz, r0.xxxx, r1.xyzx
  26: mov o3.xyz, r1.xyzx
  27: dp3 r2.x, v1.xyzx, cb1[4].xyzx
  28: dp3 r2.y, v1.xyzx, cb1[5].xyzx
  29: dp3 r2.z, v1.xyzx, cb1[6].xyzx
  30: dp3 r0.x, r2.xyzx, r2.xyzx
  31: rsq r0.x, r0.x
  32: mul r2.xyz, r0.xxxx, r2.xyzx
  33: mul r3.xyz, r1.yzxy, r2.zxyz
  34: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  35: mov o5.xyz, r2.xyzx
  36: mul r0.x, v4.w, cb1[9].w
  37: mul o4.xyz, r0.xxxx, r1.xyzx
  38: mov o4.w, r0.z
  39: mov o5.w, r0.w
  40: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  41: mov o6.zw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 56 math, 6 temp registers, 8 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 5
Set 2D Texture "unity_Lightmap" to slot 4 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: mul o1.w, r0.w, cb0[9].x
   2: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   3: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   4: max r0.w, r0.y, r0.x
   5: max r0.w, r0.z, r0.w
   6: add r0.w, -r0.w, l(1.000000)
   7: mul r1.xyz, r0.wwww, r1.xyzx
   8: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   9: mul r2.x, r2.w, r2.x
  10: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  11: mul r2.xy, r2.xyxx, cb0[8].xxxx
  12: dp2 r0.w, r2.xyxx, r2.xyxx
  13: min r0.w, r0.w, l(1.000000)
  14: add r0.w, -r0.w, l(1.000000)
  15: sqrt r0.w, r0.w
  16: mul r2.yzw, r2.yyyy, v4.xxyz
  17: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  18: mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
  19: dp3 r0.w, r2.xyzx, r2.xyzx
  20: rsq r0.w, r0.w
  21: mul r2.xyz, r0.wwww, r2.xyzx
  22: sample r3.xyzw, v1.xyxx, t3.xyzw, s5
  23: add r0.w, -cb0[9].y, l(1.000000)
  24: mad r1.w, r3.y, cb0[9].y, r0.w
  25: eq r0.w, cb2[0].x, l(1.000000)
  26: if_nz r0.w
  27:   eq r0.w, cb2[0].y, l(1.000000)
  28:   mul r3.xyz, v4.wwww, cb2[2].xyzx
  29:   mad r3.xyz, cb2[1].xyzx, v3.wwww, r3.xyzx
  30:   mad r3.xyz, cb2[3].xyzx, v5.wwww, r3.xyzx
  31:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  32:   mov r4.y, v3.w
  33:   mov r4.z, v4.w
  34:   mov r4.w, v5.w
  35:   movc r3.xyz, r0.wwww, r3.xyzx, r4.yzwy
  36:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  37:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  38:   mul r0.w, r3.y, l(0.250000)
  39:   mul r3.y, cb2[0].z, l(0.500000)
  40:   mad r4.x, -cb2[0].z, l(0.500000), l(0.250000)
  41:   max r0.w, r0.w, r3.y
  42:   min r3.x, r4.x, r0.w
  43:   sample r4.xyzw, r3.xzwx, t5.xyzw, s1
  44:   add r5.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  45:   sample r5.xyzw, r5.xyzx, t5.xyzw, s1
  46:   add r3.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  47:   sample r3.xyzw, r3.xyzx, t5.xyzw, s1
  48:   mov r2.w, l(1.000000)
  49:   dp4 r4.x, r4.xyzw, r2.xyzw
  50:   dp4 r4.y, r5.xyzw, r2.xyzw
  51:   dp4 r4.z, r3.xyzw, r2.xyzw
  52: else 
  53:   mov r2.w, l(1.000000)
  54:   dp4 r4.x, cb1[39].xyzw, r2.xyzw
  55:   dp4 r4.y, cb1[40].xyzw, r2.xyzw
  56:   dp4 r4.z, cb1[41].xyzw, r2.xyzw
  57: endif 
  58: mul r3.xyzw, r2.yzzx, r2.xyzz
  59: dp4 r5.x, cb1[42].xyzw, r3.xyzw
  60: dp4 r5.y, cb1[43].xyzw, r3.xyzw
  61: dp4 r5.z, cb1[44].xyzw, r3.xyzw
  62: mul r0.w, r2.y, r2.y
  63: mad r0.w, r2.x, r2.x, -r0.w
  64: mad r3.xyz, cb1[45].xyzx, r0.wwww, r5.xyzx
  65: add r3.xyz, r3.xyzx, r4.xyzx
  66: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  67: sample r4.xyzw, v6.xyxx, t4.xyzw, s0
  68: add r3.xyz, r3.xyzx, r4.xyzx
  69: mul r3.xyz, r1.wwww, r3.xyzx
  70: mul r3.xyz, r1.xyzx, r3.xyzx
  71: exp o3.xyz, -r3.xyzx
  72: mad o2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  73: mov o0.xyzw, r1.xyzw
  74: mov o1.xyz, r0.xyzx
  75: mov o2.w, l(1.000000)
  76: mov o3.w, l(1.000000)
  77: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTMAP_ON LIGHTPROBE_SH 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul o5.xyz, r0.wwww, r0.xyzx
  27: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  28: mov o6.zw, l(0,0,0,0)
  29: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 45 math, 5 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 3
Set 2D Texture "unity_Lightmap" to slot 2 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  10: add r2.x, -cb0[9].y, l(1.000000)
  11: mad r0.w, r2.y, cb0[9].y, r2.x
  12: eq r2.x, cb2[0].x, l(1.000000)
  13: if_nz r2.x
  14:   eq r2.x, cb2[0].y, l(1.000000)
  15:   mul r2.yzw, v4.wwww, cb2[2].xxyz
  16:   mad r2.yzw, cb2[1].xxyz, v3.wwww, r2.yyzw
  17:   mad r2.yzw, cb2[3].xxyz, v5.wwww, r2.yyzw
  18:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  19:   mov r3.y, v3.w
  20:   mov r3.z, v4.w
  21:   mov r3.w, v5.w
  22:   movc r2.xyz, r2.xxxx, r2.yzwy, r3.yzwy
  23:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  24:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  25:   mul r2.y, r2.y, l(0.250000)
  26:   mul r3.x, cb2[0].z, l(0.500000)
  27:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  28:   max r2.y, r2.y, r3.x
  29:   min r2.x, r3.y, r2.y
  30:   sample r3.xyzw, r2.xzwx, t3.xyzw, s1
  31:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  32:   sample r4.xyzw, r4.xyzx, t3.xyzw, s1
  33:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  34:   sample r2.xyzw, r2.xyzx, t3.xyzw, s1
  35:   mov r1.w, l(1.000000)
  36:   dp4 r3.x, r3.xyzw, r1.xyzw
  37:   dp4 r3.y, r4.xyzw, r1.xyzw
  38:   dp4 r3.z, r2.xyzw, r1.xyzw
  39: else 
  40:   mov r1.w, l(1.000000)
  41:   dp4 r3.x, cb1[39].xyzw, r1.xyzw
  42:   dp4 r3.y, cb1[40].xyzw, r1.xyzw
  43:   dp4 r3.z, cb1[41].xyzw, r1.xyzw
  44: endif 
  45: mul r2.xyzw, r1.yzzx, r1.xyzz
  46: dp4 r4.x, cb1[42].xyzw, r2.xyzw
  47: dp4 r4.y, cb1[43].xyzw, r2.xyzw
  48: dp4 r4.z, cb1[44].xyzw, r2.xyzw
  49: mul r1.w, r1.y, r1.y
  50: mad r1.w, r1.x, r1.x, -r1.w
  51: mad r2.xyz, cb1[45].xyzx, r1.wwww, r4.xyzx
  52: add r2.xyz, r2.xyzx, r3.xyzx
  53: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  54: sample r3.xyzw, v6.xyxx, t2.xyzw, s0
  55: add r2.xyz, r2.xyzx, r3.xyzx
  56: mul r2.xyz, r0.wwww, r2.xyzx
  57: mul r2.xyz, r0.xyzx, r2.xyzx
  58: exp o3.xyz, -r2.xyzx
  59: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  60: mov o0.xyzw, r0.xyzw
  61: mov o1.xyz, cb0[3].xyzx
  62: mov o1.w, cb0[8].w
  63: mov o2.w, l(1.000000)
  64: mov o3.w, l(1.000000)
  65: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTMAP_ON LIGHTPROBE_SH UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  18: add o2.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  30: mov o6.zw, l(0,0,0,0)
  31: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 45 math, 5 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 3
Set 2D Texture "unity_Lightmap" to slot 2 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  10: add r2.x, -cb0[9].y, l(1.000000)
  11: mad r0.w, r2.y, cb0[9].y, r2.x
  12: eq r2.x, cb2[0].x, l(1.000000)
  13: if_nz r2.x
  14:   eq r2.x, cb2[0].y, l(1.000000)
  15:   mul r2.yzw, v4.wwww, cb2[2].xxyz
  16:   mad r2.yzw, cb2[1].xxyz, v3.wwww, r2.yyzw
  17:   mad r2.yzw, cb2[3].xxyz, v5.wwww, r2.yyzw
  18:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  19:   mov r3.y, v3.w
  20:   mov r3.z, v4.w
  21:   mov r3.w, v5.w
  22:   movc r2.xyz, r2.xxxx, r2.yzwy, r3.yzwy
  23:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  24:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  25:   mul r2.y, r2.y, l(0.250000)
  26:   mul r3.x, cb2[0].z, l(0.500000)
  27:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  28:   max r2.y, r2.y, r3.x
  29:   min r2.x, r3.y, r2.y
  30:   sample r3.xyzw, r2.xzwx, t3.xyzw, s1
  31:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  32:   sample r4.xyzw, r4.xyzx, t3.xyzw, s1
  33:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  34:   sample r2.xyzw, r2.xyzx, t3.xyzw, s1
  35:   mov r1.w, l(1.000000)
  36:   dp4 r3.x, r3.xyzw, r1.xyzw
  37:   dp4 r3.y, r4.xyzw, r1.xyzw
  38:   dp4 r3.z, r2.xyzw, r1.xyzw
  39: else 
  40:   mov r1.w, l(1.000000)
  41:   dp4 r3.x, cb1[39].xyzw, r1.xyzw
  42:   dp4 r3.y, cb1[40].xyzw, r1.xyzw
  43:   dp4 r3.z, cb1[41].xyzw, r1.xyzw
  44: endif 
  45: mul r2.xyzw, r1.yzzx, r1.xyzz
  46: dp4 r4.x, cb1[42].xyzw, r2.xyzw
  47: dp4 r4.y, cb1[43].xyzw, r2.xyzw
  48: dp4 r4.z, cb1[44].xyzw, r2.xyzw
  49: mul r1.w, r1.y, r1.y
  50: mad r1.w, r1.x, r1.x, -r1.w
  51: mad r2.xyz, cb1[45].xyzx, r1.wwww, r4.xyzx
  52: add r2.xyz, r2.xyzx, r3.xyzx
  53: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  54: sample r3.xyzw, v6.xyxx, t2.xyzw, s0
  55: add r2.xyz, r2.xyzx, r3.xyzx
  56: mul r2.xyz, r0.wwww, r2.xyzx
  57: mul r2.xyz, r0.xyzx, r2.xyzx
  58: exp o3.xyz, -r2.xyzx
  59: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  60: mov o0.xyzw, r0.xyzw
  61: mov o1.xyz, cb0[3].xyzx
  62: mov o1.w, cb0[8].w
  63: mov o2.w, l(1.000000)
  64: mov o3.w, l(1.000000)
  65: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: UNITY_HDR_ON 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul o5.xyz, r0.wwww, r0.xyzx
  27: mov o6.xyzw, l(0,0,0,0)
  28: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 12 math, 2 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_SpecGlossMap" to slot 1
Set 2D Texture "_OcclusionMap" to slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t2.xyzw, s2
   1: add r0.x, -cb0[9].y, l(1.000000)
   2: mad o0.w, r0.y, cb0[9].y, r0.x
   3: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   4: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   5: sample r1.xyzw, v1.xyxx, t1.xyzw, s1
   6: max r0.w, r1.y, r1.x
   7: max r0.w, r1.z, r0.w
   8: add r0.w, -r0.w, l(1.000000)
   9: mul o0.xyz, r0.wwww, r0.xyzx
  10: mul o1.w, r1.w, cb0[9].x
  11: mov o1.xyz, r1.xyzx
  12: dp3 r0.x, v5.xyzx, v5.xyzx
  13: rsq r0.x, r0.x
  14: mul r0.xyz, r0.xxxx, v5.xyzx
  15: mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: mov o2.w, l(1.000000)
  17: mov o3.xyzw, l(0,0,0,1.000000)
  18: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: UNITY_HDR_ON UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  18: add o2.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o6.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 12 math, 2 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_SpecGlossMap" to slot 1
Set 2D Texture "_OcclusionMap" to slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t2.xyzw, s2
   1: add r0.x, -cb0[9].y, l(1.000000)
   2: mad o0.w, r0.y, cb0[9].y, r0.x
   3: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   4: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   5: sample r1.xyzw, v1.xyxx, t1.xyzw, s1
   6: max r0.w, r1.y, r1.x
   7: max r0.w, r1.z, r0.w
   8: add r0.w, -r0.w, l(1.000000)
   9: mul o0.xyz, r0.wwww, r0.xyzx
  10: mul o1.w, r1.w, cb0[9].x
  11: mov o1.xyz, r1.xyzx
  12: dp3 r0.x, v5.xyzx, v5.xyzx
  13: rsq r0.x, r0.x
  14: mul r0.xyz, r0.xxxx, v5.xyzx
  15: mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: mov o2.w, l(1.000000)
  17: mov o3.xyzw, l(0,0,0,1.000000)
  18: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: UNITY_HDR_ON 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  19: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  20: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.x, r2.xyzx, r2.xyzx
  29: rsq r0.x, r0.x
  30: mul r2.xyz, r0.xxxx, r2.xyzx
  31: mul r3.xyz, r1.yzxy, r2.zxyz
  32: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  33: mov o5.xyz, r2.xyzx
  34: mul r0.x, v4.w, cb2[9].w
  35: mul o4.xyz, r0.xxxx, r1.xyzx
  36: mov o4.w, r0.y
  37: mov o5.w, r0.z
  38: mov o6.xyzw, l(0,0,0,0)
  39: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 22 math, 2 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_BumpMap" to slot 2 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 3

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t3.xyzw, s3
   1: add r0.x, -cb0[9].y, l(1.000000)
   2: mad o0.w, r0.y, cb0[9].y, r0.x
   3: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   4: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   5: sample r1.xyzw, v1.xyxx, t1.xyzw, s2
   6: max r0.w, r1.y, r1.x
   7: max r0.w, r1.z, r0.w
   8: add r0.w, -r0.w, l(1.000000)
   9: mul o0.xyz, r0.wwww, r0.xyzx
  10: mul o1.w, r1.w, cb0[9].x
  11: mov o1.xyz, r1.xyzx
  12: sample r0.xyzw, v1.xyxx, t2.xyzw, s1
  13: mul r0.x, r0.w, r0.x
  14: mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  15: mul r0.xy, r0.xyxx, cb0[8].xxxx
  16: mul r1.xyz, r0.yyyy, v4.xyzx
  17: mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
  18: dp2 r0.x, r0.xyxx, r0.xyxx
  19: min r0.x, r0.x, l(1.000000)
  20: add r0.x, -r0.x, l(1.000000)
  21: sqrt r0.x, r0.x
  22: mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
  23: dp3 r0.w, r0.xyzx, r0.xyzx
  24: rsq r0.w, r0.w
  25: mul r0.xyz, r0.wwww, r0.xyzx
  26: mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  27: mov o2.w, l(1.000000)
  28: mov o3.xyzw, l(0,0,0,1.000000)
  29: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: UNITY_HDR_ON UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r0.yzw, cb1[3].xxyz, v0.wwww, r0.yyzw
  18: add o2.xyz, r0.yzwy, -cb2[r0.x + 64].xyzx
  19: mov o3.w, r0.y
  20: mul r1.xyz, v4.yyyy, cb1[1].xyzx
  21: mad r1.xyz, cb1[0].xyzx, v4.xxxx, r1.xyzx
  22: mad r1.xyz, cb1[2].xyzx, v4.zzzz, r1.xyzx
  23: dp3 r0.x, r1.xyzx, r1.xyzx
  24: rsq r0.x, r0.x
  25: mul r1.xyz, r0.xxxx, r1.xyzx
  26: mov o3.xyz, r1.xyzx
  27: dp3 r2.x, v1.xyzx, cb1[4].xyzx
  28: dp3 r2.y, v1.xyzx, cb1[5].xyzx
  29: dp3 r2.z, v1.xyzx, cb1[6].xyzx
  30: dp3 r0.x, r2.xyzx, r2.xyzx
  31: rsq r0.x, r0.x
  32: mul r2.xyz, r0.xxxx, r2.xyzx
  33: mul r3.xyz, r1.yzxy, r2.zxyz
  34: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  35: mov o5.xyz, r2.xyzx
  36: mul r0.x, v4.w, cb1[9].w
  37: mul o4.xyz, r0.xxxx, r1.xyzx
  38: mov o4.w, r0.z
  39: mov o5.w, r0.w
  40: mov o6.xyzw, l(0,0,0,0)
  41: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 22 math, 2 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_BumpMap" to slot 2 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 3

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t3.xyzw, s3
   1: add r0.x, -cb0[9].y, l(1.000000)
   2: mad o0.w, r0.y, cb0[9].y, r0.x
   3: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   4: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   5: sample r1.xyzw, v1.xyxx, t1.xyzw, s2
   6: max r0.w, r1.y, r1.x
   7: max r0.w, r1.z, r0.w
   8: add r0.w, -r0.w, l(1.000000)
   9: mul o0.xyz, r0.wwww, r0.xyzx
  10: mul o1.w, r1.w, cb0[9].x
  11: mov o1.xyz, r1.xyzx
  12: sample r0.xyzw, v1.xyxx, t2.xyzw, s1
  13: mul r0.x, r0.w, r0.x
  14: mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  15: mul r0.xy, r0.xyxx, cb0[8].xxxx
  16: mul r1.xyz, r0.yyyy, v4.xyzx
  17: mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
  18: dp2 r0.x, r0.xyxx, r0.xyxx
  19: min r0.x, r0.x, l(1.000000)
  20: add r0.x, -r0.x, l(1.000000)
  21: sqrt r0.x, r0.x
  22: mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
  23: dp3 r0.w, r0.xyzx, r0.xyzx
  24: rsq r0.w, r0.w
  25: mul r0.xyz, r0.wwww, r0.xyzx
  26: mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  27: mov o2.w, l(1.000000)
  28: mov o3.xyzw, l(0,0,0,1.000000)
  29: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: UNITY_HDR_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul o5.xyz, r0.wwww, r0.xyzx
  27: mov o6.xyzw, l(0,0,0,0)
  28: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 11 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: max r0.x, cb0[3].y, cb0[3].x
   1: max r0.x, r0.x, cb0[3].z
   2: add r0.x, -r0.x, l(1.000000)
   3: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   4: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   5: mul o0.xyz, r0.xxxx, r0.yzwy
   6: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   7: add r0.x, -cb0[9].y, l(1.000000)
   8: mad o0.w, r0.y, cb0[9].y, r0.x
   9: mov o1.xyz, cb0[3].xyzx
  10: mov o1.w, cb0[8].w
  11: dp3 r0.x, v5.xyzx, v5.xyzx
  12: rsq r0.x, r0.x
  13: mul r0.xyz, r0.xxxx, v5.xyzx
  14: mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  15: mov o2.w, l(1.000000)
  16: mov o3.xyzw, l(0,0,0,1.000000)
  17: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: UNITY_HDR_ON UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  18: add o2.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o6.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 11 math, 2 temp registers, 2 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_OcclusionMap" to slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: max r0.x, cb0[3].y, cb0[3].x
   1: max r0.x, r0.x, cb0[3].z
   2: add r0.x, -r0.x, l(1.000000)
   3: sample r1.xyzw, v1.xyxx, t0.xyzw, s0
   4: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   5: mul o0.xyz, r0.xxxx, r0.yzwy
   6: sample r0.xyzw, v1.xyxx, t1.xyzw, s1
   7: add r0.x, -cb0[9].y, l(1.000000)
   8: mad o0.w, r0.y, cb0[9].y, r0.x
   9: mov o1.xyz, cb0[3].xyzx
  10: mov o1.w, cb0[8].w
  11: dp3 r0.x, v5.xyzx, v5.xyzx
  12: rsq r0.x, r0.x
  13: mul r0.xyz, r0.xxxx, v5.xyzx
  14: mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  15: mov o2.w, l(1.000000)
  16: mov o3.xyzw, l(0,0,0,1.000000)
  17: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH UNITY_HDR_ON 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul r0.xyz, r0.wwww, r0.xyzx
  27: mov o5.xyz, r0.xyzx
  28: mul r0.w, r0.y, r0.y
  29: mad r0.w, r0.x, r0.x, -r0.w
  30: mul r1.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r0.x, cb2[42].xyzw, r1.xyzw
  32: dp4 r0.y, cb2[43].xyzw, r1.xyzw
  33: dp4 r0.z, cb2[44].xyzw, r1.xyzw
  34: mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  35: mov o6.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 37 math, 6 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s2
   1: mul o1.w, r0.w, cb0[9].x
   2: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   3: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   4: max r0.w, r0.y, r0.x
   5: max r0.w, r0.z, r0.w
   6: add r0.w, -r0.w, l(1.000000)
   7: mul r1.xyz, r0.wwww, r1.xyzx
   8: dp3 r0.w, v5.xyzx, v5.xyzx
   9: rsq r0.w, r0.w
  10: mul r2.xyz, r0.wwww, v5.xyzx
  11: sample r3.xyzw, v1.xyxx, t2.xyzw, s3
  12: add r0.w, -cb0[9].y, l(1.000000)
  13: mad r1.w, r3.y, cb0[9].y, r0.w
  14: eq r0.w, cb2[0].x, l(1.000000)
  15: if_nz r0.w
  16:   eq r0.w, cb2[0].y, l(1.000000)
  17:   mul r3.xyz, v4.wwww, cb2[2].xyzx
  18:   mad r3.xyz, cb2[1].xyzx, v3.wwww, r3.xyzx
  19:   mad r3.xyz, cb2[3].xyzx, v5.wwww, r3.xyzx
  20:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  21:   mov r4.y, v3.w
  22:   mov r4.z, v4.w
  23:   mov r4.w, v5.w
  24:   movc r3.xyz, r0.wwww, r3.xyzx, r4.yzwy
  25:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  26:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  27:   mul r0.w, r3.y, l(0.250000)
  28:   mul r3.y, cb2[0].z, l(0.500000)
  29:   mad r4.x, -cb2[0].z, l(0.500000), l(0.250000)
  30:   max r0.w, r0.w, r3.y
  31:   min r3.x, r4.x, r0.w
  32:   sample r4.xyzw, r3.xzwx, t3.xyzw, s0
  33:   add r5.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  34:   sample r5.xyzw, r5.xyzx, t3.xyzw, s0
  35:   add r3.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  36:   sample r3.xyzw, r3.xyzx, t3.xyzw, s0
  37:   mov r2.w, l(1.000000)
  38:   dp4 r4.x, r4.xyzw, r2.xyzw
  39:   dp4 r4.y, r5.xyzw, r2.xyzw
  40:   dp4 r4.z, r3.xyzw, r2.xyzw
  41: else 
  42:   mov r2.w, l(1.000000)
  43:   dp4 r4.x, cb1[39].xyzw, r2.xyzw
  44:   dp4 r4.y, cb1[40].xyzw, r2.xyzw
  45:   dp4 r4.z, cb1[41].xyzw, r2.xyzw
  46: endif 
  47: add r3.xyz, r4.xyzx, v6.xyzx
  48: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: mul r3.xyz, r1.wwww, r3.xyzx
  50: mul o3.xyz, r1.xyzx, r3.xyzx
  51: mad o2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  52: mov o0.xyzw, r1.xyzw
  53: mov o1.xyz, r0.xyzx
  54: mov o2.w, l(1.000000)
  55: mov o3.w, l(1.000000)
  56: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH UNITY_HDR_ON UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb4[0].x
  14: mul r0.yzw, v0.yyyy, cb2[1].xxyz
  15: mad r0.yzw, cb2[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb2[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r0.yzwy
  18: add o2.xyz, r1.xyzx, -cb3[r0.x + 64].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul r0.xyz, r0.wwww, r0.xyzx
  29: mov o5.xyz, r0.xyzx
  30: mul r0.w, r0.y, r0.y
  31: mad r0.w, r0.x, r0.x, -r0.w
  32: mul r1.xyzw, r0.yzzx, r0.xyzz
  33: dp4 r0.x, cb1[42].xyzw, r1.xyzw
  34: dp4 r0.y, cb1[43].xyzw, r1.xyzw
  35: dp4 r0.z, cb1[44].xyzw, r1.xyzw
  36: mad o6.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
  37: mov o6.w, l(0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 37 math, 6 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s2
   1: mul o1.w, r0.w, cb0[9].x
   2: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   3: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   4: max r0.w, r0.y, r0.x
   5: max r0.w, r0.z, r0.w
   6: add r0.w, -r0.w, l(1.000000)
   7: mul r1.xyz, r0.wwww, r1.xyzx
   8: dp3 r0.w, v5.xyzx, v5.xyzx
   9: rsq r0.w, r0.w
  10: mul r2.xyz, r0.wwww, v5.xyzx
  11: sample r3.xyzw, v1.xyxx, t2.xyzw, s3
  12: add r0.w, -cb0[9].y, l(1.000000)
  13: mad r1.w, r3.y, cb0[9].y, r0.w
  14: eq r0.w, cb2[0].x, l(1.000000)
  15: if_nz r0.w
  16:   eq r0.w, cb2[0].y, l(1.000000)
  17:   mul r3.xyz, v4.wwww, cb2[2].xyzx
  18:   mad r3.xyz, cb2[1].xyzx, v3.wwww, r3.xyzx
  19:   mad r3.xyz, cb2[3].xyzx, v5.wwww, r3.xyzx
  20:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  21:   mov r4.y, v3.w
  22:   mov r4.z, v4.w
  23:   mov r4.w, v5.w
  24:   movc r3.xyz, r0.wwww, r3.xyzx, r4.yzwy
  25:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  26:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  27:   mul r0.w, r3.y, l(0.250000)
  28:   mul r3.y, cb2[0].z, l(0.500000)
  29:   mad r4.x, -cb2[0].z, l(0.500000), l(0.250000)
  30:   max r0.w, r0.w, r3.y
  31:   min r3.x, r4.x, r0.w
  32:   sample r4.xyzw, r3.xzwx, t3.xyzw, s0
  33:   add r5.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  34:   sample r5.xyzw, r5.xyzx, t3.xyzw, s0
  35:   add r3.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  36:   sample r3.xyzw, r3.xyzx, t3.xyzw, s0
  37:   mov r2.w, l(1.000000)
  38:   dp4 r4.x, r4.xyzw, r2.xyzw
  39:   dp4 r4.y, r5.xyzw, r2.xyzw
  40:   dp4 r4.z, r3.xyzw, r2.xyzw
  41: else 
  42:   mov r2.w, l(1.000000)
  43:   dp4 r4.x, cb1[39].xyzw, r2.xyzw
  44:   dp4 r4.y, cb1[40].xyzw, r2.xyzw
  45:   dp4 r4.z, cb1[41].xyzw, r2.xyzw
  46: endif 
  47: add r3.xyz, r4.xyzx, v6.xyzx
  48: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  49: mul r3.xyz, r1.wwww, r3.xyzx
  50: mul o3.xyz, r1.xyzx, r3.xyzx
  51: mad o2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  52: mov o0.xyzw, r1.xyzw
  53: mov o1.xyz, r0.xyzx
  54: mov o2.w, l(1.000000)
  55: mov o3.w, l(1.000000)
  56: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH UNITY_HDR_ON 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v4.yyyy, cb3[1].xyzx
  19: mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
  20: mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: mov o4.w, r0.y
  26: mov o5.w, r0.z
  27: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  28: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  29: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  30: dp3 r0.w, r0.xyzx, r0.xyzx
  31: rsq r0.w, r0.w
  32: mul r0.xyz, r0.wwww, r0.xyzx
  33: mul r2.xyz, r1.yzxy, r0.zxyz
  34: mad r1.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
  35: mul r0.w, v4.w, cb3[9].w
  36: mul o4.xyz, r0.wwww, r1.xyzx
  37: mov o5.xyz, r0.xyzx
  38: mul r0.w, r0.y, r0.y
  39: mad r0.w, r0.x, r0.x, -r0.w
  40: mul r1.xyzw, r0.yzzx, r0.xyzz
  41: dp4 r0.x, cb2[42].xyzw, r1.xyzw
  42: dp4 r0.y, cb2[43].xyzw, r1.xyzw
  43: dp4 r0.z, cb2[44].xyzw, r1.xyzw
  44: mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  45: mov o6.w, l(0)
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 47 math, 6 temp registers, 7 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_BumpMap" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: mul o1.w, r0.w, cb0[9].x
   2: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   3: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   4: max r0.w, r0.y, r0.x
   5: max r0.w, r0.z, r0.w
   6: add r0.w, -r0.w, l(1.000000)
   7: mul r1.xyz, r0.wwww, r1.xyzx
   8: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
   9: mul r2.x, r2.w, r2.x
  10: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  11: mul r2.xy, r2.xyxx, cb0[8].xxxx
  12: dp2 r0.w, r2.xyxx, r2.xyxx
  13: min r0.w, r0.w, l(1.000000)
  14: add r0.w, -r0.w, l(1.000000)
  15: sqrt r0.w, r0.w
  16: mul r2.yzw, r2.yyyy, v4.xxyz
  17: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  18: mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
  19: dp3 r0.w, r2.xyzx, r2.xyzx
  20: rsq r0.w, r0.w
  21: mul r2.xyz, r0.wwww, r2.xyzx
  22: sample r3.xyzw, v1.xyxx, t3.xyzw, s4
  23: add r0.w, -cb0[9].y, l(1.000000)
  24: mad r1.w, r3.y, cb0[9].y, r0.w
  25: eq r0.w, cb2[0].x, l(1.000000)
  26: if_nz r0.w
  27:   eq r0.w, cb2[0].y, l(1.000000)
  28:   mul r3.xyz, v4.wwww, cb2[2].xyzx
  29:   mad r3.xyz, cb2[1].xyzx, v3.wwww, r3.xyzx
  30:   mad r3.xyz, cb2[3].xyzx, v5.wwww, r3.xyzx
  31:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  32:   mov r4.y, v3.w
  33:   mov r4.z, v4.w
  34:   mov r4.w, v5.w
  35:   movc r3.xyz, r0.wwww, r3.xyzx, r4.yzwy
  36:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  37:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  38:   mul r0.w, r3.y, l(0.250000)
  39:   mul r3.y, cb2[0].z, l(0.500000)
  40:   mad r4.x, -cb2[0].z, l(0.500000), l(0.250000)
  41:   max r0.w, r0.w, r3.y
  42:   min r3.x, r4.x, r0.w
  43:   sample r4.xyzw, r3.xzwx, t4.xyzw, s0
  44:   add r5.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  45:   sample r5.xyzw, r5.xyzx, t4.xyzw, s0
  46:   add r3.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  47:   sample r3.xyzw, r3.xyzx, t4.xyzw, s0
  48:   mov r2.w, l(1.000000)
  49:   dp4 r4.x, r4.xyzw, r2.xyzw
  50:   dp4 r4.y, r5.xyzw, r2.xyzw
  51:   dp4 r4.z, r3.xyzw, r2.xyzw
  52: else 
  53:   mov r2.w, l(1.000000)
  54:   dp4 r4.x, cb1[39].xyzw, r2.xyzw
  55:   dp4 r4.y, cb1[40].xyzw, r2.xyzw
  56:   dp4 r4.z, cb1[41].xyzw, r2.xyzw
  57: endif 
  58: add r3.xyz, r4.xyzx, v6.xyzx
  59: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  60: mul r3.xyz, r1.wwww, r3.xyzx
  61: mul o3.xyz, r1.xyzx, r3.xyzx
  62: mad o2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  63: mov o0.xyzw, r1.xyzw
  64: mov o1.xyz, r0.xyzx
  65: mov o2.w, l(1.000000)
  66: mov o3.w, l(1.000000)
  67: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH UNITY_HDR_ON UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 40 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb4[0].x
  14: mul r0.yzw, v0.yyyy, cb2[1].xxyz
  15: mad r0.yzw, cb2[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb2[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r0.yzw, cb2[3].xxyz, v0.wwww, r0.yyzw
  18: add o2.xyz, r0.yzwy, -cb3[r0.x + 64].xyzx
  19: mov o3.w, r0.y
  20: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  21: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  22: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  23: dp3 r0.x, r1.xyzx, r1.xyzx
  24: rsq r0.x, r0.x
  25: mul r1.xyz, r0.xxxx, r1.xyzx
  26: mov o3.xyz, r1.xyzx
  27: mov o4.w, r0.z
  28: mov o5.w, r0.w
  29: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul r0.xyz, r0.wwww, r0.xyzx
  35: mul r2.xyz, r1.yzxy, r0.zxyz
  36: mad r1.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
  37: mul r0.w, v4.w, cb2[9].w
  38: mul o4.xyz, r0.wwww, r1.xyzx
  39: mov o5.xyz, r0.xyzx
  40: mul r0.w, r0.y, r0.y
  41: mad r0.w, r0.x, r0.x, -r0.w
  42: mul r1.xyzw, r0.yzzx, r0.xyzz
  43: dp4 r0.x, cb1[42].xyzw, r1.xyzw
  44: dp4 r0.y, cb1[43].xyzw, r1.xyzw
  45: dp4 r0.z, cb1[44].xyzw, r1.xyzw
  46: mad o6.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
  47: mov o6.w, l(0)
  48: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 47 math, 6 temp registers, 7 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_BumpMap" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: mul o1.w, r0.w, cb0[9].x
   2: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   3: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   4: max r0.w, r0.y, r0.x
   5: max r0.w, r0.z, r0.w
   6: add r0.w, -r0.w, l(1.000000)
   7: mul r1.xyz, r0.wwww, r1.xyzx
   8: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
   9: mul r2.x, r2.w, r2.x
  10: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  11: mul r2.xy, r2.xyxx, cb0[8].xxxx
  12: dp2 r0.w, r2.xyxx, r2.xyxx
  13: min r0.w, r0.w, l(1.000000)
  14: add r0.w, -r0.w, l(1.000000)
  15: sqrt r0.w, r0.w
  16: mul r2.yzw, r2.yyyy, v4.xxyz
  17: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  18: mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
  19: dp3 r0.w, r2.xyzx, r2.xyzx
  20: rsq r0.w, r0.w
  21: mul r2.xyz, r0.wwww, r2.xyzx
  22: sample r3.xyzw, v1.xyxx, t3.xyzw, s4
  23: add r0.w, -cb0[9].y, l(1.000000)
  24: mad r1.w, r3.y, cb0[9].y, r0.w
  25: eq r0.w, cb2[0].x, l(1.000000)
  26: if_nz r0.w
  27:   eq r0.w, cb2[0].y, l(1.000000)
  28:   mul r3.xyz, v4.wwww, cb2[2].xyzx
  29:   mad r3.xyz, cb2[1].xyzx, v3.wwww, r3.xyzx
  30:   mad r3.xyz, cb2[3].xyzx, v5.wwww, r3.xyzx
  31:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  32:   mov r4.y, v3.w
  33:   mov r4.z, v4.w
  34:   mov r4.w, v5.w
  35:   movc r3.xyz, r0.wwww, r3.xyzx, r4.yzwy
  36:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  37:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  38:   mul r0.w, r3.y, l(0.250000)
  39:   mul r3.y, cb2[0].z, l(0.500000)
  40:   mad r4.x, -cb2[0].z, l(0.500000), l(0.250000)
  41:   max r0.w, r0.w, r3.y
  42:   min r3.x, r4.x, r0.w
  43:   sample r4.xyzw, r3.xzwx, t4.xyzw, s0
  44:   add r5.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  45:   sample r5.xyzw, r5.xyzx, t4.xyzw, s0
  46:   add r3.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  47:   sample r3.xyzw, r3.xyzx, t4.xyzw, s0
  48:   mov r2.w, l(1.000000)
  49:   dp4 r4.x, r4.xyzw, r2.xyzw
  50:   dp4 r4.y, r5.xyzw, r2.xyzw
  51:   dp4 r4.z, r3.xyzw, r2.xyzw
  52: else 
  53:   mov r2.w, l(1.000000)
  54:   dp4 r4.x, cb1[39].xyzw, r2.xyzw
  55:   dp4 r4.y, cb1[40].xyzw, r2.xyzw
  56:   dp4 r4.z, cb1[41].xyzw, r2.xyzw
  57: endif 
  58: add r3.xyz, r4.xyzx, v6.xyzx
  59: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  60: mul r3.xyz, r1.wwww, r3.xyzx
  61: mul o3.xyz, r1.xyzx, r3.xyzx
  62: mad o2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  63: mov o0.xyzw, r1.xyzw
  64: mov o1.xyz, r0.xyzx
  65: mov o2.w, l(1.000000)
  66: mov o3.w, l(1.000000)
  67: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH UNITY_HDR_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul r0.xyz, r0.wwww, r0.xyzx
  27: mov o5.xyz, r0.xyzx
  28: mul r0.w, r0.y, r0.y
  29: mad r0.w, r0.x, r0.x, -r0.w
  30: mul r1.xyzw, r0.yzzx, r0.xyzz
  31: dp4 r0.x, cb2[42].xyzw, r1.xyzw
  32: dp4 r0.y, cb2[43].xyzw, r1.xyzw
  33: dp4 r0.z, cb2[44].xyzw, r1.xyzw
  34: mad o6.xyz, cb2[45].xyzx, r0.wwww, r0.xyzx
  35: mov o6.w, l(0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 36 math, 5 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  10: add r2.x, -cb0[9].y, l(1.000000)
  11: mad r0.w, r2.y, cb0[9].y, r2.x
  12: eq r2.x, cb2[0].x, l(1.000000)
  13: if_nz r2.x
  14:   eq r2.x, cb2[0].y, l(1.000000)
  15:   mul r2.yzw, v4.wwww, cb2[2].xxyz
  16:   mad r2.yzw, cb2[1].xxyz, v3.wwww, r2.yyzw
  17:   mad r2.yzw, cb2[3].xxyz, v5.wwww, r2.yyzw
  18:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  19:   mov r3.y, v3.w
  20:   mov r3.z, v4.w
  21:   mov r3.w, v5.w
  22:   movc r2.xyz, r2.xxxx, r2.yzwy, r3.yzwy
  23:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  24:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  25:   mul r2.y, r2.y, l(0.250000)
  26:   mul r3.x, cb2[0].z, l(0.500000)
  27:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  28:   max r2.y, r2.y, r3.x
  29:   min r2.x, r3.y, r2.y
  30:   sample r3.xyzw, r2.xzwx, t2.xyzw, s0
  31:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  32:   sample r4.xyzw, r4.xyzx, t2.xyzw, s0
  33:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  34:   sample r2.xyzw, r2.xyzx, t2.xyzw, s0
  35:   mov r1.w, l(1.000000)
  36:   dp4 r3.x, r3.xyzw, r1.xyzw
  37:   dp4 r3.y, r4.xyzw, r1.xyzw
  38:   dp4 r3.z, r2.xyzw, r1.xyzw
  39: else 
  40:   mov r1.w, l(1.000000)
  41:   dp4 r3.x, cb1[39].xyzw, r1.xyzw
  42:   dp4 r3.y, cb1[40].xyzw, r1.xyzw
  43:   dp4 r3.z, cb1[41].xyzw, r1.xyzw
  44: endif 
  45: add r2.xyz, r3.xyzx, v6.xyzx
  46: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: mul r2.xyz, r0.wwww, r2.xyzx
  48: mul o3.xyz, r0.xyzx, r2.xyzx
  49: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  50: mov o0.xyzw, r0.xyzw
  51: mov o1.xyz, cb0[3].xyzx
  52: mov o1.w, cb0[8].w
  53: mov o2.w, l(1.000000)
  54: mov o3.w, l(1.000000)
  55: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTPROBE_SH UNITY_HDR_ON UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 30 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb4[0].x
  14: mul r0.yzw, v0.yyyy, cb2[1].xxyz
  15: mad r0.yzw, cb2[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb2[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r0.yzwy
  18: add o2.xyz, r1.xyzx, -cb3[r0.x + 64].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul r0.xyz, r0.wwww, r0.xyzx
  29: mov o5.xyz, r0.xyzx
  30: mul r0.w, r0.y, r0.y
  31: mad r0.w, r0.x, r0.x, -r0.w
  32: mul r1.xyzw, r0.yzzx, r0.xyzz
  33: dp4 r0.x, cb1[42].xyzw, r1.xyzw
  34: dp4 r0.y, cb1[43].xyzw, r1.xyzw
  35: dp4 r0.z, cb1[44].xyzw, r1.xyzw
  36: mad o6.xyz, cb1[45].xyzx, r0.wwww, r0.xyzx
  37: mov o6.w, l(0)
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 36 math, 5 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[42], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: sample r2.xyzw, v1.xyxx, t1.xyzw, s2
  10: add r2.x, -cb0[9].y, l(1.000000)
  11: mad r0.w, r2.y, cb0[9].y, r2.x
  12: eq r2.x, cb2[0].x, l(1.000000)
  13: if_nz r2.x
  14:   eq r2.x, cb2[0].y, l(1.000000)
  15:   mul r2.yzw, v4.wwww, cb2[2].xxyz
  16:   mad r2.yzw, cb2[1].xxyz, v3.wwww, r2.yyzw
  17:   mad r2.yzw, cb2[3].xxyz, v5.wwww, r2.yyzw
  18:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  19:   mov r3.y, v3.w
  20:   mov r3.z, v4.w
  21:   mov r3.w, v5.w
  22:   movc r2.xyz, r2.xxxx, r2.yzwy, r3.yzwy
  23:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  24:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  25:   mul r2.y, r2.y, l(0.250000)
  26:   mul r3.x, cb2[0].z, l(0.500000)
  27:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  28:   max r2.y, r2.y, r3.x
  29:   min r2.x, r3.y, r2.y
  30:   sample r3.xyzw, r2.xzwx, t2.xyzw, s0
  31:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  32:   sample r4.xyzw, r4.xyzx, t2.xyzw, s0
  33:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  34:   sample r2.xyzw, r2.xyzx, t2.xyzw, s0
  35:   mov r1.w, l(1.000000)
  36:   dp4 r3.x, r3.xyzw, r1.xyzw
  37:   dp4 r3.y, r4.xyzw, r1.xyzw
  38:   dp4 r3.z, r2.xyzw, r1.xyzw
  39: else 
  40:   mov r1.w, l(1.000000)
  41:   dp4 r3.x, cb1[39].xyzw, r1.xyzw
  42:   dp4 r3.y, cb1[40].xyzw, r1.xyzw
  43:   dp4 r3.z, cb1[41].xyzw, r1.xyzw
  44: endif 
  45: add r2.xyz, r3.xyzx, v6.xyzx
  46: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: mul r2.xyz, r0.wwww, r2.xyzx
  48: mul o3.xyz, r0.xyzx, r2.xyzx
  49: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  50: mov o0.xyzw, r0.xyzw
  51: mov o1.xyz, cb0[3].xyzx
  52: mov o1.w, cb0[8].w
  53: mov o2.w, l(1.000000)
  54: mov o3.w, l(1.000000)
  55: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTMAP_ON UNITY_HDR_ON 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul o5.xyz, r0.wwww, r0.xyzx
  27: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  28: mov o6.zw, l(0,0,0,0)
  29: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 14 math, 3 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set 2D Texture "unity_Lightmap" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: sample r1.xyzw, v1.xyxx, t1.xyzw, s2
   3: max r0.w, r1.y, r1.x
   4: max r0.w, r1.z, r0.w
   5: add r0.w, -r0.w, l(1.000000)
   6: mul r0.xyz, r0.wwww, r0.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: add r2.x, -cb0[9].y, l(1.000000)
   9: mad r0.w, r2.y, cb0[9].y, r2.x
  10: mov o0.xyzw, r0.xyzw
  11: mul o1.w, r1.w, cb0[9].x
  12: mov o1.xyz, r1.xyzx
  13: dp3 r1.x, v5.xyzx, v5.xyzx
  14: rsq r1.x, r1.x
  15: mul r1.xyz, r1.xxxx, v5.xyzx
  16: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  17: mov o2.w, l(1.000000)
  18: sample r1.xyzw, v6.xyxx, t3.xyzw, s0
  19: mul r1.xyz, r0.wwww, r1.xyzx
  20: mul o3.xyz, r0.xyzx, r1.xyzx
  21: mov o3.w, l(1.000000)
  22: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTMAP_ON UNITY_HDR_ON UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  18: add o2.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  30: mov o6.zw, l(0,0,0,0)
  31: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 14 math, 3 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set 2D Texture "unity_Lightmap" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: sample r1.xyzw, v1.xyxx, t1.xyzw, s2
   3: max r0.w, r1.y, r1.x
   4: max r0.w, r1.z, r0.w
   5: add r0.w, -r0.w, l(1.000000)
   6: mul r0.xyz, r0.wwww, r0.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: add r2.x, -cb0[9].y, l(1.000000)
   9: mad r0.w, r2.y, cb0[9].y, r2.x
  10: mov o0.xyzw, r0.xyzw
  11: mul o1.w, r1.w, cb0[9].x
  12: mov o1.xyz, r1.xyzx
  13: dp3 r1.x, v5.xyzx, v5.xyzx
  14: rsq r1.x, r1.x
  15: mul r1.xyz, r1.xxxx, v5.xyzx
  16: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  17: mov o2.w, l(1.000000)
  18: sample r1.xyzw, v6.xyxx, t3.xyzw, s0
  19: mul r1.xyz, r0.wwww, r1.xyzx
  20: mul o3.xyz, r0.xyzx, r1.xyzx
  21: mov o3.w, l(1.000000)
  22: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTMAP_ON UNITY_HDR_ON 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  19: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  20: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.x, r2.xyzx, r2.xyzx
  29: rsq r0.x, r0.x
  30: mul r2.xyz, r0.xxxx, r2.xyzx
  31: mul r3.xyz, r1.yzxy, r2.zxyz
  32: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  33: mov o5.xyz, r2.xyzx
  34: mul r0.x, v4.w, cb2[9].w
  35: mul o4.xyz, r0.xxxx, r1.xyzx
  36: mov o4.w, r0.y
  37: mov o5.w, r0.z
  38: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  39: mov o6.zw, l(0,0,0,0)
  40: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 24 math, 3 temp registers, 5 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_BumpMap" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set 2D Texture "unity_Lightmap" to slot 4 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: sample r1.xyzw, v1.xyxx, t1.xyzw, s3
   3: max r0.w, r1.y, r1.x
   4: max r0.w, r1.z, r0.w
   5: add r0.w, -r0.w, l(1.000000)
   6: mul r0.xyz, r0.wwww, r0.xyzx
   7: sample r2.xyzw, v1.xyxx, t3.xyzw, s4
   8: add r2.x, -cb0[9].y, l(1.000000)
   9: mad r0.w, r2.y, cb0[9].y, r2.x
  10: mov o0.xyzw, r0.xyzw
  11: mul o1.w, r1.w, cb0[9].x
  12: mov o1.xyz, r1.xyzx
  13: sample r1.xyzw, v1.xyxx, t2.xyzw, s2
  14: mul r1.x, r1.w, r1.x
  15: mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  16: mul r1.xy, r1.xyxx, cb0[8].xxxx
  17: mul r2.xyz, r1.yyyy, v4.xyzx
  18: mad r2.xyz, v3.xyzx, r1.xxxx, r2.xyzx
  19: dp2 r1.x, r1.xyxx, r1.xyxx
  20: min r1.x, r1.x, l(1.000000)
  21: add r1.x, -r1.x, l(1.000000)
  22: sqrt r1.x, r1.x
  23: mad r1.xyz, v5.xyzx, r1.xxxx, r2.xyzx
  24: dp3 r1.w, r1.xyzx, r1.xyzx
  25: rsq r1.w, r1.w
  26: mul r1.xyz, r1.wwww, r1.xyzx
  27: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  28: mov o2.w, l(1.000000)
  29: sample r1.xyzw, v6.xyxx, t4.xyzw, s0
  30: mul r1.xyz, r0.wwww, r1.xyzx
  31: mul o3.xyz, r0.xyzx, r1.xyzx
  32: mov o3.w, l(1.000000)
  33: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTMAP_ON UNITY_HDR_ON UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r0.yzw, cb1[3].xxyz, v0.wwww, r0.yyzw
  18: add o2.xyz, r0.yzwy, -cb2[r0.x + 64].xyzx
  19: mov o3.w, r0.y
  20: mul r1.xyz, v4.yyyy, cb1[1].xyzx
  21: mad r1.xyz, cb1[0].xyzx, v4.xxxx, r1.xyzx
  22: mad r1.xyz, cb1[2].xyzx, v4.zzzz, r1.xyzx
  23: dp3 r0.x, r1.xyzx, r1.xyzx
  24: rsq r0.x, r0.x
  25: mul r1.xyz, r0.xxxx, r1.xyzx
  26: mov o3.xyz, r1.xyzx
  27: dp3 r2.x, v1.xyzx, cb1[4].xyzx
  28: dp3 r2.y, v1.xyzx, cb1[5].xyzx
  29: dp3 r2.z, v1.xyzx, cb1[6].xyzx
  30: dp3 r0.x, r2.xyzx, r2.xyzx
  31: rsq r0.x, r0.x
  32: mul r2.xyz, r0.xxxx, r2.xyzx
  33: mul r3.xyz, r1.yzxy, r2.zxyz
  34: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  35: mov o5.xyz, r2.xyzx
  36: mul r0.x, v4.w, cb1[9].w
  37: mul o4.xyz, r0.xxxx, r1.xyzx
  38: mov o4.w, r0.z
  39: mov o5.w, r0.w
  40: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  41: mov o6.zw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 24 math, 3 temp registers, 5 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_BumpMap" to slot 2
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set 2D Texture "unity_Lightmap" to slot 4 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 3
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: sample r1.xyzw, v1.xyxx, t1.xyzw, s3
   3: max r0.w, r1.y, r1.x
   4: max r0.w, r1.z, r0.w
   5: add r0.w, -r0.w, l(1.000000)
   6: mul r0.xyz, r0.wwww, r0.xyzx
   7: sample r2.xyzw, v1.xyxx, t3.xyzw, s4
   8: add r2.x, -cb0[9].y, l(1.000000)
   9: mad r0.w, r2.y, cb0[9].y, r2.x
  10: mov o0.xyzw, r0.xyzw
  11: mul o1.w, r1.w, cb0[9].x
  12: mov o1.xyz, r1.xyzx
  13: sample r1.xyzw, v1.xyxx, t2.xyzw, s2
  14: mul r1.x, r1.w, r1.x
  15: mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  16: mul r1.xy, r1.xyxx, cb0[8].xxxx
  17: mul r2.xyz, r1.yyyy, v4.xyzx
  18: mad r2.xyz, v3.xyzx, r1.xxxx, r2.xyzx
  19: dp2 r1.x, r1.xyxx, r1.xyxx
  20: min r1.x, r1.x, l(1.000000)
  21: add r1.x, -r1.x, l(1.000000)
  22: sqrt r1.x, r1.x
  23: mad r1.xyz, v5.xyzx, r1.xxxx, r2.xyzx
  24: dp3 r1.w, r1.xyzx, r1.xyzx
  25: rsq r1.w, r1.w
  26: mul r1.xyz, r1.wwww, r1.xyzx
  27: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  28: mov o2.w, l(1.000000)
  29: sample r1.xyzw, v6.xyxx, t4.xyzw, s0
  30: mul r1.xyz, r0.wwww, r1.xyzx
  31: mul o3.xyz, r0.xyzx, r1.xyzx
  32: mov o3.w, l(1.000000)
  33: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTMAP_ON UNITY_HDR_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul o5.xyz, r0.wwww, r0.xyzx
  27: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  28: mov o6.zw, l(0,0,0,0)
  29: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 13 math, 2 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 2
Set 2D Texture "unity_Lightmap" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: max r0.x, cb0[3].y, cb0[3].x
   1: max r0.x, r0.x, cb0[3].z
   2: add r0.x, -r0.x, l(1.000000)
   3: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   4: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   5: mul r0.xyz, r0.xxxx, r0.yzwy
   6: sample r1.xyzw, v1.xyxx, t1.xyzw, s2
   7: add r1.x, -cb0[9].y, l(1.000000)
   8: mad r0.w, r1.y, cb0[9].y, r1.x
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.xyz, cb0[3].xyzx
  11: mov o1.w, cb0[8].w
  12: dp3 r1.x, v5.xyzx, v5.xyzx
  13: rsq r1.x, r1.x
  14: mul r1.xyz, r1.xxxx, v5.xyzx
  15: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: mov o2.w, l(1.000000)
  17: sample r1.xyzw, v6.xyxx, t2.xyzw, s0
  18: mul r1.xyz, r0.wwww, r1.xyzx
  19: mul o3.xyz, r0.xyzx, r1.xyzx
  20: mov o3.w, l(1.000000)
  21: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTMAP_ON UNITY_HDR_ON UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  18: add o2.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  30: mov o6.zw, l(0,0,0,0)
  31: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 13 math, 2 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 2
Set 2D Texture "unity_Lightmap" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: max r0.x, cb0[3].y, cb0[3].x
   1: max r0.x, r0.x, cb0[3].z
   2: add r0.x, -r0.x, l(1.000000)
   3: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   4: mul r0.yzw, r1.xxyz, cb0[4].xxyz
   5: mul r0.xyz, r0.xxxx, r0.yzwy
   6: sample r1.xyzw, v1.xyxx, t1.xyzw, s2
   7: add r1.x, -cb0[9].y, l(1.000000)
   8: mad r0.w, r1.y, cb0[9].y, r1.x
   9: mov o0.xyzw, r0.xyzw
  10: mov o1.xyz, cb0[3].xyzx
  11: mov o1.w, cb0[8].w
  12: dp3 r1.x, v5.xyzx, v5.xyzx
  13: rsq r1.x, r1.x
  14: mul r1.xyz, r1.xxxx, v5.xyzx
  15: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: mov o2.w, l(1.000000)
  17: sample r1.xyzw, v6.xyxx, t2.xyzw, s0
  18: mul r1.xyz, r0.wwww, r1.xyzx
  19: mul o3.xyz, r0.xyzx, r1.xyzx
  20: mov o3.w, l(1.000000)
  21: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTMAP_ON LIGHTPROBE_SH UNITY_HDR_ON 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul o5.xyz, r0.wwww, r0.xyzx
  27: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  28: mov o6.zw, l(0,0,0,0)
  29: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 45 math, 6 temp registers, 7 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 4
Set 2D Texture "unity_Lightmap" to slot 3 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: mul o1.w, r0.w, cb0[9].x
   2: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   3: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   4: max r0.w, r0.y, r0.x
   5: max r0.w, r0.z, r0.w
   6: add r0.w, -r0.w, l(1.000000)
   7: mul r1.xyz, r0.wwww, r1.xyzx
   8: dp3 r0.w, v5.xyzx, v5.xyzx
   9: rsq r0.w, r0.w
  10: mul r2.xyz, r0.wwww, v5.xyzx
  11: sample r3.xyzw, v1.xyxx, t2.xyzw, s4
  12: add r0.w, -cb0[9].y, l(1.000000)
  13: mad r1.w, r3.y, cb0[9].y, r0.w
  14: eq r0.w, cb2[0].x, l(1.000000)
  15: if_nz r0.w
  16:   eq r0.w, cb2[0].y, l(1.000000)
  17:   mul r3.xyz, v4.wwww, cb2[2].xyzx
  18:   mad r3.xyz, cb2[1].xyzx, v3.wwww, r3.xyzx
  19:   mad r3.xyz, cb2[3].xyzx, v5.wwww, r3.xyzx
  20:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  21:   mov r4.y, v3.w
  22:   mov r4.z, v4.w
  23:   mov r4.w, v5.w
  24:   movc r3.xyz, r0.wwww, r3.xyzx, r4.yzwy
  25:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  26:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  27:   mul r0.w, r3.y, l(0.250000)
  28:   mul r3.y, cb2[0].z, l(0.500000)
  29:   mad r4.x, -cb2[0].z, l(0.500000), l(0.250000)
  30:   max r0.w, r0.w, r3.y
  31:   min r3.x, r4.x, r0.w
  32:   sample r4.xyzw, r3.xzwx, t4.xyzw, s1
  33:   add r5.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  34:   sample r5.xyzw, r5.xyzx, t4.xyzw, s1
  35:   add r3.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  36:   sample r3.xyzw, r3.xyzx, t4.xyzw, s1
  37:   mov r2.w, l(1.000000)
  38:   dp4 r4.x, r4.xyzw, r2.xyzw
  39:   dp4 r4.y, r5.xyzw, r2.xyzw
  40:   dp4 r4.z, r3.xyzw, r2.xyzw
  41: else 
  42:   mov r2.w, l(1.000000)
  43:   dp4 r4.x, cb1[39].xyzw, r2.xyzw
  44:   dp4 r4.y, cb1[40].xyzw, r2.xyzw
  45:   dp4 r4.z, cb1[41].xyzw, r2.xyzw
  46: endif 
  47: mul r3.xyzw, r2.yzzx, r2.xyzz
  48: dp4 r5.x, cb1[42].xyzw, r3.xyzw
  49: dp4 r5.y, cb1[43].xyzw, r3.xyzw
  50: dp4 r5.z, cb1[44].xyzw, r3.xyzw
  51: mul r0.w, r2.y, r2.y
  52: mad r0.w, r2.x, r2.x, -r0.w
  53: mad r3.xyz, cb1[45].xyzx, r0.wwww, r5.xyzx
  54: add r3.xyz, r3.xyzx, r4.xyzx
  55: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: sample r4.xyzw, v6.xyxx, t3.xyzw, s0
  57: add r3.xyz, r3.xyzx, r4.xyzx
  58: mul r3.xyz, r1.wwww, r3.xyzx
  59: mul o3.xyz, r1.xyzx, r3.xyzx
  60: mad o2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  61: mov o0.xyzw, r1.xyzw
  62: mov o1.xyz, r0.xyzx
  63: mov o2.w, l(1.000000)
  64: mov o3.w, l(1.000000)
  65: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTMAP_ON LIGHTPROBE_SH UNITY_HDR_ON UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  18: add o2.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  30: mov o6.zw, l(0,0,0,0)
  31: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 45 math, 6 temp registers, 7 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 4
Set 2D Texture "unity_Lightmap" to slot 3 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: mul o1.w, r0.w, cb0[9].x
   2: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   3: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   4: max r0.w, r0.y, r0.x
   5: max r0.w, r0.z, r0.w
   6: add r0.w, -r0.w, l(1.000000)
   7: mul r1.xyz, r0.wwww, r1.xyzx
   8: dp3 r0.w, v5.xyzx, v5.xyzx
   9: rsq r0.w, r0.w
  10: mul r2.xyz, r0.wwww, v5.xyzx
  11: sample r3.xyzw, v1.xyxx, t2.xyzw, s4
  12: add r0.w, -cb0[9].y, l(1.000000)
  13: mad r1.w, r3.y, cb0[9].y, r0.w
  14: eq r0.w, cb2[0].x, l(1.000000)
  15: if_nz r0.w
  16:   eq r0.w, cb2[0].y, l(1.000000)
  17:   mul r3.xyz, v4.wwww, cb2[2].xyzx
  18:   mad r3.xyz, cb2[1].xyzx, v3.wwww, r3.xyzx
  19:   mad r3.xyz, cb2[3].xyzx, v5.wwww, r3.xyzx
  20:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  21:   mov r4.y, v3.w
  22:   mov r4.z, v4.w
  23:   mov r4.w, v5.w
  24:   movc r3.xyz, r0.wwww, r3.xyzx, r4.yzwy
  25:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  26:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  27:   mul r0.w, r3.y, l(0.250000)
  28:   mul r3.y, cb2[0].z, l(0.500000)
  29:   mad r4.x, -cb2[0].z, l(0.500000), l(0.250000)
  30:   max r0.w, r0.w, r3.y
  31:   min r3.x, r4.x, r0.w
  32:   sample r4.xyzw, r3.xzwx, t4.xyzw, s1
  33:   add r5.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  34:   sample r5.xyzw, r5.xyzx, t4.xyzw, s1
  35:   add r3.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  36:   sample r3.xyzw, r3.xyzx, t4.xyzw, s1
  37:   mov r2.w, l(1.000000)
  38:   dp4 r4.x, r4.xyzw, r2.xyzw
  39:   dp4 r4.y, r5.xyzw, r2.xyzw
  40:   dp4 r4.z, r3.xyzw, r2.xyzw
  41: else 
  42:   mov r2.w, l(1.000000)
  43:   dp4 r4.x, cb1[39].xyzw, r2.xyzw
  44:   dp4 r4.y, cb1[40].xyzw, r2.xyzw
  45:   dp4 r4.z, cb1[41].xyzw, r2.xyzw
  46: endif 
  47: mul r3.xyzw, r2.yzzx, r2.xyzz
  48: dp4 r5.x, cb1[42].xyzw, r3.xyzw
  49: dp4 r5.y, cb1[43].xyzw, r3.xyzw
  50: dp4 r5.z, cb1[44].xyzw, r3.xyzw
  51: mul r0.w, r2.y, r2.y
  52: mad r0.w, r2.x, r2.x, -r0.w
  53: mad r3.xyz, cb1[45].xyzx, r0.wwww, r5.xyzx
  54: add r3.xyz, r3.xyzx, r4.xyzx
  55: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  56: sample r4.xyzw, v6.xyxx, t3.xyzw, s0
  57: add r3.xyz, r3.xyzx, r4.xyzx
  58: mul r3.xyz, r1.wwww, r3.xyzx
  59: mul o3.xyz, r1.xyzx, r3.xyzx
  60: mad o2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  61: mov o0.xyzw, r1.xyzw
  62: mov o1.xyz, r0.xyzx
  63: mov o2.w, l(1.000000)
  64: mov o3.w, l(1.000000)
  65: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTMAP_ON LIGHTPROBE_SH UNITY_HDR_ON 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  19: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  20: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.x, r2.xyzx, r2.xyzx
  29: rsq r0.x, r0.x
  30: mul r2.xyz, r0.xxxx, r2.xyzx
  31: mul r3.xyz, r1.yzxy, r2.zxyz
  32: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  33: mov o5.xyz, r2.xyzx
  34: mul r0.x, v4.w, cb2[9].w
  35: mul o4.xyz, r0.xxxx, r1.xyzx
  36: mov o4.w, r0.y
  37: mov o5.w, r0.z
  38: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  39: mov o6.zw, l(0,0,0,0)
  40: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 55 math, 6 temp registers, 8 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 5
Set 2D Texture "unity_Lightmap" to slot 4 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: mul o1.w, r0.w, cb0[9].x
   2: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   3: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   4: max r0.w, r0.y, r0.x
   5: max r0.w, r0.z, r0.w
   6: add r0.w, -r0.w, l(1.000000)
   7: mul r1.xyz, r0.wwww, r1.xyzx
   8: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   9: mul r2.x, r2.w, r2.x
  10: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  11: mul r2.xy, r2.xyxx, cb0[8].xxxx
  12: dp2 r0.w, r2.xyxx, r2.xyxx
  13: min r0.w, r0.w, l(1.000000)
  14: add r0.w, -r0.w, l(1.000000)
  15: sqrt r0.w, r0.w
  16: mul r2.yzw, r2.yyyy, v4.xxyz
  17: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  18: mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
  19: dp3 r0.w, r2.xyzx, r2.xyzx
  20: rsq r0.w, r0.w
  21: mul r2.xyz, r0.wwww, r2.xyzx
  22: sample r3.xyzw, v1.xyxx, t3.xyzw, s5
  23: add r0.w, -cb0[9].y, l(1.000000)
  24: mad r1.w, r3.y, cb0[9].y, r0.w
  25: eq r0.w, cb2[0].x, l(1.000000)
  26: if_nz r0.w
  27:   eq r0.w, cb2[0].y, l(1.000000)
  28:   mul r3.xyz, v4.wwww, cb2[2].xyzx
  29:   mad r3.xyz, cb2[1].xyzx, v3.wwww, r3.xyzx
  30:   mad r3.xyz, cb2[3].xyzx, v5.wwww, r3.xyzx
  31:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  32:   mov r4.y, v3.w
  33:   mov r4.z, v4.w
  34:   mov r4.w, v5.w
  35:   movc r3.xyz, r0.wwww, r3.xyzx, r4.yzwy
  36:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  37:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  38:   mul r0.w, r3.y, l(0.250000)
  39:   mul r3.y, cb2[0].z, l(0.500000)
  40:   mad r4.x, -cb2[0].z, l(0.500000), l(0.250000)
  41:   max r0.w, r0.w, r3.y
  42:   min r3.x, r4.x, r0.w
  43:   sample r4.xyzw, r3.xzwx, t5.xyzw, s1
  44:   add r5.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  45:   sample r5.xyzw, r5.xyzx, t5.xyzw, s1
  46:   add r3.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  47:   sample r3.xyzw, r3.xyzx, t5.xyzw, s1
  48:   mov r2.w, l(1.000000)
  49:   dp4 r4.x, r4.xyzw, r2.xyzw
  50:   dp4 r4.y, r5.xyzw, r2.xyzw
  51:   dp4 r4.z, r3.xyzw, r2.xyzw
  52: else 
  53:   mov r2.w, l(1.000000)
  54:   dp4 r4.x, cb1[39].xyzw, r2.xyzw
  55:   dp4 r4.y, cb1[40].xyzw, r2.xyzw
  56:   dp4 r4.z, cb1[41].xyzw, r2.xyzw
  57: endif 
  58: mul r3.xyzw, r2.yzzx, r2.xyzz
  59: dp4 r5.x, cb1[42].xyzw, r3.xyzw
  60: dp4 r5.y, cb1[43].xyzw, r3.xyzw
  61: dp4 r5.z, cb1[44].xyzw, r3.xyzw
  62: mul r0.w, r2.y, r2.y
  63: mad r0.w, r2.x, r2.x, -r0.w
  64: mad r3.xyz, cb1[45].xyzx, r0.wwww, r5.xyzx
  65: add r3.xyz, r3.xyzx, r4.xyzx
  66: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  67: sample r4.xyzw, v6.xyxx, t4.xyzw, s0
  68: add r3.xyz, r3.xyzx, r4.xyzx
  69: mul r3.xyz, r1.wwww, r3.xyzx
  70: mul o3.xyz, r1.xyzx, r3.xyzx
  71: mad o2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  72: mov o0.xyzw, r1.xyzw
  73: mov o1.xyz, r0.xyzx
  74: mov o2.w, l(1.000000)
  75: mov o3.w, l(1.000000)
  76: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTMAP_ON LIGHTPROBE_SH UNITY_HDR_ON UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r0.yzw, cb1[3].xxyz, v0.wwww, r0.yyzw
  18: add o2.xyz, r0.yzwy, -cb2[r0.x + 64].xyzx
  19: mov o3.w, r0.y
  20: mul r1.xyz, v4.yyyy, cb1[1].xyzx
  21: mad r1.xyz, cb1[0].xyzx, v4.xxxx, r1.xyzx
  22: mad r1.xyz, cb1[2].xyzx, v4.zzzz, r1.xyzx
  23: dp3 r0.x, r1.xyzx, r1.xyzx
  24: rsq r0.x, r0.x
  25: mul r1.xyz, r0.xxxx, r1.xyzx
  26: mov o3.xyz, r1.xyzx
  27: dp3 r2.x, v1.xyzx, cb1[4].xyzx
  28: dp3 r2.y, v1.xyzx, cb1[5].xyzx
  29: dp3 r2.z, v1.xyzx, cb1[6].xyzx
  30: dp3 r0.x, r2.xyzx, r2.xyzx
  31: rsq r0.x, r0.x
  32: mul r2.xyz, r0.xxxx, r2.xyzx
  33: mul r3.xyz, r1.yzxy, r2.zxyz
  34: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  35: mov o5.xyz, r2.xyzx
  36: mul r0.x, v4.w, cb1[9].w
  37: mul o4.xyz, r0.xxxx, r1.xyzx
  38: mov o4.w, r0.z
  39: mov o5.w, r0.w
  40: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  41: mov o6.zw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 55 math, 6 temp registers, 8 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 5
Set 2D Texture "unity_Lightmap" to slot 4 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: mul o1.w, r0.w, cb0[9].x
   2: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   3: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   4: max r0.w, r0.y, r0.x
   5: max r0.w, r0.z, r0.w
   6: add r0.w, -r0.w, l(1.000000)
   7: mul r1.xyz, r0.wwww, r1.xyzx
   8: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   9: mul r2.x, r2.w, r2.x
  10: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  11: mul r2.xy, r2.xyxx, cb0[8].xxxx
  12: dp2 r0.w, r2.xyxx, r2.xyxx
  13: min r0.w, r0.w, l(1.000000)
  14: add r0.w, -r0.w, l(1.000000)
  15: sqrt r0.w, r0.w
  16: mul r2.yzw, r2.yyyy, v4.xxyz
  17: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  18: mad r2.xyz, v5.xyzx, r0.wwww, r2.xyzx
  19: dp3 r0.w, r2.xyzx, r2.xyzx
  20: rsq r0.w, r0.w
  21: mul r2.xyz, r0.wwww, r2.xyzx
  22: sample r3.xyzw, v1.xyxx, t3.xyzw, s5
  23: add r0.w, -cb0[9].y, l(1.000000)
  24: mad r1.w, r3.y, cb0[9].y, r0.w
  25: eq r0.w, cb2[0].x, l(1.000000)
  26: if_nz r0.w
  27:   eq r0.w, cb2[0].y, l(1.000000)
  28:   mul r3.xyz, v4.wwww, cb2[2].xyzx
  29:   mad r3.xyz, cb2[1].xyzx, v3.wwww, r3.xyzx
  30:   mad r3.xyz, cb2[3].xyzx, v5.wwww, r3.xyzx
  31:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  32:   mov r4.y, v3.w
  33:   mov r4.z, v4.w
  34:   mov r4.w, v5.w
  35:   movc r3.xyz, r0.wwww, r3.xyzx, r4.yzwy
  36:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  37:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  38:   mul r0.w, r3.y, l(0.250000)
  39:   mul r3.y, cb2[0].z, l(0.500000)
  40:   mad r4.x, -cb2[0].z, l(0.500000), l(0.250000)
  41:   max r0.w, r0.w, r3.y
  42:   min r3.x, r4.x, r0.w
  43:   sample r4.xyzw, r3.xzwx, t5.xyzw, s1
  44:   add r5.xyz, r3.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  45:   sample r5.xyzw, r5.xyzx, t5.xyzw, s1
  46:   add r3.xyz, r3.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  47:   sample r3.xyzw, r3.xyzx, t5.xyzw, s1
  48:   mov r2.w, l(1.000000)
  49:   dp4 r4.x, r4.xyzw, r2.xyzw
  50:   dp4 r4.y, r5.xyzw, r2.xyzw
  51:   dp4 r4.z, r3.xyzw, r2.xyzw
  52: else 
  53:   mov r2.w, l(1.000000)
  54:   dp4 r4.x, cb1[39].xyzw, r2.xyzw
  55:   dp4 r4.y, cb1[40].xyzw, r2.xyzw
  56:   dp4 r4.z, cb1[41].xyzw, r2.xyzw
  57: endif 
  58: mul r3.xyzw, r2.yzzx, r2.xyzz
  59: dp4 r5.x, cb1[42].xyzw, r3.xyzw
  60: dp4 r5.y, cb1[43].xyzw, r3.xyzw
  61: dp4 r5.z, cb1[44].xyzw, r3.xyzw
  62: mul r0.w, r2.y, r2.y
  63: mad r0.w, r2.x, r2.x, -r0.w
  64: mad r3.xyz, cb1[45].xyzx, r0.wwww, r5.xyzx
  65: add r3.xyz, r3.xyzx, r4.xyzx
  66: max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  67: sample r4.xyzw, v6.xyxx, t4.xyzw, s0
  68: add r3.xyz, r3.xyzx, r4.xyzx
  69: mul r3.xyz, r1.wwww, r3.xyzx
  70: mul o3.xyz, r1.xyzx, r3.xyzx
  71: mad o2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  72: mov o0.xyzw, r1.xyzw
  73: mov o1.xyz, r0.xyzx
  74: mov o2.w, l(1.000000)
  75: mov o3.w, l(1.000000)
  76: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTMAP_ON LIGHTPROBE_SH UNITY_HDR_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul o5.xyz, r0.wwww, r0.xyzx
  27: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  28: mov o6.zw, l(0,0,0,0)
  29: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 44 math, 5 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 3
Set 2D Texture "unity_Lightmap" to slot 2 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  10: add r2.x, -cb0[9].y, l(1.000000)
  11: mad r0.w, r2.y, cb0[9].y, r2.x
  12: eq r2.x, cb2[0].x, l(1.000000)
  13: if_nz r2.x
  14:   eq r2.x, cb2[0].y, l(1.000000)
  15:   mul r2.yzw, v4.wwww, cb2[2].xxyz
  16:   mad r2.yzw, cb2[1].xxyz, v3.wwww, r2.yyzw
  17:   mad r2.yzw, cb2[3].xxyz, v5.wwww, r2.yyzw
  18:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  19:   mov r3.y, v3.w
  20:   mov r3.z, v4.w
  21:   mov r3.w, v5.w
  22:   movc r2.xyz, r2.xxxx, r2.yzwy, r3.yzwy
  23:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  24:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  25:   mul r2.y, r2.y, l(0.250000)
  26:   mul r3.x, cb2[0].z, l(0.500000)
  27:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  28:   max r2.y, r2.y, r3.x
  29:   min r2.x, r3.y, r2.y
  30:   sample r3.xyzw, r2.xzwx, t3.xyzw, s1
  31:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  32:   sample r4.xyzw, r4.xyzx, t3.xyzw, s1
  33:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  34:   sample r2.xyzw, r2.xyzx, t3.xyzw, s1
  35:   mov r1.w, l(1.000000)
  36:   dp4 r3.x, r3.xyzw, r1.xyzw
  37:   dp4 r3.y, r4.xyzw, r1.xyzw
  38:   dp4 r3.z, r2.xyzw, r1.xyzw
  39: else 
  40:   mov r1.w, l(1.000000)
  41:   dp4 r3.x, cb1[39].xyzw, r1.xyzw
  42:   dp4 r3.y, cb1[40].xyzw, r1.xyzw
  43:   dp4 r3.z, cb1[41].xyzw, r1.xyzw
  44: endif 
  45: mul r2.xyzw, r1.yzzx, r1.xyzz
  46: dp4 r4.x, cb1[42].xyzw, r2.xyzw
  47: dp4 r4.y, cb1[43].xyzw, r2.xyzw
  48: dp4 r4.z, cb1[44].xyzw, r2.xyzw
  49: mul r1.w, r1.y, r1.y
  50: mad r1.w, r1.x, r1.x, -r1.w
  51: mad r2.xyz, cb1[45].xyzx, r1.wwww, r4.xyzx
  52: add r2.xyz, r2.xyzx, r3.xyzx
  53: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  54: sample r3.xyzw, v6.xyxx, t2.xyzw, s0
  55: add r2.xyz, r2.xyzx, r3.xyzx
  56: mul r2.xyz, r0.wwww, r2.xyzx
  57: mul o3.xyz, r0.xyzx, r2.xyzx
  58: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  59: mov o0.xyzw, r0.xyzw
  60: mov o1.xyz, cb0[3].xyzx
  61: mov o1.w, cb0[8].w
  62: mov o2.w, l(1.000000)
  63: mov o3.w, l(1.000000)
  64: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: LIGHTMAP_ON LIGHTPROBE_SH UNITY_HDR_ON UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 24 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  18: add o2.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  30: mov o6.zw, l(0,0,0,0)
  31: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 44 math, 5 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 3
Set 2D Texture "unity_Lightmap" to slot 2 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  10: add r2.x, -cb0[9].y, l(1.000000)
  11: mad r0.w, r2.y, cb0[9].y, r2.x
  12: eq r2.x, cb2[0].x, l(1.000000)
  13: if_nz r2.x
  14:   eq r2.x, cb2[0].y, l(1.000000)
  15:   mul r2.yzw, v4.wwww, cb2[2].xxyz
  16:   mad r2.yzw, cb2[1].xxyz, v3.wwww, r2.yyzw
  17:   mad r2.yzw, cb2[3].xxyz, v5.wwww, r2.yyzw
  18:   add r2.yzw, r2.yyzw, cb2[4].xxyz
  19:   mov r3.y, v3.w
  20:   mov r3.z, v4.w
  21:   mov r3.w, v5.w
  22:   movc r2.xyz, r2.xxxx, r2.yzwy, r3.yzwy
  23:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  24:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  25:   mul r2.y, r2.y, l(0.250000)
  26:   mul r3.x, cb2[0].z, l(0.500000)
  27:   mad r3.y, -cb2[0].z, l(0.500000), l(0.250000)
  28:   max r2.y, r2.y, r3.x
  29:   min r2.x, r3.y, r2.y
  30:   sample r3.xyzw, r2.xzwx, t3.xyzw, s1
  31:   add r4.xyz, r2.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  32:   sample r4.xyzw, r4.xyzx, t3.xyzw, s1
  33:   add r2.xyz, r2.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  34:   sample r2.xyzw, r2.xyzx, t3.xyzw, s1
  35:   mov r1.w, l(1.000000)
  36:   dp4 r3.x, r3.xyzw, r1.xyzw
  37:   dp4 r3.y, r4.xyzw, r1.xyzw
  38:   dp4 r3.z, r2.xyzw, r1.xyzw
  39: else 
  40:   mov r1.w, l(1.000000)
  41:   dp4 r3.x, cb1[39].xyzw, r1.xyzw
  42:   dp4 r3.y, cb1[40].xyzw, r1.xyzw
  43:   dp4 r3.z, cb1[41].xyzw, r1.xyzw
  44: endif 
  45: mul r2.xyzw, r1.yzzx, r1.xyzz
  46: dp4 r4.x, cb1[42].xyzw, r2.xyzw
  47: dp4 r4.y, cb1[43].xyzw, r2.xyzw
  48: dp4 r4.z, cb1[44].xyzw, r2.xyzw
  49: mul r1.w, r1.y, r1.y
  50: mad r1.w, r1.x, r1.x, -r1.w
  51: mad r2.xyz, cb1[45].xyzx, r1.wwww, r4.xyzx
  52: add r2.xyz, r2.xyzx, r3.xyzx
  53: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  54: sample r3.xyzw, v6.xyxx, t2.xyzw, s0
  55: add r2.xyz, r2.xyzx, r3.xyzx
  56: mul r2.xyz, r0.wwww, r2.xyzx
  57: mul o3.xyz, r0.xyzx, r2.xyzx
  58: mad o2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  59: mov o0.xyzw, r0.xyzw
  60: mov o1.xyz, cb0[3].xyzx
  61: mov o1.w, cb0[8].w
  62: mov o2.w, l(1.000000)
  63: mov o3.w, l(1.000000)
  64: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 22 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov r0.w, l(0)
  18: mov o3.xyzw, r0.wwwx
  19: mov o4.xyzw, r0.wwwy
  20: mov o5.w, r0.z
  21: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  22: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  23: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  24: dp3 r0.w, r0.xyzx, r0.xyzx
  25: rsq r0.w, r0.w
  26: mul o5.xyz, r0.wwww, r0.xyzx
  27: mov o6.xyzw, l(0,0,0,0)
  28: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 12 math, 2 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_SpecGlossMap" to slot 1
Set 2D Texture "_OcclusionMap" to slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t2.xyzw, s2
   1: add r0.x, -cb0[9].y, l(1.000000)
   2: mad o0.w, r0.y, cb0[9].y, r0.x
   3: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   4: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   5: sample r1.xyzw, v1.xyxx, t1.xyzw, s1
   6: max r0.w, r1.y, r1.x
   7: max r0.w, r1.z, r0.w
   8: add r0.w, -r0.w, l(1.000000)
   9: mul o0.xyz, r0.wwww, r0.xyzx
  10: mul o1.w, r1.w, cb0[9].x
  11: mov o1.xyz, r1.xyzx
  12: dp3 r0.x, v5.xyzx, v5.xyzx
  13: rsq r0.x, r0.x
  14: mul r0.xyz, r0.xxxx, v5.xyzx
  15: mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: mov o2.w, l(1.000000)
  17: mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  18: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 23 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  18: add o2.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  24: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  25: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  26: dp3 r0.w, r0.xyzx, r0.xyzx
  27: rsq r0.w, r0.w
  28: mul o5.xyz, r0.wwww, r0.xyzx
  29: mov o6.xyzw, l(0,0,0,0)
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 12 math, 2 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_SpecGlossMap" to slot 1
Set 2D Texture "_OcclusionMap" to slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t2.xyzw, s2
   1: add r0.x, -cb0[9].y, l(1.000000)
   2: mad o0.w, r0.y, cb0[9].y, r0.x
   3: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   4: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   5: sample r1.xyzw, v1.xyxx, t1.xyzw, s1
   6: max r0.w, r1.y, r1.x
   7: max r0.w, r1.z, r0.w
   8: add r0.w, -r0.w, l(1.000000)
   9: mul o0.xyz, r0.wwww, r0.xyzx
  10: mul o1.w, r1.w, cb0[9].x
  11: mov o1.xyz, r1.xyzx
  12: dp3 r0.x, v5.xyzx, v5.xyzx
  13: rsq r0.x, r0.x
  14: mul r0.xyz, r0.xxxx, v5.xyzx
  15: mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  16: mov o2.w, l(1.000000)
  17: mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  18: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: <none>
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add o2.xyz, r0.xyzx, -cb1[4].xyzx
  17: mov o3.w, r0.x
  18: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  19: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  20: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  21: dp3 r0.x, r1.xyzx, r1.xyzx
  22: rsq r0.x, r0.x
  23: mul r1.xyz, r0.xxxx, r1.xyzx
  24: mov o3.xyz, r1.xyzx
  25: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.x, r2.xyzx, r2.xyzx
  29: rsq r0.x, r0.x
  30: mul r2.xyz, r0.xxxx, r2.xyzx
  31: mul r3.xyz, r1.yzxy, r2.zxyz
  32: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  33: mov o5.xyz, r2.xyzx
  34: mul r0.x, v4.w, cb2[9].w
  35: mul o4.xyz, r0.xxxx, r1.xyzx
  36: mov o4.w, r0.y
  37: mov o5.w, r0.z
  38: mov o6.xyzw, l(0,0,0,0)
  39: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 22 math, 2 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_BumpMap" to slot 2 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 3

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t3.xyzw, s3
   1: add r0.x, -cb0[9].y, l(1.000000)
   2: mad o0.w, r0.y, cb0[9].y, r0.x
   3: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   4: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   5: sample r1.xyzw, v1.xyxx, t1.xyzw, s2
   6: max r0.w, r1.y, r1.x
   7: max r0.w, r1.z, r0.w
   8: add r0.w, -r0.w, l(1.000000)
   9: mul o0.xyz, r0.wwww, r0.xyzx
  10: mul o1.w, r1.w, cb0[9].x
  11: mov o1.xyz, r1.xyzx
  12: sample r0.xyzw, v1.xyxx, t2.xyzw, s1
  13: mul r0.x, r0.w, r0.x
  14: mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  15: mul r0.xy, r0.xyxx, cb0[8].xxxx
  16: mul r1.xyz, r0.yyyy, v4.xyzx
  17: mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
  18: dp2 r0.x, r0.xyxx, r0.xyxx
  19: min r0.x, r0.x, l(1.000000)
  20: add r0.x, -r0.x, l(1.000000)
  21: sqrt r0.x, r0.x
  22: mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
  23: dp3 r0.w, r0.xyzx, r0.xyzx
  24: rsq r0.w, r0.w
  25: mul r0.xyz, r0.wwww, r0.xyzx
  26: mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  27: mov o2.w, l(1.000000)
  28: mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  29: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 33 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyz
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r0.yzw, cb1[3].xxyz, v0.wwww, r0.yyzw
  18: add o2.xyz, r0.yzwy, -cb2[r0.x + 64].xyzx
  19: mov o3.w, r0.y
  20: mul r1.xyz, v4.yyyy, cb1[1].xyzx
  21: mad r1.xyz, cb1[0].xyzx, v4.xxxx, r1.xyzx
  22: mad r1.xyz, cb1[2].xyzx, v4.zzzz, r1.xyzx
  23: dp3 r0.x, r1.xyzx, r1.xyzx
  24: rsq r0.x, r0.x
  25: mul r1.xyz, r0.xxxx, r1.xyzx
  26: mov o3.xyz, r1.xyzx
  27: dp3 r2.x, v1.xyzx, cb1[4].xyzx
  28: dp3 r2.y, v1.xyzx, cb1[5].xyzx
  29: dp3 r2.z, v1.xyzx, cb1[6].xyzx
  30: dp3 r0.x, r2.xyzx, r2.xyzx
  31: rsq r0.x, r0.x
  32: mul r2.xyz, r0.xxxx, r2.xyzx
  33: mul r3.xyz, r1.yzxy, r2.zxyz
  34: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  35: mov o5.xyz, r2.xyzx
  36: mul r0.x, v4.w, cb1[9].w
  37: mul o4.xyz, r0.xxxx, r1.xyzx
  38: mov o4.w, r0.z
  39: mov o5.w, r0.w
  40: mov o6.xyzw, l(0,0,0,0)
  41: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 22 math, 2 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_BumpMap" to slot 2 sampler slot 1
Set 2D Texture "_OcclusionMap" to slot 3

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyz
      dcl_output o0.xyzw
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_temps 2
   0: sample r0.xyzw, v1.xyxx, t3.xyzw, s3
   1: add r0.x, -cb0[9].y, l(1.000000)
   2: mad o0.w, r0.y, cb0[9].y, r0.x
   3: sample r0.xyzw, v1.xyxx, t0.xyzw, s0
   4: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   5: sample r1.xyzw, v1.xyxx, t1.xyzw, s2
   6: max r0.w, r1.y, r1.x
   7: max r0.w, r1.z, r0.w
   8: add r0.w, -r0.w, l(1.000000)
   9: mul o0.xyz, r0.wwww, r0.xyzx
  10: mul o1.w, r1.w, cb0[9].x
  11: mov o1.xyz, r1.xyzx
  12: sample r0.xyzw, v1.xyxx, t2.xyzw, s1
  13: mul r0.x, r0.w, r0.x
  14: mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  15: mul r0.xy, r0.xyxx, cb0[8].xxxx
  16: mul r1.xyz, r0.yyyy, v4.xyzx
  17: mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
  18: dp2 r0.x, r0.xyxx, r0.xyxx
  19: min r0.x, r0.x, l(1.000000)
  20: add r0.x, -r0.x, l(1.000000)
  21: sqrt r0.x, r0.x
  22: mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
  23: dp3 r0.w, r0.xyzx, r0.xyzx
  24: rsq r0.w, r0.w
  25: mul r0.xyz, r0.wwww, r0.xyzx
  26: mad o2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  27: mov o2.w, l(1.000000)
  28: mov o3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  29: ret 
// Approximately 0 instruction slots used


 }
}
SubShader { 
 LOD 150
 Tags { "RenderType"="Opaque" "PerformanceChecks"="False" }


 // Stats for Vertex shader:
 //        d3d11: 36 avg math (25..69)
 // Stats for Fragment shader:
 //        d3d11: 106 avg math (41..186), 5 avg texture (4..9), 3 avg branch (0..8)
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE"="FORWARDBASE" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite [_ZWrite]
  Blend [_SrcBlend] [_DstBlend]
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mov r0.w, l(0)
  22: mov o3.xyzw, r0.wwwx
  23: mov o4.xyzw, r0.wwwy
  24: mov o5.w, r0.z
  25: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o6.xyzw, l(0,0,0,0)
  32: mov o7.xyzw, l(0,0,0,0)
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 52 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 2
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: add r0.w, -cb0[3].x, l(1.000000)
   3: dp3 r1.x, v5.xyzx, v5.xyzx
   4: rsq r1.x, r1.x
   5: mul r1.xyz, r1.xxxx, v5.xyzx
   6: eq r1.w, cb3[0].x, l(1.000000)
   7: if_nz r1.w
   8:   eq r1.w, cb3[0].y, l(1.000000)
   9:   mul r2.xyz, v4.wwww, cb3[2].xyzx
  10:   mad r2.xyz, cb3[1].xyzx, v3.wwww, r2.xyzx
  11:   mad r2.xyz, cb3[3].xyzx, v5.wwww, r2.xyzx
  12:   add r2.xyz, r2.xyzx, cb3[4].xyzx
  13:   mov r3.y, v3.w
  14:   mov r3.z, v4.w
  15:   mov r3.w, v5.w
  16:   movc r2.xyz, r1.wwww, r2.xyzx, r3.yzwy
  17:   add r2.xyz, r2.xyzx, -cb3[6].xyzx
  18:   mul r2.yzw, r2.xxyz, cb3[5].xxyz
  19:   mad r1.w, r2.y, l(0.250000), l(0.750000)
  20:   mad r2.y, cb3[0].z, l(0.500000), l(0.750000)
  21:   max r2.x, r1.w, r2.y
  22:   sample r2.xyzw, r2.xzwx, t4.xyzw, s1
  23: else 
  24:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  25: endif 
  26: dp4_sat r1.w, r2.xyzw, cb1[46].xyzw
  27: sample r2.xyzw, v1.xyxx, t1.xyzw, s4
  28: add r3.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
  29: dp3 r2.x, v2.xyzx, r1.xyzx
  30: add r2.x, r2.x, r2.x
  31: mad r2.xzw, r1.xxyz, -r2.xxxx, v2.xxyz
  32: mul r4.xyz, r1.wwww, cb0[2].xyzx
  33: mad r1.w, -r3.x, l(0.700000), l(1.700000)
  34: mul r1.w, r1.w, r3.x
  35: mul r1.w, r1.w, l(6.000000)
  36: sample_l r5.xyzw, r2.xzwx, t3.xyzw, s0, r1.w
  37: add r1.w, r5.w, l(-1.000000)
  38: mad r1.w, cb2[3].w, r1.w, l(1.000000)
  39: log r1.w, r1.w
  40: mul r1.w, r1.w, cb2[3].y
  41: exp r1.w, r1.w
  42: mul r1.w, r1.w, cb2[3].x
  43: mul r2.xzw, r5.xxyz, r1.wwww
  44: mul r2.xyz, r2.yyyy, r2.xzwx
  45: dp3 r1.w, -v2.xyzx, r1.xyzx
  46: add r2.w, r1.w, r1.w
  47: mad r5.xyz, r1.xyzx, -r2.wwww, -v2.xyzx
  48: dp3_sat r1.x, r1.xyzx, cb1[0].xyzx
  49: mov_sat r1.w, r1.w
  50: dp3 r5.x, r5.xyzx, cb1[0].xyzx
  51: add r5.y, -r1.w, l(1.000000)
  52: mul r5.zw, r5.xxxy, r5.xxxy
  53: mul r1.yz, r5.xxyx, r5.xxwx
  54: mul r3.yz, r5.zzyz, r1.yyzy
  55: add r1.y, -r0.w, l(1.000000)
  56: add_sat r1.y, r1.y, cb0[8].w
  57: sample r5.xyzw, r3.ywyy, t2.xyzw, s2
  58: mul r1.z, r5.x, l(16.000000)
  59: mul r3.xyw, r1.zzzz, cb0[3].xyxz
  60: mad r0.xyz, r0.xyzx, r0.wwww, r3.xywx
  61: mul r1.xzw, r1.xxxx, r4.xxyz
  62: add r3.xyw, r1.yyyy, -cb0[3].xyxz
  63: mad r3.xyz, r3.zzzz, r3.xywx, cb0[3].xyzx
  64: mul r2.xyz, r2.xyzx, r3.xyzx
  65: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
  66: mov o0.w, l(1.000000)
  67: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  18: add r0.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  19: dp3 r0.w, r0.xyzx, r0.xyzx
  20: rsq r0.w, r0.w
  21: mul o2.xyz, r0.wwww, r0.xyzx
  22: mov o2.w, l(0)
  23: mov r1.w, l(0)
  24: mov o3.xyzw, r1.wwwx
  25: mov o4.xyzw, r1.wwwy
  26: mov o5.w, r1.z
  27: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  28: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  29: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  30: dp3 r0.w, r0.xyzx, r0.xyzx
  31: rsq r0.w, r0.w
  32: mul o5.xyz, r0.wwww, r0.xyzx
  33: mov o6.xyzw, l(0,0,0,0)
  34: mov o7.xyzw, l(0,0,0,0)
  35: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 52 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 2
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: add r0.w, -cb0[3].x, l(1.000000)
   3: dp3 r1.x, v5.xyzx, v5.xyzx
   4: rsq r1.x, r1.x
   5: mul r1.xyz, r1.xxxx, v5.xyzx
   6: eq r1.w, cb3[0].x, l(1.000000)
   7: if_nz r1.w
   8:   eq r1.w, cb3[0].y, l(1.000000)
   9:   mul r2.xyz, v4.wwww, cb3[2].xyzx
  10:   mad r2.xyz, cb3[1].xyzx, v3.wwww, r2.xyzx
  11:   mad r2.xyz, cb3[3].xyzx, v5.wwww, r2.xyzx
  12:   add r2.xyz, r2.xyzx, cb3[4].xyzx
  13:   mov r3.y, v3.w
  14:   mov r3.z, v4.w
  15:   mov r3.w, v5.w
  16:   movc r2.xyz, r1.wwww, r2.xyzx, r3.yzwy
  17:   add r2.xyz, r2.xyzx, -cb3[6].xyzx
  18:   mul r2.yzw, r2.xxyz, cb3[5].xxyz
  19:   mad r1.w, r2.y, l(0.250000), l(0.750000)
  20:   mad r2.y, cb3[0].z, l(0.500000), l(0.750000)
  21:   max r2.x, r1.w, r2.y
  22:   sample r2.xyzw, r2.xzwx, t4.xyzw, s1
  23: else 
  24:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  25: endif 
  26: dp4_sat r1.w, r2.xyzw, cb1[46].xyzw
  27: sample r2.xyzw, v1.xyxx, t1.xyzw, s4
  28: add r3.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
  29: dp3 r2.x, v2.xyzx, r1.xyzx
  30: add r2.x, r2.x, r2.x
  31: mad r2.xzw, r1.xxyz, -r2.xxxx, v2.xxyz
  32: mul r4.xyz, r1.wwww, cb0[2].xyzx
  33: mad r1.w, -r3.x, l(0.700000), l(1.700000)
  34: mul r1.w, r1.w, r3.x
  35: mul r1.w, r1.w, l(6.000000)
  36: sample_l r5.xyzw, r2.xzwx, t3.xyzw, s0, r1.w
  37: add r1.w, r5.w, l(-1.000000)
  38: mad r1.w, cb2[3].w, r1.w, l(1.000000)
  39: log r1.w, r1.w
  40: mul r1.w, r1.w, cb2[3].y
  41: exp r1.w, r1.w
  42: mul r1.w, r1.w, cb2[3].x
  43: mul r2.xzw, r5.xxyz, r1.wwww
  44: mul r2.xyz, r2.yyyy, r2.xzwx
  45: dp3 r1.w, -v2.xyzx, r1.xyzx
  46: add r2.w, r1.w, r1.w
  47: mad r5.xyz, r1.xyzx, -r2.wwww, -v2.xyzx
  48: dp3_sat r1.x, r1.xyzx, cb1[0].xyzx
  49: mov_sat r1.w, r1.w
  50: dp3 r5.x, r5.xyzx, cb1[0].xyzx
  51: add r5.y, -r1.w, l(1.000000)
  52: mul r5.zw, r5.xxxy, r5.xxxy
  53: mul r1.yz, r5.xxyx, r5.xxwx
  54: mul r3.yz, r5.zzyz, r1.yyzy
  55: add r1.y, -r0.w, l(1.000000)
  56: add_sat r1.y, r1.y, cb0[8].w
  57: sample r5.xyzw, r3.ywyy, t2.xyzw, s2
  58: mul r1.z, r5.x, l(16.000000)
  59: mul r3.xyw, r1.zzzz, cb0[3].xyxz
  60: mad r0.xyz, r0.xyzx, r0.wwww, r3.xywx
  61: mul r1.xzw, r1.xxxx, r4.xxyz
  62: add r3.xyw, r1.yyyy, -cb0[3].xyxz
  63: mad r3.xyz, r3.zzzz, r3.xywx, cb0[3].xyzx
  64: mul r2.xyz, r2.xyzx, r3.xyzx
  65: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
  66: mov o0.w, l(1.000000)
  67: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 37 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mov r0.w, l(0)
  22: mov o3.xyzw, r0.wwwx
  23: mov o4.xyzw, r0.wwwy
  24: mov o5.w, r0.z
  25: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul r0.xyz, r0.wwww, r0.xyzx
  31: mov o5.xyz, r0.xyzx
  32: mul r1.x, r0.y, r0.y
  33: mad r1.x, r0.x, r0.x, -r1.x
  34: mul r2.xyzw, r0.yzzx, r0.xyzz
  35: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  36: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  37: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  38: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  39: mov r0.w, l(1.000000)
  40: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  41: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  42: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  43: add r0.xyz, r1.xyzx, r2.xyzx
  44: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: mov o6.w, l(0)
  46: mov o7.xyzw, l(0,0,0,0)
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 54 math, 8 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: mul r1.xyz, r1.wwww, r1.xyzx
   5: dp3 r2.x, v5.xyzx, v5.xyzx
   6: rsq r2.x, r2.x
   7: mul r2.xyz, r2.xxxx, v5.xyzx
   8: eq r2.w, cb3[0].x, l(1.000000)
   9: if_nz r2.w
  10:   eq r2.w, cb3[0].y, l(1.000000)
  11:   mul r3.xyz, v4.wwww, cb3[2].xyzx
  12:   mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  13:   mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  14:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  15:   mov r4.y, v3.w
  16:   mov r4.z, v4.w
  17:   mov r4.w, v5.w
  18:   movc r3.xyz, r2.wwww, r3.xyzx, r4.yzwy
  19:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  20:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  21:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  22:   mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
  23:   max r3.x, r2.w, r3.y
  24:   sample r3.xyzw, r3.xzwx, t5.xyzw, s1
  25: else 
  26:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  27: endif 
  28: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  29: sample r3.xyzw, v1.xyxx, t2.xyzw, s5
  30: mad r4.z, -r0.w, cb0[9].x, l(1.000000)
  31: dp3 r3.x, v2.xyzx, r2.xyzx
  32: add r3.x, r3.x, r3.x
  33: mad r3.xzw, r2.xxyz, -r3.xxxx, v2.xxyz
  34: mul r5.xyz, r2.wwww, cb0[2].xyzx
  35: mul r6.xyz, r3.yyyy, v6.xyzx
  36: mad r2.w, -r4.z, l(0.700000), l(1.700000)
  37: mul r2.w, r2.w, r4.z
  38: mul r2.w, r2.w, l(6.000000)
  39: sample_l r7.xyzw, r3.xzwx, t4.xyzw, s0, r2.w
  40: add r2.w, r7.w, l(-1.000000)
  41: mad r2.w, cb2[3].w, r2.w, l(1.000000)
  42: log r2.w, r2.w
  43: mul r2.w, r2.w, cb2[3].y
  44: exp r2.w, r2.w
  45: mul r2.w, r2.w, cb2[3].x
  46: mul r3.xzw, r7.xxyz, r2.wwww
  47: mul r3.xyz, r3.yyyy, r3.xzwx
  48: dp3 r2.w, -v2.xyzx, r2.xyzx
  49: add r3.w, r2.w, r2.w
  50: mad r7.xyz, r2.xyzx, -r3.wwww, -v2.xyzx
  51: dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
  52: mov_sat r2.w, r2.w
  53: dp3 r7.x, r7.xyzx, cb1[0].xyzx
  54: add r7.y, -r2.w, l(1.000000)
  55: mul r7.zw, r7.xxxy, r7.xxxy
  56: mul r2.yz, r7.xxyx, r7.xxwx
  57: mul r4.xy, r7.zyzz, r2.yzyy
  58: mad r0.w, r0.w, cb0[9].x, -r1.w
  59: add_sat r0.w, r0.w, l(1.000000)
  60: sample r7.xyzw, r4.xzxx, t3.xyzw, s2
  61: mul r1.w, r7.x, l(16.000000)
  62: mad r2.yzw, r1.wwww, r0.xxyz, r1.xxyz
  63: mul r4.xzw, r2.xxxx, r5.xxyz
  64: add r5.xyz, -r0.xyzx, r0.wwww
  65: mad r0.xyz, r4.yyyy, r5.xyzx, r0.xyzx
  66: mul r0.xyz, r0.xyzx, r3.xyzx
  67: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
  68: mad o0.xyz, r2.yzwy, r4.xzwx, r0.xyzx
  69: mov o0.w, l(1.000000)
  70: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb4[0].x
  14: mul r0.yzw, v0.yyyy, cb2[1].xxyz
  15: mad r0.yzw, cb2[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb2[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r0.yzwy
  18: add r0.xyz, r1.xyzx, -cb3[r0.x + 64].xyzx
  19: dp3 r0.w, r0.xyzx, r0.xyzx
  20: rsq r0.w, r0.w
  21: mul o2.xyz, r0.wwww, r0.xyzx
  22: mov o2.w, l(0)
  23: mov r1.w, l(0)
  24: mov o3.xyzw, r1.wwwx
  25: mov o4.xyzw, r1.wwwy
  26: mov o5.w, r1.z
  27: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r0.w, r0.xyzx, r0.xyzx
  31: rsq r0.w, r0.w
  32: mul r0.xyz, r0.wwww, r0.xyzx
  33: mov o5.xyz, r0.xyzx
  34: mul r1.x, r0.y, r0.y
  35: mad r1.x, r0.x, r0.x, -r1.x
  36: mul r2.xyzw, r0.yzzx, r0.xyzz
  37: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  38: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  39: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  40: mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
  41: mov r0.w, l(1.000000)
  42: dp4 r2.x, cb1[39].xyzw, r0.xyzw
  43: dp4 r2.y, cb1[40].xyzw, r0.xyzw
  44: dp4 r2.z, cb1[41].xyzw, r0.xyzw
  45: add r0.xyz, r1.xyzx, r2.xyzx
  46: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: mov o6.w, l(0)
  48: mov o7.xyzw, l(0,0,0,0)
  49: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 54 math, 8 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: mul r1.xyz, r1.wwww, r1.xyzx
   5: dp3 r2.x, v5.xyzx, v5.xyzx
   6: rsq r2.x, r2.x
   7: mul r2.xyz, r2.xxxx, v5.xyzx
   8: eq r2.w, cb3[0].x, l(1.000000)
   9: if_nz r2.w
  10:   eq r2.w, cb3[0].y, l(1.000000)
  11:   mul r3.xyz, v4.wwww, cb3[2].xyzx
  12:   mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  13:   mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  14:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  15:   mov r4.y, v3.w
  16:   mov r4.z, v4.w
  17:   mov r4.w, v5.w
  18:   movc r3.xyz, r2.wwww, r3.xyzx, r4.yzwy
  19:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  20:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  21:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  22:   mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
  23:   max r3.x, r2.w, r3.y
  24:   sample r3.xyzw, r3.xzwx, t5.xyzw, s1
  25: else 
  26:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  27: endif 
  28: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  29: sample r3.xyzw, v1.xyxx, t2.xyzw, s5
  30: mad r4.z, -r0.w, cb0[9].x, l(1.000000)
  31: dp3 r3.x, v2.xyzx, r2.xyzx
  32: add r3.x, r3.x, r3.x
  33: mad r3.xzw, r2.xxyz, -r3.xxxx, v2.xxyz
  34: mul r5.xyz, r2.wwww, cb0[2].xyzx
  35: mul r6.xyz, r3.yyyy, v6.xyzx
  36: mad r2.w, -r4.z, l(0.700000), l(1.700000)
  37: mul r2.w, r2.w, r4.z
  38: mul r2.w, r2.w, l(6.000000)
  39: sample_l r7.xyzw, r3.xzwx, t4.xyzw, s0, r2.w
  40: add r2.w, r7.w, l(-1.000000)
  41: mad r2.w, cb2[3].w, r2.w, l(1.000000)
  42: log r2.w, r2.w
  43: mul r2.w, r2.w, cb2[3].y
  44: exp r2.w, r2.w
  45: mul r2.w, r2.w, cb2[3].x
  46: mul r3.xzw, r7.xxyz, r2.wwww
  47: mul r3.xyz, r3.yyyy, r3.xzwx
  48: dp3 r2.w, -v2.xyzx, r2.xyzx
  49: add r3.w, r2.w, r2.w
  50: mad r7.xyz, r2.xyzx, -r3.wwww, -v2.xyzx
  51: dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
  52: mov_sat r2.w, r2.w
  53: dp3 r7.x, r7.xyzx, cb1[0].xyzx
  54: add r7.y, -r2.w, l(1.000000)
  55: mul r7.zw, r7.xxxy, r7.xxxy
  56: mul r2.yz, r7.xxyx, r7.xxwx
  57: mul r4.xy, r7.zyzz, r2.yzyy
  58: mad r0.w, r0.w, cb0[9].x, -r1.w
  59: add_sat r0.w, r0.w, l(1.000000)
  60: sample r7.xyzw, r4.xzxx, t3.xyzw, s2
  61: mul r1.w, r7.x, l(16.000000)
  62: mad r2.yzw, r1.wwww, r0.xxyz, r1.xxyz
  63: mul r4.xzw, r2.xxxx, r5.xxyz
  64: add r5.xyz, -r0.xyzx, r0.wwww
  65: mad r0.xyz, r4.yyyy, r5.xyzx, r0.xyzx
  66: mul r0.xyz, r0.xyzx, r3.xyzx
  67: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
  68: mad o0.xyz, r2.yzwy, r4.xzwx, r0.xyzx
  69: mov o0.w, l(1.000000)
  70: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 47 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mov o3.w, r0.x
  22: mul r1.xyz, v4.yyyy, cb3[1].xyzx
  23: mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
  24: mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
  25: dp3 r0.x, r1.xyzx, r1.xyzx
  26: rsq r0.x, r0.x
  27: mul r1.xyz, r0.xxxx, r1.xyzx
  28: mov o3.xyz, r1.xyzx
  29: mov o4.w, r0.y
  30: mov o5.w, r0.z
  31: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r0.w, r0.xyzx, r0.xyzx
  35: rsq r0.w, r0.w
  36: mul r0.xyz, r0.wwww, r0.xyzx
  37: mul r2.xyz, r1.yzxy, r0.zxyz
  38: mad r1.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
  39: mul r1.w, v4.w, cb3[9].w
  40: mul o4.xyz, r1.wwww, r1.xyzx
  41: mov o5.xyz, r0.xyzx
  42: mul r1.x, r0.y, r0.y
  43: mad r1.x, r0.x, r0.x, -r1.x
  44: mul r2.xyzw, r0.yzzx, r0.xyzz
  45: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  46: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  47: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  48: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  49: mov r0.w, l(1.000000)
  50: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  51: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  52: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  53: add r0.xyz, r1.xyzx, r2.xyzx
  54: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  55: mov o6.w, l(0)
  56: mov o7.xyzw, l(0,0,0,0)
  57: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 60 math, 8 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 5
Set 2D Texture "_BumpMap" to slot 2 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 6
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s5
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: mul r1.xyz, r1.wwww, r1.xyzx
   5: sample r2.xyzw, v1.xyxx, t2.xyzw, s4
   6: mul r2.x, r2.w, r2.x
   7: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: dp2 r2.z, r2.xyxx, r2.xyxx
   9: min r2.z, r2.z, l(1.000000)
  10: add r2.z, -r2.z, l(1.000000)
  11: sqrt r2.z, r2.z
  12: mul r3.xyz, r2.yyyy, v4.xyzx
  13: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  14: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  15: eq r2.w, cb3[0].x, l(1.000000)
  16: if_nz r2.w
  17:   eq r2.w, cb3[0].y, l(1.000000)
  18:   mul r3.xyz, v4.wwww, cb3[2].xyzx
  19:   mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  20:   mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  21:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  22:   mov r4.y, v3.w
  23:   mov r4.z, v4.w
  24:   mov r4.w, v5.w
  25:   movc r3.xyz, r2.wwww, r3.xyzx, r4.yzwy
  26:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  27:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  28:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  29:   mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
  30:   max r3.x, r2.w, r3.y
  31:   sample r3.xyzw, r3.xzwx, t6.xyzw, s1
  32: else 
  33:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  34: endif 
  35: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  36: sample r3.xyzw, v1.xyxx, t3.xyzw, s6
  37: mad r4.z, -r0.w, cb0[9].x, l(1.000000)
  38: dp3 r3.x, v2.xyzx, r2.xyzx
  39: add r3.x, r3.x, r3.x
  40: mad r3.xzw, r2.xxyz, -r3.xxxx, v2.xxyz
  41: mul r5.xyz, r2.wwww, cb0[2].xyzx
  42: mul r6.xyz, r3.yyyy, v6.xyzx
  43: mad r2.w, -r4.z, l(0.700000), l(1.700000)
  44: mul r2.w, r2.w, r4.z
  45: mul r2.w, r2.w, l(6.000000)
  46: sample_l r7.xyzw, r3.xzwx, t5.xyzw, s0, r2.w
  47: add r2.w, r7.w, l(-1.000000)
  48: mad r2.w, cb2[3].w, r2.w, l(1.000000)
  49: log r2.w, r2.w
  50: mul r2.w, r2.w, cb2[3].y
  51: exp r2.w, r2.w
  52: mul r2.w, r2.w, cb2[3].x
  53: mul r3.xzw, r7.xxyz, r2.wwww
  54: mul r3.xyz, r3.yyyy, r3.xzwx
  55: dp3 r2.w, -v2.xyzx, r2.xyzx
  56: add r3.w, r2.w, r2.w
  57: mad r7.xyz, r2.xyzx, -r3.wwww, -v2.xyzx
  58: dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
  59: mov_sat r2.w, r2.w
  60: dp3 r7.x, r7.xyzx, cb1[0].xyzx
  61: add r7.y, -r2.w, l(1.000000)
  62: mul r7.zw, r7.xxxy, r7.xxxy
  63: mul r2.yz, r7.xxyx, r7.xxwx
  64: mul r4.xy, r7.zyzz, r2.yzyy
  65: mad r0.w, r0.w, cb0[9].x, -r1.w
  66: add_sat r0.w, r0.w, l(1.000000)
  67: sample r7.xyzw, r4.xzxx, t4.xyzw, s2
  68: mul r1.w, r7.x, l(16.000000)
  69: mad r2.yzw, r1.wwww, r0.xxyz, r1.xxyz
  70: mul r4.xzw, r2.xxxx, r5.xxyz
  71: add r5.xyz, -r0.xyzx, r0.wwww
  72: mad r0.xyz, r4.yyyy, r5.xyzx, r0.xyzx
  73: mul r0.xyz, r0.xyzx, r3.xyzx
  74: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
  75: mad o0.xyz, r2.yzwy, r4.xzwx, r0.xyzx
  76: mov o0.w, l(1.000000)
  77: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 48 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb4[0].x
  14: mul r0.yzw, v0.yyyy, cb2[1].xxyz
  15: mad r0.yzw, cb2[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb2[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r0.yzw, cb2[3].xxyz, v0.wwww, r0.yyzw
  18: add r1.xyz, r0.yzwy, -cb3[r0.x + 64].xyzx
  19: dp3 r0.x, r1.xyzx, r1.xyzx
  20: rsq r0.x, r0.x
  21: mul o2.xyz, r0.xxxx, r1.xyzx
  22: mov o2.w, l(0)
  23: mov o3.w, r0.y
  24: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  25: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  26: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  27: dp3 r0.x, r1.xyzx, r1.xyzx
  28: rsq r0.x, r0.x
  29: mul r1.xyz, r0.xxxx, r1.xyzx
  30: mov o3.xyz, r1.xyzx
  31: mov o4.w, r0.z
  32: mov o5.w, r0.w
  33: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  34: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  35: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  36: dp3 r0.w, r0.xyzx, r0.xyzx
  37: rsq r0.w, r0.w
  38: mul r0.xyz, r0.wwww, r0.xyzx
  39: mul r2.xyz, r1.yzxy, r0.zxyz
  40: mad r1.xyz, r0.yzxy, r1.zxyz, -r2.xyzx
  41: mul r1.w, v4.w, cb2[9].w
  42: mul o4.xyz, r1.wwww, r1.xyzx
  43: mov o5.xyz, r0.xyzx
  44: mul r1.x, r0.y, r0.y
  45: mad r1.x, r0.x, r0.x, -r1.x
  46: mul r2.xyzw, r0.yzzx, r0.xyzz
  47: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  48: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  49: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  50: mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
  51: mov r0.w, l(1.000000)
  52: dp4 r2.x, cb1[39].xyzw, r0.xyzw
  53: dp4 r2.y, cb1[40].xyzw, r0.xyzw
  54: dp4 r2.z, cb1[41].xyzw, r0.xyzw
  55: add r0.xyz, r1.xyzx, r2.xyzx
  56: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  57: mov o6.w, l(0)
  58: mov o7.xyzw, l(0,0,0,0)
  59: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 60 math, 8 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 5
Set 2D Texture "_BumpMap" to slot 2 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 6
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 8
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s5
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: mul r1.xyz, r1.wwww, r1.xyzx
   5: sample r2.xyzw, v1.xyxx, t2.xyzw, s4
   6: mul r2.x, r2.w, r2.x
   7: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   8: dp2 r2.z, r2.xyxx, r2.xyxx
   9: min r2.z, r2.z, l(1.000000)
  10: add r2.z, -r2.z, l(1.000000)
  11: sqrt r2.z, r2.z
  12: mul r3.xyz, r2.yyyy, v4.xyzx
  13: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  14: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  15: eq r2.w, cb3[0].x, l(1.000000)
  16: if_nz r2.w
  17:   eq r2.w, cb3[0].y, l(1.000000)
  18:   mul r3.xyz, v4.wwww, cb3[2].xyzx
  19:   mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  20:   mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  21:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  22:   mov r4.y, v3.w
  23:   mov r4.z, v4.w
  24:   mov r4.w, v5.w
  25:   movc r3.xyz, r2.wwww, r3.xyzx, r4.yzwy
  26:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  27:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  28:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  29:   mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
  30:   max r3.x, r2.w, r3.y
  31:   sample r3.xyzw, r3.xzwx, t6.xyzw, s1
  32: else 
  33:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  34: endif 
  35: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  36: sample r3.xyzw, v1.xyxx, t3.xyzw, s6
  37: mad r4.z, -r0.w, cb0[9].x, l(1.000000)
  38: dp3 r3.x, v2.xyzx, r2.xyzx
  39: add r3.x, r3.x, r3.x
  40: mad r3.xzw, r2.xxyz, -r3.xxxx, v2.xxyz
  41: mul r5.xyz, r2.wwww, cb0[2].xyzx
  42: mul r6.xyz, r3.yyyy, v6.xyzx
  43: mad r2.w, -r4.z, l(0.700000), l(1.700000)
  44: mul r2.w, r2.w, r4.z
  45: mul r2.w, r2.w, l(6.000000)
  46: sample_l r7.xyzw, r3.xzwx, t5.xyzw, s0, r2.w
  47: add r2.w, r7.w, l(-1.000000)
  48: mad r2.w, cb2[3].w, r2.w, l(1.000000)
  49: log r2.w, r2.w
  50: mul r2.w, r2.w, cb2[3].y
  51: exp r2.w, r2.w
  52: mul r2.w, r2.w, cb2[3].x
  53: mul r3.xzw, r7.xxyz, r2.wwww
  54: mul r3.xyz, r3.yyyy, r3.xzwx
  55: dp3 r2.w, -v2.xyzx, r2.xyzx
  56: add r3.w, r2.w, r2.w
  57: mad r7.xyz, r2.xyzx, -r3.wwww, -v2.xyzx
  58: dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
  59: mov_sat r2.w, r2.w
  60: dp3 r7.x, r7.xyzx, cb1[0].xyzx
  61: add r7.y, -r2.w, l(1.000000)
  62: mul r7.zw, r7.xxxy, r7.xxxy
  63: mul r2.yz, r7.xxyx, r7.xxwx
  64: mul r4.xy, r7.zyzz, r2.yzyy
  65: add r1.w, -r1.w, l(1.000000)
  66: mad_sat r0.w, r0.w, cb0[9].x, r1.w
  67: sample r7.xyzw, r4.xzxx, t4.xyzw, s2
  68: mul r1.w, r7.x, l(16.000000)
  69: mad r2.yzw, r1.wwww, r0.xxyz, r1.xxyz
  70: mul r4.xzw, r2.xxxx, r5.xxyz
  71: add r5.xyz, -r0.xyzx, r0.wwww
  72: mad r0.xyz, r4.yyyy, r5.xyzx, r0.xyzx
  73: mul r0.xyz, r0.xyzx, r3.xyzx
  74: mad r0.xyz, r6.xyzx, r1.xyzx, r0.xyzx
  75: mad o0.xyz, r2.yzwy, r4.xzwx, r0.xyzx
  76: mov o0.w, l(1.000000)
  77: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 37 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mov r0.w, l(0)
  22: mov o3.xyzw, r0.wwwx
  23: mov o4.xyzw, r0.wwwy
  24: mov o5.w, r0.z
  25: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul r0.xyz, r0.wwww, r0.xyzx
  31: mov o5.xyz, r0.xyzx
  32: mul r1.x, r0.y, r0.y
  33: mad r1.x, r0.x, r0.x, -r1.x
  34: mul r2.xyzw, r0.yzzx, r0.xyzz
  35: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  36: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  37: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  38: mad r1.xyz, cb2[45].xyzx, r1.xxxx, r3.xyzx
  39: mov r0.w, l(1.000000)
  40: dp4 r2.x, cb2[39].xyzw, r0.xyzw
  41: dp4 r2.y, cb2[40].xyzw, r0.xyzw
  42: dp4 r2.z, cb2[41].xyzw, r0.xyzw
  43: add r0.xyz, r1.xyzx, r2.xyzx
  44: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: mov o6.w, l(0)
  46: mov o7.xyzw, l(0,0,0,0)
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 54 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 2
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: add r0.w, -cb0[3].x, l(1.000000)
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: eq r1.w, cb3[0].x, l(1.000000)
   8: if_nz r1.w
   9:   eq r1.w, cb3[0].y, l(1.000000)
  10:   mul r2.xyz, v4.wwww, cb3[2].xyzx
  11:   mad r2.xyz, cb3[1].xyzx, v3.wwww, r2.xyzx
  12:   mad r2.xyz, cb3[3].xyzx, v5.wwww, r2.xyzx
  13:   add r2.xyz, r2.xyzx, cb3[4].xyzx
  14:   mov r3.y, v3.w
  15:   mov r3.z, v4.w
  16:   mov r3.w, v5.w
  17:   movc r2.xyz, r1.wwww, r2.xyzx, r3.yzwy
  18:   add r2.xyz, r2.xyzx, -cb3[6].xyzx
  19:   mul r2.yzw, r2.xxyz, cb3[5].xxyz
  20:   mad r1.w, r2.y, l(0.250000), l(0.750000)
  21:   mad r2.y, cb3[0].z, l(0.500000), l(0.750000)
  22:   max r2.x, r1.w, r2.y
  23:   sample r2.xyzw, r2.xzwx, t4.xyzw, s1
  24: else 
  25:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  26: endif 
  27: dp4_sat r1.w, r2.xyzw, cb1[46].xyzw
  28: sample r2.xyzw, v1.xyxx, t1.xyzw, s4
  29: add r3.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
  30: dp3 r2.x, v2.xyzx, r1.xyzx
  31: add r2.x, r2.x, r2.x
  32: mad r2.xzw, r1.xxyz, -r2.xxxx, v2.xxyz
  33: mul r4.xyz, r1.wwww, cb0[2].xyzx
  34: mul r5.xyz, r2.yyyy, v6.xyzx
  35: mad r1.w, -r3.x, l(0.700000), l(1.700000)
  36: mul r1.w, r1.w, r3.x
  37: mul r1.w, r1.w, l(6.000000)
  38: sample_l r6.xyzw, r2.xzwx, t3.xyzw, s0, r1.w
  39: add r1.w, r6.w, l(-1.000000)
  40: mad r1.w, cb2[3].w, r1.w, l(1.000000)
  41: log r1.w, r1.w
  42: mul r1.w, r1.w, cb2[3].y
  43: exp r1.w, r1.w
  44: mul r1.w, r1.w, cb2[3].x
  45: mul r2.xzw, r6.xxyz, r1.wwww
  46: mul r2.xyz, r2.yyyy, r2.xzwx
  47: dp3 r1.w, -v2.xyzx, r1.xyzx
  48: add r2.w, r1.w, r1.w
  49: mad r6.xyz, r1.xyzx, -r2.wwww, -v2.xyzx
  50: dp3_sat r1.x, r1.xyzx, cb1[0].xyzx
  51: mov_sat r1.w, r1.w
  52: dp3 r6.x, r6.xyzx, cb1[0].xyzx
  53: add r6.y, -r1.w, l(1.000000)
  54: mul r6.zw, r6.xxxy, r6.xxxy
  55: mul r1.yz, r6.xxyx, r6.xxwx
  56: mul r3.yz, r6.zzyz, r1.yyzy
  57: add r0.w, -r0.w, l(1.000000)
  58: add_sat r0.w, r0.w, cb0[8].w
  59: sample r6.xyzw, r3.ywyy, t2.xyzw, s2
  60: mul r1.y, r6.x, l(16.000000)
  61: mad r1.yzw, r1.yyyy, cb0[3].xxyz, r0.xxyz
  62: mul r3.xyw, r1.xxxx, r4.xyxz
  63: add r4.xyz, r0.wwww, -cb0[3].xyzx
  64: mad r4.xyz, r3.zzzz, r4.xyzx, cb0[3].xyzx
  65: mul r2.xyz, r2.xyzx, r4.xyzx
  66: mad r0.xyz, r5.xyzx, r0.xyzx, r2.xyzx
  67: mad o0.xyz, r1.yzwy, r3.xywx, r0.xyzx
  68: mov o0.w, l(1.000000)
  69: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb4[0].x
  14: mul r0.yzw, v0.yyyy, cb2[1].xxyz
  15: mad r0.yzw, cb2[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb2[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r0.yzwy
  18: add r0.xyz, r1.xyzx, -cb3[r0.x + 64].xyzx
  19: dp3 r0.w, r0.xyzx, r0.xyzx
  20: rsq r0.w, r0.w
  21: mul o2.xyz, r0.wwww, r0.xyzx
  22: mov o2.w, l(0)
  23: mov r1.w, l(0)
  24: mov o3.xyzw, r1.wwwx
  25: mov o4.xyzw, r1.wwwy
  26: mov o5.w, r1.z
  27: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r0.w, r0.xyzx, r0.xyzx
  31: rsq r0.w, r0.w
  32: mul r0.xyz, r0.wwww, r0.xyzx
  33: mov o5.xyz, r0.xyzx
  34: mul r1.x, r0.y, r0.y
  35: mad r1.x, r0.x, r0.x, -r1.x
  36: mul r2.xyzw, r0.yzzx, r0.xyzz
  37: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  38: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  39: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  40: mad r1.xyz, cb1[45].xyzx, r1.xxxx, r3.xyzx
  41: mov r0.w, l(1.000000)
  42: dp4 r2.x, cb1[39].xyzw, r0.xyzw
  43: dp4 r2.y, cb1[40].xyzw, r0.xyzw
  44: dp4 r2.z, cb1[41].xyzw, r0.xyzw
  45: add r0.xyz, r1.xyzx, r2.xyzx
  46: max o6.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: mov o6.w, l(0)
  48: mov o7.xyzw, l(0,0,0,0)
  49: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 54 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 2
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: add r0.w, -cb0[3].x, l(1.000000)
   3: mul r0.xyz, r0.wwww, r0.xyzx
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: eq r1.w, cb3[0].x, l(1.000000)
   8: if_nz r1.w
   9:   eq r1.w, cb3[0].y, l(1.000000)
  10:   mul r2.xyz, v4.wwww, cb3[2].xyzx
  11:   mad r2.xyz, cb3[1].xyzx, v3.wwww, r2.xyzx
  12:   mad r2.xyz, cb3[3].xyzx, v5.wwww, r2.xyzx
  13:   add r2.xyz, r2.xyzx, cb3[4].xyzx
  14:   mov r3.y, v3.w
  15:   mov r3.z, v4.w
  16:   mov r3.w, v5.w
  17:   movc r2.xyz, r1.wwww, r2.xyzx, r3.yzwy
  18:   add r2.xyz, r2.xyzx, -cb3[6].xyzx
  19:   mul r2.yzw, r2.xxyz, cb3[5].xxyz
  20:   mad r1.w, r2.y, l(0.250000), l(0.750000)
  21:   mad r2.y, cb3[0].z, l(0.500000), l(0.750000)
  22:   max r2.x, r1.w, r2.y
  23:   sample r2.xyzw, r2.xzwx, t4.xyzw, s1
  24: else 
  25:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  26: endif 
  27: dp4_sat r1.w, r2.xyzw, cb1[46].xyzw
  28: sample r2.xyzw, v1.xyxx, t1.xyzw, s4
  29: add r3.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
  30: dp3 r2.x, v2.xyzx, r1.xyzx
  31: add r2.x, r2.x, r2.x
  32: mad r2.xzw, r1.xxyz, -r2.xxxx, v2.xxyz
  33: mul r4.xyz, r1.wwww, cb0[2].xyzx
  34: mul r5.xyz, r2.yyyy, v6.xyzx
  35: mad r1.w, -r3.x, l(0.700000), l(1.700000)
  36: mul r1.w, r1.w, r3.x
  37: mul r1.w, r1.w, l(6.000000)
  38: sample_l r6.xyzw, r2.xzwx, t3.xyzw, s0, r1.w
  39: add r1.w, r6.w, l(-1.000000)
  40: mad r1.w, cb2[3].w, r1.w, l(1.000000)
  41: log r1.w, r1.w
  42: mul r1.w, r1.w, cb2[3].y
  43: exp r1.w, r1.w
  44: mul r1.w, r1.w, cb2[3].x
  45: mul r2.xzw, r6.xxyz, r1.wwww
  46: mul r2.xyz, r2.yyyy, r2.xzwx
  47: dp3 r1.w, -v2.xyzx, r1.xyzx
  48: add r2.w, r1.w, r1.w
  49: mad r6.xyz, r1.xyzx, -r2.wwww, -v2.xyzx
  50: dp3_sat r1.x, r1.xyzx, cb1[0].xyzx
  51: mov_sat r1.w, r1.w
  52: dp3 r6.x, r6.xyzx, cb1[0].xyzx
  53: add r6.y, -r1.w, l(1.000000)
  54: mul r6.zw, r6.xxxy, r6.xxxy
  55: mul r1.yz, r6.xxyx, r6.xxwx
  56: mul r3.yz, r6.zzyz, r1.yyzy
  57: add r0.w, -r0.w, l(1.000000)
  58: add_sat r0.w, r0.w, cb0[8].w
  59: sample r6.xyzw, r3.ywyy, t2.xyzw, s2
  60: mul r1.y, r6.x, l(16.000000)
  61: mad r1.yzw, r1.yyyy, cb0[3].xxyz, r0.xxyz
  62: mul r3.xyw, r1.xxxx, r4.xyxz
  63: add r4.xyz, r0.wwww, -cb0[3].xyzx
  64: mad r4.xyz, r3.zzzz, r4.xyzx, cb0[3].xyzx
  65: mul r2.xyz, r2.xyzx, r4.xyzx
  66: mad r0.xyz, r5.xyzx, r0.xyzx, r2.xyzx
  67: mad o0.xyz, r1.yzwy, r3.xywx, r0.xyzx
  68: mov o0.w, l(1.000000)
  69: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mov r0.w, l(0)
  22: mov o3.xyzw, r0.wwwx
  23: mov o4.xyzw, r0.wwwy
  24: mov o5.w, r0.z
  25: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  32: mov o6.zw, l(0,0,0,0)
  33: mov o7.xyzw, l(0,0,0,0)
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 41 math, 6 temp registers, 5 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 2
Set 2D Texture "unity_Lightmap" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r1.x, r0.w, r0.w
   5: mov_sat r0.w, r0.w
   6: add r2.y, -r0.w, l(1.000000)
   7: mad r1.xyz, r0.xyzx, -r1.xxxx, -v2.xyzx
   8: dp3 r2.x, r1.xyzx, cb1[0].xyzx
   9: mul r2.zw, r2.xxxy, r2.xxxy
  10: mul r1.xy, r2.xyxx, r2.xwxx
  11: mul r1.xy, r2.zyzz, r1.xyxx
  12: sample r2.xyzw, v1.xyxx, t1.xyzw, s4
  13: add r0.w, -r2.x, l(1.000000)
  14: mad r1.w, r2.w, cb0[9].x, -r0.w
  15: add_sat r1.w, r1.w, l(1.000000)
  16: add r3.xyz, -r2.xyzx, r1.wwww
  17: mad r3.xyz, r1.yyyy, r3.xyzx, r2.xyzx
  18: dp3 r1.y, v2.xyzx, r0.xyzx
  19: add r1.y, r1.y, r1.y
  20: mad r4.xyz, r0.xyzx, -r1.yyyy, v2.xyzx
  21: dp3_sat r0.x, r0.xyzx, cb1[0].xyzx
  22: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  23: mad r1.z, -r2.w, cb0[9].x, l(1.000000)
  24: mad r1.y, -r1.z, l(0.700000), l(1.700000)
  25: mul r1.y, r1.y, r1.z
  26: sample r5.xyzw, r1.xzxx, t3.xyzw, s2
  27: mul r1.x, r5.x, l(16.000000)
  28: mul r1.y, r1.y, l(6.000000)
  29: sample_l r4.xyzw, r4.xyzx, t5.xyzw, s1, r1.y
  30: add r1.y, r4.w, l(-1.000000)
  31: mad r1.y, cb2[3].w, r1.y, l(1.000000)
  32: log r1.y, r1.y
  33: mul r1.y, r1.y, cb2[3].y
  34: exp r1.y, r1.y
  35: mul r1.y, r1.y, cb2[3].x
  36: mul r1.yzw, r4.xxyz, r1.yyyy
  37: sample r4.xyzw, v1.xyxx, t2.xyzw, s5
  38: mul r1.yzw, r1.yyzw, r4.yyyy
  39: mul r1.yzw, r3.xxyz, r1.yyzw
  40: sample r3.xyzw, v6.xyxx, t4.xyzw, s0
  41: mul r3.xyz, r4.yyyy, r3.xyzx
  42: sample r4.xyzw, v1.xyxx, t0.xyzw, s3
  43: mul r4.xyz, r4.xyzx, cb0[4].xyzx
  44: mul r4.xyz, r0.wwww, r4.xyzx
  45: mad r1.yzw, r3.xxyz, r4.xxyz, r1.yyzw
  46: mad r2.xyz, r1.xxxx, r2.xyzx, r4.xyzx
  47: mad o0.xyz, r2.xyzx, r0.xyzx, r1.yzwy
  48: mov o0.w, l(1.000000)
  49: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 27 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  18: add r0.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  19: dp3 r0.w, r0.xyzx, r0.xyzx
  20: rsq r0.w, r0.w
  21: mul o2.xyz, r0.wwww, r0.xyzx
  22: mov o2.w, l(0)
  23: mov r1.w, l(0)
  24: mov o3.xyzw, r1.wwwx
  25: mov o4.xyzw, r1.wwwy
  26: mov o5.w, r1.z
  27: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  28: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  29: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  30: dp3 r0.w, r0.xyzx, r0.xyzx
  31: rsq r0.w, r0.w
  32: mul o5.xyz, r0.wwww, r0.xyzx
  33: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  34: mov o6.zw, l(0,0,0,0)
  35: mov o7.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 41 math, 6 temp registers, 5 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 2
Set 2D Texture "unity_Lightmap" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r1.x, r0.w, r0.w
   5: mov_sat r0.w, r0.w
   6: add r2.y, -r0.w, l(1.000000)
   7: mad r1.xyz, r0.xyzx, -r1.xxxx, -v2.xyzx
   8: dp3 r2.x, r1.xyzx, cb1[0].xyzx
   9: mul r2.zw, r2.xxxy, r2.xxxy
  10: mul r1.xy, r2.xyxx, r2.xwxx
  11: mul r1.xy, r2.zyzz, r1.xyxx
  12: sample r2.xyzw, v1.xyxx, t1.xyzw, s4
  13: add r0.w, -r2.x, l(1.000000)
  14: mad r1.w, r2.w, cb0[9].x, -r0.w
  15: add_sat r1.w, r1.w, l(1.000000)
  16: add r3.xyz, -r2.xyzx, r1.wwww
  17: mad r3.xyz, r1.yyyy, r3.xyzx, r2.xyzx
  18: dp3 r1.y, v2.xyzx, r0.xyzx
  19: add r1.y, r1.y, r1.y
  20: mad r4.xyz, r0.xyzx, -r1.yyyy, v2.xyzx
  21: dp3_sat r0.x, r0.xyzx, cb1[0].xyzx
  22: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  23: mad r1.z, -r2.w, cb0[9].x, l(1.000000)
  24: mad r1.y, -r1.z, l(0.700000), l(1.700000)
  25: mul r1.y, r1.y, r1.z
  26: sample r5.xyzw, r1.xzxx, t3.xyzw, s2
  27: mul r1.x, r5.x, l(16.000000)
  28: mul r1.y, r1.y, l(6.000000)
  29: sample_l r4.xyzw, r4.xyzx, t5.xyzw, s1, r1.y
  30: add r1.y, r4.w, l(-1.000000)
  31: mad r1.y, cb2[3].w, r1.y, l(1.000000)
  32: log r1.y, r1.y
  33: mul r1.y, r1.y, cb2[3].y
  34: exp r1.y, r1.y
  35: mul r1.y, r1.y, cb2[3].x
  36: mul r1.yzw, r4.xxyz, r1.yyyy
  37: sample r4.xyzw, v1.xyxx, t2.xyzw, s5
  38: mul r1.yzw, r1.yyzw, r4.yyyy
  39: mul r1.yzw, r3.xxyz, r1.yyzw
  40: sample r3.xyzw, v6.xyxx, t4.xyzw, s0
  41: mul r3.xyz, r4.yyyy, r3.xyzx
  42: sample r4.xyzw, v1.xyxx, t0.xyzw, s3
  43: mul r4.xyz, r4.xyzx, cb0[4].xyzx
  44: mul r4.xyz, r0.wwww, r4.xyzx
  45: mad r1.yzw, r3.xxyz, r4.xxyz, r1.yyzw
  46: mad r2.xyz, r1.xxxx, r2.xyzx, r4.xyzx
  47: mad o0.xyz, r2.xyzx, r0.xyzx, r1.yzwy
  48: mov o0.w, l(1.000000)
  49: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 36 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mov o3.w, r0.x
  22: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  23: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  24: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  25: dp3 r0.x, r1.xyzx, r1.xyzx
  26: rsq r0.x, r0.x
  27: mul r1.xyz, r0.xxxx, r1.xyzx
  28: mov o3.xyz, r1.xyzx
  29: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  30: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  31: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  32: dp3 r0.x, r2.xyzx, r2.xyzx
  33: rsq r0.x, r0.x
  34: mul r2.xyz, r0.xxxx, r2.xyzx
  35: mul r3.xyz, r1.yzxy, r2.zxyz
  36: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  37: mov o5.xyz, r2.xyzx
  38: mul r0.x, v4.w, cb2[9].w
  39: mul o4.xyz, r0.xxxx, r1.xyzx
  40: mov o4.w, r0.y
  41: mov o5.w, r0.z
  42: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  43: mov o6.zw, l(0,0,0,0)
  44: mov o7.xyzw, l(0,0,0,0)
  45: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 47 math, 6 temp registers, 6 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 5
Set 2D Texture "_BumpMap" to slot 2 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 6
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 2
Set 2D Texture "unity_Lightmap" to slot 5 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t2.xyzw, s4
   1: mul r0.x, r0.w, r0.x
   2: mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   3: mul r1.xyz, r0.yyyy, v4.xyzx
   4: mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
   5: dp2 r0.x, r0.xyxx, r0.xyxx
   6: min r0.x, r0.x, l(1.000000)
   7: add r0.x, -r0.x, l(1.000000)
   8: sqrt r0.x, r0.x
   9: mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
  10: dp3 r0.w, -v2.xyzx, r0.xyzx
  11: add r1.x, r0.w, r0.w
  12: mov_sat r0.w, r0.w
  13: add r2.y, -r0.w, l(1.000000)
  14: mad r1.xyz, r0.xyzx, -r1.xxxx, -v2.xyzx
  15: dp3 r2.x, r1.xyzx, cb1[0].xyzx
  16: mul r2.zw, r2.xxxy, r2.xxxy
  17: mul r1.xy, r2.xyxx, r2.xwxx
  18: mul r1.xy, r2.zyzz, r1.xyxx
  19: sample r2.xyzw, v1.xyxx, t1.xyzw, s5
  20: add r0.w, -r2.x, l(1.000000)
  21: add r1.w, -r0.w, l(1.000000)
  22: mad_sat r1.w, r2.w, cb0[9].x, r1.w
  23: add r3.xyz, -r2.xyzx, r1.wwww
  24: mad r3.xyz, r1.yyyy, r3.xyzx, r2.xyzx
  25: dp3 r1.y, v2.xyzx, r0.xyzx
  26: add r1.y, r1.y, r1.y
  27: mad r4.xyz, r0.xyzx, -r1.yyyy, v2.xyzx
  28: dp3_sat r0.x, r0.xyzx, cb1[0].xyzx
  29: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  30: mad r1.z, -r2.w, cb0[9].x, l(1.000000)
  31: mad r1.y, -r1.z, l(0.700000), l(1.700000)
  32: mul r1.y, r1.y, r1.z
  33: sample r5.xyzw, r1.xzxx, t4.xyzw, s2
  34: mul r1.x, r5.x, l(16.000000)
  35: mul r1.y, r1.y, l(6.000000)
  36: sample_l r4.xyzw, r4.xyzx, t6.xyzw, s1, r1.y
  37: add r1.y, r4.w, l(-1.000000)
  38: mad r1.y, cb2[3].w, r1.y, l(1.000000)
  39: log r1.y, r1.y
  40: mul r1.y, r1.y, cb2[3].y
  41: exp r1.y, r1.y
  42: mul r1.y, r1.y, cb2[3].x
  43: mul r1.yzw, r4.xxyz, r1.yyyy
  44: sample r4.xyzw, v1.xyxx, t3.xyzw, s6
  45: mul r1.yzw, r1.yyzw, r4.yyyy
  46: mul r1.yzw, r3.xxyz, r1.yyzw
  47: sample r3.xyzw, v6.xyxx, t5.xyzw, s0
  48: mul r3.xyz, r4.yyyy, r3.xyzx
  49: sample r4.xyzw, v1.xyxx, t0.xyzw, s3
  50: mul r4.xyz, r4.xyzx, cb0[4].xyzx
  51: mul r4.xyz, r0.wwww, r4.xyzx
  52: mad r1.yzw, r3.xxyz, r4.xxyz, r1.yyzw
  53: mad r2.xyz, r1.xxxx, r2.xyzx, r4.xyzx
  54: mad o0.xyz, r2.xyzx, r0.xyzx, r1.yzwy
  55: mov o0.w, l(1.000000)
  56: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 37 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r0.yzw, cb1[3].xxyz, v0.wwww, r0.yyzw
  18: add r1.xyz, r0.yzwy, -cb2[r0.x + 64].xyzx
  19: dp3 r0.x, r1.xyzx, r1.xyzx
  20: rsq r0.x, r0.x
  21: mul o2.xyz, r0.xxxx, r1.xyzx
  22: mov o2.w, l(0)
  23: mov o3.w, r0.y
  24: mul r1.xyz, v4.yyyy, cb1[1].xyzx
  25: mad r1.xyz, cb1[0].xyzx, v4.xxxx, r1.xyzx
  26: mad r1.xyz, cb1[2].xyzx, v4.zzzz, r1.xyzx
  27: dp3 r0.x, r1.xyzx, r1.xyzx
  28: rsq r0.x, r0.x
  29: mul r1.xyz, r0.xxxx, r1.xyzx
  30: mov o3.xyz, r1.xyzx
  31: dp3 r2.x, v1.xyzx, cb1[4].xyzx
  32: dp3 r2.y, v1.xyzx, cb1[5].xyzx
  33: dp3 r2.z, v1.xyzx, cb1[6].xyzx
  34: dp3 r0.x, r2.xyzx, r2.xyzx
  35: rsq r0.x, r0.x
  36: mul r2.xyz, r0.xxxx, r2.xyzx
  37: mul r3.xyz, r1.yzxy, r2.zxyz
  38: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  39: mov o5.xyz, r2.xyzx
  40: mul r0.x, v4.w, cb1[9].w
  41: mul o4.xyz, r0.xxxx, r1.xyzx
  42: mov o4.w, r0.z
  43: mov o5.w, r0.w
  44: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  45: mov o6.zw, l(0,0,0,0)
  46: mov o7.xyzw, l(0,0,0,0)
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 47 math, 6 temp registers, 6 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 5
Set 2D Texture "_BumpMap" to slot 2 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 6
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 2
Set 2D Texture "unity_Lightmap" to slot 5 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t2.xyzw, s4
   1: mul r0.x, r0.w, r0.x
   2: mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   3: mul r1.xyz, r0.yyyy, v4.xyzx
   4: mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
   5: dp2 r0.x, r0.xyxx, r0.xyxx
   6: min r0.x, r0.x, l(1.000000)
   7: add r0.x, -r0.x, l(1.000000)
   8: sqrt r0.x, r0.x
   9: mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
  10: dp3 r0.w, -v2.xyzx, r0.xyzx
  11: add r1.x, r0.w, r0.w
  12: mov_sat r0.w, r0.w
  13: add r2.y, -r0.w, l(1.000000)
  14: mad r1.xyz, r0.xyzx, -r1.xxxx, -v2.xyzx
  15: dp3 r2.x, r1.xyzx, cb1[0].xyzx
  16: mul r2.zw, r2.xxxy, r2.xxxy
  17: mul r1.xy, r2.xyxx, r2.xwxx
  18: mul r1.xy, r2.zyzz, r1.xyxx
  19: sample r2.xyzw, v1.xyxx, t1.xyzw, s5
  20: add r0.w, -r2.x, l(1.000000)
  21: mad r1.w, r2.w, cb0[9].x, -r0.w
  22: add_sat r1.w, r1.w, l(1.000000)
  23: add r3.xyz, -r2.xyzx, r1.wwww
  24: mad r3.xyz, r1.yyyy, r3.xyzx, r2.xyzx
  25: dp3 r1.y, v2.xyzx, r0.xyzx
  26: add r1.y, r1.y, r1.y
  27: mad r4.xyz, r0.xyzx, -r1.yyyy, v2.xyzx
  28: dp3_sat r0.x, r0.xyzx, cb1[0].xyzx
  29: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  30: mad r1.z, -r2.w, cb0[9].x, l(1.000000)
  31: mad r1.y, -r1.z, l(0.700000), l(1.700000)
  32: mul r1.y, r1.y, r1.z
  33: sample r5.xyzw, r1.xzxx, t4.xyzw, s2
  34: mul r1.x, r5.x, l(16.000000)
  35: mul r1.y, r1.y, l(6.000000)
  36: sample_l r4.xyzw, r4.xyzx, t6.xyzw, s1, r1.y
  37: add r1.y, r4.w, l(-1.000000)
  38: mad r1.y, cb2[3].w, r1.y, l(1.000000)
  39: log r1.y, r1.y
  40: mul r1.y, r1.y, cb2[3].y
  41: exp r1.y, r1.y
  42: mul r1.y, r1.y, cb2[3].x
  43: mul r1.yzw, r4.xxyz, r1.yyyy
  44: sample r4.xyzw, v1.xyxx, t3.xyzw, s6
  45: mul r1.yzw, r1.yyzw, r4.yyyy
  46: mul r1.yzw, r3.xxyz, r1.yyzw
  47: sample r3.xyzw, v6.xyxx, t5.xyzw, s0
  48: mul r3.xyz, r4.yyyy, r3.xyzx
  49: sample r4.xyzw, v1.xyxx, t0.xyzw, s3
  50: mul r4.xyz, r4.xyzx, cb0[4].xyzx
  51: mul r4.xyz, r0.wwww, r4.xyzx
  52: mad r1.yzw, r3.xxyz, r4.xxyz, r1.yyzw
  53: mad r2.xyz, r1.xxxx, r2.xyzx, r4.xyzx
  54: mad o0.xyz, r2.xyzx, r0.xyzx, r1.yzwy
  55: mov o0.w, l(1.000000)
  56: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mov r0.w, l(0)
  22: mov o3.xyzw, r0.wwwx
  23: mov o4.xyzw, r0.wwwy
  24: mov o5.w, r0.z
  25: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  32: mov o6.zw, l(0,0,0,0)
  33: mov o7.xyzw, l(0,0,0,0)
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 41 math, 5 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 2
Set 2D Texture "unity_Lightmap" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 5
   0: add r0.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
   1: mad r1.x, -r0.x, l(0.700000), l(1.700000)
   2: mul r0.x, r0.x, r1.x
   3: mul r0.x, r0.x, l(6.000000)
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: dp3 r1.w, v2.xyzx, r1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.xyz, r1.xyzx, -r1.wwww, v2.xyzx
  10: sample_l r2.xyzw, r2.xyzx, t4.xyzw, s1, r0.x
  11: add r0.x, r2.w, l(-1.000000)
  12: mad r0.x, cb2[3].w, r0.x, l(1.000000)
  13: log r0.x, r0.x
  14: mul r0.x, r0.x, cb2[3].y
  15: exp r0.x, r0.x
  16: mul r0.x, r0.x, cb2[3].x
  17: mul r2.xyz, r2.xyzx, r0.xxxx
  18: sample r3.xyzw, v1.xyxx, t1.xyzw, s4
  19: mul r2.xyz, r2.xyzx, r3.yyyy
  20: dp3 r0.x, -v2.xyzx, r1.xyzx
  21: add r1.w, r0.x, r0.x
  22: mov_sat r0.x, r0.x
  23: add r4.y, -r0.x, l(1.000000)
  24: mad r3.xzw, r1.xxyz, -r1.wwww, -v2.xxyz
  25: dp3_sat r0.x, r1.xyzx, cb1[0].xyzx
  26: mul r1.xyz, r0.xxxx, cb0[2].xyzx
  27: dp3 r4.x, r3.xzwx, cb1[0].xyzx
  28: mul r4.zw, r4.xxxy, r4.xxxy
  29: mul r3.xz, r4.xxyx, r4.xxwx
  30: mul r0.yz, r4.zzyz, r3.xxzx
  31: add r0.x, -cb0[3].x, l(1.000000)
  32: add r1.w, -r0.x, l(1.000000)
  33: add_sat r1.w, r1.w, cb0[8].w
  34: add r3.xzw, r1.wwww, -cb0[3].xxyz
  35: mad r3.xzw, r0.zzzz, r3.xxzw, cb0[3].xxyz
  36: sample r4.xyzw, r0.ywyy, t2.xyzw, s2
  37: mul r0.y, r4.x, l(16.000000)
  38: mul r2.xyz, r2.xyzx, r3.xzwx
  39: sample r4.xyzw, v6.xyxx, t3.xyzw, s0
  40: mul r3.xyz, r3.yyyy, r4.xyzx
  41: sample r4.xyzw, v1.xyxx, t0.xyzw, s3
  42: mul r4.xyz, r4.xyzx, cb0[4].xyzx
  43: mul r0.xzw, r0.xxxx, r4.xxyz
  44: mad r2.xyz, r3.xyzx, r0.xzwx, r2.xyzx
  45: mad r0.xyz, r0.yyyy, cb0[3].xyzx, r0.xzwx
  46: mad o0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  47: mov o0.w, l(1.000000)
  48: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 27 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  18: add r0.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  19: dp3 r0.w, r0.xyzx, r0.xyzx
  20: rsq r0.w, r0.w
  21: mul o2.xyz, r0.wwww, r0.xyzx
  22: mov o2.w, l(0)
  23: mov r1.w, l(0)
  24: mov o3.xyzw, r1.wwwx
  25: mov o4.xyzw, r1.wwwy
  26: mov o5.w, r1.z
  27: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  28: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  29: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  30: dp3 r0.w, r0.xyzx, r0.xyzx
  31: rsq r0.w, r0.w
  32: mul o5.xyz, r0.wwww, r0.xyzx
  33: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  34: mov o6.zw, l(0,0,0,0)
  35: mov o7.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 41 math, 5 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 2
Set 2D Texture "unity_Lightmap" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 5
   0: add r0.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
   1: mad r1.x, -r0.x, l(0.700000), l(1.700000)
   2: mul r0.x, r0.x, r1.x
   3: mul r0.x, r0.x, l(6.000000)
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: dp3 r1.w, v2.xyzx, r1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.xyz, r1.xyzx, -r1.wwww, v2.xyzx
  10: sample_l r2.xyzw, r2.xyzx, t4.xyzw, s1, r0.x
  11: add r0.x, r2.w, l(-1.000000)
  12: mad r0.x, cb2[3].w, r0.x, l(1.000000)
  13: log r0.x, r0.x
  14: mul r0.x, r0.x, cb2[3].y
  15: exp r0.x, r0.x
  16: mul r0.x, r0.x, cb2[3].x
  17: mul r2.xyz, r2.xyzx, r0.xxxx
  18: sample r3.xyzw, v1.xyxx, t1.xyzw, s4
  19: mul r2.xyz, r2.xyzx, r3.yyyy
  20: dp3 r0.x, -v2.xyzx, r1.xyzx
  21: add r1.w, r0.x, r0.x
  22: mov_sat r0.x, r0.x
  23: add r4.y, -r0.x, l(1.000000)
  24: mad r3.xzw, r1.xxyz, -r1.wwww, -v2.xxyz
  25: dp3_sat r0.x, r1.xyzx, cb1[0].xyzx
  26: mul r1.xyz, r0.xxxx, cb0[2].xyzx
  27: dp3 r4.x, r3.xzwx, cb1[0].xyzx
  28: mul r4.zw, r4.xxxy, r4.xxxy
  29: mul r3.xz, r4.xxyx, r4.xxwx
  30: mul r0.yz, r4.zzyz, r3.xxzx
  31: add r0.x, -cb0[3].x, l(1.000000)
  32: add r1.w, -r0.x, l(1.000000)
  33: add_sat r1.w, r1.w, cb0[8].w
  34: add r3.xzw, r1.wwww, -cb0[3].xxyz
  35: mad r3.xzw, r0.zzzz, r3.xxzw, cb0[3].xxyz
  36: sample r4.xyzw, r0.ywyy, t2.xyzw, s2
  37: mul r0.y, r4.x, l(16.000000)
  38: mul r2.xyz, r2.xyzx, r3.xzwx
  39: sample r4.xyzw, v6.xyxx, t3.xyzw, s0
  40: mul r3.xyz, r3.yyyy, r4.xyzx
  41: sample r4.xyzw, v1.xyxx, t0.xyzw, s3
  42: mul r4.xyz, r4.xyzx, cb0[4].xyzx
  43: mul r0.xzw, r0.xxxx, r4.xxyz
  44: mad r2.xyz, r3.xyzx, r0.xzwx, r2.xyzx
  45: mad r0.xyz, r0.yyyy, cb0[3].xyzx, r0.xzwx
  46: mad o0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  47: mov o0.w, l(1.000000)
  48: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON LIGHTPROBE_SH 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mov r0.w, l(0)
  22: mov o3.xyzw, r0.wwwx
  23: mov o4.xyzw, r0.wwwy
  24: mov o5.w, r0.z
  25: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  32: mov o6.zw, l(0,0,0,0)
  33: mov o7.xyzw, l(0,0,0,0)
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 41 math, 6 temp registers, 5 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 2
Set 2D Texture "unity_Lightmap" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r1.x, r0.w, r0.w
   5: mov_sat r0.w, r0.w
   6: add r2.y, -r0.w, l(1.000000)
   7: mad r1.xyz, r0.xyzx, -r1.xxxx, -v2.xyzx
   8: dp3 r2.x, r1.xyzx, cb1[0].xyzx
   9: mul r2.zw, r2.xxxy, r2.xxxy
  10: mul r1.xy, r2.xyxx, r2.xwxx
  11: mul r1.xy, r2.zyzz, r1.xyxx
  12: sample r2.xyzw, v1.xyxx, t1.xyzw, s4
  13: add r0.w, -r2.x, l(1.000000)
  14: mad r1.w, r2.w, cb0[9].x, -r0.w
  15: add_sat r1.w, r1.w, l(1.000000)
  16: add r3.xyz, -r2.xyzx, r1.wwww
  17: mad r3.xyz, r1.yyyy, r3.xyzx, r2.xyzx
  18: dp3 r1.y, v2.xyzx, r0.xyzx
  19: add r1.y, r1.y, r1.y
  20: mad r4.xyz, r0.xyzx, -r1.yyyy, v2.xyzx
  21: dp3_sat r0.x, r0.xyzx, cb1[0].xyzx
  22: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  23: mad r1.z, -r2.w, cb0[9].x, l(1.000000)
  24: mad r1.y, -r1.z, l(0.700000), l(1.700000)
  25: mul r1.y, r1.y, r1.z
  26: sample r5.xyzw, r1.xzxx, t3.xyzw, s2
  27: mul r1.x, r5.x, l(16.000000)
  28: mul r1.y, r1.y, l(6.000000)
  29: sample_l r4.xyzw, r4.xyzx, t5.xyzw, s1, r1.y
  30: add r1.y, r4.w, l(-1.000000)
  31: mad r1.y, cb2[3].w, r1.y, l(1.000000)
  32: log r1.y, r1.y
  33: mul r1.y, r1.y, cb2[3].y
  34: exp r1.y, r1.y
  35: mul r1.y, r1.y, cb2[3].x
  36: mul r1.yzw, r4.xxyz, r1.yyyy
  37: sample r4.xyzw, v1.xyxx, t2.xyzw, s5
  38: mul r1.yzw, r1.yyzw, r4.yyyy
  39: mul r1.yzw, r3.xxyz, r1.yyzw
  40: sample r3.xyzw, v6.xyxx, t4.xyzw, s0
  41: mul r3.xyz, r4.yyyy, r3.xyzx
  42: sample r4.xyzw, v1.xyxx, t0.xyzw, s3
  43: mul r4.xyz, r4.xyzx, cb0[4].xyzx
  44: mul r4.xyz, r0.wwww, r4.xyzx
  45: mad r1.yzw, r3.xxyz, r4.xxyz, r1.yyzw
  46: mad r2.xyz, r1.xxxx, r2.xyzx, r4.xyzx
  47: mad o0.xyz, r2.xyzx, r0.xyzx, r1.yzwy
  48: mov o0.w, l(1.000000)
  49: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON LIGHTPROBE_SH UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 27 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  18: add r0.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  19: dp3 r0.w, r0.xyzx, r0.xyzx
  20: rsq r0.w, r0.w
  21: mul o2.xyz, r0.wwww, r0.xyzx
  22: mov o2.w, l(0)
  23: mov r1.w, l(0)
  24: mov o3.xyzw, r1.wwwx
  25: mov o4.xyzw, r1.wwwy
  26: mov o5.w, r1.z
  27: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  28: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  29: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  30: dp3 r0.w, r0.xyzx, r0.xyzx
  31: rsq r0.w, r0.w
  32: mul o5.xyz, r0.wwww, r0.xyzx
  33: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  34: mov o6.zw, l(0,0,0,0)
  35: mov o7.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 41 math, 6 temp registers, 5 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 2
Set 2D Texture "unity_Lightmap" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 6
   0: dp3 r0.x, v5.xyzx, v5.xyzx
   1: rsq r0.x, r0.x
   2: mul r0.xyz, r0.xxxx, v5.xyzx
   3: dp3 r0.w, -v2.xyzx, r0.xyzx
   4: add r1.x, r0.w, r0.w
   5: mov_sat r0.w, r0.w
   6: add r2.y, -r0.w, l(1.000000)
   7: mad r1.xyz, r0.xyzx, -r1.xxxx, -v2.xyzx
   8: dp3 r2.x, r1.xyzx, cb1[0].xyzx
   9: mul r2.zw, r2.xxxy, r2.xxxy
  10: mul r1.xy, r2.xyxx, r2.xwxx
  11: mul r1.xy, r2.zyzz, r1.xyxx
  12: sample r2.xyzw, v1.xyxx, t1.xyzw, s4
  13: add r0.w, -r2.x, l(1.000000)
  14: mad r1.w, r2.w, cb0[9].x, -r0.w
  15: add_sat r1.w, r1.w, l(1.000000)
  16: add r3.xyz, -r2.xyzx, r1.wwww
  17: mad r3.xyz, r1.yyyy, r3.xyzx, r2.xyzx
  18: dp3 r1.y, v2.xyzx, r0.xyzx
  19: add r1.y, r1.y, r1.y
  20: mad r4.xyz, r0.xyzx, -r1.yyyy, v2.xyzx
  21: dp3_sat r0.x, r0.xyzx, cb1[0].xyzx
  22: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  23: mad r1.z, -r2.w, cb0[9].x, l(1.000000)
  24: mad r1.y, -r1.z, l(0.700000), l(1.700000)
  25: mul r1.y, r1.y, r1.z
  26: sample r5.xyzw, r1.xzxx, t3.xyzw, s2
  27: mul r1.x, r5.x, l(16.000000)
  28: mul r1.y, r1.y, l(6.000000)
  29: sample_l r4.xyzw, r4.xyzx, t5.xyzw, s1, r1.y
  30: add r1.y, r4.w, l(-1.000000)
  31: mad r1.y, cb2[3].w, r1.y, l(1.000000)
  32: log r1.y, r1.y
  33: mul r1.y, r1.y, cb2[3].y
  34: exp r1.y, r1.y
  35: mul r1.y, r1.y, cb2[3].x
  36: mul r1.yzw, r4.xxyz, r1.yyyy
  37: sample r4.xyzw, v1.xyxx, t2.xyzw, s5
  38: mul r1.yzw, r1.yyzw, r4.yyyy
  39: mul r1.yzw, r3.xxyz, r1.yyzw
  40: sample r3.xyzw, v6.xyxx, t4.xyzw, s0
  41: mul r3.xyz, r4.yyyy, r3.xyzx
  42: sample r4.xyzw, v1.xyxx, t0.xyzw, s3
  43: mul r4.xyz, r4.xyzx, cb0[4].xyzx
  44: mul r4.xyz, r0.wwww, r4.xyzx
  45: mad r1.yzw, r3.xxyz, r4.xxyz, r1.yyzw
  46: mad r2.xyz, r1.xxxx, r2.xyzx, r4.xyzx
  47: mad o0.xyz, r2.xyzx, r0.xyzx, r1.yzwy
  48: mov o0.w, l(1.000000)
  49: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON LIGHTPROBE_SH 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 36 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mov o3.w, r0.x
  22: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  23: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  24: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  25: dp3 r0.x, r1.xyzx, r1.xyzx
  26: rsq r0.x, r0.x
  27: mul r1.xyz, r0.xxxx, r1.xyzx
  28: mov o3.xyz, r1.xyzx
  29: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  30: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  31: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  32: dp3 r0.x, r2.xyzx, r2.xyzx
  33: rsq r0.x, r0.x
  34: mul r2.xyz, r0.xxxx, r2.xyzx
  35: mul r3.xyz, r1.yzxy, r2.zxyz
  36: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  37: mov o5.xyz, r2.xyzx
  38: mul r0.x, v4.w, cb2[9].w
  39: mul o4.xyz, r0.xxxx, r1.xyzx
  40: mov o4.w, r0.y
  41: mov o5.w, r0.z
  42: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  43: mov o6.zw, l(0,0,0,0)
  44: mov o7.xyzw, l(0,0,0,0)
  45: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 47 math, 6 temp registers, 6 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 5
Set 2D Texture "_BumpMap" to slot 2 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 6
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 2
Set 2D Texture "unity_Lightmap" to slot 5 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t2.xyzw, s4
   1: mul r0.x, r0.w, r0.x
   2: mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   3: mul r1.xyz, r0.yyyy, v4.xyzx
   4: mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
   5: dp2 r0.x, r0.xyxx, r0.xyxx
   6: min r0.x, r0.x, l(1.000000)
   7: add r0.x, -r0.x, l(1.000000)
   8: sqrt r0.x, r0.x
   9: mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
  10: dp3 r0.w, -v2.xyzx, r0.xyzx
  11: add r1.x, r0.w, r0.w
  12: mov_sat r0.w, r0.w
  13: add r2.y, -r0.w, l(1.000000)
  14: mad r1.xyz, r0.xyzx, -r1.xxxx, -v2.xyzx
  15: dp3 r2.x, r1.xyzx, cb1[0].xyzx
  16: mul r2.zw, r2.xxxy, r2.xxxy
  17: mul r1.xy, r2.xyxx, r2.xwxx
  18: mul r1.xy, r2.zyzz, r1.xyxx
  19: sample r2.xyzw, v1.xyxx, t1.xyzw, s5
  20: add r0.w, -r2.x, l(1.000000)
  21: add r1.w, -r0.w, l(1.000000)
  22: mad_sat r1.w, r2.w, cb0[9].x, r1.w
  23: add r3.xyz, -r2.xyzx, r1.wwww
  24: mad r3.xyz, r1.yyyy, r3.xyzx, r2.xyzx
  25: dp3 r1.y, v2.xyzx, r0.xyzx
  26: add r1.y, r1.y, r1.y
  27: mad r4.xyz, r0.xyzx, -r1.yyyy, v2.xyzx
  28: dp3_sat r0.x, r0.xyzx, cb1[0].xyzx
  29: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  30: mad r1.z, -r2.w, cb0[9].x, l(1.000000)
  31: mad r1.y, -r1.z, l(0.700000), l(1.700000)
  32: mul r1.y, r1.y, r1.z
  33: sample r5.xyzw, r1.xzxx, t4.xyzw, s2
  34: mul r1.x, r5.x, l(16.000000)
  35: mul r1.y, r1.y, l(6.000000)
  36: sample_l r4.xyzw, r4.xyzx, t6.xyzw, s1, r1.y
  37: add r1.y, r4.w, l(-1.000000)
  38: mad r1.y, cb2[3].w, r1.y, l(1.000000)
  39: log r1.y, r1.y
  40: mul r1.y, r1.y, cb2[3].y
  41: exp r1.y, r1.y
  42: mul r1.y, r1.y, cb2[3].x
  43: mul r1.yzw, r4.xxyz, r1.yyyy
  44: sample r4.xyzw, v1.xyxx, t3.xyzw, s6
  45: mul r1.yzw, r1.yyzw, r4.yyyy
  46: mul r1.yzw, r3.xxyz, r1.yyzw
  47: sample r3.xyzw, v6.xyxx, t5.xyzw, s0
  48: mul r3.xyz, r4.yyyy, r3.xyzx
  49: sample r4.xyzw, v1.xyxx, t0.xyzw, s3
  50: mul r4.xyz, r4.xyzx, cb0[4].xyzx
  51: mul r4.xyz, r0.wwww, r4.xyzx
  52: mad r1.yzw, r3.xxyz, r4.xxyz, r1.yyzw
  53: mad r2.xyz, r1.xxxx, r2.xyzx, r4.xyzx
  54: mad o0.xyz, r2.xyzx, r0.xyzx, r1.yzwy
  55: mov o0.w, l(1.000000)
  56: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON LIGHTPROBE_SH UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 37 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r0.yzw, cb1[3].xxyz, v0.wwww, r0.yyzw
  18: add r1.xyz, r0.yzwy, -cb2[r0.x + 64].xyzx
  19: dp3 r0.x, r1.xyzx, r1.xyzx
  20: rsq r0.x, r0.x
  21: mul o2.xyz, r0.xxxx, r1.xyzx
  22: mov o2.w, l(0)
  23: mov o3.w, r0.y
  24: mul r1.xyz, v4.yyyy, cb1[1].xyzx
  25: mad r1.xyz, cb1[0].xyzx, v4.xxxx, r1.xyzx
  26: mad r1.xyz, cb1[2].xyzx, v4.zzzz, r1.xyzx
  27: dp3 r0.x, r1.xyzx, r1.xyzx
  28: rsq r0.x, r0.x
  29: mul r1.xyz, r0.xxxx, r1.xyzx
  30: mov o3.xyz, r1.xyzx
  31: dp3 r2.x, v1.xyzx, cb1[4].xyzx
  32: dp3 r2.y, v1.xyzx, cb1[5].xyzx
  33: dp3 r2.z, v1.xyzx, cb1[6].xyzx
  34: dp3 r0.x, r2.xyzx, r2.xyzx
  35: rsq r0.x, r0.x
  36: mul r2.xyz, r0.xxxx, r2.xyzx
  37: mul r3.xyz, r1.yzxy, r2.zxyz
  38: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  39: mov o5.xyz, r2.xyzx
  40: mul r0.x, v4.w, cb1[9].w
  41: mul o4.xyz, r0.xxxx, r1.xyzx
  42: mov o4.w, r0.z
  43: mov o5.w, r0.w
  44: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  45: mov o6.zw, l(0,0,0,0)
  46: mov o7.xyzw, l(0,0,0,0)
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 47 math, 6 temp registers, 6 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 5
Set 2D Texture "_BumpMap" to slot 2 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 6
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 2
Set 2D Texture "unity_Lightmap" to slot 5 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyz 
// TEXCOORD                 3   xyzw        4     NONE   float   xyz 
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyz
      dcl_input_ps linear v4.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t2.xyzw, s4
   1: mul r0.x, r0.w, r0.x
   2: mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   3: mul r1.xyz, r0.yyyy, v4.xyzx
   4: mad r1.xyz, v3.xyzx, r0.xxxx, r1.xyzx
   5: dp2 r0.x, r0.xyxx, r0.xyxx
   6: min r0.x, r0.x, l(1.000000)
   7: add r0.x, -r0.x, l(1.000000)
   8: sqrt r0.x, r0.x
   9: mad r0.xyz, v5.xyzx, r0.xxxx, r1.xyzx
  10: dp3 r0.w, -v2.xyzx, r0.xyzx
  11: add r1.x, r0.w, r0.w
  12: mov_sat r0.w, r0.w
  13: add r2.y, -r0.w, l(1.000000)
  14: mad r1.xyz, r0.xyzx, -r1.xxxx, -v2.xyzx
  15: dp3 r2.x, r1.xyzx, cb1[0].xyzx
  16: mul r2.zw, r2.xxxy, r2.xxxy
  17: mul r1.xy, r2.xyxx, r2.xwxx
  18: mul r1.xy, r2.zyzz, r1.xyxx
  19: sample r2.xyzw, v1.xyxx, t1.xyzw, s5
  20: add r0.w, -r2.x, l(1.000000)
  21: mad r1.w, r2.w, cb0[9].x, -r0.w
  22: add_sat r1.w, r1.w, l(1.000000)
  23: add r3.xyz, -r2.xyzx, r1.wwww
  24: mad r3.xyz, r1.yyyy, r3.xyzx, r2.xyzx
  25: dp3 r1.y, v2.xyzx, r0.xyzx
  26: add r1.y, r1.y, r1.y
  27: mad r4.xyz, r0.xyzx, -r1.yyyy, v2.xyzx
  28: dp3_sat r0.x, r0.xyzx, cb1[0].xyzx
  29: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  30: mad r1.z, -r2.w, cb0[9].x, l(1.000000)
  31: mad r1.y, -r1.z, l(0.700000), l(1.700000)
  32: mul r1.y, r1.y, r1.z
  33: sample r5.xyzw, r1.xzxx, t4.xyzw, s2
  34: mul r1.x, r5.x, l(16.000000)
  35: mul r1.y, r1.y, l(6.000000)
  36: sample_l r4.xyzw, r4.xyzx, t6.xyzw, s1, r1.y
  37: add r1.y, r4.w, l(-1.000000)
  38: mad r1.y, cb2[3].w, r1.y, l(1.000000)
  39: log r1.y, r1.y
  40: mul r1.y, r1.y, cb2[3].y
  41: exp r1.y, r1.y
  42: mul r1.y, r1.y, cb2[3].x
  43: mul r1.yzw, r4.xxyz, r1.yyyy
  44: sample r4.xyzw, v1.xyxx, t3.xyzw, s6
  45: mul r1.yzw, r1.yyzw, r4.yyyy
  46: mul r1.yzw, r3.xxyz, r1.yyzw
  47: sample r3.xyzw, v6.xyxx, t5.xyzw, s0
  48: mul r3.xyz, r4.yyyy, r3.xyzx
  49: sample r4.xyzw, v1.xyxx, t0.xyzw, s3
  50: mul r4.xyz, r4.xyzx, cb0[4].xyzx
  51: mul r4.xyz, r0.wwww, r4.xyzx
  52: mad r1.yzw, r3.xxyz, r4.xxyz, r1.yyzw
  53: mad r2.xyz, r1.xxxx, r2.xyzx, r4.xyzx
  54: mad o0.xyz, r2.xyzx, r0.xyzx, r1.yzwy
  55: mov o0.w, l(1.000000)
  56: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON LIGHTPROBE_SH 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mov r0.w, l(0)
  22: mov o3.xyzw, r0.wwwx
  23: mov o4.xyzw, r0.wwwy
  24: mov o5.w, r0.z
  25: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  32: mov o6.zw, l(0,0,0,0)
  33: mov o7.xyzw, l(0,0,0,0)
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 41 math, 5 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 2
Set 2D Texture "unity_Lightmap" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 5
   0: add r0.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
   1: mad r1.x, -r0.x, l(0.700000), l(1.700000)
   2: mul r0.x, r0.x, r1.x
   3: mul r0.x, r0.x, l(6.000000)
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: dp3 r1.w, v2.xyzx, r1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.xyz, r1.xyzx, -r1.wwww, v2.xyzx
  10: sample_l r2.xyzw, r2.xyzx, t4.xyzw, s1, r0.x
  11: add r0.x, r2.w, l(-1.000000)
  12: mad r0.x, cb2[3].w, r0.x, l(1.000000)
  13: log r0.x, r0.x
  14: mul r0.x, r0.x, cb2[3].y
  15: exp r0.x, r0.x
  16: mul r0.x, r0.x, cb2[3].x
  17: mul r2.xyz, r2.xyzx, r0.xxxx
  18: sample r3.xyzw, v1.xyxx, t1.xyzw, s4
  19: mul r2.xyz, r2.xyzx, r3.yyyy
  20: dp3 r0.x, -v2.xyzx, r1.xyzx
  21: add r1.w, r0.x, r0.x
  22: mov_sat r0.x, r0.x
  23: add r4.y, -r0.x, l(1.000000)
  24: mad r3.xzw, r1.xxyz, -r1.wwww, -v2.xxyz
  25: dp3_sat r0.x, r1.xyzx, cb1[0].xyzx
  26: mul r1.xyz, r0.xxxx, cb0[2].xyzx
  27: dp3 r4.x, r3.xzwx, cb1[0].xyzx
  28: mul r4.zw, r4.xxxy, r4.xxxy
  29: mul r3.xz, r4.xxyx, r4.xxwx
  30: mul r0.yz, r4.zzyz, r3.xxzx
  31: add r0.x, -cb0[3].x, l(1.000000)
  32: add r1.w, -r0.x, l(1.000000)
  33: add_sat r1.w, r1.w, cb0[8].w
  34: add r3.xzw, r1.wwww, -cb0[3].xxyz
  35: mad r3.xzw, r0.zzzz, r3.xxzw, cb0[3].xxyz
  36: sample r4.xyzw, r0.ywyy, t2.xyzw, s2
  37: mul r0.y, r4.x, l(16.000000)
  38: mul r2.xyz, r2.xyzx, r3.xzwx
  39: sample r4.xyzw, v6.xyxx, t3.xyzw, s0
  40: mul r3.xyz, r3.yyyy, r4.xyzx
  41: sample r4.xyzw, v1.xyxx, t0.xyzw, s3
  42: mul r4.xyz, r4.xyzx, cb0[4].xyzx
  43: mul r0.xzw, r0.xxxx, r4.xxyz
  44: mad r2.xyz, r3.xyzx, r0.xzwx, r2.xyzx
  45: mad r0.xyz, r0.yyyy, cb0[3].xyzx, r0.xzwx
  46: mad o0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  47: mov o0.w, l(1.000000)
  48: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON LIGHTPROBE_SH UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 27 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  18: add r0.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  19: dp3 r0.w, r0.xyzx, r0.xyzx
  20: rsq r0.w, r0.w
  21: mul o2.xyz, r0.wwww, r0.xyzx
  22: mov o2.w, l(0)
  23: mov r1.w, l(0)
  24: mov o3.xyzw, r1.wwwx
  25: mov o4.xyzw, r1.wwwy
  26: mov o5.w, r1.z
  27: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  28: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  29: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  30: dp3 r0.w, r0.xyzx, r0.xyzx
  31: rsq r0.w, r0.w
  32: mul o5.xyz, r0.wwww, r0.xyzx
  33: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  34: mov o6.zw, l(0,0,0,0)
  35: mov o7.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 41 math, 5 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_OcclusionMap" to slot 1 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 2
Set 2D Texture "unity_Lightmap" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float       
// TEXCOORD                 3   xyzw        4     NONE   float       
// TEXCOORD                 4   xyzw        5     NONE   float   xyz 
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v5.xyz
      dcl_input_ps linear v6.xy
      dcl_output o0.xyzw
      dcl_temps 5
   0: add r0.xw, -cb0[8].wwww, l(1.000000, 0.000000, 0.000000, 1.000000)
   1: mad r1.x, -r0.x, l(0.700000), l(1.700000)
   2: mul r0.x, r0.x, r1.x
   3: mul r0.x, r0.x, l(6.000000)
   4: dp3 r1.x, v5.xyzx, v5.xyzx
   5: rsq r1.x, r1.x
   6: mul r1.xyz, r1.xxxx, v5.xyzx
   7: dp3 r1.w, v2.xyzx, r1.xyzx
   8: add r1.w, r1.w, r1.w
   9: mad r2.xyz, r1.xyzx, -r1.wwww, v2.xyzx
  10: sample_l r2.xyzw, r2.xyzx, t4.xyzw, s1, r0.x
  11: add r0.x, r2.w, l(-1.000000)
  12: mad r0.x, cb2[3].w, r0.x, l(1.000000)
  13: log r0.x, r0.x
  14: mul r0.x, r0.x, cb2[3].y
  15: exp r0.x, r0.x
  16: mul r0.x, r0.x, cb2[3].x
  17: mul r2.xyz, r2.xyzx, r0.xxxx
  18: sample r3.xyzw, v1.xyxx, t1.xyzw, s4
  19: mul r2.xyz, r2.xyzx, r3.yyyy
  20: dp3 r0.x, -v2.xyzx, r1.xyzx
  21: add r1.w, r0.x, r0.x
  22: mov_sat r0.x, r0.x
  23: add r4.y, -r0.x, l(1.000000)
  24: mad r3.xzw, r1.xxyz, -r1.wwww, -v2.xxyz
  25: dp3_sat r0.x, r1.xyzx, cb1[0].xyzx
  26: mul r1.xyz, r0.xxxx, cb0[2].xyzx
  27: dp3 r4.x, r3.xzwx, cb1[0].xyzx
  28: mul r4.zw, r4.xxxy, r4.xxxy
  29: mul r3.xz, r4.xxyx, r4.xxwx
  30: mul r0.yz, r4.zzyz, r3.xxzx
  31: add r0.x, -cb0[3].x, l(1.000000)
  32: add r1.w, -r0.x, l(1.000000)
  33: add_sat r1.w, r1.w, cb0[8].w
  34: add r3.xzw, r1.wwww, -cb0[3].xxyz
  35: mad r3.xzw, r0.zzzz, r3.xxzw, cb0[3].xxyz
  36: sample r4.xyzw, r0.ywyy, t2.xyzw, s2
  37: mul r0.y, r4.x, l(16.000000)
  38: mul r2.xyz, r2.xyzx, r3.xzwx
  39: sample r4.xyzw, v6.xyxx, t3.xyzw, s0
  40: mul r3.xyz, r3.yyyy, r4.xyzx
  41: sample r4.xyzw, v1.xyxx, t0.xyzw, s3
  42: mul r4.xyz, r4.xyzx, cb0[4].xyzx
  43: mul r0.xzw, r0.xxxx, r4.xxyz
  44: mad r2.xyz, r3.xyzx, r0.xzwx, r2.xyzx
  45: mad r0.xyz, r0.yyyy, cb0[3].xyzx, r0.xzwx
  46: mad o0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
  47: mov o0.w, l(1.000000)
  48: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul o5.xyz, r1.wwww, r1.xyzx
  29: mov o6.xyzw, l(0,0,0,0)
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 152 math, 13 temp registers, 5 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 5
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r2.w, v2.xyzx, v2.xyzx
  11: rsq r2.w, r2.w
  12: mul r3.xyz, r2.wwww, v2.xyzx
  13: mov r4.x, v3.w
  14: mov r4.y, v4.w
  15: mov r4.z, v5.w
  16: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r3.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  22: dp3 r4.w, r5.xyzx, r5.xyzx
  23: sqrt r4.w, r4.w
  24: add r4.w, -r3.w, r4.w
  25: mad r3.w, cb3[25].w, r4.w, r3.w
  26: mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
  27: eq r4.w, cb6[0].x, l(1.000000)
  28: if_nz r4.w
  29:   eq r4.w, cb6[0].y, l(1.000000)
  30:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  31:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  32:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  33:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  34:   movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
  35:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  36:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  37:   mad r4.w, r5.y, l(0.250000), l(0.750000)
  38:   mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r5.x, r4.w, r5.y
  40:   sample r5.xyzw, r5.xzwx, t6.xyzw, s1
  41: else 
  42:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
  45: div r5.xy, v7.xyxx, v7.wwww
  46: sample r5.xyzw, r5.xyxx, t2.xyzw, s5
  47: add r4.w, r4.w, -r5.x
  48: mad r3.w, r3.w, r4.w, r5.x
  49: sample r5.xyzw, v1.xyxx, t3.xyzw, s4
  50: add r4.w, -cb0[9].y, l(1.000000)
  51: mad r4.w, r5.y, cb0[9].y, r4.w
  52: mad r5.x, -r0.w, cb0[9].x, l(1.000000)
  53: dp3 r5.y, r3.xyzx, r2.xyzx
  54: add r5.y, r5.y, r5.y
  55: mad r5.yzw, r2.xxyz, -r5.yyyy, r3.xxyz
  56: mul r6.xyz, r3.wwww, cb0[2].xyzx
  57: lt r3.w, l(0.000000), cb5[2].w
  58: if_nz r3.w
  59:   dp3 r3.w, r5.yzwy, r5.yzwy
  60:   rsq r3.w, r3.w
  61:   mul r7.xyz, r3.wwww, r5.yzwy
  62:   add r8.xyz, -r4.xyzx, cb5[0].xyzx
  63:   div r8.xyz, r8.xyzx, r7.xyzx
  64:   add r9.xyz, -r4.xyzx, cb5[1].xyzx
  65:   div r9.xyz, r9.xyzx, r7.xyzx
  66:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  67:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  68:   min r3.w, r8.y, r8.x
  69:   min r3.w, r8.z, r3.w
  70:   add r8.xyz, r4.xyzx, -cb5[2].xyzx
  71:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  72: else 
  73:   mov r7.xyz, r5.yzwy
  74: endif 
  75: mad r3.w, -r5.x, l(0.700000), l(1.700000)
  76: mul r3.w, r3.w, r5.x
  77: mul r3.w, r3.w, l(6.000000)
  78: sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, r3.w
  79: add r6.w, r7.w, l(-1.000000)
  80: mad r6.w, cb5[3].w, r6.w, l(1.000000)
  81: log r6.w, r6.w
  82: mul r6.w, r6.w, cb5[3].y
  83: exp r6.w, r6.w
  84: mul r6.w, r6.w, cb5[3].x
  85: mul r8.xyz, r7.xyzx, r6.wwww
  86: lt r7.w, cb5[1].w, l(0.999990)
  87: if_nz r7.w
  88:   lt r7.w, l(0.000000), cb5[6].w
  89:   if_nz r7.w
  90:     dp3 r7.w, r5.yzwy, r5.yzwy
  91:     rsq r7.w, r7.w
  92:     mul r9.xyz, r5.yzwy, r7.wwww
  93:     add r10.xyz, -r4.xyzx, cb5[4].xyzx
  94:     div r10.xyz, r10.xyzx, r9.xyzx
  95:     add r11.xyz, -r4.xyzx, cb5[5].xyzx
  96:     div r11.xyz, r11.xyzx, r9.xyzx
  97:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  98:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  99:     min r7.w, r10.y, r10.x
 100:     min r7.w, r10.z, r7.w
 101:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 102:     mad r5.yzw, r9.xxyz, r7.wwww, r4.xxyz
 103:   endif 
 104:   sample_l r9.xyzw, r5.yzwy, t5.xyzw, s0, r3.w
 105:   add r3.w, r9.w, l(-1.000000)
 106:   mad r3.w, cb5[7].w, r3.w, l(1.000000)
 107:   log r3.w, r3.w
 108:   mul r3.w, r3.w, cb5[7].y
 109:   exp r3.w, r3.w
 110:   mul r3.w, r3.w, cb5[7].x
 111:   mul r4.xyz, r9.xyzx, r3.wwww
 112:   mad r5.yzw, r6.wwww, r7.xxyz, -r4.xxyz
 113:   mad r8.xyz, cb5[1].wwww, r5.yzwy, r4.xyzx
 114: endif 
 115: mul r4.xyz, r4.wwww, r8.xyzx
 116: mad r5.yzw, -v2.xxyz, r2.wwww, cb2[0].xxyz
 117: dp3 r2.w, r5.yzwy, r5.yzwy
 118: max r2.w, r2.w, l(0.001000)
 119: rsq r2.w, r2.w
 120: mul r5.yzw, r2.wwww, r5.yyzw
 121: dp3 r2.w, r2.xyzx, -r3.xyzx
 122: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 123: dp3_sat r2.x, r2.xyzx, r5.yzwy
 124: dp3_sat r2.y, cb2[0].xyzx, r5.yzwy
 125: mul r2.z, r2.y, r2.y
 126: dp2 r2.z, r2.zzzz, r5.xxxx
 127: add r2.z, r2.z, l(-0.500000)
 128: add r3.y, -r3.x, l(1.000000)
 129: mul r3.z, r3.y, r3.y
 130: mul r3.z, r3.z, r3.z
 131: mul r3.y, r3.y, r3.z
 132: mad r3.y, r2.z, r3.y, l(1.000000)
 133: add r3.z, -|r2.w|, l(1.000000)
 134: mul r3.w, r3.z, r3.z
 135: mul r3.w, r3.w, r3.w
 136: mul r3.z, r3.z, r3.w
 137: mad r2.z, r2.z, r3.z, l(1.000000)
 138: mul r2.z, r2.z, r3.y
 139: mul r3.y, r5.x, r5.x
 140: max r3.y, r3.y, l(0.002000)
 141: add r3.w, -r3.y, l(1.000000)
 142: mad r4.w, |r2.w|, r3.w, r3.y
 143: mad r3.w, r3.x, r3.w, r3.y
 144: mul r2.w, |r2.w|, r3.w
 145: mad r2.w, r3.x, r4.w, r2.w
 146: add r2.w, r2.w, l(0.000010)
 147: div r2.w, l(0.500000), r2.w
 148: mul r3.w, r3.y, r3.y
 149: mad r4.w, r2.x, r3.w, -r2.x
 150: mad r2.x, r4.w, r2.x, l(1.000000)
 151: mul r3.w, r3.w, l(0.318310)
 152: mad r2.x, r2.x, r2.x, l(0.000000)
 153: div r2.x, r3.w, r2.x
 154: mul r2.x, r2.x, r2.w
 155: mul r2.x, r2.x, l(3.141593)
 156: mul r2.xz, r3.xxxx, r2.xxzx
 157: max r2.x, r2.x, l(0.000000)
 158: mad r2.w, r3.y, r3.y, l(1.000000)
 159: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 160: dp3 r3.x, r0.xyzx, r0.xyzx
 161: ne r3.x, r3.x, l(0.000000)
 162: and r3.x, r3.x, l(0x3f800000)
 163: mul r2.x, r2.x, r3.x
 164: mad r0.w, r0.w, cb0[9].x, -r1.w
 165: add_sat r0.w, r0.w, l(1.000000)
 166: mul r3.xyw, r2.zzzz, r6.xyxz
 167: mul r5.xyz, r6.xyzx, r2.xxxx
 168: add r1.w, -r2.y, l(1.000000)
 169: mul r2.x, r1.w, r1.w
 170: mul r2.x, r2.x, r2.x
 171: mul r1.w, r1.w, r2.x
 172: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 173: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 174: mul r2.xyz, r2.xyzx, r5.xyzx
 175: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 176: mul r2.xyz, r4.xyzx, r2.wwww
 177: add r3.xyw, -r0.xyxz, r0.wwww
 178: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 179: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 180: mov o0.w, l(1.000000)
 181: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[68], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  16: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  19: mov r2.x, cb4[0].x
  20: add o2.xyz, r1.xyzx, -cb3[r2.x + 64].xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mov o6.xyzw, l(0,0,0,0)
  32: mul r0.y, r0.y, cb1[4].x
  33: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  34: add r0.xy, r1.zzzz, r1.xwxx
  35: mul r1.xy, r0.wwww, cb3[r2.x + 66].zwzz
  36: mad o7.xy, r0.xyxx, cb3[r2.x + 66].xyxx, r1.xyxx
  37: mov o7.zw, r0.zzzw
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 153 math, 13 temp registers, 5 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 5
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r2.w, v2.xyzx, v2.xyzx
  11: rsq r2.w, r2.w
  12: mul r3.xyz, r2.wwww, v2.xyzx
  13: mov r4.x, v3.w
  14: mov r4.y, v4.w
  15: mov r4.z, v5.w
  16: mov r3.w, cb4[0].x
  17: add r5.xyz, -r4.xyzx, cb3[r3.w + 64].xyzx
  18: ishl r3.w, cb4[0].x, l(2)
  19: mov r6.x, cb3[r3.w + 8].z
  20: mov r6.y, cb3[r3.w + 9].z
  21: mov r6.z, cb3[r3.w + 10].z
  22: dp3 r3.w, r5.xyzx, r6.xyzx
  23: add r5.xyz, r4.xyzx, -cb2[25].xyzx
  24: dp3 r4.w, r5.xyzx, r5.xyzx
  25: sqrt r4.w, r4.w
  26: add r4.w, -r3.w, r4.w
  27: mad r3.w, cb2[25].w, r4.w, r3.w
  28: mad_sat r3.w, r3.w, cb2[24].z, cb2[24].w
  29: eq r4.w, cb6[0].x, l(1.000000)
  30: if_nz r4.w
  31:   eq r4.w, cb6[0].y, l(1.000000)
  32:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  33:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  34:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  35:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  36:   movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
  37:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  38:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  39:   mad r4.w, r5.y, l(0.250000), l(0.750000)
  40:   mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  41:   max r5.x, r4.w, r5.y
  42:   sample r5.xyzw, r5.xzwx, t6.xyzw, s1
  43: else 
  44:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  45: endif 
  46: dp4_sat r4.w, r5.xyzw, cb1[46].xyzw
  47: div r5.xy, v7.xyxx, v7.wwww
  48: sample r5.xyzw, r5.xyxx, t2.xyzw, s5
  49: add r4.w, r4.w, -r5.x
  50: mad r3.w, r3.w, r4.w, r5.x
  51: sample r5.xyzw, v1.xyxx, t3.xyzw, s4
  52: add r4.w, -cb0[9].y, l(1.000000)
  53: mad r4.w, r5.y, cb0[9].y, r4.w
  54: mad r5.x, -r0.w, cb0[9].x, l(1.000000)
  55: dp3 r5.y, r3.xyzx, r2.xyzx
  56: add r5.y, r5.y, r5.y
  57: mad r5.yzw, r2.xxyz, -r5.yyyy, r3.xxyz
  58: mul r6.xyz, r3.wwww, cb0[2].xyzx
  59: lt r3.w, l(0.000000), cb5[2].w
  60: if_nz r3.w
  61:   dp3 r3.w, r5.yzwy, r5.yzwy
  62:   rsq r3.w, r3.w
  63:   mul r7.xyz, r3.wwww, r5.yzwy
  64:   add r8.xyz, -r4.xyzx, cb5[0].xyzx
  65:   div r8.xyz, r8.xyzx, r7.xyzx
  66:   add r9.xyz, -r4.xyzx, cb5[1].xyzx
  67:   div r9.xyz, r9.xyzx, r7.xyzx
  68:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  69:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  70:   min r3.w, r8.y, r8.x
  71:   min r3.w, r8.z, r3.w
  72:   add r8.xyz, r4.xyzx, -cb5[2].xyzx
  73:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  74: else 
  75:   mov r7.xyz, r5.yzwy
  76: endif 
  77: mad r3.w, -r5.x, l(0.700000), l(1.700000)
  78: mul r3.w, r3.w, r5.x
  79: mul r3.w, r3.w, l(6.000000)
  80: sample_l r7.xyzw, r7.xyzx, t4.xyzw, s0, r3.w
  81: add r6.w, r7.w, l(-1.000000)
  82: mad r6.w, cb5[3].w, r6.w, l(1.000000)
  83: log r6.w, r6.w
  84: mul r6.w, r6.w, cb5[3].y
  85: exp r6.w, r6.w
  86: mul r6.w, r6.w, cb5[3].x
  87: mul r8.xyz, r7.xyzx, r6.wwww
  88: lt r7.w, cb5[1].w, l(0.999990)
  89: if_nz r7.w
  90:   lt r7.w, l(0.000000), cb5[6].w
  91:   if_nz r7.w
  92:     dp3 r7.w, r5.yzwy, r5.yzwy
  93:     rsq r7.w, r7.w
  94:     mul r9.xyz, r5.yzwy, r7.wwww
  95:     add r10.xyz, -r4.xyzx, cb5[4].xyzx
  96:     div r10.xyz, r10.xyzx, r9.xyzx
  97:     add r11.xyz, -r4.xyzx, cb5[5].xyzx
  98:     div r11.xyz, r11.xyzx, r9.xyzx
  99:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 100:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 101:     min r7.w, r10.y, r10.x
 102:     min r7.w, r10.z, r7.w
 103:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 104:     mad r5.yzw, r9.xxyz, r7.wwww, r4.xxyz
 105:   endif 
 106:   sample_l r9.xyzw, r5.yzwy, t5.xyzw, s0, r3.w
 107:   add r3.w, r9.w, l(-1.000000)
 108:   mad r3.w, cb5[7].w, r3.w, l(1.000000)
 109:   log r3.w, r3.w
 110:   mul r3.w, r3.w, cb5[7].y
 111:   exp r3.w, r3.w
 112:   mul r3.w, r3.w, cb5[7].x
 113:   mul r4.xyz, r9.xyzx, r3.wwww
 114:   mad r5.yzw, r6.wwww, r7.xxyz, -r4.xxyz
 115:   mad r8.xyz, cb5[1].wwww, r5.yzwy, r4.xyzx
 116: endif 
 117: mul r4.xyz, r4.wwww, r8.xyzx
 118: mad r5.yzw, -v2.xxyz, r2.wwww, cb1[0].xxyz
 119: dp3 r2.w, r5.yzwy, r5.yzwy
 120: max r2.w, r2.w, l(0.001000)
 121: rsq r2.w, r2.w
 122: mul r5.yzw, r2.wwww, r5.yyzw
 123: dp3 r2.w, r2.xyzx, -r3.xyzx
 124: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 125: dp3_sat r2.x, r2.xyzx, r5.yzwy
 126: dp3_sat r2.y, cb1[0].xyzx, r5.yzwy
 127: mul r2.z, r2.y, r2.y
 128: dp2 r2.z, r2.zzzz, r5.xxxx
 129: add r2.z, r2.z, l(-0.500000)
 130: add r3.y, -r3.x, l(1.000000)
 131: mul r3.z, r3.y, r3.y
 132: mul r3.z, r3.z, r3.z
 133: mul r3.y, r3.y, r3.z
 134: mad r3.y, r2.z, r3.y, l(1.000000)
 135: add r3.z, -|r2.w|, l(1.000000)
 136: mul r3.w, r3.z, r3.z
 137: mul r3.w, r3.w, r3.w
 138: mul r3.z, r3.z, r3.w
 139: mad r2.z, r2.z, r3.z, l(1.000000)
 140: mul r2.z, r2.z, r3.y
 141: mul r3.y, r5.x, r5.x
 142: max r3.y, r3.y, l(0.002000)
 143: add r3.w, -r3.y, l(1.000000)
 144: mad r4.w, |r2.w|, r3.w, r3.y
 145: mad r3.w, r3.x, r3.w, r3.y
 146: mul r2.w, |r2.w|, r3.w
 147: mad r2.w, r3.x, r4.w, r2.w
 148: add r2.w, r2.w, l(0.000010)
 149: div r2.w, l(0.500000), r2.w
 150: mul r3.w, r3.y, r3.y
 151: mad r4.w, r2.x, r3.w, -r2.x
 152: mad r2.x, r4.w, r2.x, l(1.000000)
 153: mul r3.w, r3.w, l(0.318310)
 154: mad r2.x, r2.x, r2.x, l(0.000000)
 155: div r2.x, r3.w, r2.x
 156: mul r2.x, r2.x, r2.w
 157: mul r2.x, r2.x, l(3.141593)
 158: mul r2.xz, r3.xxxx, r2.xxzx
 159: max r2.x, r2.x, l(0.000000)
 160: mad r2.w, r3.y, r3.y, l(1.000000)
 161: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 162: dp3 r3.x, r0.xyzx, r0.xyzx
 163: ne r3.x, r3.x, l(0.000000)
 164: and r3.x, r3.x, l(0x3f800000)
 165: mul r2.x, r2.x, r3.x
 166: mad r0.w, r0.w, cb0[9].x, -r1.w
 167: add_sat r0.w, r0.w, l(1.000000)
 168: mul r3.xyw, r2.zzzz, r6.xyxz
 169: mul r5.xyz, r6.xyzx, r2.xxxx
 170: add r1.w, -r2.y, l(1.000000)
 171: mul r2.x, r1.w, r1.w
 172: mul r2.x, r2.x, r2.x
 173: mul r1.w, r1.w, r2.x
 174: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 175: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 176: mul r2.xyz, r2.xyzx, r5.xyzx
 177: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 178: mul r2.xyz, r4.xyzx, r2.wwww
 179: add r3.xyw, -r0.xyxz, r0.wwww
 180: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 181: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 182: mov o0.w, l(1.000000)
 183: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov o3.w, r1.x
  20: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  21: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  22: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  23: dp3 r1.x, r2.xyzx, r2.xyzx
  24: rsq r1.x, r1.x
  25: mul r2.xyz, r1.xxxx, r2.xyzx
  26: mov o3.xyz, r2.xyzx
  27: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.x, r3.xyzx, r3.xyzx
  31: rsq r1.x, r1.x
  32: mul r3.xyz, r1.xxxx, r3.xyzx
  33: mul r4.xyz, r2.yzxy, r3.zxyz
  34: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  35: mov o5.xyz, r3.xyzx
  36: mul r1.x, v4.w, cb2[9].w
  37: mul o4.xyz, r1.xxxx, r2.xyzx
  38: mov o4.w, r1.y
  39: mov o5.w, r1.z
  40: mov o6.xyzw, l(0,0,0,0)
  41: mul r0.y, r0.y, cb1[5].x
  42: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  43: mov o7.zw, r0.zzzw
  44: add o7.xy, r1.zzzz, r1.xwxx
  45: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 162 math, 13 temp registers, 6 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 3 sampler slot 6
Set 2D Texture "_OcclusionMap" to slot 4 sampler slot 5
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r2.z, r2.xyxx, r2.xyxx
  12: min r2.z, r2.z, l(1.000000)
  13: add r2.z, -r2.z, l(1.000000)
  14: sqrt r2.z, r2.z
  15: mul r3.xyz, r2.yyyy, v4.xyzx
  16: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  17: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  18: dp3 r2.w, r2.xyzx, r2.xyzx
  19: rsq r2.w, r2.w
  20: mul r2.xyz, r2.wwww, r2.xyzx
  21: dp3 r2.w, v2.xyzx, v2.xyzx
  22: rsq r2.w, r2.w
  23: mul r3.xyz, r2.wwww, v2.xyzx
  24: mov r4.x, v3.w
  25: mov r4.y, v4.w
  26: mov r4.z, v5.w
  27: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  28: mov r6.x, cb4[9].z
  29: mov r6.y, cb4[10].z
  30: mov r6.z, cb4[11].z
  31: dp3 r3.w, r5.xyzx, r6.xyzx
  32: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  33: dp3 r4.w, r5.xyzx, r5.xyzx
  34: sqrt r4.w, r4.w
  35: add r4.w, -r3.w, r4.w
  36: mad r3.w, cb3[25].w, r4.w, r3.w
  37: mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
  38: eq r4.w, cb6[0].x, l(1.000000)
  39: if_nz r4.w
  40:   eq r4.w, cb6[0].y, l(1.000000)
  41:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  42:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  43:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  44:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  45:   movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
  46:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  47:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  48:   mad r4.w, r5.y, l(0.250000), l(0.750000)
  49:   mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  50:   max r5.x, r4.w, r5.y
  51:   sample r5.xyzw, r5.xzwx, t7.xyzw, s1
  52: else 
  53:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  54: endif 
  55: dp4_sat r4.w, r5.xyzw, cb2[46].xyzw
  56: div r5.xy, v7.xyxx, v7.wwww
  57: sample r5.xyzw, r5.xyxx, t3.xyzw, s6
  58: add r4.w, r4.w, -r5.x
  59: mad r3.w, r3.w, r4.w, r5.x
  60: sample r5.xyzw, v1.xyxx, t4.xyzw, s5
  61: add r4.w, -cb0[9].y, l(1.000000)
  62: mad r4.w, r5.y, cb0[9].y, r4.w
  63: mad r5.x, -r0.w, cb0[9].x, l(1.000000)
  64: dp3 r5.y, r3.xyzx, r2.xyzx
  65: add r5.y, r5.y, r5.y
  66: mad r5.yzw, r2.xxyz, -r5.yyyy, r3.xxyz
  67: mul r6.xyz, r3.wwww, cb0[2].xyzx
  68: lt r3.w, l(0.000000), cb5[2].w
  69: if_nz r3.w
  70:   dp3 r3.w, r5.yzwy, r5.yzwy
  71:   rsq r3.w, r3.w
  72:   mul r7.xyz, r3.wwww, r5.yzwy
  73:   add r8.xyz, -r4.xyzx, cb5[0].xyzx
  74:   div r8.xyz, r8.xyzx, r7.xyzx
  75:   add r9.xyz, -r4.xyzx, cb5[1].xyzx
  76:   div r9.xyz, r9.xyzx, r7.xyzx
  77:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  78:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  79:   min r3.w, r8.y, r8.x
  80:   min r3.w, r8.z, r3.w
  81:   add r8.xyz, r4.xyzx, -cb5[2].xyzx
  82:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  83: else 
  84:   mov r7.xyz, r5.yzwy
  85: endif 
  86: mad r3.w, -r5.x, l(0.700000), l(1.700000)
  87: mul r3.w, r3.w, r5.x
  88: mul r3.w, r3.w, l(6.000000)
  89: sample_l r7.xyzw, r7.xyzx, t5.xyzw, s0, r3.w
  90: add r6.w, r7.w, l(-1.000000)
  91: mad r6.w, cb5[3].w, r6.w, l(1.000000)
  92: log r6.w, r6.w
  93: mul r6.w, r6.w, cb5[3].y
  94: exp r6.w, r6.w
  95: mul r6.w, r6.w, cb5[3].x
  96: mul r8.xyz, r7.xyzx, r6.wwww
  97: lt r7.w, cb5[1].w, l(0.999990)
  98: if_nz r7.w
  99:   lt r7.w, l(0.000000), cb5[6].w
 100:   if_nz r7.w
 101:     dp3 r7.w, r5.yzwy, r5.yzwy
 102:     rsq r7.w, r7.w
 103:     mul r9.xyz, r5.yzwy, r7.wwww
 104:     add r10.xyz, -r4.xyzx, cb5[4].xyzx
 105:     div r10.xyz, r10.xyzx, r9.xyzx
 106:     add r11.xyz, -r4.xyzx, cb5[5].xyzx
 107:     div r11.xyz, r11.xyzx, r9.xyzx
 108:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 109:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 110:     min r7.w, r10.y, r10.x
 111:     min r7.w, r10.z, r7.w
 112:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 113:     mad r5.yzw, r9.xxyz, r7.wwww, r4.xxyz
 114:   endif 
 115:   sample_l r9.xyzw, r5.yzwy, t6.xyzw, s0, r3.w
 116:   add r3.w, r9.w, l(-1.000000)
 117:   mad r3.w, cb5[7].w, r3.w, l(1.000000)
 118:   log r3.w, r3.w
 119:   mul r3.w, r3.w, cb5[7].y
 120:   exp r3.w, r3.w
 121:   mul r3.w, r3.w, cb5[7].x
 122:   mul r4.xyz, r9.xyzx, r3.wwww
 123:   mad r5.yzw, r6.wwww, r7.xxyz, -r4.xxyz
 124:   mad r8.xyz, cb5[1].wwww, r5.yzwy, r4.xyzx
 125: endif 
 126: mul r4.xyz, r4.wwww, r8.xyzx
 127: mad r5.yzw, -v2.xxyz, r2.wwww, cb2[0].xxyz
 128: dp3 r2.w, r5.yzwy, r5.yzwy
 129: max r2.w, r2.w, l(0.001000)
 130: rsq r2.w, r2.w
 131: mul r5.yzw, r2.wwww, r5.yyzw
 132: dp3 r2.w, r2.xyzx, -r3.xyzx
 133: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 134: dp3_sat r2.x, r2.xyzx, r5.yzwy
 135: dp3_sat r2.y, cb2[0].xyzx, r5.yzwy
 136: mul r2.z, r2.y, r2.y
 137: dp2 r2.z, r2.zzzz, r5.xxxx
 138: add r2.z, r2.z, l(-0.500000)
 139: add r3.y, -r3.x, l(1.000000)
 140: mul r3.z, r3.y, r3.y
 141: mul r3.z, r3.z, r3.z
 142: mul r3.y, r3.y, r3.z
 143: mad r3.y, r2.z, r3.y, l(1.000000)
 144: add r3.z, -|r2.w|, l(1.000000)
 145: mul r3.w, r3.z, r3.z
 146: mul r3.w, r3.w, r3.w
 147: mul r3.z, r3.z, r3.w
 148: mad r2.z, r2.z, r3.z, l(1.000000)
 149: mul r2.z, r2.z, r3.y
 150: mul r3.y, r5.x, r5.x
 151: max r3.y, r3.y, l(0.002000)
 152: add r3.w, -r3.y, l(1.000000)
 153: mad r4.w, |r2.w|, r3.w, r3.y
 154: mad r3.w, r3.x, r3.w, r3.y
 155: mul r2.w, |r2.w|, r3.w
 156: mad r2.w, r3.x, r4.w, r2.w
 157: add r2.w, r2.w, l(0.000010)
 158: div r2.w, l(0.500000), r2.w
 159: mul r3.w, r3.y, r3.y
 160: mad r4.w, r2.x, r3.w, -r2.x
 161: mad r2.x, r4.w, r2.x, l(1.000000)
 162: mul r3.w, r3.w, l(0.318310)
 163: mad r2.x, r2.x, r2.x, l(0.000000)
 164: div r2.x, r3.w, r2.x
 165: mul r2.x, r2.x, r2.w
 166: mul r2.x, r2.x, l(3.141593)
 167: mul r2.xz, r3.xxxx, r2.xxzx
 168: max r2.x, r2.x, l(0.000000)
 169: mad r2.w, r3.y, r3.y, l(1.000000)
 170: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 171: dp3 r3.x, r0.xyzx, r0.xyzx
 172: ne r3.x, r3.x, l(0.000000)
 173: and r3.x, r3.x, l(0x3f800000)
 174: mul r2.x, r2.x, r3.x
 175: mad r0.w, r0.w, cb0[9].x, -r1.w
 176: add_sat r0.w, r0.w, l(1.000000)
 177: mul r3.xyw, r2.zzzz, r6.xyxz
 178: mul r5.xyz, r6.xyzx, r2.xxxx
 179: add r1.w, -r2.y, l(1.000000)
 180: mul r2.x, r1.w, r1.w
 181: mul r2.x, r2.x, r2.x
 182: mul r1.w, r1.w, r2.x
 183: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 184: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 185: mul r2.xyz, r2.xyzx, r5.xyzx
 186: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 187: mul r2.xyz, r4.xyzx, r2.wwww
 188: add r3.xyw, -r0.xyxz, r0.wwww
 189: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 190: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 191: mov o0.w, l(1.000000)
 192: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[68], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  16: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  19: mov r1.w, cb4[0].x
  20: add o2.xyz, r1.xyzx, -cb3[r1.w + 64].xyzx
  21: mov o3.w, r1.x
  22: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  23: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  24: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  25: dp3 r1.x, r2.xyzx, r2.xyzx
  26: rsq r1.x, r1.x
  27: mul r2.xyz, r1.xxxx, r2.xyzx
  28: mov o3.xyz, r2.xyzx
  29: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  30: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  31: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  32: dp3 r1.x, r3.xyzx, r3.xyzx
  33: rsq r1.x, r1.x
  34: mul r3.xyz, r1.xxxx, r3.xyzx
  35: mul r4.xyz, r2.yzxy, r3.zxyz
  36: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r3.xyzx
  38: mul r1.x, v4.w, cb2[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r1.y
  41: mov o5.w, r1.z
  42: mov o6.xyzw, l(0,0,0,0)
  43: mul r0.y, r0.y, cb1[4].x
  44: mul r2.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  45: add r0.xy, r2.zzzz, r2.xwxx
  46: mul r1.xy, r0.wwww, cb3[r1.w + 66].zwzz
  47: mad o7.xy, r0.xyxx, cb3[r1.w + 66].xyxx, r1.xyxx
  48: mov o7.zw, r0.zzzw
  49: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 163 math, 13 temp registers, 6 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 3 sampler slot 6
Set 2D Texture "_OcclusionMap" to slot 4 sampler slot 5
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r2.z, r2.xyxx, r2.xyxx
  12: min r2.z, r2.z, l(1.000000)
  13: add r2.z, -r2.z, l(1.000000)
  14: sqrt r2.z, r2.z
  15: mul r3.xyz, r2.yyyy, v4.xyzx
  16: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  17: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  18: dp3 r2.w, r2.xyzx, r2.xyzx
  19: rsq r2.w, r2.w
  20: mul r2.xyz, r2.wwww, r2.xyzx
  21: dp3 r2.w, v2.xyzx, v2.xyzx
  22: rsq r2.w, r2.w
  23: mul r3.xyz, r2.wwww, v2.xyzx
  24: mov r4.x, v3.w
  25: mov r4.y, v4.w
  26: mov r4.z, v5.w
  27: mov r3.w, cb4[0].x
  28: add r5.xyz, -r4.xyzx, cb3[r3.w + 64].xyzx
  29: ishl r3.w, cb4[0].x, l(2)
  30: mov r6.x, cb3[r3.w + 8].z
  31: mov r6.y, cb3[r3.w + 9].z
  32: mov r6.z, cb3[r3.w + 10].z
  33: dp3 r3.w, r5.xyzx, r6.xyzx
  34: add r5.xyz, r4.xyzx, -cb2[25].xyzx
  35: dp3 r4.w, r5.xyzx, r5.xyzx
  36: sqrt r4.w, r4.w
  37: add r4.w, -r3.w, r4.w
  38: mad r3.w, cb2[25].w, r4.w, r3.w
  39: mad_sat r3.w, r3.w, cb2[24].z, cb2[24].w
  40: eq r4.w, cb6[0].x, l(1.000000)
  41: if_nz r4.w
  42:   eq r4.w, cb6[0].y, l(1.000000)
  43:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  44:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  45:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  46:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  47:   movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
  48:   add r5.xyz, r5.xyzx, -cb6[6].xyzx
  49:   mul r5.yzw, r5.xxyz, cb6[5].xxyz
  50:   mad r4.w, r5.y, l(0.250000), l(0.750000)
  51:   mad r5.y, cb6[0].z, l(0.500000), l(0.750000)
  52:   max r5.x, r4.w, r5.y
  53:   sample r5.xyzw, r5.xzwx, t7.xyzw, s1
  54: else 
  55:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  56: endif 
  57: dp4_sat r4.w, r5.xyzw, cb1[46].xyzw
  58: div r5.xy, v7.xyxx, v7.wwww
  59: sample r5.xyzw, r5.xyxx, t3.xyzw, s6
  60: add r4.w, r4.w, -r5.x
  61: mad r3.w, r3.w, r4.w, r5.x
  62: sample r5.xyzw, v1.xyxx, t4.xyzw, s5
  63: add r4.w, -cb0[9].y, l(1.000000)
  64: mad r4.w, r5.y, cb0[9].y, r4.w
  65: mad r5.x, -r0.w, cb0[9].x, l(1.000000)
  66: dp3 r5.y, r3.xyzx, r2.xyzx
  67: add r5.y, r5.y, r5.y
  68: mad r5.yzw, r2.xxyz, -r5.yyyy, r3.xxyz
  69: mul r6.xyz, r3.wwww, cb0[2].xyzx
  70: lt r3.w, l(0.000000), cb5[2].w
  71: if_nz r3.w
  72:   dp3 r3.w, r5.yzwy, r5.yzwy
  73:   rsq r3.w, r3.w
  74:   mul r7.xyz, r3.wwww, r5.yzwy
  75:   add r8.xyz, -r4.xyzx, cb5[0].xyzx
  76:   div r8.xyz, r8.xyzx, r7.xyzx
  77:   add r9.xyz, -r4.xyzx, cb5[1].xyzx
  78:   div r9.xyz, r9.xyzx, r7.xyzx
  79:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  80:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  81:   min r3.w, r8.y, r8.x
  82:   min r3.w, r8.z, r3.w
  83:   add r8.xyz, r4.xyzx, -cb5[2].xyzx
  84:   mad r7.xyz, r7.xyzx, r3.wwww, r8.xyzx
  85: else 
  86:   mov r7.xyz, r5.yzwy
  87: endif 
  88: mad r3.w, -r5.x, l(0.700000), l(1.700000)
  89: mul r3.w, r3.w, r5.x
  90: mul r3.w, r3.w, l(6.000000)
  91: sample_l r7.xyzw, r7.xyzx, t5.xyzw, s0, r3.w
  92: add r6.w, r7.w, l(-1.000000)
  93: mad r6.w, cb5[3].w, r6.w, l(1.000000)
  94: log r6.w, r6.w
  95: mul r6.w, r6.w, cb5[3].y
  96: exp r6.w, r6.w
  97: mul r6.w, r6.w, cb5[3].x
  98: mul r8.xyz, r7.xyzx, r6.wwww
  99: lt r7.w, cb5[1].w, l(0.999990)
 100: if_nz r7.w
 101:   lt r7.w, l(0.000000), cb5[6].w
 102:   if_nz r7.w
 103:     dp3 r7.w, r5.yzwy, r5.yzwy
 104:     rsq r7.w, r7.w
 105:     mul r9.xyz, r5.yzwy, r7.wwww
 106:     add r10.xyz, -r4.xyzx, cb5[4].xyzx
 107:     div r10.xyz, r10.xyzx, r9.xyzx
 108:     add r11.xyz, -r4.xyzx, cb5[5].xyzx
 109:     div r11.xyz, r11.xyzx, r9.xyzx
 110:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 111:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 112:     min r7.w, r10.y, r10.x
 113:     min r7.w, r10.z, r7.w
 114:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 115:     mad r5.yzw, r9.xxyz, r7.wwww, r4.xxyz
 116:   endif 
 117:   sample_l r9.xyzw, r5.yzwy, t6.xyzw, s0, r3.w
 118:   add r3.w, r9.w, l(-1.000000)
 119:   mad r3.w, cb5[7].w, r3.w, l(1.000000)
 120:   log r3.w, r3.w
 121:   mul r3.w, r3.w, cb5[7].y
 122:   exp r3.w, r3.w
 123:   mul r3.w, r3.w, cb5[7].x
 124:   mul r4.xyz, r9.xyzx, r3.wwww
 125:   mad r5.yzw, r6.wwww, r7.xxyz, -r4.xxyz
 126:   mad r8.xyz, cb5[1].wwww, r5.yzwy, r4.xyzx
 127: endif 
 128: mul r4.xyz, r4.wwww, r8.xyzx
 129: mad r5.yzw, -v2.xxyz, r2.wwww, cb1[0].xxyz
 130: dp3 r2.w, r5.yzwy, r5.yzwy
 131: max r2.w, r2.w, l(0.001000)
 132: rsq r2.w, r2.w
 133: mul r5.yzw, r2.wwww, r5.yyzw
 134: dp3 r2.w, r2.xyzx, -r3.xyzx
 135: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 136: dp3_sat r2.x, r2.xyzx, r5.yzwy
 137: dp3_sat r2.y, cb1[0].xyzx, r5.yzwy
 138: mul r2.z, r2.y, r2.y
 139: dp2 r2.z, r2.zzzz, r5.xxxx
 140: add r2.z, r2.z, l(-0.500000)
 141: add r3.y, -r3.x, l(1.000000)
 142: mul r3.z, r3.y, r3.y
 143: mul r3.z, r3.z, r3.z
 144: mul r3.y, r3.y, r3.z
 145: mad r3.y, r2.z, r3.y, l(1.000000)
 146: add r3.z, -|r2.w|, l(1.000000)
 147: mul r3.w, r3.z, r3.z
 148: mul r3.w, r3.w, r3.w
 149: mul r3.z, r3.z, r3.w
 150: mad r2.z, r2.z, r3.z, l(1.000000)
 151: mul r2.z, r2.z, r3.y
 152: mul r3.y, r5.x, r5.x
 153: max r3.y, r3.y, l(0.002000)
 154: add r3.w, -r3.y, l(1.000000)
 155: mad r4.w, |r2.w|, r3.w, r3.y
 156: mad r3.w, r3.x, r3.w, r3.y
 157: mul r2.w, |r2.w|, r3.w
 158: mad r2.w, r3.x, r4.w, r2.w
 159: add r2.w, r2.w, l(0.000010)
 160: div r2.w, l(0.500000), r2.w
 161: mul r3.w, r3.y, r3.y
 162: mad r4.w, r2.x, r3.w, -r2.x
 163: mad r2.x, r4.w, r2.x, l(1.000000)
 164: mul r3.w, r3.w, l(0.318310)
 165: mad r2.x, r2.x, r2.x, l(0.000000)
 166: div r2.x, r3.w, r2.x
 167: mul r2.x, r2.x, r2.w
 168: mul r2.x, r2.x, l(3.141593)
 169: mul r2.xz, r3.xxxx, r2.xxzx
 170: max r2.x, r2.x, l(0.000000)
 171: mad r2.w, r3.y, r3.y, l(1.000000)
 172: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 173: dp3 r3.x, r0.xyzx, r0.xyzx
 174: ne r3.x, r3.x, l(0.000000)
 175: and r3.x, r3.x, l(0x3f800000)
 176: mul r2.x, r2.x, r3.x
 177: mad r0.w, r0.w, cb0[9].x, -r1.w
 178: add_sat r0.w, r0.w, l(1.000000)
 179: mul r3.xyw, r2.zzzz, r6.xyxz
 180: mul r5.xyz, r6.xyzx, r2.xxxx
 181: add r1.w, -r2.y, l(1.000000)
 182: mul r2.x, r1.w, r1.w
 183: mul r2.x, r2.x, r2.x
 184: mul r1.w, r1.w, r2.x
 185: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 186: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 187: mul r2.xyz, r2.xyzx, r5.xyzx
 188: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 189: mul r2.xyz, r4.xyzx, r2.wwww
 190: add r3.xyw, -r0.xyxz, r0.wwww
 191: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 192: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 193: mov o0.w, l(1.000000)
 194: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul o5.xyz, r1.wwww, r1.xyzx
  29: mov o6.xyzw, l(0,0,0,0)
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 152 math, 12 temp registers, 4 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 12
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r2.xyz, r1.wwww, v2.xyzx
  12: mov r3.x, v3.w
  13: mov r3.y, v4.w
  14: mov r3.z, v5.w
  15: add r4.xyz, -r3.xyzx, cb1[4].xyzx
  16: mov r5.x, cb4[9].z
  17: mov r5.y, cb4[10].z
  18: mov r5.z, cb4[11].z
  19: dp3 r2.w, r4.xyzx, r5.xyzx
  20: add r4.xyz, r3.xyzx, -cb3[25].xyzx
  21: dp3 r3.w, r4.xyzx, r4.xyzx
  22: sqrt r3.w, r3.w
  23: add r3.w, -r2.w, r3.w
  24: mad r2.w, cb3[25].w, r3.w, r2.w
  25: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  26: eq r3.w, cb6[0].x, l(1.000000)
  27: if_nz r3.w
  28:   eq r3.w, cb6[0].y, l(1.000000)
  29:   mul r4.xyz, v4.wwww, cb6[2].xyzx
  30:   mad r4.xyz, cb6[1].xyzx, v3.wwww, r4.xyzx
  31:   mad r4.xyz, cb6[3].xyzx, v5.wwww, r4.xyzx
  32:   add r4.xyz, r4.xyzx, cb6[4].xyzx
  33:   movc r4.xyz, r3.wwww, r4.xyzx, r3.xyzx
  34:   add r4.xyz, r4.xyzx, -cb6[6].xyzx
  35:   mul r4.yzw, r4.xxyz, cb6[5].xxyz
  36:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  37:   mad r4.y, cb6[0].z, l(0.500000), l(0.750000)
  38:   max r4.x, r3.w, r4.y
  39:   sample r4.xyzw, r4.xzwx, t5.xyzw, s1
  40: else 
  41:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  42: endif 
  43: dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
  44: div r4.xy, v7.xyxx, v7.wwww
  45: sample r4.xyzw, r4.xyxx, t1.xyzw, s4
  46: add r3.w, r3.w, -r4.x
  47: mad r2.w, r2.w, r3.w, r4.x
  48: sample r4.xyzw, v1.xyxx, t2.xyzw, s3
  49: add r3.w, -cb0[9].y, l(1.000000)
  50: mad r3.w, r4.y, cb0[9].y, r3.w
  51: add r4.x, -cb0[8].w, l(1.000000)
  52: dp3 r4.y, r2.xyzx, r1.xyzx
  53: add r4.y, r4.y, r4.y
  54: mad r4.yzw, r1.xxyz, -r4.yyyy, r2.xxyz
  55: mul r5.xyz, r2.wwww, cb0[2].xyzx
  56: lt r2.w, l(0.000000), cb5[2].w
  57: if_nz r2.w
  58:   dp3 r2.w, r4.yzwy, r4.yzwy
  59:   rsq r2.w, r2.w
  60:   mul r6.xyz, r2.wwww, r4.yzwy
  61:   add r7.xyz, -r3.xyzx, cb5[0].xyzx
  62:   div r7.xyz, r7.xyzx, r6.xyzx
  63:   add r8.xyz, -r3.xyzx, cb5[1].xyzx
  64:   div r8.xyz, r8.xyzx, r6.xyzx
  65:   lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  66:   movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  67:   min r2.w, r7.y, r7.x
  68:   min r2.w, r7.z, r2.w
  69:   add r7.xyz, r3.xyzx, -cb5[2].xyzx
  70:   mad r6.xyz, r6.xyzx, r2.wwww, r7.xyzx
  71: else 
  72:   mov r6.xyz, r4.yzwy
  73: endif 
  74: mad r2.w, -r4.x, l(0.700000), l(1.700000)
  75: mul r2.w, r2.w, r4.x
  76: mul r2.w, r2.w, l(6.000000)
  77: sample_l r6.xyzw, r6.xyzx, t3.xyzw, s0, r2.w
  78: add r5.w, r6.w, l(-1.000000)
  79: mad r5.w, cb5[3].w, r5.w, l(1.000000)
  80: log r5.w, r5.w
  81: mul r5.w, r5.w, cb5[3].y
  82: exp r5.w, r5.w
  83: mul r5.w, r5.w, cb5[3].x
  84: mul r7.xyz, r6.xyzx, r5.wwww
  85: lt r6.w, cb5[1].w, l(0.999990)
  86: if_nz r6.w
  87:   lt r6.w, l(0.000000), cb5[6].w
  88:   if_nz r6.w
  89:     dp3 r6.w, r4.yzwy, r4.yzwy
  90:     rsq r6.w, r6.w
  91:     mul r8.xyz, r4.yzwy, r6.wwww
  92:     add r9.xyz, -r3.xyzx, cb5[4].xyzx
  93:     div r9.xyz, r9.xyzx, r8.xyzx
  94:     add r10.xyz, -r3.xyzx, cb5[5].xyzx
  95:     div r10.xyz, r10.xyzx, r8.xyzx
  96:     lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  97:     movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  98:     min r6.w, r9.y, r9.x
  99:     min r6.w, r9.z, r6.w
 100:     add r3.xyz, r3.xyzx, -cb5[6].xyzx
 101:     mad r4.yzw, r8.xxyz, r6.wwww, r3.xxyz
 102:   endif 
 103:   sample_l r8.xyzw, r4.yzwy, t4.xyzw, s0, r2.w
 104:   add r2.w, r8.w, l(-1.000000)
 105:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 106:   log r2.w, r2.w
 107:   mul r2.w, r2.w, cb5[7].y
 108:   exp r2.w, r2.w
 109:   mul r2.w, r2.w, cb5[7].x
 110:   mul r3.xyz, r8.xyzx, r2.wwww
 111:   mad r4.yzw, r5.wwww, r6.xxyz, -r3.xxyz
 112:   mad r7.xyz, cb5[1].wwww, r4.yzwy, r3.xyzx
 113: endif 
 114: mul r3.xyz, r3.wwww, r7.xyzx
 115: mad r4.yzw, -v2.xxyz, r1.wwww, cb2[0].xxyz
 116: dp3 r1.w, r4.yzwy, r4.yzwy
 117: max r1.w, r1.w, l(0.001000)
 118: rsq r1.w, r1.w
 119: mul r4.yzw, r1.wwww, r4.yyzw
 120: dp3 r1.w, r1.xyzx, -r2.xyzx
 121: dp3_sat r2.x, r1.xyzx, cb2[0].xyzx
 122: dp3_sat r1.x, r1.xyzx, r4.yzwy
 123: dp3_sat r1.y, cb2[0].xyzx, r4.yzwy
 124: mul r1.z, r1.y, r1.y
 125: dp2 r1.z, r1.zzzz, r4.xxxx
 126: add r1.z, r1.z, l(-0.500000)
 127: add r2.y, -r2.x, l(1.000000)
 128: mul r2.z, r2.y, r2.y
 129: mul r2.z, r2.z, r2.z
 130: mul r2.y, r2.y, r2.z
 131: mad r2.y, r1.z, r2.y, l(1.000000)
 132: add r2.z, -|r1.w|, l(1.000000)
 133: mul r2.w, r2.z, r2.z
 134: mul r2.w, r2.w, r2.w
 135: mul r2.z, r2.z, r2.w
 136: mad r1.z, r1.z, r2.z, l(1.000000)
 137: mul r1.z, r1.z, r2.y
 138: mul r2.y, r4.x, r4.x
 139: max r2.y, r2.y, l(0.002000)
 140: add r2.w, -r2.y, l(1.000000)
 141: mad r3.w, |r1.w|, r2.w, r2.y
 142: mad r2.w, r2.x, r2.w, r2.y
 143: mul r1.w, |r1.w|, r2.w
 144: mad r1.w, r2.x, r3.w, r1.w
 145: add r1.w, r1.w, l(0.000010)
 146: div r1.w, l(0.500000), r1.w
 147: mul r2.w, r2.y, r2.y
 148: mad r3.w, r1.x, r2.w, -r1.x
 149: mad r1.x, r3.w, r1.x, l(1.000000)
 150: mul r2.w, r2.w, l(0.318310)
 151: mad r1.x, r1.x, r1.x, l(0.000000)
 152: div r1.x, r2.w, r1.x
 153: mul r1.x, r1.x, r1.w
 154: mul r1.x, r1.x, l(3.141593)
 155: mul r1.xz, r2.xxxx, r1.xxzx
 156: max r1.x, r1.x, l(0.000000)
 157: mad r1.w, r2.y, r2.y, l(1.000000)
 158: div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
 159: dp3 r2.x, cb0[3].xyzx, cb0[3].xyzx
 160: ne r2.x, r2.x, l(0.000000)
 161: and r2.x, r2.x, l(0x3f800000)
 162: mul r1.x, r1.x, r2.x
 163: add r0.w, -r0.w, l(1.000000)
 164: add_sat r0.w, r0.w, cb0[8].w
 165: mul r2.xyw, r1.zzzz, r5.xyxz
 166: mul r4.xyz, r5.xyzx, r1.xxxx
 167: add r1.x, -r1.y, l(1.000000)
 168: mul r1.y, r1.x, r1.x
 169: mul r1.y, r1.y, r1.y
 170: mul r1.x, r1.x, r1.y
 171: add r5.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 172: mad r1.xyz, r5.xyzx, r1.xxxx, cb0[3].xyzx
 173: mul r1.xyz, r1.xyzx, r4.xyzx
 174: mad r0.xyz, r0.xyzx, r2.xywx, r1.xyzx
 175: mul r1.xyz, r3.xyzx, r1.wwww
 176: add r2.xyw, r0.wwww, -cb0[3].xyxz
 177: mad r2.xyz, r2.zzzz, r2.xywx, cb0[3].xyzx
 178: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
 179: mov o0.w, l(1.000000)
 180: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[68], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  16: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  19: mov r2.x, cb4[0].x
  20: add o2.xyz, r1.xyzx, -cb3[r2.x + 64].xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mov o6.xyzw, l(0,0,0,0)
  32: mul r0.y, r0.y, cb1[4].x
  33: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  34: add r0.xy, r1.zzzz, r1.xwxx
  35: mul r1.xy, r0.wwww, cb3[r2.x + 66].zwzz
  36: mad o7.xy, r0.xyxx, cb3[r2.x + 66].xyxx, r1.xyxx
  37: mov o7.zw, r0.zzzw
  38: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 153 math, 12 temp registers, 4 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 12
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r2.xyz, r1.wwww, v2.xyzx
  12: mov r3.x, v3.w
  13: mov r3.y, v4.w
  14: mov r3.z, v5.w
  15: mov r2.w, cb4[0].x
  16: add r4.xyz, -r3.xyzx, cb3[r2.w + 64].xyzx
  17: ishl r2.w, cb4[0].x, l(2)
  18: mov r5.x, cb3[r2.w + 8].z
  19: mov r5.y, cb3[r2.w + 9].z
  20: mov r5.z, cb3[r2.w + 10].z
  21: dp3 r2.w, r4.xyzx, r5.xyzx
  22: add r4.xyz, r3.xyzx, -cb2[25].xyzx
  23: dp3 r3.w, r4.xyzx, r4.xyzx
  24: sqrt r3.w, r3.w
  25: add r3.w, -r2.w, r3.w
  26: mad r2.w, cb2[25].w, r3.w, r2.w
  27: mad_sat r2.w, r2.w, cb2[24].z, cb2[24].w
  28: eq r3.w, cb6[0].x, l(1.000000)
  29: if_nz r3.w
  30:   eq r3.w, cb6[0].y, l(1.000000)
  31:   mul r4.xyz, v4.wwww, cb6[2].xyzx
  32:   mad r4.xyz, cb6[1].xyzx, v3.wwww, r4.xyzx
  33:   mad r4.xyz, cb6[3].xyzx, v5.wwww, r4.xyzx
  34:   add r4.xyz, r4.xyzx, cb6[4].xyzx
  35:   movc r4.xyz, r3.wwww, r4.xyzx, r3.xyzx
  36:   add r4.xyz, r4.xyzx, -cb6[6].xyzx
  37:   mul r4.yzw, r4.xxyz, cb6[5].xxyz
  38:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  39:   mad r4.y, cb6[0].z, l(0.500000), l(0.750000)
  40:   max r4.x, r3.w, r4.y
  41:   sample r4.xyzw, r4.xzwx, t5.xyzw, s1
  42: else 
  43:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r3.w, r4.xyzw, cb1[46].xyzw
  46: div r4.xy, v7.xyxx, v7.wwww
  47: sample r4.xyzw, r4.xyxx, t1.xyzw, s4
  48: add r3.w, r3.w, -r4.x
  49: mad r2.w, r2.w, r3.w, r4.x
  50: sample r4.xyzw, v1.xyxx, t2.xyzw, s3
  51: add r3.w, -cb0[9].y, l(1.000000)
  52: mad r3.w, r4.y, cb0[9].y, r3.w
  53: add r4.x, -cb0[8].w, l(1.000000)
  54: dp3 r4.y, r2.xyzx, r1.xyzx
  55: add r4.y, r4.y, r4.y
  56: mad r4.yzw, r1.xxyz, -r4.yyyy, r2.xxyz
  57: mul r5.xyz, r2.wwww, cb0[2].xyzx
  58: lt r2.w, l(0.000000), cb5[2].w
  59: if_nz r2.w
  60:   dp3 r2.w, r4.yzwy, r4.yzwy
  61:   rsq r2.w, r2.w
  62:   mul r6.xyz, r2.wwww, r4.yzwy
  63:   add r7.xyz, -r3.xyzx, cb5[0].xyzx
  64:   div r7.xyz, r7.xyzx, r6.xyzx
  65:   add r8.xyz, -r3.xyzx, cb5[1].xyzx
  66:   div r8.xyz, r8.xyzx, r6.xyzx
  67:   lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  68:   movc r7.xyz, r9.xyzx, r7.xyzx, r8.xyzx
  69:   min r2.w, r7.y, r7.x
  70:   min r2.w, r7.z, r2.w
  71:   add r7.xyz, r3.xyzx, -cb5[2].xyzx
  72:   mad r6.xyz, r6.xyzx, r2.wwww, r7.xyzx
  73: else 
  74:   mov r6.xyz, r4.yzwy
  75: endif 
  76: mad r2.w, -r4.x, l(0.700000), l(1.700000)
  77: mul r2.w, r2.w, r4.x
  78: mul r2.w, r2.w, l(6.000000)
  79: sample_l r6.xyzw, r6.xyzx, t3.xyzw, s0, r2.w
  80: add r5.w, r6.w, l(-1.000000)
  81: mad r5.w, cb5[3].w, r5.w, l(1.000000)
  82: log r5.w, r5.w
  83: mul r5.w, r5.w, cb5[3].y
  84: exp r5.w, r5.w
  85: mul r5.w, r5.w, cb5[3].x
  86: mul r7.xyz, r6.xyzx, r5.wwww
  87: lt r6.w, cb5[1].w, l(0.999990)
  88: if_nz r6.w
  89:   lt r6.w, l(0.000000), cb5[6].w
  90:   if_nz r6.w
  91:     dp3 r6.w, r4.yzwy, r4.yzwy
  92:     rsq r6.w, r6.w
  93:     mul r8.xyz, r4.yzwy, r6.wwww
  94:     add r9.xyz, -r3.xyzx, cb5[4].xyzx
  95:     div r9.xyz, r9.xyzx, r8.xyzx
  96:     add r10.xyz, -r3.xyzx, cb5[5].xyzx
  97:     div r10.xyz, r10.xyzx, r8.xyzx
  98:     lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  99:     movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
 100:     min r6.w, r9.y, r9.x
 101:     min r6.w, r9.z, r6.w
 102:     add r3.xyz, r3.xyzx, -cb5[6].xyzx
 103:     mad r4.yzw, r8.xxyz, r6.wwww, r3.xxyz
 104:   endif 
 105:   sample_l r8.xyzw, r4.yzwy, t4.xyzw, s0, r2.w
 106:   add r2.w, r8.w, l(-1.000000)
 107:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 108:   log r2.w, r2.w
 109:   mul r2.w, r2.w, cb5[7].y
 110:   exp r2.w, r2.w
 111:   mul r2.w, r2.w, cb5[7].x
 112:   mul r3.xyz, r8.xyzx, r2.wwww
 113:   mad r4.yzw, r5.wwww, r6.xxyz, -r3.xxyz
 114:   mad r7.xyz, cb5[1].wwww, r4.yzwy, r3.xyzx
 115: endif 
 116: mul r3.xyz, r3.wwww, r7.xyzx
 117: mad r4.yzw, -v2.xxyz, r1.wwww, cb1[0].xxyz
 118: dp3 r1.w, r4.yzwy, r4.yzwy
 119: max r1.w, r1.w, l(0.001000)
 120: rsq r1.w, r1.w
 121: mul r4.yzw, r1.wwww, r4.yyzw
 122: dp3 r1.w, r1.xyzx, -r2.xyzx
 123: dp3_sat r2.x, r1.xyzx, cb1[0].xyzx
 124: dp3_sat r1.x, r1.xyzx, r4.yzwy
 125: dp3_sat r1.y, cb1[0].xyzx, r4.yzwy
 126: mul r1.z, r1.y, r1.y
 127: dp2 r1.z, r1.zzzz, r4.xxxx
 128: add r1.z, r1.z, l(-0.500000)
 129: add r2.y, -r2.x, l(1.000000)
 130: mul r2.z, r2.y, r2.y
 131: mul r2.z, r2.z, r2.z
 132: mul r2.y, r2.y, r2.z
 133: mad r2.y, r1.z, r2.y, l(1.000000)
 134: add r2.z, -|r1.w|, l(1.000000)
 135: mul r2.w, r2.z, r2.z
 136: mul r2.w, r2.w, r2.w
 137: mul r2.z, r2.z, r2.w
 138: mad r1.z, r1.z, r2.z, l(1.000000)
 139: mul r1.z, r1.z, r2.y
 140: mul r2.y, r4.x, r4.x
 141: max r2.y, r2.y, l(0.002000)
 142: add r2.w, -r2.y, l(1.000000)
 143: mad r3.w, |r1.w|, r2.w, r2.y
 144: mad r2.w, r2.x, r2.w, r2.y
 145: mul r1.w, |r1.w|, r2.w
 146: mad r1.w, r2.x, r3.w, r1.w
 147: add r1.w, r1.w, l(0.000010)
 148: div r1.w, l(0.500000), r1.w
 149: mul r2.w, r2.y, r2.y
 150: mad r3.w, r1.x, r2.w, -r1.x
 151: mad r1.x, r3.w, r1.x, l(1.000000)
 152: mul r2.w, r2.w, l(0.318310)
 153: mad r1.x, r1.x, r1.x, l(0.000000)
 154: div r1.x, r2.w, r1.x
 155: mul r1.x, r1.x, r1.w
 156: mul r1.x, r1.x, l(3.141593)
 157: mul r1.xz, r2.xxxx, r1.xxzx
 158: max r1.x, r1.x, l(0.000000)
 159: mad r1.w, r2.y, r2.y, l(1.000000)
 160: div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
 161: dp3 r2.x, cb0[3].xyzx, cb0[3].xyzx
 162: ne r2.x, r2.x, l(0.000000)
 163: and r2.x, r2.x, l(0x3f800000)
 164: mul r1.x, r1.x, r2.x
 165: add r0.w, -r0.w, l(1.000000)
 166: add_sat r0.w, r0.w, cb0[8].w
 167: mul r2.xyw, r1.zzzz, r5.xyxz
 168: mul r4.xyz, r5.xyzx, r1.xxxx
 169: add r1.x, -r1.y, l(1.000000)
 170: mul r1.y, r1.x, r1.x
 171: mul r1.y, r1.y, r1.y
 172: mul r1.x, r1.x, r1.y
 173: add r5.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 174: mad r1.xyz, r5.xyzx, r1.xxxx, cb0[3].xyzx
 175: mul r1.xyz, r1.xyzx, r4.xyzx
 176: mad r0.xyz, r0.xyzx, r2.xywx, r1.xyzx
 177: mul r1.xyz, r3.xyzx, r1.wwww
 178: add r2.xyw, r0.wwww, -cb0[3].xyxz
 179: mad r2.xyz, r2.zzzz, r2.xywx, cb0[3].xyzx
 180: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
 181: mov o0.w, l(1.000000)
 182: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul r1.xyz, r1.wwww, r1.xyzx
  29: mov o5.xyz, r1.xyzx
  30: mul r1.w, r1.y, r1.y
  31: mad r1.w, r1.x, r1.x, -r1.w
  32: mul r2.xyzw, r1.yzzx, r1.xyzz
  33: dp4 r1.x, cb2[42].xyzw, r2.xyzw
  34: dp4 r1.y, cb2[43].xyzw, r2.xyzw
  35: dp4 r1.z, cb2[44].xyzw, r2.xyzw
  36: mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
  37: mov o6.w, l(0)
  38: mul r0.y, r0.y, cb1[5].x
  39: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  40: mov o7.zw, r0.zzzw
  41: add o7.xy, r1.zzzz, r1.xwxx
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 175 math, 15 temp registers, 8 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 5
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r3.x, v2.xyzx, v2.xyzx
  11: rsq r3.x, r3.x
  12: mul r3.yzw, r3.xxxx, v2.xxyz
  13: mov r4.x, v3.w
  14: mov r4.y, v4.w
  15: mov r4.z, v5.w
  16: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  17: mov r6.x, cb4[9].z
  18: mov r6.y, cb4[10].z
  19: mov r6.z, cb4[11].z
  20: dp3 r4.w, r5.xyzx, r6.xyzx
  21: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  22: dp3 r5.x, r5.xyzx, r5.xyzx
  23: sqrt r5.x, r5.x
  24: add r5.x, -r4.w, r5.x
  25: mad r4.w, cb3[25].w, r5.x, r4.w
  26: mad_sat r4.w, r4.w, cb3[24].z, cb3[24].w
  27: eq r5.x, cb6[0].x, l(1.000000)
  28: if_nz r5.x
  29:   eq r5.y, cb6[0].y, l(1.000000)
  30:   mul r6.xyz, v4.wwww, cb6[2].xyzx
  31:   mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
  32:   mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
  33:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  34:   movc r5.yzw, r5.yyyy, r6.xxyz, r4.xxyz
  35:   add r5.yzw, r5.yyzw, -cb6[6].xxyz
  36:   mul r6.yzw, r5.yyzw, cb6[5].xxyz
  37:   mad r5.y, r6.y, l(0.250000), l(0.750000)
  38:   mad r5.z, cb6[0].z, l(0.500000), l(0.750000)
  39:   max r6.x, r5.z, r5.y
  40:   sample r6.xyzw, r6.xzwx, t6.xyzw, s1
  41: else 
  42:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r5.y, r6.xyzw, cb2[46].xyzw
  45: div r5.zw, v7.xxxy, v7.wwww
  46: sample r6.xyzw, r5.zwzz, t2.xyzw, s5
  47: add r5.y, r5.y, -r6.x
  48: mad r4.w, r4.w, r5.y, r6.x
  49: sample r6.xyzw, v1.xyxx, t3.xyzw, s4
  50: add r5.y, -cb0[9].y, l(1.000000)
  51: mad r5.y, r6.y, cb0[9].y, r5.y
  52: mad r5.z, -r0.w, cb0[9].x, l(1.000000)
  53: dp3 r5.w, r3.yzwy, r2.xyzx
  54: add r5.w, r5.w, r5.w
  55: mad r6.xyz, r2.xyzx, -r5.wwww, r3.yzwy
  56: mul r7.xyz, r4.wwww, cb0[2].xyzx
  57: if_nz r5.x
  58:   eq r4.w, cb6[0].y, l(1.000000)
  59:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  60:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  61:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  62:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  63:   movc r8.xyz, r4.wwww, r8.xyzx, r4.xyzx
  64:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  65:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  66:   mul r4.w, r8.y, l(0.250000)
  67:   mul r5.x, cb6[0].z, l(0.500000)
  68:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  69:   max r4.w, r4.w, r5.x
  70:   min r8.x, r5.w, r4.w
  71:   sample r9.xyzw, r8.xzwx, t6.xyzw, s1
  72:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  73:   sample r10.xyzw, r10.xyzx, t6.xyzw, s1
  74:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  75:   sample r8.xyzw, r8.xyzx, t6.xyzw, s1
  76:   mov r2.w, l(1.000000)
  77:   dp4 r9.x, r9.xyzw, r2.xyzw
  78:   dp4 r9.y, r10.xyzw, r2.xyzw
  79:   dp4 r9.z, r8.xyzw, r2.xyzw
  80: else 
  81:   mov r2.w, l(1.000000)
  82:   dp4 r9.x, cb2[39].xyzw, r2.xyzw
  83:   dp4 r9.y, cb2[40].xyzw, r2.xyzw
  84:   dp4 r9.z, cb2[41].xyzw, r2.xyzw
  85: endif 
  86: add r8.xyz, r9.xyzx, v6.xyzx
  87: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  88: lt r2.w, l(0.000000), cb5[2].w
  89: if_nz r2.w
  90:   dp3 r2.w, r6.xyzx, r6.xyzx
  91:   rsq r2.w, r2.w
  92:   mul r9.xyz, r2.wwww, r6.xyzx
  93:   add r10.xyz, -r4.xyzx, cb5[0].xyzx
  94:   div r10.xyz, r10.xyzx, r9.xyzx
  95:   add r11.xyz, -r4.xyzx, cb5[1].xyzx
  96:   div r11.xyz, r11.xyzx, r9.xyzx
  97:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  98:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  99:   min r2.w, r10.y, r10.x
 100:   min r2.w, r10.z, r2.w
 101:   add r10.xyz, r4.xyzx, -cb5[2].xyzx
 102:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 103: else 
 104:   mov r9.xyz, r6.xyzx
 105: endif 
 106: mad r2.w, -r5.z, l(0.700000), l(1.700000)
 107: mul r2.w, r2.w, r5.z
 108: mul r2.w, r2.w, l(6.000000)
 109: sample_l r9.xyzw, r9.xyzx, t4.xyzw, s0, r2.w
 110: add r4.w, r9.w, l(-1.000000)
 111: mad r4.w, cb5[3].w, r4.w, l(1.000000)
 112: log r4.w, r4.w
 113: mul r4.w, r4.w, cb5[3].y
 114: exp r4.w, r4.w
 115: mul r4.w, r4.w, cb5[3].x
 116: mul r10.xyz, r9.xyzx, r4.wwww
 117: lt r5.x, cb5[1].w, l(0.999990)
 118: if_nz r5.x
 119:   lt r5.x, l(0.000000), cb5[6].w
 120:   if_nz r5.x
 121:     dp3 r5.x, r6.xyzx, r6.xyzx
 122:     rsq r5.x, r5.x
 123:     mul r11.xyz, r5.xxxx, r6.xyzx
 124:     add r12.xyz, -r4.xyzx, cb5[4].xyzx
 125:     div r12.xyz, r12.xyzx, r11.xyzx
 126:     add r13.xyz, -r4.xyzx, cb5[5].xyzx
 127:     div r13.xyz, r13.xyzx, r11.xyzx
 128:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 129:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 130:     min r5.x, r12.y, r12.x
 131:     min r5.x, r12.z, r5.x
 132:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 133:     mad r6.xyz, r11.xyzx, r5.xxxx, r4.xyzx
 134:   endif 
 135:   sample_l r6.xyzw, r6.xyzx, t5.xyzw, s0, r2.w
 136:   add r2.w, r6.w, l(-1.000000)
 137:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 138:   log r2.w, r2.w
 139:   mul r2.w, r2.w, cb5[7].y
 140:   exp r2.w, r2.w
 141:   mul r2.w, r2.w, cb5[7].x
 142:   mul r4.xyz, r6.xyzx, r2.wwww
 143:   mad r6.xyz, r4.wwww, r9.xyzx, -r4.xyzx
 144:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
 145: endif 
 146: mul r4.xyz, r5.yyyy, r10.xyzx
 147: mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
 148: dp3 r2.w, r6.xyzx, r6.xyzx
 149: max r2.w, r2.w, l(0.001000)
 150: rsq r2.w, r2.w
 151: mul r6.xyz, r2.wwww, r6.xyzx
 152: dp3 r2.w, r2.xyzx, -r3.yzwy
 153: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 154: dp3_sat r2.x, r2.xyzx, r6.xyzx
 155: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 156: mul r2.z, r2.y, r2.y
 157: dp2 r2.z, r2.zzzz, r5.zzzz
 158: add r2.z, r2.z, l(-0.500000)
 159: add r3.y, -r3.x, l(1.000000)
 160: mul r3.z, r3.y, r3.y
 161: mul r3.z, r3.z, r3.z
 162: mul r3.y, r3.y, r3.z
 163: mad r3.y, r2.z, r3.y, l(1.000000)
 164: add r3.z, -|r2.w|, l(1.000000)
 165: mul r3.w, r3.z, r3.z
 166: mul r3.w, r3.w, r3.w
 167: mul r3.z, r3.z, r3.w
 168: mad r2.z, r2.z, r3.z, l(1.000000)
 169: mul r2.z, r2.z, r3.y
 170: mul r3.y, r5.z, r5.z
 171: max r3.y, r3.y, l(0.002000)
 172: add r3.w, -r3.y, l(1.000000)
 173: mad r4.w, |r2.w|, r3.w, r3.y
 174: mad r3.w, r3.x, r3.w, r3.y
 175: mul r2.w, |r2.w|, r3.w
 176: mad r2.w, r3.x, r4.w, r2.w
 177: add r2.w, r2.w, l(0.000010)
 178: div r2.w, l(0.500000), r2.w
 179: mul r3.w, r3.y, r3.y
 180: mad r4.w, r2.x, r3.w, -r2.x
 181: mad r2.x, r4.w, r2.x, l(1.000000)
 182: mul r3.w, r3.w, l(0.318310)
 183: mad r2.x, r2.x, r2.x, l(0.000000)
 184: div r2.x, r3.w, r2.x
 185: mul r2.x, r2.x, r2.w
 186: mul r2.x, r2.x, l(3.141593)
 187: mul r2.xz, r3.xxxx, r2.xxzx
 188: max r2.x, r2.x, l(0.000000)
 189: mad r2.w, r3.y, r3.y, l(1.000000)
 190: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 191: dp3 r3.x, r0.xyzx, r0.xyzx
 192: ne r3.x, r3.x, l(0.000000)
 193: and r3.x, r3.x, l(0x3f800000)
 194: mul r2.x, r2.x, r3.x
 195: mad r0.w, r0.w, cb0[9].x, -r1.w
 196: add_sat r0.w, r0.w, l(1.000000)
 197: mul r3.xyw, r2.zzzz, r7.xyxz
 198: mad r3.xyw, r8.xyxz, r5.yyyy, r3.xyxw
 199: mul r5.xyz, r7.xyzx, r2.xxxx
 200: add r1.w, -r2.y, l(1.000000)
 201: mul r2.x, r1.w, r1.w
 202: mul r2.x, r2.x, r2.x
 203: mul r1.w, r1.w, r2.x
 204: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 205: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 206: mul r2.xyz, r2.xyzx, r5.xyzx
 207: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 208: mul r2.xyz, r4.xyzx, r2.wwww
 209: add r3.xyw, -r0.xyxz, r0.wwww
 210: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 211: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 212: mov o0.w, l(1.000000)
 213: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 4 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 5 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[68], dynamicIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: ishl r1.x, cb5[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb4[r1.x + 25].xyzw
   6: mad r2.xyzw, cb4[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb4[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  16: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  19: mov r2.x, cb5[0].x
  20: add o2.xyz, r1.xyzx, -cb4[r2.x + 64].xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul r1.xyz, r1.wwww, r1.xyzx
  31: mov o5.xyz, r1.xyzx
  32: mul r1.w, r1.y, r1.y
  33: mad r1.w, r1.x, r1.x, -r1.w
  34: mul r3.xyzw, r1.yzzx, r1.xyzz
  35: dp4 r1.x, cb2[42].xyzw, r3.xyzw
  36: dp4 r1.y, cb2[43].xyzw, r3.xyzw
  37: dp4 r1.z, cb2[44].xyzw, r3.xyzw
  38: mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
  39: mov o6.w, l(0)
  40: mul r0.y, r0.y, cb1[4].x
  41: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  42: add r0.xy, r1.zzzz, r1.xwxx
  43: mul r1.xy, r0.wwww, cb4[r2.x + 66].zwzz
  44: mad o7.xy, r0.xyxx, cb4[r2.x + 66].xyxx, r1.xyxx
  45: mov o7.zw, r0.zzzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 176 math, 15 temp registers, 8 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 5
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r3.x, v2.xyzx, v2.xyzx
  11: rsq r3.x, r3.x
  12: mul r3.yzw, r3.xxxx, v2.xxyz
  13: mov r4.x, v3.w
  14: mov r4.y, v4.w
  15: mov r4.z, v5.w
  16: mov r4.w, cb4[0].x
  17: add r5.xyz, -r4.xyzx, cb3[r4.w + 64].xyzx
  18: ishl r4.w, cb4[0].x, l(2)
  19: mov r6.x, cb3[r4.w + 8].z
  20: mov r6.y, cb3[r4.w + 9].z
  21: mov r6.z, cb3[r4.w + 10].z
  22: dp3 r4.w, r5.xyzx, r6.xyzx
  23: add r5.xyz, r4.xyzx, -cb2[25].xyzx
  24: dp3 r5.x, r5.xyzx, r5.xyzx
  25: sqrt r5.x, r5.x
  26: add r5.x, -r4.w, r5.x
  27: mad r4.w, cb2[25].w, r5.x, r4.w
  28: mad_sat r4.w, r4.w, cb2[24].z, cb2[24].w
  29: eq r5.x, cb6[0].x, l(1.000000)
  30: if_nz r5.x
  31:   eq r5.y, cb6[0].y, l(1.000000)
  32:   mul r6.xyz, v4.wwww, cb6[2].xyzx
  33:   mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
  34:   mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
  35:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  36:   movc r5.yzw, r5.yyyy, r6.xxyz, r4.xxyz
  37:   add r5.yzw, r5.yyzw, -cb6[6].xxyz
  38:   mul r6.yzw, r5.yyzw, cb6[5].xxyz
  39:   mad r5.y, r6.y, l(0.250000), l(0.750000)
  40:   mad r5.z, cb6[0].z, l(0.500000), l(0.750000)
  41:   max r6.x, r5.z, r5.y
  42:   sample r6.xyzw, r6.xzwx, t6.xyzw, s1
  43: else 
  44:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  45: endif 
  46: dp4_sat r5.y, r6.xyzw, cb1[46].xyzw
  47: div r5.zw, v7.xxxy, v7.wwww
  48: sample r6.xyzw, r5.zwzz, t2.xyzw, s5
  49: add r5.y, r5.y, -r6.x
  50: mad r4.w, r4.w, r5.y, r6.x
  51: sample r6.xyzw, v1.xyxx, t3.xyzw, s4
  52: add r5.y, -cb0[9].y, l(1.000000)
  53: mad r5.y, r6.y, cb0[9].y, r5.y
  54: mad r5.z, -r0.w, cb0[9].x, l(1.000000)
  55: dp3 r5.w, r3.yzwy, r2.xyzx
  56: add r5.w, r5.w, r5.w
  57: mad r6.xyz, r2.xyzx, -r5.wwww, r3.yzwy
  58: mul r7.xyz, r4.wwww, cb0[2].xyzx
  59: if_nz r5.x
  60:   eq r4.w, cb6[0].y, l(1.000000)
  61:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  62:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  63:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  64:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  65:   movc r8.xyz, r4.wwww, r8.xyzx, r4.xyzx
  66:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  67:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  68:   mul r4.w, r8.y, l(0.250000)
  69:   mul r5.x, cb6[0].z, l(0.500000)
  70:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  71:   max r4.w, r4.w, r5.x
  72:   min r8.x, r5.w, r4.w
  73:   sample r9.xyzw, r8.xzwx, t6.xyzw, s1
  74:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  75:   sample r10.xyzw, r10.xyzx, t6.xyzw, s1
  76:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  77:   sample r8.xyzw, r8.xyzx, t6.xyzw, s1
  78:   mov r2.w, l(1.000000)
  79:   dp4 r9.x, r9.xyzw, r2.xyzw
  80:   dp4 r9.y, r10.xyzw, r2.xyzw
  81:   dp4 r9.z, r8.xyzw, r2.xyzw
  82: else 
  83:   mov r2.w, l(1.000000)
  84:   dp4 r9.x, cb1[39].xyzw, r2.xyzw
  85:   dp4 r9.y, cb1[40].xyzw, r2.xyzw
  86:   dp4 r9.z, cb1[41].xyzw, r2.xyzw
  87: endif 
  88: add r8.xyz, r9.xyzx, v6.xyzx
  89: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  90: lt r2.w, l(0.000000), cb5[2].w
  91: if_nz r2.w
  92:   dp3 r2.w, r6.xyzx, r6.xyzx
  93:   rsq r2.w, r2.w
  94:   mul r9.xyz, r2.wwww, r6.xyzx
  95:   add r10.xyz, -r4.xyzx, cb5[0].xyzx
  96:   div r10.xyz, r10.xyzx, r9.xyzx
  97:   add r11.xyz, -r4.xyzx, cb5[1].xyzx
  98:   div r11.xyz, r11.xyzx, r9.xyzx
  99:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 100:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 101:   min r2.w, r10.y, r10.x
 102:   min r2.w, r10.z, r2.w
 103:   add r10.xyz, r4.xyzx, -cb5[2].xyzx
 104:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 105: else 
 106:   mov r9.xyz, r6.xyzx
 107: endif 
 108: mad r2.w, -r5.z, l(0.700000), l(1.700000)
 109: mul r2.w, r2.w, r5.z
 110: mul r2.w, r2.w, l(6.000000)
 111: sample_l r9.xyzw, r9.xyzx, t4.xyzw, s0, r2.w
 112: add r4.w, r9.w, l(-1.000000)
 113: mad r4.w, cb5[3].w, r4.w, l(1.000000)
 114: log r4.w, r4.w
 115: mul r4.w, r4.w, cb5[3].y
 116: exp r4.w, r4.w
 117: mul r4.w, r4.w, cb5[3].x
 118: mul r10.xyz, r9.xyzx, r4.wwww
 119: lt r5.x, cb5[1].w, l(0.999990)
 120: if_nz r5.x
 121:   lt r5.x, l(0.000000), cb5[6].w
 122:   if_nz r5.x
 123:     dp3 r5.x, r6.xyzx, r6.xyzx
 124:     rsq r5.x, r5.x
 125:     mul r11.xyz, r5.xxxx, r6.xyzx
 126:     add r12.xyz, -r4.xyzx, cb5[4].xyzx
 127:     div r12.xyz, r12.xyzx, r11.xyzx
 128:     add r13.xyz, -r4.xyzx, cb5[5].xyzx
 129:     div r13.xyz, r13.xyzx, r11.xyzx
 130:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 131:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 132:     min r5.x, r12.y, r12.x
 133:     min r5.x, r12.z, r5.x
 134:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 135:     mad r6.xyz, r11.xyzx, r5.xxxx, r4.xyzx
 136:   endif 
 137:   sample_l r6.xyzw, r6.xyzx, t5.xyzw, s0, r2.w
 138:   add r2.w, r6.w, l(-1.000000)
 139:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 140:   log r2.w, r2.w
 141:   mul r2.w, r2.w, cb5[7].y
 142:   exp r2.w, r2.w
 143:   mul r2.w, r2.w, cb5[7].x
 144:   mul r4.xyz, r6.xyzx, r2.wwww
 145:   mad r6.xyz, r4.wwww, r9.xyzx, -r4.xyzx
 146:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
 147: endif 
 148: mul r4.xyz, r5.yyyy, r10.xyzx
 149: mad r6.xyz, -v2.xyzx, r3.xxxx, cb1[0].xyzx
 150: dp3 r2.w, r6.xyzx, r6.xyzx
 151: max r2.w, r2.w, l(0.001000)
 152: rsq r2.w, r2.w
 153: mul r6.xyz, r2.wwww, r6.xyzx
 154: dp3 r2.w, r2.xyzx, -r3.yzwy
 155: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 156: dp3_sat r2.x, r2.xyzx, r6.xyzx
 157: dp3_sat r2.y, cb1[0].xyzx, r6.xyzx
 158: mul r2.z, r2.y, r2.y
 159: dp2 r2.z, r2.zzzz, r5.zzzz
 160: add r2.z, r2.z, l(-0.500000)
 161: add r3.y, -r3.x, l(1.000000)
 162: mul r3.z, r3.y, r3.y
 163: mul r3.z, r3.z, r3.z
 164: mul r3.y, r3.y, r3.z
 165: mad r3.y, r2.z, r3.y, l(1.000000)
 166: add r3.z, -|r2.w|, l(1.000000)
 167: mul r3.w, r3.z, r3.z
 168: mul r3.w, r3.w, r3.w
 169: mul r3.z, r3.z, r3.w
 170: mad r2.z, r2.z, r3.z, l(1.000000)
 171: mul r2.z, r2.z, r3.y
 172: mul r3.y, r5.z, r5.z
 173: max r3.y, r3.y, l(0.002000)
 174: add r3.w, -r3.y, l(1.000000)
 175: mad r4.w, |r2.w|, r3.w, r3.y
 176: mad r3.w, r3.x, r3.w, r3.y
 177: mul r2.w, |r2.w|, r3.w
 178: mad r2.w, r3.x, r4.w, r2.w
 179: add r2.w, r2.w, l(0.000010)
 180: div r2.w, l(0.500000), r2.w
 181: mul r3.w, r3.y, r3.y
 182: mad r4.w, r2.x, r3.w, -r2.x
 183: mad r2.x, r4.w, r2.x, l(1.000000)
 184: mul r3.w, r3.w, l(0.318310)
 185: mad r2.x, r2.x, r2.x, l(0.000000)
 186: div r2.x, r3.w, r2.x
 187: mul r2.x, r2.x, r2.w
 188: mul r2.x, r2.x, l(3.141593)
 189: mul r2.xz, r3.xxxx, r2.xxzx
 190: max r2.x, r2.x, l(0.000000)
 191: mad r2.w, r3.y, r3.y, l(1.000000)
 192: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 193: dp3 r3.x, r0.xyzx, r0.xyzx
 194: ne r3.x, r3.x, l(0.000000)
 195: and r3.x, r3.x, l(0x3f800000)
 196: mul r2.x, r2.x, r3.x
 197: mad r0.w, r0.w, cb0[9].x, -r1.w
 198: add_sat r0.w, r0.w, l(1.000000)
 199: mul r3.xyw, r2.zzzz, r7.xyxz
 200: mad r3.xyw, r8.xyxz, r5.yyyy, r3.xyxw
 201: mul r5.xyz, r7.xyzx, r2.xxxx
 202: add r1.w, -r2.y, l(1.000000)
 203: mul r2.x, r1.w, r1.w
 204: mul r2.x, r2.x, r2.x
 205: mul r1.w, r1.w, r2.x
 206: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 207: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 208: mul r2.xyz, r2.xyzx, r5.xyzx
 209: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 210: mul r2.xyz, r4.xyzx, r2.wwww
 211: add r3.xyw, -r0.xyxz, r0.wwww
 212: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 213: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 214: mov o0.w, l(1.000000)
 215: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 42 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov o3.w, r1.x
  20: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  21: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  22: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  23: dp3 r1.x, r2.xyzx, r2.xyzx
  24: rsq r1.x, r1.x
  25: mul r2.xyz, r1.xxxx, r2.xyzx
  26: mov o3.xyz, r2.xyzx
  27: mov o4.w, r1.y
  28: mov o5.w, r1.z
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r3.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
  37: mul r1.w, v4.w, cb3[9].w
  38: mul o4.xyz, r1.wwww, r2.xyzx
  39: mov o5.xyz, r1.xyzx
  40: mul r1.w, r1.y, r1.y
  41: mad r1.w, r1.x, r1.x, -r1.w
  42: mul r2.xyzw, r1.yzzx, r1.xyzz
  43: dp4 r1.x, cb2[42].xyzw, r2.xyzw
  44: dp4 r1.y, cb2[43].xyzw, r2.xyzw
  45: dp4 r1.z, cb2[44].xyzw, r2.xyzw
  46: mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
  47: mov o6.w, l(0)
  48: mul r0.y, r0.y, cb1[5].x
  49: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  50: mov o7.zw, r0.zzzw
  51: add o7.xy, r1.zzzz, r1.xwxx
  52: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 185 math, 15 temp registers, 9 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 3 sampler slot 6
Set 2D Texture "_OcclusionMap" to slot 4 sampler slot 5
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r2.z, r2.xyxx, r2.xyxx
  12: min r2.z, r2.z, l(1.000000)
  13: add r2.z, -r2.z, l(1.000000)
  14: sqrt r2.z, r2.z
  15: mul r3.xyz, r2.yyyy, v4.xyzx
  16: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  17: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  18: dp3 r2.w, r2.xyzx, r2.xyzx
  19: rsq r2.w, r2.w
  20: mul r2.xyz, r2.wwww, r2.xyzx
  21: dp3 r3.x, v2.xyzx, v2.xyzx
  22: rsq r3.x, r3.x
  23: mul r3.yzw, r3.xxxx, v2.xxyz
  24: mov r4.x, v3.w
  25: mov r4.y, v4.w
  26: mov r4.z, v5.w
  27: add r5.xyz, -r4.xyzx, cb1[4].xyzx
  28: mov r6.x, cb4[9].z
  29: mov r6.y, cb4[10].z
  30: mov r6.z, cb4[11].z
  31: dp3 r4.w, r5.xyzx, r6.xyzx
  32: add r5.xyz, r4.xyzx, -cb3[25].xyzx
  33: dp3 r5.x, r5.xyzx, r5.xyzx
  34: sqrt r5.x, r5.x
  35: add r5.x, -r4.w, r5.x
  36: mad r4.w, cb3[25].w, r5.x, r4.w
  37: mad_sat r4.w, r4.w, cb3[24].z, cb3[24].w
  38: eq r5.x, cb6[0].x, l(1.000000)
  39: if_nz r5.x
  40:   eq r5.y, cb6[0].y, l(1.000000)
  41:   mul r6.xyz, v4.wwww, cb6[2].xyzx
  42:   mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
  43:   mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
  44:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  45:   movc r5.yzw, r5.yyyy, r6.xxyz, r4.xxyz
  46:   add r5.yzw, r5.yyzw, -cb6[6].xxyz
  47:   mul r6.yzw, r5.yyzw, cb6[5].xxyz
  48:   mad r5.y, r6.y, l(0.250000), l(0.750000)
  49:   mad r5.z, cb6[0].z, l(0.500000), l(0.750000)
  50:   max r6.x, r5.z, r5.y
  51:   sample r6.xyzw, r6.xzwx, t7.xyzw, s1
  52: else 
  53:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  54: endif 
  55: dp4_sat r5.y, r6.xyzw, cb2[46].xyzw
  56: div r5.zw, v7.xxxy, v7.wwww
  57: sample r6.xyzw, r5.zwzz, t3.xyzw, s6
  58: add r5.y, r5.y, -r6.x
  59: mad r4.w, r4.w, r5.y, r6.x
  60: sample r6.xyzw, v1.xyxx, t4.xyzw, s5
  61: add r5.y, -cb0[9].y, l(1.000000)
  62: mad r5.y, r6.y, cb0[9].y, r5.y
  63: mad r5.z, -r0.w, cb0[9].x, l(1.000000)
  64: dp3 r5.w, r3.yzwy, r2.xyzx
  65: add r5.w, r5.w, r5.w
  66: mad r6.xyz, r2.xyzx, -r5.wwww, r3.yzwy
  67: mul r7.xyz, r4.wwww, cb0[2].xyzx
  68: if_nz r5.x
  69:   eq r4.w, cb6[0].y, l(1.000000)
  70:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  71:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  72:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  73:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  74:   movc r8.xyz, r4.wwww, r8.xyzx, r4.xyzx
  75:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  76:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  77:   mul r4.w, r8.y, l(0.250000)
  78:   mul r5.x, cb6[0].z, l(0.500000)
  79:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  80:   max r4.w, r4.w, r5.x
  81:   min r8.x, r5.w, r4.w
  82:   sample r9.xyzw, r8.xzwx, t7.xyzw, s1
  83:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  84:   sample r10.xyzw, r10.xyzx, t7.xyzw, s1
  85:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  86:   sample r8.xyzw, r8.xyzx, t7.xyzw, s1
  87:   mov r2.w, l(1.000000)
  88:   dp4 r9.x, r9.xyzw, r2.xyzw
  89:   dp4 r9.y, r10.xyzw, r2.xyzw
  90:   dp4 r9.z, r8.xyzw, r2.xyzw
  91: else 
  92:   mov r2.w, l(1.000000)
  93:   dp4 r9.x, cb2[39].xyzw, r2.xyzw
  94:   dp4 r9.y, cb2[40].xyzw, r2.xyzw
  95:   dp4 r9.z, cb2[41].xyzw, r2.xyzw
  96: endif 
  97: add r8.xyz, r9.xyzx, v6.xyzx
  98: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  99: lt r2.w, l(0.000000), cb5[2].w
 100: if_nz r2.w
 101:   dp3 r2.w, r6.xyzx, r6.xyzx
 102:   rsq r2.w, r2.w
 103:   mul r9.xyz, r2.wwww, r6.xyzx
 104:   add r10.xyz, -r4.xyzx, cb5[0].xyzx
 105:   div r10.xyz, r10.xyzx, r9.xyzx
 106:   add r11.xyz, -r4.xyzx, cb5[1].xyzx
 107:   div r11.xyz, r11.xyzx, r9.xyzx
 108:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 109:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 110:   min r2.w, r10.y, r10.x
 111:   min r2.w, r10.z, r2.w
 112:   add r10.xyz, r4.xyzx, -cb5[2].xyzx
 113:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 114: else 
 115:   mov r9.xyz, r6.xyzx
 116: endif 
 117: mad r2.w, -r5.z, l(0.700000), l(1.700000)
 118: mul r2.w, r2.w, r5.z
 119: mul r2.w, r2.w, l(6.000000)
 120: sample_l r9.xyzw, r9.xyzx, t5.xyzw, s0, r2.w
 121: add r4.w, r9.w, l(-1.000000)
 122: mad r4.w, cb5[3].w, r4.w, l(1.000000)
 123: log r4.w, r4.w
 124: mul r4.w, r4.w, cb5[3].y
 125: exp r4.w, r4.w
 126: mul r4.w, r4.w, cb5[3].x
 127: mul r10.xyz, r9.xyzx, r4.wwww
 128: lt r5.x, cb5[1].w, l(0.999990)
 129: if_nz r5.x
 130:   lt r5.x, l(0.000000), cb5[6].w
 131:   if_nz r5.x
 132:     dp3 r5.x, r6.xyzx, r6.xyzx
 133:     rsq r5.x, r5.x
 134:     mul r11.xyz, r5.xxxx, r6.xyzx
 135:     add r12.xyz, -r4.xyzx, cb5[4].xyzx
 136:     div r12.xyz, r12.xyzx, r11.xyzx
 137:     add r13.xyz, -r4.xyzx, cb5[5].xyzx
 138:     div r13.xyz, r13.xyzx, r11.xyzx
 139:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 140:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 141:     min r5.x, r12.y, r12.x
 142:     min r5.x, r12.z, r5.x
 143:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 144:     mad r6.xyz, r11.xyzx, r5.xxxx, r4.xyzx
 145:   endif 
 146:   sample_l r6.xyzw, r6.xyzx, t6.xyzw, s0, r2.w
 147:   add r2.w, r6.w, l(-1.000000)
 148:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 149:   log r2.w, r2.w
 150:   mul r2.w, r2.w, cb5[7].y
 151:   exp r2.w, r2.w
 152:   mul r2.w, r2.w, cb5[7].x
 153:   mul r4.xyz, r6.xyzx, r2.wwww
 154:   mad r6.xyz, r4.wwww, r9.xyzx, -r4.xyzx
 155:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
 156: endif 
 157: mul r4.xyz, r5.yyyy, r10.xyzx
 158: mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
 159: dp3 r2.w, r6.xyzx, r6.xyzx
 160: max r2.w, r2.w, l(0.001000)
 161: rsq r2.w, r2.w
 162: mul r6.xyz, r2.wwww, r6.xyzx
 163: dp3 r2.w, r2.xyzx, -r3.yzwy
 164: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 165: dp3_sat r2.x, r2.xyzx, r6.xyzx
 166: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 167: mul r2.z, r2.y, r2.y
 168: dp2 r2.z, r2.zzzz, r5.zzzz
 169: add r2.z, r2.z, l(-0.500000)
 170: add r3.y, -r3.x, l(1.000000)
 171: mul r3.z, r3.y, r3.y
 172: mul r3.z, r3.z, r3.z
 173: mul r3.y, r3.y, r3.z
 174: mad r3.y, r2.z, r3.y, l(1.000000)
 175: add r3.z, -|r2.w|, l(1.000000)
 176: mul r3.w, r3.z, r3.z
 177: mul r3.w, r3.w, r3.w
 178: mul r3.z, r3.z, r3.w
 179: mad r2.z, r2.z, r3.z, l(1.000000)
 180: mul r2.z, r2.z, r3.y
 181: mul r3.y, r5.z, r5.z
 182: max r3.y, r3.y, l(0.002000)
 183: add r3.w, -r3.y, l(1.000000)
 184: mad r4.w, |r2.w|, r3.w, r3.y
 185: mad r3.w, r3.x, r3.w, r3.y
 186: mul r2.w, |r2.w|, r3.w
 187: mad r2.w, r3.x, r4.w, r2.w
 188: add r2.w, r2.w, l(0.000010)
 189: div r2.w, l(0.500000), r2.w
 190: mul r3.w, r3.y, r3.y
 191: mad r4.w, r2.x, r3.w, -r2.x
 192: mad r2.x, r4.w, r2.x, l(1.000000)
 193: mul r3.w, r3.w, l(0.318310)
 194: mad r2.x, r2.x, r2.x, l(0.000000)
 195: div r2.x, r3.w, r2.x
 196: mul r2.x, r2.x, r2.w
 197: mul r2.x, r2.x, l(3.141593)
 198: mul r2.xz, r3.xxxx, r2.xxzx
 199: max r2.x, r2.x, l(0.000000)
 200: mad r2.w, r3.y, r3.y, l(1.000000)
 201: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 202: dp3 r3.x, r0.xyzx, r0.xyzx
 203: ne r3.x, r3.x, l(0.000000)
 204: and r3.x, r3.x, l(0x3f800000)
 205: mul r2.x, r2.x, r3.x
 206: mad r0.w, r0.w, cb0[9].x, -r1.w
 207: add_sat r0.w, r0.w, l(1.000000)
 208: mul r3.xyw, r2.zzzz, r7.xyxz
 209: mad r3.xyw, r8.xyxz, r5.yyyy, r3.xyxw
 210: mul r5.xyz, r7.xyzx, r2.xxxx
 211: add r1.w, -r2.y, l(1.000000)
 212: mul r2.x, r1.w, r1.w
 213: mul r2.x, r2.x, r2.x
 214: mul r1.w, r1.w, r2.x
 215: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 216: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 217: mul r2.xyz, r2.xyzx, r5.xyzx
 218: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 219: mul r2.xyz, r4.xyzx, r2.wwww
 220: add r3.xyw, -r0.xyxz, r0.wwww
 221: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 222: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 223: mov o0.w, l(1.000000)
 224: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 45 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 4 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 5 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[68], dynamicIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: ishl r1.x, cb5[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb4[r1.x + 25].xyzw
   6: mad r2.xyzw, cb4[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb4[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  16: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  19: mov r1.w, cb5[0].x
  20: add o2.xyz, r1.xyzx, -cb4[r1.w + 64].xyzx
  21: mov o3.w, r1.x
  22: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  23: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  24: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  25: dp3 r1.x, r2.xyzx, r2.xyzx
  26: rsq r1.x, r1.x
  27: mul r2.xyz, r1.xxxx, r2.xyzx
  28: mov o3.xyz, r2.xyzx
  29: mov o4.w, r1.y
  30: mov o5.w, r1.z
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r2.w, r1.xyzx, r1.xyzx
  35: rsq r2.w, r2.w
  36: mul r1.xyz, r1.xyzx, r2.wwww
  37: mul r3.xyz, r2.yzxy, r1.zxyz
  38: mad r2.xyz, r1.yzxy, r2.zxyz, -r3.xyzx
  39: mul r2.w, v4.w, cb3[9].w
  40: mul o4.xyz, r2.wwww, r2.xyzx
  41: mov o5.xyz, r1.xyzx
  42: mul r2.x, r1.y, r1.y
  43: mad r2.x, r1.x, r1.x, -r2.x
  44: mul r3.xyzw, r1.yzzx, r1.xyzz
  45: dp4 r1.x, cb2[42].xyzw, r3.xyzw
  46: dp4 r1.y, cb2[43].xyzw, r3.xyzw
  47: dp4 r1.z, cb2[44].xyzw, r3.xyzw
  48: mad o6.xyz, cb2[45].xyzx, r2.xxxx, r1.xyzx
  49: mov o6.w, l(0)
  50: mul r0.y, r0.y, cb1[4].x
  51: mul r2.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  52: add r0.xy, r2.zzzz, r2.xwxx
  53: mul r1.xy, r0.wwww, cb4[r1.w + 66].zwzz
  54: mad o7.xy, r0.xyxx, cb4[r1.w + 66].xyxx, r1.xyxx
  55: mov o7.zw, r0.zzzw
  56: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 186 math, 15 temp registers, 9 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 3 sampler slot 6
Set 2D Texture "_OcclusionMap" to slot 4 sampler slot 5
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r2.z, r2.xyxx, r2.xyxx
  12: min r2.z, r2.z, l(1.000000)
  13: add r2.z, -r2.z, l(1.000000)
  14: sqrt r2.z, r2.z
  15: mul r3.xyz, r2.yyyy, v4.xyzx
  16: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  17: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  18: dp3 r2.w, r2.xyzx, r2.xyzx
  19: rsq r2.w, r2.w
  20: mul r2.xyz, r2.wwww, r2.xyzx
  21: dp3 r3.x, v2.xyzx, v2.xyzx
  22: rsq r3.x, r3.x
  23: mul r3.yzw, r3.xxxx, v2.xxyz
  24: mov r4.x, v3.w
  25: mov r4.y, v4.w
  26: mov r4.z, v5.w
  27: mov r4.w, cb4[0].x
  28: add r5.xyz, -r4.xyzx, cb3[r4.w + 64].xyzx
  29: ishl r4.w, cb4[0].x, l(2)
  30: mov r6.x, cb3[r4.w + 8].z
  31: mov r6.y, cb3[r4.w + 9].z
  32: mov r6.z, cb3[r4.w + 10].z
  33: dp3 r4.w, r5.xyzx, r6.xyzx
  34: add r5.xyz, r4.xyzx, -cb2[25].xyzx
  35: dp3 r5.x, r5.xyzx, r5.xyzx
  36: sqrt r5.x, r5.x
  37: add r5.x, -r4.w, r5.x
  38: mad r4.w, cb2[25].w, r5.x, r4.w
  39: mad_sat r4.w, r4.w, cb2[24].z, cb2[24].w
  40: eq r5.x, cb6[0].x, l(1.000000)
  41: if_nz r5.x
  42:   eq r5.y, cb6[0].y, l(1.000000)
  43:   mul r6.xyz, v4.wwww, cb6[2].xyzx
  44:   mad r6.xyz, cb6[1].xyzx, v3.wwww, r6.xyzx
  45:   mad r6.xyz, cb6[3].xyzx, v5.wwww, r6.xyzx
  46:   add r6.xyz, r6.xyzx, cb6[4].xyzx
  47:   movc r5.yzw, r5.yyyy, r6.xxyz, r4.xxyz
  48:   add r5.yzw, r5.yyzw, -cb6[6].xxyz
  49:   mul r6.yzw, r5.yyzw, cb6[5].xxyz
  50:   mad r5.y, r6.y, l(0.250000), l(0.750000)
  51:   mad r5.z, cb6[0].z, l(0.500000), l(0.750000)
  52:   max r6.x, r5.z, r5.y
  53:   sample r6.xyzw, r6.xzwx, t7.xyzw, s1
  54: else 
  55:   mov r6.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  56: endif 
  57: dp4_sat r5.y, r6.xyzw, cb1[46].xyzw
  58: div r5.zw, v7.xxxy, v7.wwww
  59: sample r6.xyzw, r5.zwzz, t3.xyzw, s6
  60: add r5.y, r5.y, -r6.x
  61: mad r4.w, r4.w, r5.y, r6.x
  62: sample r6.xyzw, v1.xyxx, t4.xyzw, s5
  63: add r5.y, -cb0[9].y, l(1.000000)
  64: mad r5.y, r6.y, cb0[9].y, r5.y
  65: mad r5.z, -r0.w, cb0[9].x, l(1.000000)
  66: dp3 r5.w, r3.yzwy, r2.xyzx
  67: add r5.w, r5.w, r5.w
  68: mad r6.xyz, r2.xyzx, -r5.wwww, r3.yzwy
  69: mul r7.xyz, r4.wwww, cb0[2].xyzx
  70: if_nz r5.x
  71:   eq r4.w, cb6[0].y, l(1.000000)
  72:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  73:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  74:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  75:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  76:   movc r8.xyz, r4.wwww, r8.xyzx, r4.xyzx
  77:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  78:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  79:   mul r4.w, r8.y, l(0.250000)
  80:   mul r5.x, cb6[0].z, l(0.500000)
  81:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  82:   max r4.w, r4.w, r5.x
  83:   min r8.x, r5.w, r4.w
  84:   sample r9.xyzw, r8.xzwx, t7.xyzw, s1
  85:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  86:   sample r10.xyzw, r10.xyzx, t7.xyzw, s1
  87:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  88:   sample r8.xyzw, r8.xyzx, t7.xyzw, s1
  89:   mov r2.w, l(1.000000)
  90:   dp4 r9.x, r9.xyzw, r2.xyzw
  91:   dp4 r9.y, r10.xyzw, r2.xyzw
  92:   dp4 r9.z, r8.xyzw, r2.xyzw
  93: else 
  94:   mov r2.w, l(1.000000)
  95:   dp4 r9.x, cb1[39].xyzw, r2.xyzw
  96:   dp4 r9.y, cb1[40].xyzw, r2.xyzw
  97:   dp4 r9.z, cb1[41].xyzw, r2.xyzw
  98: endif 
  99: add r8.xyz, r9.xyzx, v6.xyzx
 100: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
 101: lt r2.w, l(0.000000), cb5[2].w
 102: if_nz r2.w
 103:   dp3 r2.w, r6.xyzx, r6.xyzx
 104:   rsq r2.w, r2.w
 105:   mul r9.xyz, r2.wwww, r6.xyzx
 106:   add r10.xyz, -r4.xyzx, cb5[0].xyzx
 107:   div r10.xyz, r10.xyzx, r9.xyzx
 108:   add r11.xyz, -r4.xyzx, cb5[1].xyzx
 109:   div r11.xyz, r11.xyzx, r9.xyzx
 110:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 111:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 112:   min r2.w, r10.y, r10.x
 113:   min r2.w, r10.z, r2.w
 114:   add r10.xyz, r4.xyzx, -cb5[2].xyzx
 115:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 116: else 
 117:   mov r9.xyz, r6.xyzx
 118: endif 
 119: mad r2.w, -r5.z, l(0.700000), l(1.700000)
 120: mul r2.w, r2.w, r5.z
 121: mul r2.w, r2.w, l(6.000000)
 122: sample_l r9.xyzw, r9.xyzx, t5.xyzw, s0, r2.w
 123: add r4.w, r9.w, l(-1.000000)
 124: mad r4.w, cb5[3].w, r4.w, l(1.000000)
 125: log r4.w, r4.w
 126: mul r4.w, r4.w, cb5[3].y
 127: exp r4.w, r4.w
 128: mul r4.w, r4.w, cb5[3].x
 129: mul r10.xyz, r9.xyzx, r4.wwww
 130: lt r5.x, cb5[1].w, l(0.999990)
 131: if_nz r5.x
 132:   lt r5.x, l(0.000000), cb5[6].w
 133:   if_nz r5.x
 134:     dp3 r5.x, r6.xyzx, r6.xyzx
 135:     rsq r5.x, r5.x
 136:     mul r11.xyz, r5.xxxx, r6.xyzx
 137:     add r12.xyz, -r4.xyzx, cb5[4].xyzx
 138:     div r12.xyz, r12.xyzx, r11.xyzx
 139:     add r13.xyz, -r4.xyzx, cb5[5].xyzx
 140:     div r13.xyz, r13.xyzx, r11.xyzx
 141:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 142:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 143:     min r5.x, r12.y, r12.x
 144:     min r5.x, r12.z, r5.x
 145:     add r4.xyz, r4.xyzx, -cb5[6].xyzx
 146:     mad r6.xyz, r11.xyzx, r5.xxxx, r4.xyzx
 147:   endif 
 148:   sample_l r6.xyzw, r6.xyzx, t6.xyzw, s0, r2.w
 149:   add r2.w, r6.w, l(-1.000000)
 150:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 151:   log r2.w, r2.w
 152:   mul r2.w, r2.w, cb5[7].y
 153:   exp r2.w, r2.w
 154:   mul r2.w, r2.w, cb5[7].x
 155:   mul r4.xyz, r6.xyzx, r2.wwww
 156:   mad r6.xyz, r4.wwww, r9.xyzx, -r4.xyzx
 157:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r4.xyzx
 158: endif 
 159: mul r4.xyz, r5.yyyy, r10.xyzx
 160: mad r6.xyz, -v2.xyzx, r3.xxxx, cb1[0].xyzx
 161: dp3 r2.w, r6.xyzx, r6.xyzx
 162: max r2.w, r2.w, l(0.001000)
 163: rsq r2.w, r2.w
 164: mul r6.xyz, r2.wwww, r6.xyzx
 165: dp3 r2.w, r2.xyzx, -r3.yzwy
 166: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 167: dp3_sat r2.x, r2.xyzx, r6.xyzx
 168: dp3_sat r2.y, cb1[0].xyzx, r6.xyzx
 169: mul r2.z, r2.y, r2.y
 170: dp2 r2.z, r2.zzzz, r5.zzzz
 171: add r2.z, r2.z, l(-0.500000)
 172: add r3.y, -r3.x, l(1.000000)
 173: mul r3.z, r3.y, r3.y
 174: mul r3.z, r3.z, r3.z
 175: mul r3.y, r3.y, r3.z
 176: mad r3.y, r2.z, r3.y, l(1.000000)
 177: add r3.z, -|r2.w|, l(1.000000)
 178: mul r3.w, r3.z, r3.z
 179: mul r3.w, r3.w, r3.w
 180: mul r3.z, r3.z, r3.w
 181: mad r2.z, r2.z, r3.z, l(1.000000)
 182: mul r2.z, r2.z, r3.y
 183: mul r3.y, r5.z, r5.z
 184: max r3.y, r3.y, l(0.002000)
 185: add r3.w, -r3.y, l(1.000000)
 186: mad r4.w, |r2.w|, r3.w, r3.y
 187: mad r3.w, r3.x, r3.w, r3.y
 188: mul r2.w, |r2.w|, r3.w
 189: mad r2.w, r3.x, r4.w, r2.w
 190: add r2.w, r2.w, l(0.000010)
 191: div r2.w, l(0.500000), r2.w
 192: mul r3.w, r3.y, r3.y
 193: mad r4.w, r2.x, r3.w, -r2.x
 194: mad r2.x, r4.w, r2.x, l(1.000000)
 195: mul r3.w, r3.w, l(0.318310)
 196: mad r2.x, r2.x, r2.x, l(0.000000)
 197: div r2.x, r3.w, r2.x
 198: mul r2.x, r2.x, r2.w
 199: mul r2.x, r2.x, l(3.141593)
 200: mul r2.xz, r3.xxxx, r2.xxzx
 201: max r2.x, r2.x, l(0.000000)
 202: mad r2.w, r3.y, r3.y, l(1.000000)
 203: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 204: dp3 r3.x, r0.xyzx, r0.xyzx
 205: ne r3.x, r3.x, l(0.000000)
 206: and r3.x, r3.x, l(0x3f800000)
 207: mul r2.x, r2.x, r3.x
 208: mad r0.w, r0.w, cb0[9].x, -r1.w
 209: add_sat r0.w, r0.w, l(1.000000)
 210: mul r3.xyw, r2.zzzz, r7.xyxz
 211: mad r3.xyw, r8.xyxz, r5.yyyy, r3.xyxw
 212: mul r5.xyz, r7.xyzx, r2.xxxx
 213: add r1.w, -r2.y, l(1.000000)
 214: mul r2.x, r1.w, r1.w
 215: mul r2.x, r2.x, r2.x
 216: mul r1.w, r1.w, r2.x
 217: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 218: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 219: mul r2.xyz, r2.xyzx, r5.xyzx
 220: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 221: mul r2.xyz, r4.xyzx, r2.wwww
 222: add r3.xyw, -r0.xyxz, r0.wwww
 223: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 224: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 225: mov o0.w, l(1.000000)
 226: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul r1.xyz, r1.wwww, r1.xyzx
  29: mov o5.xyz, r1.xyzx
  30: mul r1.w, r1.y, r1.y
  31: mad r1.w, r1.x, r1.x, -r1.w
  32: mul r2.xyzw, r1.yzzx, r1.xyzz
  33: dp4 r1.x, cb2[42].xyzw, r2.xyzw
  34: dp4 r1.y, cb2[43].xyzw, r2.xyzw
  35: dp4 r1.z, cb2[44].xyzw, r2.xyzw
  36: mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
  37: mov o6.w, l(0)
  38: mul r0.y, r0.y, cb1[5].x
  39: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  40: mov o7.zw, r0.zzzw
  41: add o7.xy, r1.zzzz, r1.xwxx
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 175 math, 14 temp registers, 7 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: dp3 r2.x, v2.xyzx, v2.xyzx
  10: rsq r2.x, r2.x
  11: mul r2.yzw, r2.xxxx, v2.xxyz
  12: mov r3.x, v3.w
  13: mov r3.y, v4.w
  14: mov r3.z, v5.w
  15: add r4.xyz, -r3.xyzx, cb1[4].xyzx
  16: mov r5.x, cb4[9].z
  17: mov r5.y, cb4[10].z
  18: mov r5.z, cb4[11].z
  19: dp3 r3.w, r4.xyzx, r5.xyzx
  20: add r4.xyz, r3.xyzx, -cb3[25].xyzx
  21: dp3 r4.x, r4.xyzx, r4.xyzx
  22: sqrt r4.x, r4.x
  23: add r4.x, -r3.w, r4.x
  24: mad r3.w, cb3[25].w, r4.x, r3.w
  25: mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
  26: eq r4.x, cb6[0].x, l(1.000000)
  27: if_nz r4.x
  28:   eq r4.y, cb6[0].y, l(1.000000)
  29:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  30:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  31:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  32:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  33:   movc r4.yzw, r4.yyyy, r5.xxyz, r3.xxyz
  34:   add r4.yzw, r4.yyzw, -cb6[6].xxyz
  35:   mul r5.yzw, r4.yyzw, cb6[5].xxyz
  36:   mad r4.y, r5.y, l(0.250000), l(0.750000)
  37:   mad r4.z, cb6[0].z, l(0.500000), l(0.750000)
  38:   max r5.x, r4.z, r4.y
  39:   sample r5.xyzw, r5.xzwx, t5.xyzw, s1
  40: else 
  41:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  42: endif 
  43: dp4_sat r4.y, r5.xyzw, cb2[46].xyzw
  44: div r4.zw, v7.xxxy, v7.wwww
  45: sample r5.xyzw, r4.zwzz, t1.xyzw, s4
  46: add r4.y, r4.y, -r5.x
  47: mad r3.w, r3.w, r4.y, r5.x
  48: sample r5.xyzw, v1.xyxx, t2.xyzw, s3
  49: add r4.y, -cb0[9].y, l(1.000000)
  50: mad r4.y, r5.y, cb0[9].y, r4.y
  51: add r4.z, -cb0[8].w, l(1.000000)
  52: dp3 r4.w, r2.yzwy, r1.xyzx
  53: add r4.w, r4.w, r4.w
  54: mad r5.xyz, r1.xyzx, -r4.wwww, r2.yzwy
  55: mul r6.xyz, r3.wwww, cb0[2].xyzx
  56: if_nz r4.x
  57:   eq r3.w, cb6[0].y, l(1.000000)
  58:   mul r7.xyz, v4.wwww, cb6[2].xyzx
  59:   mad r7.xyz, cb6[1].xyzx, v3.wwww, r7.xyzx
  60:   mad r7.xyz, cb6[3].xyzx, v5.wwww, r7.xyzx
  61:   add r7.xyz, r7.xyzx, cb6[4].xyzx
  62:   movc r7.xyz, r3.wwww, r7.xyzx, r3.xyzx
  63:   add r7.xyz, r7.xyzx, -cb6[6].xyzx
  64:   mul r7.yzw, r7.xxyz, cb6[5].xxyz
  65:   mul r3.w, r7.y, l(0.250000)
  66:   mul r4.x, cb6[0].z, l(0.500000)
  67:   mad r4.w, -cb6[0].z, l(0.500000), l(0.250000)
  68:   max r3.w, r3.w, r4.x
  69:   min r7.x, r4.w, r3.w
  70:   sample r8.xyzw, r7.xzwx, t5.xyzw, s1
  71:   add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  72:   sample r9.xyzw, r9.xyzx, t5.xyzw, s1
  73:   add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  74:   sample r7.xyzw, r7.xyzx, t5.xyzw, s1
  75:   mov r1.w, l(1.000000)
  76:   dp4 r8.x, r8.xyzw, r1.xyzw
  77:   dp4 r8.y, r9.xyzw, r1.xyzw
  78:   dp4 r8.z, r7.xyzw, r1.xyzw
  79: else 
  80:   mov r1.w, l(1.000000)
  81:   dp4 r8.x, cb2[39].xyzw, r1.xyzw
  82:   dp4 r8.y, cb2[40].xyzw, r1.xyzw
  83:   dp4 r8.z, cb2[41].xyzw, r1.xyzw
  84: endif 
  85: add r7.xyz, r8.xyzx, v6.xyzx
  86: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  87: lt r1.w, l(0.000000), cb5[2].w
  88: if_nz r1.w
  89:   dp3 r1.w, r5.xyzx, r5.xyzx
  90:   rsq r1.w, r1.w
  91:   mul r8.xyz, r1.wwww, r5.xyzx
  92:   add r9.xyz, -r3.xyzx, cb5[0].xyzx
  93:   div r9.xyz, r9.xyzx, r8.xyzx
  94:   add r10.xyz, -r3.xyzx, cb5[1].xyzx
  95:   div r10.xyz, r10.xyzx, r8.xyzx
  96:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  97:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  98:   min r1.w, r9.y, r9.x
  99:   min r1.w, r9.z, r1.w
 100:   add r9.xyz, r3.xyzx, -cb5[2].xyzx
 101:   mad r8.xyz, r8.xyzx, r1.wwww, r9.xyzx
 102: else 
 103:   mov r8.xyz, r5.xyzx
 104: endif 
 105: mad r1.w, -r4.z, l(0.700000), l(1.700000)
 106: mul r1.w, r1.w, r4.z
 107: mul r1.w, r1.w, l(6.000000)
 108: sample_l r8.xyzw, r8.xyzx, t3.xyzw, s0, r1.w
 109: add r3.w, r8.w, l(-1.000000)
 110: mad r3.w, cb5[3].w, r3.w, l(1.000000)
 111: log r3.w, r3.w
 112: mul r3.w, r3.w, cb5[3].y
 113: exp r3.w, r3.w
 114: mul r3.w, r3.w, cb5[3].x
 115: mul r9.xyz, r8.xyzx, r3.wwww
 116: lt r4.x, cb5[1].w, l(0.999990)
 117: if_nz r4.x
 118:   lt r4.x, l(0.000000), cb5[6].w
 119:   if_nz r4.x
 120:     dp3 r4.x, r5.xyzx, r5.xyzx
 121:     rsq r4.x, r4.x
 122:     mul r10.xyz, r4.xxxx, r5.xyzx
 123:     add r11.xyz, -r3.xyzx, cb5[4].xyzx
 124:     div r11.xyz, r11.xyzx, r10.xyzx
 125:     add r12.xyz, -r3.xyzx, cb5[5].xyzx
 126:     div r12.xyz, r12.xyzx, r10.xyzx
 127:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 128:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 129:     min r4.x, r11.y, r11.x
 130:     min r4.x, r11.z, r4.x
 131:     add r3.xyz, r3.xyzx, -cb5[6].xyzx
 132:     mad r5.xyz, r10.xyzx, r4.xxxx, r3.xyzx
 133:   endif 
 134:   sample_l r5.xyzw, r5.xyzx, t4.xyzw, s0, r1.w
 135:   add r1.w, r5.w, l(-1.000000)
 136:   mad r1.w, cb5[7].w, r1.w, l(1.000000)
 137:   log r1.w, r1.w
 138:   mul r1.w, r1.w, cb5[7].y
 139:   exp r1.w, r1.w
 140:   mul r1.w, r1.w, cb5[7].x
 141:   mul r3.xyz, r5.xyzx, r1.wwww
 142:   mad r5.xyz, r3.wwww, r8.xyzx, -r3.xyzx
 143:   mad r9.xyz, cb5[1].wwww, r5.xyzx, r3.xyzx
 144: endif 
 145: mul r3.xyz, r4.yyyy, r9.xyzx
 146: mad r5.xyz, -v2.xyzx, r2.xxxx, cb2[0].xyzx
 147: dp3 r1.w, r5.xyzx, r5.xyzx
 148: max r1.w, r1.w, l(0.001000)
 149: rsq r1.w, r1.w
 150: mul r5.xyz, r1.wwww, r5.xyzx
 151: dp3 r1.w, r1.xyzx, -r2.yzwy
 152: dp3_sat r2.x, r1.xyzx, cb2[0].xyzx
 153: dp3_sat r1.x, r1.xyzx, r5.xyzx
 154: dp3_sat r1.y, cb2[0].xyzx, r5.xyzx
 155: mul r1.z, r1.y, r1.y
 156: dp2 r1.z, r1.zzzz, r4.zzzz
 157: add r1.z, r1.z, l(-0.500000)
 158: add r2.y, -r2.x, l(1.000000)
 159: mul r2.z, r2.y, r2.y
 160: mul r2.z, r2.z, r2.z
 161: mul r2.y, r2.y, r2.z
 162: mad r2.y, r1.z, r2.y, l(1.000000)
 163: add r2.z, -|r1.w|, l(1.000000)
 164: mul r2.w, r2.z, r2.z
 165: mul r2.w, r2.w, r2.w
 166: mul r2.z, r2.z, r2.w
 167: mad r1.z, r1.z, r2.z, l(1.000000)
 168: mul r1.z, r1.z, r2.y
 169: mul r2.y, r4.z, r4.z
 170: max r2.y, r2.y, l(0.002000)
 171: add r2.w, -r2.y, l(1.000000)
 172: mad r3.w, |r1.w|, r2.w, r2.y
 173: mad r2.w, r2.x, r2.w, r2.y
 174: mul r1.w, |r1.w|, r2.w
 175: mad r1.w, r2.x, r3.w, r1.w
 176: add r1.w, r1.w, l(0.000010)
 177: div r1.w, l(0.500000), r1.w
 178: mul r2.w, r2.y, r2.y
 179: mad r3.w, r1.x, r2.w, -r1.x
 180: mad r1.x, r3.w, r1.x, l(1.000000)
 181: mul r2.w, r2.w, l(0.318310)
 182: mad r1.x, r1.x, r1.x, l(0.000000)
 183: div r1.x, r2.w, r1.x
 184: mul r1.x, r1.x, r1.w
 185: mul r1.x, r1.x, l(3.141593)
 186: mul r1.xz, r2.xxxx, r1.xxzx
 187: max r1.x, r1.x, l(0.000000)
 188: mad r1.w, r2.y, r2.y, l(1.000000)
 189: div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
 190: dp3 r2.x, cb0[3].xyzx, cb0[3].xyzx
 191: ne r2.x, r2.x, l(0.000000)
 192: and r2.x, r2.x, l(0x3f800000)
 193: mul r1.x, r1.x, r2.x
 194: add r0.w, -r0.w, l(1.000000)
 195: add_sat r0.w, r0.w, cb0[8].w
 196: mul r2.xyw, r1.zzzz, r6.xyxz
 197: mad r2.xyw, r7.xyxz, r4.yyyy, r2.xyxw
 198: mul r4.xyz, r6.xyzx, r1.xxxx
 199: add r1.x, -r1.y, l(1.000000)
 200: mul r1.y, r1.x, r1.x
 201: mul r1.y, r1.y, r1.y
 202: mul r1.x, r1.x, r1.y
 203: add r5.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 204: mad r1.xyz, r5.xyzx, r1.xxxx, cb0[3].xyzx
 205: mul r1.xyz, r1.xyzx, r4.xyzx
 206: mad r0.xyz, r0.xyzx, r2.xywx, r1.xyzx
 207: mul r1.xyz, r3.xyzx, r1.wwww
 208: add r2.xyw, r0.wwww, -cb0[3].xyxz
 209: mad r2.xyz, r2.zzzz, r2.xywx, cb0[3].xyzx
 210: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
 211: mov o0.w, l(1.000000)
 212: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 4 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 5 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[68], dynamicIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: ishl r1.x, cb5[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb4[r1.x + 25].xyzw
   6: mad r2.xyzw, cb4[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb4[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  16: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  19: mov r2.x, cb5[0].x
  20: add o2.xyz, r1.xyzx, -cb4[r2.x + 64].xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul r1.xyz, r1.wwww, r1.xyzx
  31: mov o5.xyz, r1.xyzx
  32: mul r1.w, r1.y, r1.y
  33: mad r1.w, r1.x, r1.x, -r1.w
  34: mul r3.xyzw, r1.yzzx, r1.xyzz
  35: dp4 r1.x, cb2[42].xyzw, r3.xyzw
  36: dp4 r1.y, cb2[43].xyzw, r3.xyzw
  37: dp4 r1.z, cb2[44].xyzw, r3.xyzw
  38: mad o6.xyz, cb2[45].xyzx, r1.wwww, r1.xyzx
  39: mov o6.w, l(0)
  40: mul r0.y, r0.y, cb1[4].x
  41: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  42: add r0.xy, r1.zzzz, r1.xwxx
  43: mul r1.xy, r0.wwww, cb4[r2.x + 66].zwzz
  44: mad o7.xy, r0.xyxx, cb4[r2.x + 66].xyxx, r1.xyxx
  45: mov o7.zw, r0.zzzw
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 176 math, 14 temp registers, 7 textures, 8 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set CUBE Texture "unity_SpecCube0" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube1" to slot 4 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: dp3 r2.x, v2.xyzx, v2.xyzx
  10: rsq r2.x, r2.x
  11: mul r2.yzw, r2.xxxx, v2.xxyz
  12: mov r3.x, v3.w
  13: mov r3.y, v4.w
  14: mov r3.z, v5.w
  15: mov r3.w, cb4[0].x
  16: add r4.xyz, -r3.xyzx, cb3[r3.w + 64].xyzx
  17: ishl r3.w, cb4[0].x, l(2)
  18: mov r5.x, cb3[r3.w + 8].z
  19: mov r5.y, cb3[r3.w + 9].z
  20: mov r5.z, cb3[r3.w + 10].z
  21: dp3 r3.w, r4.xyzx, r5.xyzx
  22: add r4.xyz, r3.xyzx, -cb2[25].xyzx
  23: dp3 r4.x, r4.xyzx, r4.xyzx
  24: sqrt r4.x, r4.x
  25: add r4.x, -r3.w, r4.x
  26: mad r3.w, cb2[25].w, r4.x, r3.w
  27: mad_sat r3.w, r3.w, cb2[24].z, cb2[24].w
  28: eq r4.x, cb6[0].x, l(1.000000)
  29: if_nz r4.x
  30:   eq r4.y, cb6[0].y, l(1.000000)
  31:   mul r5.xyz, v4.wwww, cb6[2].xyzx
  32:   mad r5.xyz, cb6[1].xyzx, v3.wwww, r5.xyzx
  33:   mad r5.xyz, cb6[3].xyzx, v5.wwww, r5.xyzx
  34:   add r5.xyz, r5.xyzx, cb6[4].xyzx
  35:   movc r4.yzw, r4.yyyy, r5.xxyz, r3.xxyz
  36:   add r4.yzw, r4.yyzw, -cb6[6].xxyz
  37:   mul r5.yzw, r4.yyzw, cb6[5].xxyz
  38:   mad r4.y, r5.y, l(0.250000), l(0.750000)
  39:   mad r4.z, cb6[0].z, l(0.500000), l(0.750000)
  40:   max r5.x, r4.z, r4.y
  41:   sample r5.xyzw, r5.xzwx, t5.xyzw, s1
  42: else 
  43:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r4.y, r5.xyzw, cb1[46].xyzw
  46: div r4.zw, v7.xxxy, v7.wwww
  47: sample r5.xyzw, r4.zwzz, t1.xyzw, s4
  48: add r4.y, r4.y, -r5.x
  49: mad r3.w, r3.w, r4.y, r5.x
  50: sample r5.xyzw, v1.xyxx, t2.xyzw, s3
  51: add r4.y, -cb0[9].y, l(1.000000)
  52: mad r4.y, r5.y, cb0[9].y, r4.y
  53: add r4.z, -cb0[8].w, l(1.000000)
  54: dp3 r4.w, r2.yzwy, r1.xyzx
  55: add r4.w, r4.w, r4.w
  56: mad r5.xyz, r1.xyzx, -r4.wwww, r2.yzwy
  57: mul r6.xyz, r3.wwww, cb0[2].xyzx
  58: if_nz r4.x
  59:   eq r3.w, cb6[0].y, l(1.000000)
  60:   mul r7.xyz, v4.wwww, cb6[2].xyzx
  61:   mad r7.xyz, cb6[1].xyzx, v3.wwww, r7.xyzx
  62:   mad r7.xyz, cb6[3].xyzx, v5.wwww, r7.xyzx
  63:   add r7.xyz, r7.xyzx, cb6[4].xyzx
  64:   movc r7.xyz, r3.wwww, r7.xyzx, r3.xyzx
  65:   add r7.xyz, r7.xyzx, -cb6[6].xyzx
  66:   mul r7.yzw, r7.xxyz, cb6[5].xxyz
  67:   mul r3.w, r7.y, l(0.250000)
  68:   mul r4.x, cb6[0].z, l(0.500000)
  69:   mad r4.w, -cb6[0].z, l(0.500000), l(0.250000)
  70:   max r3.w, r3.w, r4.x
  71:   min r7.x, r4.w, r3.w
  72:   sample r8.xyzw, r7.xzwx, t5.xyzw, s1
  73:   add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  74:   sample r9.xyzw, r9.xyzx, t5.xyzw, s1
  75:   add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  76:   sample r7.xyzw, r7.xyzx, t5.xyzw, s1
  77:   mov r1.w, l(1.000000)
  78:   dp4 r8.x, r8.xyzw, r1.xyzw
  79:   dp4 r8.y, r9.xyzw, r1.xyzw
  80:   dp4 r8.z, r7.xyzw, r1.xyzw
  81: else 
  82:   mov r1.w, l(1.000000)
  83:   dp4 r8.x, cb1[39].xyzw, r1.xyzw
  84:   dp4 r8.y, cb1[40].xyzw, r1.xyzw
  85:   dp4 r8.z, cb1[41].xyzw, r1.xyzw
  86: endif 
  87: add r7.xyz, r8.xyzx, v6.xyzx
  88: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  89: lt r1.w, l(0.000000), cb5[2].w
  90: if_nz r1.w
  91:   dp3 r1.w, r5.xyzx, r5.xyzx
  92:   rsq r1.w, r1.w
  93:   mul r8.xyz, r1.wwww, r5.xyzx
  94:   add r9.xyz, -r3.xyzx, cb5[0].xyzx
  95:   div r9.xyz, r9.xyzx, r8.xyzx
  96:   add r10.xyz, -r3.xyzx, cb5[1].xyzx
  97:   div r10.xyz, r10.xyzx, r8.xyzx
  98:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  99:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
 100:   min r1.w, r9.y, r9.x
 101:   min r1.w, r9.z, r1.w
 102:   add r9.xyz, r3.xyzx, -cb5[2].xyzx
 103:   mad r8.xyz, r8.xyzx, r1.wwww, r9.xyzx
 104: else 
 105:   mov r8.xyz, r5.xyzx
 106: endif 
 107: mad r1.w, -r4.z, l(0.700000), l(1.700000)
 108: mul r1.w, r1.w, r4.z
 109: mul r1.w, r1.w, l(6.000000)
 110: sample_l r8.xyzw, r8.xyzx, t3.xyzw, s0, r1.w
 111: add r3.w, r8.w, l(-1.000000)
 112: mad r3.w, cb5[3].w, r3.w, l(1.000000)
 113: log r3.w, r3.w
 114: mul r3.w, r3.w, cb5[3].y
 115: exp r3.w, r3.w
 116: mul r3.w, r3.w, cb5[3].x
 117: mul r9.xyz, r8.xyzx, r3.wwww
 118: lt r4.x, cb5[1].w, l(0.999990)
 119: if_nz r4.x
 120:   lt r4.x, l(0.000000), cb5[6].w
 121:   if_nz r4.x
 122:     dp3 r4.x, r5.xyzx, r5.xyzx
 123:     rsq r4.x, r4.x
 124:     mul r10.xyz, r4.xxxx, r5.xyzx
 125:     add r11.xyz, -r3.xyzx, cb5[4].xyzx
 126:     div r11.xyz, r11.xyzx, r10.xyzx
 127:     add r12.xyz, -r3.xyzx, cb5[5].xyzx
 128:     div r12.xyz, r12.xyzx, r10.xyzx
 129:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 130:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 131:     min r4.x, r11.y, r11.x
 132:     min r4.x, r11.z, r4.x
 133:     add r3.xyz, r3.xyzx, -cb5[6].xyzx
 134:     mad r5.xyz, r10.xyzx, r4.xxxx, r3.xyzx
 135:   endif 
 136:   sample_l r5.xyzw, r5.xyzx, t4.xyzw, s0, r1.w
 137:   add r1.w, r5.w, l(-1.000000)
 138:   mad r1.w, cb5[7].w, r1.w, l(1.000000)
 139:   log r1.w, r1.w
 140:   mul r1.w, r1.w, cb5[7].y
 141:   exp r1.w, r1.w
 142:   mul r1.w, r1.w, cb5[7].x
 143:   mul r3.xyz, r5.xyzx, r1.wwww
 144:   mad r5.xyz, r3.wwww, r8.xyzx, -r3.xyzx
 145:   mad r9.xyz, cb5[1].wwww, r5.xyzx, r3.xyzx
 146: endif 
 147: mul r3.xyz, r4.yyyy, r9.xyzx
 148: mad r5.xyz, -v2.xyzx, r2.xxxx, cb1[0].xyzx
 149: dp3 r1.w, r5.xyzx, r5.xyzx
 150: max r1.w, r1.w, l(0.001000)
 151: rsq r1.w, r1.w
 152: mul r5.xyz, r1.wwww, r5.xyzx
 153: dp3 r1.w, r1.xyzx, -r2.yzwy
 154: dp3_sat r2.x, r1.xyzx, cb1[0].xyzx
 155: dp3_sat r1.x, r1.xyzx, r5.xyzx
 156: dp3_sat r1.y, cb1[0].xyzx, r5.xyzx
 157: mul r1.z, r1.y, r1.y
 158: dp2 r1.z, r1.zzzz, r4.zzzz
 159: add r1.z, r1.z, l(-0.500000)
 160: add r2.y, -r2.x, l(1.000000)
 161: mul r2.z, r2.y, r2.y
 162: mul r2.z, r2.z, r2.z
 163: mul r2.y, r2.y, r2.z
 164: mad r2.y, r1.z, r2.y, l(1.000000)
 165: add r2.z, -|r1.w|, l(1.000000)
 166: mul r2.w, r2.z, r2.z
 167: mul r2.w, r2.w, r2.w
 168: mul r2.z, r2.z, r2.w
 169: mad r1.z, r1.z, r2.z, l(1.000000)
 170: mul r1.z, r1.z, r2.y
 171: mul r2.y, r4.z, r4.z
 172: max r2.y, r2.y, l(0.002000)
 173: add r2.w, -r2.y, l(1.000000)
 174: mad r3.w, |r1.w|, r2.w, r2.y
 175: mad r2.w, r2.x, r2.w, r2.y
 176: mul r1.w, |r1.w|, r2.w
 177: mad r1.w, r2.x, r3.w, r1.w
 178: add r1.w, r1.w, l(0.000010)
 179: div r1.w, l(0.500000), r1.w
 180: mul r2.w, r2.y, r2.y
 181: mad r3.w, r1.x, r2.w, -r1.x
 182: mad r1.x, r3.w, r1.x, l(1.000000)
 183: mul r2.w, r2.w, l(0.318310)
 184: mad r1.x, r1.x, r1.x, l(0.000000)
 185: div r1.x, r2.w, r1.x
 186: mul r1.x, r1.x, r1.w
 187: mul r1.x, r1.x, l(3.141593)
 188: mul r1.xz, r2.xxxx, r1.xxzx
 189: max r1.x, r1.x, l(0.000000)
 190: mad r1.w, r2.y, r2.y, l(1.000000)
 191: div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
 192: dp3 r2.x, cb0[3].xyzx, cb0[3].xyzx
 193: ne r2.x, r2.x, l(0.000000)
 194: and r2.x, r2.x, l(0x3f800000)
 195: mul r1.x, r1.x, r2.x
 196: add r0.w, -r0.w, l(1.000000)
 197: add_sat r0.w, r0.w, cb0[8].w
 198: mul r2.xyw, r1.zzzz, r6.xyxz
 199: mad r2.xyw, r7.xyxz, r4.yyyy, r2.xyxw
 200: mul r4.xyz, r6.xyzx, r1.xxxx
 201: add r1.x, -r1.y, l(1.000000)
 202: mul r1.y, r1.x, r1.x
 203: mul r1.y, r1.y, r1.y
 204: mul r1.x, r1.x, r1.y
 205: add r5.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 206: mad r1.xyz, r5.xyzx, r1.xxxx, cb0[3].xyzx
 207: mul r1.xyz, r1.xyzx, r4.xyzx
 208: mad r0.xyz, r0.xyzx, r2.xywx, r1.xyzx
 209: mul r1.xyz, r3.xyzx, r1.wwww
 210: add r2.xyw, r0.wwww, -cb0[3].xyxz
 211: mad r2.xyz, r2.zzzz, r2.xywx, cb0[3].xyzx
 212: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
 213: mov o0.w, l(1.000000)
 214: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON SHADOWS_SCREEN 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul o5.xyz, r1.wwww, r1.xyzx
  29: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  30: mov o6.zw, l(0,0,0,0)
  31: mul r0.y, r0.y, cb1[5].x
  32: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  33: mov o7.zw, r0.zzzw
  34: add o7.xy, r1.zzzz, r1.xwxx
  35: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 141 math, 14 temp registers, 5 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 5
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set 2D Texture "unity_Lightmap" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r2.w, v2.xyzx, v2.xyzx
  11: rsq r2.w, r2.w
  12: mul r3.xyz, r2.wwww, v2.xyzx
  13: div r4.xy, v7.xyxx, v7.wwww
  14: sample r4.xyzw, r4.xyxx, t2.xyzw, s5
  15: sample r5.xyzw, v1.xyxx, t3.xyzw, s4
  16: add r3.w, -cb0[9].y, l(1.000000)
  17: mad r3.w, r5.y, cb0[9].y, r3.w
  18: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  19: dp3 r4.z, r3.xyzx, r2.xyzx
  20: add r4.z, r4.z, r4.z
  21: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.xyzx
  22: mov r6.x, v3.w
  23: mov r6.y, v4.w
  24: mov r6.z, v5.w
  25: add r7.xyz, -r6.xyzx, cb1[4].xyzx
  26: mov r8.x, cb4[9].z
  27: mov r8.y, cb4[10].z
  28: mov r8.z, cb4[11].z
  29: dp3 r4.z, r7.xyzx, r8.xyzx
  30: add r7.xyz, r6.xyzx, -cb3[25].xyzx
  31: dp3 r4.w, r7.xyzx, r7.xyzx
  32: sqrt r4.w, r4.w
  33: add r4.w, -r4.z, r4.w
  34: mad r4.z, cb3[25].w, r4.w, r4.z
  35: mad_sat r4.z, r4.z, cb3[24].z, cb3[24].w
  36: add r4.w, -r4.x, l(1.000000)
  37: mad r4.x, r4.z, r4.w, r4.x
  38: mul r4.xzw, r4.xxxx, cb0[2].xxyz
  39: sample r7.xyzw, v6.xyxx, t4.xyzw, s0
  40: lt r5.w, l(0.000000), cb5[2].w
  41: if_nz r5.w
  42:   dp3 r5.w, r5.xyzx, r5.xyzx
  43:   rsq r5.w, r5.w
  44:   mul r8.xyz, r5.wwww, r5.xyzx
  45:   add r9.xyz, -r6.xyzx, cb5[0].xyzx
  46:   div r9.xyz, r9.xyzx, r8.xyzx
  47:   add r10.xyz, -r6.xyzx, cb5[1].xyzx
  48:   div r10.xyz, r10.xyzx, r8.xyzx
  49:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  50:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  51:   min r5.w, r9.y, r9.x
  52:   min r5.w, r9.z, r5.w
  53:   add r9.xyz, r6.xyzx, -cb5[2].xyzx
  54:   mad r8.xyz, r8.xyzx, r5.wwww, r9.xyzx
  55: else 
  56:   mov r8.xyz, r5.xyzx
  57: endif 
  58: mad r5.w, -r4.y, l(0.700000), l(1.700000)
  59: mul r5.w, r4.y, r5.w
  60: mul r5.w, r5.w, l(6.000000)
  61: sample_l r8.xyzw, r8.xyzx, t5.xyzw, s1, r5.w
  62: add r6.w, r8.w, l(-1.000000)
  63: mad r6.w, cb5[3].w, r6.w, l(1.000000)
  64: log r6.w, r6.w
  65: mul r6.w, r6.w, cb5[3].y
  66: exp r6.w, r6.w
  67: mul r6.w, r6.w, cb5[3].x
  68: mul r9.xyz, r8.xyzx, r6.wwww
  69: lt r7.w, cb5[1].w, l(0.999990)
  70: if_nz r7.w
  71:   lt r7.w, l(0.000000), cb5[6].w
  72:   if_nz r7.w
  73:     dp3 r7.w, r5.xyzx, r5.xyzx
  74:     rsq r7.w, r7.w
  75:     mul r10.xyz, r5.xyzx, r7.wwww
  76:     add r11.xyz, -r6.xyzx, cb5[4].xyzx
  77:     div r11.xyz, r11.xyzx, r10.xyzx
  78:     add r12.xyz, -r6.xyzx, cb5[5].xyzx
  79:     div r12.xyz, r12.xyzx, r10.xyzx
  80:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
  81:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  82:     min r7.w, r11.y, r11.x
  83:     min r7.w, r11.z, r7.w
  84:     add r6.xyz, r6.xyzx, -cb5[6].xyzx
  85:     mad r5.xyz, r10.xyzx, r7.wwww, r6.xyzx
  86:   endif 
  87:   sample_l r5.xyzw, r5.xyzx, t6.xyzw, s1, r5.w
  88:   add r5.w, r5.w, l(-1.000000)
  89:   mad r5.w, cb5[7].w, r5.w, l(1.000000)
  90:   log r5.w, r5.w
  91:   mul r5.w, r5.w, cb5[7].y
  92:   exp r5.w, r5.w
  93:   mul r5.w, r5.w, cb5[7].x
  94:   mul r5.xyz, r5.xyzx, r5.wwww
  95:   mad r6.xyz, r6.wwww, r8.xyzx, -r5.xyzx
  96:   mad r9.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
  97: endif 
  98: mul r5.xyz, r3.wwww, r9.xyzx
  99: mad r6.xyz, -v2.xyzx, r2.wwww, cb2[0].xyzx
 100: dp3 r2.w, r6.xyzx, r6.xyzx
 101: max r2.w, r2.w, l(0.001000)
 102: rsq r2.w, r2.w
 103: mul r6.xyz, r2.wwww, r6.xyzx
 104: dp3 r2.w, r2.xyzx, -r3.xyzx
 105: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 106: dp3_sat r2.x, r2.xyzx, r6.xyzx
 107: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 108: mul r2.z, r2.y, r2.y
 109: dp2 r2.z, r2.zzzz, r4.yyyy
 110: add r2.z, r2.z, l(-0.500000)
 111: add r3.y, -r3.x, l(1.000000)
 112: mul r3.z, r3.y, r3.y
 113: mul r3.z, r3.z, r3.z
 114: mul r3.y, r3.y, r3.z
 115: mad r3.y, r2.z, r3.y, l(1.000000)
 116: add r3.z, -|r2.w|, l(1.000000)
 117: mul r5.w, r3.z, r3.z
 118: mul r5.w, r5.w, r5.w
 119: mul r3.z, r3.z, r5.w
 120: mad r2.z, r2.z, r3.z, l(1.000000)
 121: mul r2.z, r2.z, r3.y
 122: mul r3.y, r4.y, r4.y
 123: max r3.y, r3.y, l(0.002000)
 124: add r4.y, -r3.y, l(1.000000)
 125: mad r5.w, |r2.w|, r4.y, r3.y
 126: mad r4.y, r3.x, r4.y, r3.y
 127: mul r2.w, |r2.w|, r4.y
 128: mad r2.w, r3.x, r5.w, r2.w
 129: add r2.w, r2.w, l(0.000010)
 130: div r2.w, l(0.500000), r2.w
 131: mul r4.y, r3.y, r3.y
 132: mad r5.w, r2.x, r4.y, -r2.x
 133: mad r2.x, r5.w, r2.x, l(1.000000)
 134: mul r4.y, r4.y, l(0.318310)
 135: mad r2.x, r2.x, r2.x, l(0.000000)
 136: div r2.x, r4.y, r2.x
 137: mul r2.x, r2.x, r2.w
 138: mul r2.x, r2.x, l(3.141593)
 139: mul r2.xz, r3.xxxx, r2.xxzx
 140: max r2.x, r2.x, l(0.000000)
 141: mad r2.w, r3.y, r3.y, l(1.000000)
 142: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 143: dp3 r3.x, r0.xyzx, r0.xyzx
 144: ne r3.x, r3.x, l(0.000000)
 145: and r3.x, r3.x, l(0x3f800000)
 146: mul r2.x, r2.x, r3.x
 147: mad r0.w, r0.w, cb0[9].x, -r1.w
 148: add_sat r0.w, r0.w, l(1.000000)
 149: mul r6.xyz, r2.zzzz, r4.xzwx
 150: mad r3.xyw, r7.xyxz, r3.wwww, r6.xyxz
 151: mul r4.xyz, r4.xzwx, r2.xxxx
 152: add r1.w, -r2.y, l(1.000000)
 153: mul r2.x, r1.w, r1.w
 154: mul r2.x, r2.x, r2.x
 155: mul r1.w, r1.w, r2.x
 156: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 157: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 158: mul r2.xyz, r2.xyzx, r4.xyzx
 159: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 160: mul r2.xyz, r5.xyzx, r2.wwww
 161: add r3.xyw, -r0.xyxz, r0.wwww
 162: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 163: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 164: mov o0.w, l(1.000000)
 165: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 5 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[68], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  16: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  19: mov r2.x, cb4[0].x
  20: add o2.xyz, r1.xyzx, -cb3[r2.x + 64].xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mad o6.xy, v3.xyxx, cb5[0].xyxx, cb5[0].zwzz
  32: mov o6.zw, l(0,0,0,0)
  33: mul r0.y, r0.y, cb1[4].x
  34: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  35: add r0.xy, r1.zzzz, r1.xwxx
  36: mul r1.xy, r0.wwww, cb3[r2.x + 66].zwzz
  37: mad o7.xy, r0.xyxx, cb3[r2.x + 66].xyxx, r1.xyxx
  38: mov o7.zw, r0.zzzw
  39: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 142 math, 14 temp registers, 5 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 5
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 4
Set 2D Texture "unity_Lightmap" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r2.w, v2.xyzx, v2.xyzx
  11: rsq r2.w, r2.w
  12: mul r3.xyz, r2.wwww, v2.xyzx
  13: div r4.xy, v7.xyxx, v7.wwww
  14: sample r4.xyzw, r4.xyxx, t2.xyzw, s5
  15: sample r5.xyzw, v1.xyxx, t3.xyzw, s4
  16: add r3.w, -cb0[9].y, l(1.000000)
  17: mad r3.w, r5.y, cb0[9].y, r3.w
  18: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  19: dp3 r4.z, r3.xyzx, r2.xyzx
  20: add r4.z, r4.z, r4.z
  21: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.xyzx
  22: mov r6.x, v3.w
  23: mov r6.y, v4.w
  24: mov r6.z, v5.w
  25: mov r4.z, cb4[0].x
  26: add r7.xyz, -r6.xyzx, cb3[r4.z + 64].xyzx
  27: ishl r4.z, cb4[0].x, l(2)
  28: mov r8.x, cb3[r4.z + 8].z
  29: mov r8.y, cb3[r4.z + 9].z
  30: mov r8.z, cb3[r4.z + 10].z
  31: dp3 r4.z, r7.xyzx, r8.xyzx
  32: add r7.xyz, r6.xyzx, -cb2[25].xyzx
  33: dp3 r4.w, r7.xyzx, r7.xyzx
  34: sqrt r4.w, r4.w
  35: add r4.w, -r4.z, r4.w
  36: mad r4.z, cb2[25].w, r4.w, r4.z
  37: mad_sat r4.z, r4.z, cb2[24].z, cb2[24].w
  38: add r4.w, -r4.x, l(1.000000)
  39: mad r4.x, r4.z, r4.w, r4.x
  40: mul r4.xzw, r4.xxxx, cb0[2].xxyz
  41: sample r7.xyzw, v6.xyxx, t4.xyzw, s0
  42: lt r5.w, l(0.000000), cb5[2].w
  43: if_nz r5.w
  44:   dp3 r5.w, r5.xyzx, r5.xyzx
  45:   rsq r5.w, r5.w
  46:   mul r8.xyz, r5.wwww, r5.xyzx
  47:   add r9.xyz, -r6.xyzx, cb5[0].xyzx
  48:   div r9.xyz, r9.xyzx, r8.xyzx
  49:   add r10.xyz, -r6.xyzx, cb5[1].xyzx
  50:   div r10.xyz, r10.xyzx, r8.xyzx
  51:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  52:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  53:   min r5.w, r9.y, r9.x
  54:   min r5.w, r9.z, r5.w
  55:   add r9.xyz, r6.xyzx, -cb5[2].xyzx
  56:   mad r8.xyz, r8.xyzx, r5.wwww, r9.xyzx
  57: else 
  58:   mov r8.xyz, r5.xyzx
  59: endif 
  60: mad r5.w, -r4.y, l(0.700000), l(1.700000)
  61: mul r5.w, r4.y, r5.w
  62: mul r5.w, r5.w, l(6.000000)
  63: sample_l r8.xyzw, r8.xyzx, t5.xyzw, s1, r5.w
  64: add r6.w, r8.w, l(-1.000000)
  65: mad r6.w, cb5[3].w, r6.w, l(1.000000)
  66: log r6.w, r6.w
  67: mul r6.w, r6.w, cb5[3].y
  68: exp r6.w, r6.w
  69: mul r6.w, r6.w, cb5[3].x
  70: mul r9.xyz, r8.xyzx, r6.wwww
  71: lt r7.w, cb5[1].w, l(0.999990)
  72: if_nz r7.w
  73:   lt r7.w, l(0.000000), cb5[6].w
  74:   if_nz r7.w
  75:     dp3 r7.w, r5.xyzx, r5.xyzx
  76:     rsq r7.w, r7.w
  77:     mul r10.xyz, r5.xyzx, r7.wwww
  78:     add r11.xyz, -r6.xyzx, cb5[4].xyzx
  79:     div r11.xyz, r11.xyzx, r10.xyzx
  80:     add r12.xyz, -r6.xyzx, cb5[5].xyzx
  81:     div r12.xyz, r12.xyzx, r10.xyzx
  82:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
  83:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  84:     min r7.w, r11.y, r11.x
  85:     min r7.w, r11.z, r7.w
  86:     add r6.xyz, r6.xyzx, -cb5[6].xyzx
  87:     mad r5.xyz, r10.xyzx, r7.wwww, r6.xyzx
  88:   endif 
  89:   sample_l r5.xyzw, r5.xyzx, t6.xyzw, s1, r5.w
  90:   add r5.w, r5.w, l(-1.000000)
  91:   mad r5.w, cb5[7].w, r5.w, l(1.000000)
  92:   log r5.w, r5.w
  93:   mul r5.w, r5.w, cb5[7].y
  94:   exp r5.w, r5.w
  95:   mul r5.w, r5.w, cb5[7].x
  96:   mul r5.xyz, r5.xyzx, r5.wwww
  97:   mad r6.xyz, r6.wwww, r8.xyzx, -r5.xyzx
  98:   mad r9.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
  99: endif 
 100: mul r5.xyz, r3.wwww, r9.xyzx
 101: mad r6.xyz, -v2.xyzx, r2.wwww, cb1[0].xyzx
 102: dp3 r2.w, r6.xyzx, r6.xyzx
 103: max r2.w, r2.w, l(0.001000)
 104: rsq r2.w, r2.w
 105: mul r6.xyz, r2.wwww, r6.xyzx
 106: dp3 r2.w, r2.xyzx, -r3.xyzx
 107: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 108: dp3_sat r2.x, r2.xyzx, r6.xyzx
 109: dp3_sat r2.y, cb1[0].xyzx, r6.xyzx
 110: mul r2.z, r2.y, r2.y
 111: dp2 r2.z, r2.zzzz, r4.yyyy
 112: add r2.z, r2.z, l(-0.500000)
 113: add r3.y, -r3.x, l(1.000000)
 114: mul r3.z, r3.y, r3.y
 115: mul r3.z, r3.z, r3.z
 116: mul r3.y, r3.y, r3.z
 117: mad r3.y, r2.z, r3.y, l(1.000000)
 118: add r3.z, -|r2.w|, l(1.000000)
 119: mul r5.w, r3.z, r3.z
 120: mul r5.w, r5.w, r5.w
 121: mul r3.z, r3.z, r5.w
 122: mad r2.z, r2.z, r3.z, l(1.000000)
 123: mul r2.z, r2.z, r3.y
 124: mul r3.y, r4.y, r4.y
 125: max r3.y, r3.y, l(0.002000)
 126: add r4.y, -r3.y, l(1.000000)
 127: mad r5.w, |r2.w|, r4.y, r3.y
 128: mad r4.y, r3.x, r4.y, r3.y
 129: mul r2.w, |r2.w|, r4.y
 130: mad r2.w, r3.x, r5.w, r2.w
 131: add r2.w, r2.w, l(0.000010)
 132: div r2.w, l(0.500000), r2.w
 133: mul r4.y, r3.y, r3.y
 134: mad r5.w, r2.x, r4.y, -r2.x
 135: mad r2.x, r5.w, r2.x, l(1.000000)
 136: mul r4.y, r4.y, l(0.318310)
 137: mad r2.x, r2.x, r2.x, l(0.000000)
 138: div r2.x, r4.y, r2.x
 139: mul r2.x, r2.x, r2.w
 140: mul r2.x, r2.x, l(3.141593)
 141: mul r2.xz, r3.xxxx, r2.xxzx
 142: max r2.x, r2.x, l(0.000000)
 143: mad r2.w, r3.y, r3.y, l(1.000000)
 144: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 145: dp3 r3.x, r0.xyzx, r0.xyzx
 146: ne r3.x, r3.x, l(0.000000)
 147: and r3.x, r3.x, l(0x3f800000)
 148: mul r2.x, r2.x, r3.x
 149: mad r0.w, r0.w, cb0[9].x, -r1.w
 150: add_sat r0.w, r0.w, l(1.000000)
 151: mul r6.xyz, r2.zzzz, r4.xzwx
 152: mad r3.xyw, r7.xyxz, r3.wwww, r6.xyxz
 153: mul r4.xyz, r4.xzwx, r2.xxxx
 154: add r1.w, -r2.y, l(1.000000)
 155: mul r2.x, r1.w, r1.w
 156: mul r2.x, r2.x, r2.x
 157: mul r1.w, r1.w, r2.x
 158: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 159: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 160: mul r2.xyz, r2.xyzx, r4.xyzx
 161: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 162: mul r2.xyz, r5.xyzx, r2.wwww
 163: add r3.xyw, -r0.xyxz, r0.wwww
 164: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 165: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 166: mov o0.w, l(1.000000)
 167: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON SHADOWS_SCREEN 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 36 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov o3.w, r1.x
  20: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  21: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  22: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  23: dp3 r1.x, r2.xyzx, r2.xyzx
  24: rsq r1.x, r1.x
  25: mul r2.xyz, r1.xxxx, r2.xyzx
  26: mov o3.xyz, r2.xyzx
  27: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.x, r3.xyzx, r3.xyzx
  31: rsq r1.x, r1.x
  32: mul r3.xyz, r1.xxxx, r3.xyzx
  33: mul r4.xyz, r2.yzxy, r3.zxyz
  34: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  35: mov o5.xyz, r3.xyzx
  36: mul r1.x, v4.w, cb2[9].w
  37: mul o4.xyz, r1.xxxx, r2.xyzx
  38: mov o4.w, r1.y
  39: mov o5.w, r1.z
  40: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  41: mov o6.zw, l(0,0,0,0)
  42: mul r0.y, r0.y, cb1[5].x
  43: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  44: mov o7.zw, r0.zzzw
  45: add o7.xy, r1.zzzz, r1.xwxx
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 151 math, 14 temp registers, 6 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 3 sampler slot 6
Set 2D Texture "_OcclusionMap" to slot 4 sampler slot 5
Set 2D Texture "unity_Lightmap" to slot 5 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 6 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 7 sampler slot -1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r2.z, r2.xyxx, r2.xyxx
  12: min r2.z, r2.z, l(1.000000)
  13: add r2.z, -r2.z, l(1.000000)
  14: sqrt r2.z, r2.z
  15: mul r3.xyz, r2.yyyy, v4.xyzx
  16: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  17: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  18: dp3 r2.w, r2.xyzx, r2.xyzx
  19: rsq r2.w, r2.w
  20: mul r2.xyz, r2.wwww, r2.xyzx
  21: dp3 r2.w, v2.xyzx, v2.xyzx
  22: rsq r2.w, r2.w
  23: mul r3.xyz, r2.wwww, v2.xyzx
  24: div r4.xy, v7.xyxx, v7.wwww
  25: sample r4.xyzw, r4.xyxx, t3.xyzw, s6
  26: sample r5.xyzw, v1.xyxx, t4.xyzw, s5
  27: add r3.w, -cb0[9].y, l(1.000000)
  28: mad r3.w, r5.y, cb0[9].y, r3.w
  29: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  30: dp3 r4.z, r3.xyzx, r2.xyzx
  31: add r4.z, r4.z, r4.z
  32: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.xyzx
  33: mov r6.x, v3.w
  34: mov r6.y, v4.w
  35: mov r6.z, v5.w
  36: add r7.xyz, -r6.xyzx, cb1[4].xyzx
  37: mov r8.x, cb4[9].z
  38: mov r8.y, cb4[10].z
  39: mov r8.z, cb4[11].z
  40: dp3 r4.z, r7.xyzx, r8.xyzx
  41: add r7.xyz, r6.xyzx, -cb3[25].xyzx
  42: dp3 r4.w, r7.xyzx, r7.xyzx
  43: sqrt r4.w, r4.w
  44: add r4.w, -r4.z, r4.w
  45: mad r4.z, cb3[25].w, r4.w, r4.z
  46: mad_sat r4.z, r4.z, cb3[24].z, cb3[24].w
  47: add r4.w, -r4.x, l(1.000000)
  48: mad r4.x, r4.z, r4.w, r4.x
  49: mul r4.xzw, r4.xxxx, cb0[2].xxyz
  50: sample r7.xyzw, v6.xyxx, t5.xyzw, s0
  51: lt r5.w, l(0.000000), cb5[2].w
  52: if_nz r5.w
  53:   dp3 r5.w, r5.xyzx, r5.xyzx
  54:   rsq r5.w, r5.w
  55:   mul r8.xyz, r5.wwww, r5.xyzx
  56:   add r9.xyz, -r6.xyzx, cb5[0].xyzx
  57:   div r9.xyz, r9.xyzx, r8.xyzx
  58:   add r10.xyz, -r6.xyzx, cb5[1].xyzx
  59:   div r10.xyz, r10.xyzx, r8.xyzx
  60:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  61:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  62:   min r5.w, r9.y, r9.x
  63:   min r5.w, r9.z, r5.w
  64:   add r9.xyz, r6.xyzx, -cb5[2].xyzx
  65:   mad r8.xyz, r8.xyzx, r5.wwww, r9.xyzx
  66: else 
  67:   mov r8.xyz, r5.xyzx
  68: endif 
  69: mad r5.w, -r4.y, l(0.700000), l(1.700000)
  70: mul r5.w, r4.y, r5.w
  71: mul r5.w, r5.w, l(6.000000)
  72: sample_l r8.xyzw, r8.xyzx, t6.xyzw, s1, r5.w
  73: add r6.w, r8.w, l(-1.000000)
  74: mad r6.w, cb5[3].w, r6.w, l(1.000000)
  75: log r6.w, r6.w
  76: mul r6.w, r6.w, cb5[3].y
  77: exp r6.w, r6.w
  78: mul r6.w, r6.w, cb5[3].x
  79: mul r9.xyz, r8.xyzx, r6.wwww
  80: lt r7.w, cb5[1].w, l(0.999990)
  81: if_nz r7.w
  82:   lt r7.w, l(0.000000), cb5[6].w
  83:   if_nz r7.w
  84:     dp3 r7.w, r5.xyzx, r5.xyzx
  85:     rsq r7.w, r7.w
  86:     mul r10.xyz, r5.xyzx, r7.wwww
  87:     add r11.xyz, -r6.xyzx, cb5[4].xyzx
  88:     div r11.xyz, r11.xyzx, r10.xyzx
  89:     add r12.xyz, -r6.xyzx, cb5[5].xyzx
  90:     div r12.xyz, r12.xyzx, r10.xyzx
  91:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
  92:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  93:     min r7.w, r11.y, r11.x
  94:     min r7.w, r11.z, r7.w
  95:     add r6.xyz, r6.xyzx, -cb5[6].xyzx
  96:     mad r5.xyz, r10.xyzx, r7.wwww, r6.xyzx
  97:   endif 
  98:   sample_l r5.xyzw, r5.xyzx, t7.xyzw, s1, r5.w
  99:   add r5.w, r5.w, l(-1.000000)
 100:   mad r5.w, cb5[7].w, r5.w, l(1.000000)
 101:   log r5.w, r5.w
 102:   mul r5.w, r5.w, cb5[7].y
 103:   exp r5.w, r5.w
 104:   mul r5.w, r5.w, cb5[7].x
 105:   mul r5.xyz, r5.xyzx, r5.wwww
 106:   mad r6.xyz, r6.wwww, r8.xyzx, -r5.xyzx
 107:   mad r9.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
 108: endif 
 109: mul r5.xyz, r3.wwww, r9.xyzx
 110: mad r6.xyz, -v2.xyzx, r2.wwww, cb2[0].xyzx
 111: dp3 r2.w, r6.xyzx, r6.xyzx
 112: max r2.w, r2.w, l(0.001000)
 113: rsq r2.w, r2.w
 114: mul r6.xyz, r2.wwww, r6.xyzx
 115: dp3 r2.w, r2.xyzx, -r3.xyzx
 116: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 117: dp3_sat r2.x, r2.xyzx, r6.xyzx
 118: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 119: mul r2.z, r2.y, r2.y
 120: dp2 r2.z, r2.zzzz, r4.yyyy
 121: add r2.z, r2.z, l(-0.500000)
 122: add r3.y, -r3.x, l(1.000000)
 123: mul r3.z, r3.y, r3.y
 124: mul r3.z, r3.z, r3.z
 125: mul r3.y, r3.y, r3.z
 126: mad r3.y, r2.z, r3.y, l(1.000000)
 127: add r3.z, -|r2.w|, l(1.000000)
 128: mul r5.w, r3.z, r3.z
 129: mul r5.w, r5.w, r5.w
 130: mul r3.z, r3.z, r5.w
 131: mad r2.z, r2.z, r3.z, l(1.000000)
 132: mul r2.z, r2.z, r3.y
 133: mul r3.y, r4.y, r4.y
 134: max r3.y, r3.y, l(0.002000)
 135: add r4.y, -r3.y, l(1.000000)
 136: mad r5.w, |r2.w|, r4.y, r3.y
 137: mad r4.y, r3.x, r4.y, r3.y
 138: mul r2.w, |r2.w|, r4.y
 139: mad r2.w, r3.x, r5.w, r2.w
 140: add r2.w, r2.w, l(0.000010)
 141: div r2.w, l(0.500000), r2.w
 142: mul r4.y, r3.y, r3.y
 143: mad r5.w, r2.x, r4.y, -r2.x
 144: mad r2.x, r5.w, r2.x, l(1.000000)
 145: mul r4.y, r4.y, l(0.318310)
 146: mad r2.x, r2.x, r2.x, l(0.000000)
 147: div r2.x, r4.y, r2.x
 148: mul r2.x, r2.x, r2.w
 149: mul r2.x, r2.x, l(3.141593)
 150: mul r2.xz, r3.xxxx, r2.xxzx
 151: max r2.x, r2.x, l(0.000000)
 152: mad r2.w, r3.y, r3.y, l(1.000000)
 153: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 154: dp3 r3.x, r0.xyzx, r0.xyzx
 155: ne r3.x, r3.x, l(0.000000)
 156: and r3.x, r3.x, l(0x3f800000)
 157: mul r2.x, r2.x, r3.x
 158: mad r0.w, r0.w, cb0[9].x, -r1.w
 159: add_sat r0.w, r0.w, l(1.000000)
 160: mul r6.xyz, r2.zzzz, r4.xzwx
 161: mad r3.xyw, r7.xyxz, r3.wwww, r6.xyxz
 162: mul r4.xyz, r4.xzwx, r2.xxxx
 163: add r1.w, -r2.y, l(1.000000)
 164: mul r2.x, r1.w, r1.w
 165: mul r2.x, r2.x, r2.x
 166: mul r1.w, r1.w, r2.x
 167: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 168: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 169: mul r2.xyz, r2.xyzx, r4.xyzx
 170: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 171: mul r2.xyz, r5.xyzx, r2.wwww
 172: add r3.xyw, -r0.xyxz, r0.wwww
 173: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 174: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 175: mov o0.w, l(1.000000)
 176: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 5 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[68], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  16: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  19: mov r1.w, cb4[0].x
  20: add o2.xyz, r1.xyzx, -cb3[r1.w + 64].xyzx
  21: mov o3.w, r1.x
  22: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  23: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  24: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  25: dp3 r1.x, r2.xyzx, r2.xyzx
  26: rsq r1.x, r1.x
  27: mul r2.xyz, r1.xxxx, r2.xyzx
  28: mov o3.xyz, r2.xyzx
  29: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  30: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  31: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  32: dp3 r1.x, r3.xyzx, r3.xyzx
  33: rsq r1.x, r1.x
  34: mul r3.xyz, r1.xxxx, r3.xyzx
  35: mul r4.xyz, r2.yzxy, r3.zxyz
  36: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r3.xyzx
  38: mul r1.x, v4.w, cb2[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r1.y
  41: mov o5.w, r1.z
  42: mad o6.xy, v3.xyxx, cb5[0].xyxx, cb5[0].zwzz
  43: mov o6.zw, l(0,0,0,0)
  44: mul r0.y, r0.y, cb1[4].x
  45: mul r2.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  46: add r0.xy, r2.zzzz, r2.xwxx
  47: mul r1.xy, r0.wwww, cb3[r1.w + 66].zwzz
  48: mad o7.xy, r0.xyxx, cb3[r1.w + 66].xyxx, r1.xyxx
  49: mov o7.zw, r0.zzzw
  50: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 152 math, 14 temp registers, 6 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 3 sampler slot 6
Set 2D Texture "_OcclusionMap" to slot 4 sampler slot 5
Set 2D Texture "unity_Lightmap" to slot 5 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 6 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 7 sampler slot -1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r2.z, r2.xyxx, r2.xyxx
  12: min r2.z, r2.z, l(1.000000)
  13: add r2.z, -r2.z, l(1.000000)
  14: sqrt r2.z, r2.z
  15: mul r3.xyz, r2.yyyy, v4.xyzx
  16: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  17: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  18: dp3 r2.w, r2.xyzx, r2.xyzx
  19: rsq r2.w, r2.w
  20: mul r2.xyz, r2.wwww, r2.xyzx
  21: dp3 r2.w, v2.xyzx, v2.xyzx
  22: rsq r2.w, r2.w
  23: mul r3.xyz, r2.wwww, v2.xyzx
  24: div r4.xy, v7.xyxx, v7.wwww
  25: sample r4.xyzw, r4.xyxx, t3.xyzw, s6
  26: sample r5.xyzw, v1.xyxx, t4.xyzw, s5
  27: add r3.w, -cb0[9].y, l(1.000000)
  28: mad r3.w, r5.y, cb0[9].y, r3.w
  29: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  30: dp3 r4.z, r3.xyzx, r2.xyzx
  31: add r4.z, r4.z, r4.z
  32: mad r5.xyz, r2.xyzx, -r4.zzzz, r3.xyzx
  33: mov r6.x, v3.w
  34: mov r6.y, v4.w
  35: mov r6.z, v5.w
  36: mov r4.z, cb4[0].x
  37: add r7.xyz, -r6.xyzx, cb3[r4.z + 64].xyzx
  38: ishl r4.z, cb4[0].x, l(2)
  39: mov r8.x, cb3[r4.z + 8].z
  40: mov r8.y, cb3[r4.z + 9].z
  41: mov r8.z, cb3[r4.z + 10].z
  42: dp3 r4.z, r7.xyzx, r8.xyzx
  43: add r7.xyz, r6.xyzx, -cb2[25].xyzx
  44: dp3 r4.w, r7.xyzx, r7.xyzx
  45: sqrt r4.w, r4.w
  46: add r4.w, -r4.z, r4.w
  47: mad r4.z, cb2[25].w, r4.w, r4.z
  48: mad_sat r4.z, r4.z, cb2[24].z, cb2[24].w
  49: add r4.w, -r4.x, l(1.000000)
  50: mad r4.x, r4.z, r4.w, r4.x
  51: mul r4.xzw, r4.xxxx, cb0[2].xxyz
  52: sample r7.xyzw, v6.xyxx, t5.xyzw, s0
  53: lt r5.w, l(0.000000), cb5[2].w
  54: if_nz r5.w
  55:   dp3 r5.w, r5.xyzx, r5.xyzx
  56:   rsq r5.w, r5.w
  57:   mul r8.xyz, r5.wwww, r5.xyzx
  58:   add r9.xyz, -r6.xyzx, cb5[0].xyzx
  59:   div r9.xyz, r9.xyzx, r8.xyzx
  60:   add r10.xyz, -r6.xyzx, cb5[1].xyzx
  61:   div r10.xyz, r10.xyzx, r8.xyzx
  62:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  63:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  64:   min r5.w, r9.y, r9.x
  65:   min r5.w, r9.z, r5.w
  66:   add r9.xyz, r6.xyzx, -cb5[2].xyzx
  67:   mad r8.xyz, r8.xyzx, r5.wwww, r9.xyzx
  68: else 
  69:   mov r8.xyz, r5.xyzx
  70: endif 
  71: mad r5.w, -r4.y, l(0.700000), l(1.700000)
  72: mul r5.w, r4.y, r5.w
  73: mul r5.w, r5.w, l(6.000000)
  74: sample_l r8.xyzw, r8.xyzx, t6.xyzw, s1, r5.w
  75: add r6.w, r8.w, l(-1.000000)
  76: mad r6.w, cb5[3].w, r6.w, l(1.000000)
  77: log r6.w, r6.w
  78: mul r6.w, r6.w, cb5[3].y
  79: exp r6.w, r6.w
  80: mul r6.w, r6.w, cb5[3].x
  81: mul r9.xyz, r8.xyzx, r6.wwww
  82: lt r7.w, cb5[1].w, l(0.999990)
  83: if_nz r7.w
  84:   lt r7.w, l(0.000000), cb5[6].w
  85:   if_nz r7.w
  86:     dp3 r7.w, r5.xyzx, r5.xyzx
  87:     rsq r7.w, r7.w
  88:     mul r10.xyz, r5.xyzx, r7.wwww
  89:     add r11.xyz, -r6.xyzx, cb5[4].xyzx
  90:     div r11.xyz, r11.xyzx, r10.xyzx
  91:     add r12.xyz, -r6.xyzx, cb5[5].xyzx
  92:     div r12.xyz, r12.xyzx, r10.xyzx
  93:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
  94:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
  95:     min r7.w, r11.y, r11.x
  96:     min r7.w, r11.z, r7.w
  97:     add r6.xyz, r6.xyzx, -cb5[6].xyzx
  98:     mad r5.xyz, r10.xyzx, r7.wwww, r6.xyzx
  99:   endif 
 100:   sample_l r5.xyzw, r5.xyzx, t7.xyzw, s1, r5.w
 101:   add r5.w, r5.w, l(-1.000000)
 102:   mad r5.w, cb5[7].w, r5.w, l(1.000000)
 103:   log r5.w, r5.w
 104:   mul r5.w, r5.w, cb5[7].y
 105:   exp r5.w, r5.w
 106:   mul r5.w, r5.w, cb5[7].x
 107:   mul r5.xyz, r5.xyzx, r5.wwww
 108:   mad r6.xyz, r6.wwww, r8.xyzx, -r5.xyzx
 109:   mad r9.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
 110: endif 
 111: mul r5.xyz, r3.wwww, r9.xyzx
 112: mad r6.xyz, -v2.xyzx, r2.wwww, cb1[0].xyzx
 113: dp3 r2.w, r6.xyzx, r6.xyzx
 114: max r2.w, r2.w, l(0.001000)
 115: rsq r2.w, r2.w
 116: mul r6.xyz, r2.wwww, r6.xyzx
 117: dp3 r2.w, r2.xyzx, -r3.xyzx
 118: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 119: dp3_sat r2.x, r2.xyzx, r6.xyzx
 120: dp3_sat r2.y, cb1[0].xyzx, r6.xyzx
 121: mul r2.z, r2.y, r2.y
 122: dp2 r2.z, r2.zzzz, r4.yyyy
 123: add r2.z, r2.z, l(-0.500000)
 124: add r3.y, -r3.x, l(1.000000)
 125: mul r3.z, r3.y, r3.y
 126: mul r3.z, r3.z, r3.z
 127: mul r3.y, r3.y, r3.z
 128: mad r3.y, r2.z, r3.y, l(1.000000)
 129: add r3.z, -|r2.w|, l(1.000000)
 130: mul r5.w, r3.z, r3.z
 131: mul r5.w, r5.w, r5.w
 132: mul r3.z, r3.z, r5.w
 133: mad r2.z, r2.z, r3.z, l(1.000000)
 134: mul r2.z, r2.z, r3.y
 135: mul r3.y, r4.y, r4.y
 136: max r3.y, r3.y, l(0.002000)
 137: add r4.y, -r3.y, l(1.000000)
 138: mad r5.w, |r2.w|, r4.y, r3.y
 139: mad r4.y, r3.x, r4.y, r3.y
 140: mul r2.w, |r2.w|, r4.y
 141: mad r2.w, r3.x, r5.w, r2.w
 142: add r2.w, r2.w, l(0.000010)
 143: div r2.w, l(0.500000), r2.w
 144: mul r4.y, r3.y, r3.y
 145: mad r5.w, r2.x, r4.y, -r2.x
 146: mad r2.x, r5.w, r2.x, l(1.000000)
 147: mul r4.y, r4.y, l(0.318310)
 148: mad r2.x, r2.x, r2.x, l(0.000000)
 149: div r2.x, r4.y, r2.x
 150: mul r2.x, r2.x, r2.w
 151: mul r2.x, r2.x, l(3.141593)
 152: mul r2.xz, r3.xxxx, r2.xxzx
 153: max r2.x, r2.x, l(0.000000)
 154: mad r2.w, r3.y, r3.y, l(1.000000)
 155: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 156: dp3 r3.x, r0.xyzx, r0.xyzx
 157: ne r3.x, r3.x, l(0.000000)
 158: and r3.x, r3.x, l(0x3f800000)
 159: mul r2.x, r2.x, r3.x
 160: mad r0.w, r0.w, cb0[9].x, -r1.w
 161: add_sat r0.w, r0.w, l(1.000000)
 162: mul r6.xyz, r2.zzzz, r4.xzwx
 163: mad r3.xyw, r7.xyxz, r3.wwww, r6.xyxz
 164: mul r4.xyz, r4.xzwx, r2.xxxx
 165: add r1.w, -r2.y, l(1.000000)
 166: mul r2.x, r1.w, r1.w
 167: mul r2.x, r2.x, r2.x
 168: mul r1.w, r1.w, r2.x
 169: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 170: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 171: mul r2.xyz, r2.xyzx, r4.xyzx
 172: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 173: mul r2.xyz, r5.xyzx, r2.wwww
 174: add r3.xyw, -r0.xyxz, r0.wwww
 175: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 176: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 177: mov o0.w, l(1.000000)
 178: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul o5.xyz, r1.wwww, r1.xyzx
  29: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  30: mov o6.zw, l(0,0,0,0)
  31: mul r0.y, r0.y, cb1[5].x
  32: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  33: mov o7.zw, r0.zzzw
  34: add o7.xy, r1.zzzz, r1.xwxx
  35: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 141 math, 13 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set 2D Texture "unity_Lightmap" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r2.xyz, r1.wwww, v2.xyzx
  12: div r3.xy, v7.xyxx, v7.wwww
  13: sample r3.xyzw, r3.xyxx, t1.xyzw, s4
  14: sample r4.xyzw, v1.xyxx, t2.xyzw, s3
  15: add r2.w, -cb0[9].y, l(1.000000)
  16: mad r2.w, r4.y, cb0[9].y, r2.w
  17: add r3.y, -cb0[8].w, l(1.000000)
  18: dp3 r3.z, r2.xyzx, r1.xyzx
  19: add r3.z, r3.z, r3.z
  20: mad r4.xyz, r1.xyzx, -r3.zzzz, r2.xyzx
  21: mov r5.x, v3.w
  22: mov r5.y, v4.w
  23: mov r5.z, v5.w
  24: add r6.xyz, -r5.xyzx, cb1[4].xyzx
  25: mov r7.x, cb4[9].z
  26: mov r7.y, cb4[10].z
  27: mov r7.z, cb4[11].z
  28: dp3 r3.z, r6.xyzx, r7.xyzx
  29: add r6.xyz, r5.xyzx, -cb3[25].xyzx
  30: dp3 r3.w, r6.xyzx, r6.xyzx
  31: sqrt r3.w, r3.w
  32: add r3.w, -r3.z, r3.w
  33: mad r3.z, cb3[25].w, r3.w, r3.z
  34: mad_sat r3.z, r3.z, cb3[24].z, cb3[24].w
  35: add r3.w, -r3.x, l(1.000000)
  36: mad r3.x, r3.z, r3.w, r3.x
  37: mul r3.xzw, r3.xxxx, cb0[2].xxyz
  38: sample r6.xyzw, v6.xyxx, t3.xyzw, s0
  39: lt r4.w, l(0.000000), cb5[2].w
  40: if_nz r4.w
  41:   dp3 r4.w, r4.xyzx, r4.xyzx
  42:   rsq r4.w, r4.w
  43:   mul r7.xyz, r4.wwww, r4.xyzx
  44:   add r8.xyz, -r5.xyzx, cb5[0].xyzx
  45:   div r8.xyz, r8.xyzx, r7.xyzx
  46:   add r9.xyz, -r5.xyzx, cb5[1].xyzx
  47:   div r9.xyz, r9.xyzx, r7.xyzx
  48:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  49:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  50:   min r4.w, r8.y, r8.x
  51:   min r4.w, r8.z, r4.w
  52:   add r8.xyz, r5.xyzx, -cb5[2].xyzx
  53:   mad r7.xyz, r7.xyzx, r4.wwww, r8.xyzx
  54: else 
  55:   mov r7.xyz, r4.xyzx
  56: endif 
  57: mad r4.w, -r3.y, l(0.700000), l(1.700000)
  58: mul r4.w, r3.y, r4.w
  59: mul r4.w, r4.w, l(6.000000)
  60: sample_l r7.xyzw, r7.xyzx, t4.xyzw, s1, r4.w
  61: add r5.w, r7.w, l(-1.000000)
  62: mad r5.w, cb5[3].w, r5.w, l(1.000000)
  63: log r5.w, r5.w
  64: mul r5.w, r5.w, cb5[3].y
  65: exp r5.w, r5.w
  66: mul r5.w, r5.w, cb5[3].x
  67: mul r8.xyz, r7.xyzx, r5.wwww
  68: lt r6.w, cb5[1].w, l(0.999990)
  69: if_nz r6.w
  70:   lt r6.w, l(0.000000), cb5[6].w
  71:   if_nz r6.w
  72:     dp3 r6.w, r4.xyzx, r4.xyzx
  73:     rsq r6.w, r6.w
  74:     mul r9.xyz, r4.xyzx, r6.wwww
  75:     add r10.xyz, -r5.xyzx, cb5[4].xyzx
  76:     div r10.xyz, r10.xyzx, r9.xyzx
  77:     add r11.xyz, -r5.xyzx, cb5[5].xyzx
  78:     div r11.xyz, r11.xyzx, r9.xyzx
  79:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  80:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  81:     min r6.w, r10.y, r10.x
  82:     min r6.w, r10.z, r6.w
  83:     add r5.xyz, r5.xyzx, -cb5[6].xyzx
  84:     mad r4.xyz, r9.xyzx, r6.wwww, r5.xyzx
  85:   endif 
  86:   sample_l r4.xyzw, r4.xyzx, t5.xyzw, s1, r4.w
  87:   add r4.w, r4.w, l(-1.000000)
  88:   mad r4.w, cb5[7].w, r4.w, l(1.000000)
  89:   log r4.w, r4.w
  90:   mul r4.w, r4.w, cb5[7].y
  91:   exp r4.w, r4.w
  92:   mul r4.w, r4.w, cb5[7].x
  93:   mul r4.xyz, r4.xyzx, r4.wwww
  94:   mad r5.xyz, r5.wwww, r7.xyzx, -r4.xyzx
  95:   mad r8.xyz, cb5[1].wwww, r5.xyzx, r4.xyzx
  96: endif 
  97: mul r4.xyz, r2.wwww, r8.xyzx
  98: mad r5.xyz, -v2.xyzx, r1.wwww, cb2[0].xyzx
  99: dp3 r1.w, r5.xyzx, r5.xyzx
 100: max r1.w, r1.w, l(0.001000)
 101: rsq r1.w, r1.w
 102: mul r5.xyz, r1.wwww, r5.xyzx
 103: dp3 r1.w, r1.xyzx, -r2.xyzx
 104: dp3_sat r2.x, r1.xyzx, cb2[0].xyzx
 105: dp3_sat r1.x, r1.xyzx, r5.xyzx
 106: dp3_sat r1.y, cb2[0].xyzx, r5.xyzx
 107: mul r1.z, r1.y, r1.y
 108: dp2 r1.z, r1.zzzz, r3.yyyy
 109: add r1.z, r1.z, l(-0.500000)
 110: add r2.y, -r2.x, l(1.000000)
 111: mul r2.z, r2.y, r2.y
 112: mul r2.z, r2.z, r2.z
 113: mul r2.y, r2.y, r2.z
 114: mad r2.y, r1.z, r2.y, l(1.000000)
 115: add r2.z, -|r1.w|, l(1.000000)
 116: mul r4.w, r2.z, r2.z
 117: mul r4.w, r4.w, r4.w
 118: mul r2.z, r2.z, r4.w
 119: mad r1.z, r1.z, r2.z, l(1.000000)
 120: mul r1.z, r1.z, r2.y
 121: mul r2.y, r3.y, r3.y
 122: max r2.y, r2.y, l(0.002000)
 123: add r3.y, -r2.y, l(1.000000)
 124: mad r4.w, |r1.w|, r3.y, r2.y
 125: mad r3.y, r2.x, r3.y, r2.y
 126: mul r1.w, |r1.w|, r3.y
 127: mad r1.w, r2.x, r4.w, r1.w
 128: add r1.w, r1.w, l(0.000010)
 129: div r1.w, l(0.500000), r1.w
 130: mul r3.y, r2.y, r2.y
 131: mad r4.w, r1.x, r3.y, -r1.x
 132: mad r1.x, r4.w, r1.x, l(1.000000)
 133: mul r3.y, r3.y, l(0.318310)
 134: mad r1.x, r1.x, r1.x, l(0.000000)
 135: div r1.x, r3.y, r1.x
 136: mul r1.x, r1.x, r1.w
 137: mul r1.x, r1.x, l(3.141593)
 138: mul r1.xz, r2.xxxx, r1.xxzx
 139: max r1.x, r1.x, l(0.000000)
 140: mad r1.w, r2.y, r2.y, l(1.000000)
 141: div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
 142: dp3 r2.x, cb0[3].xyzx, cb0[3].xyzx
 143: ne r2.x, r2.x, l(0.000000)
 144: and r2.x, r2.x, l(0x3f800000)
 145: mul r1.x, r1.x, r2.x
 146: add r0.w, -r0.w, l(1.000000)
 147: add_sat r0.w, r0.w, cb0[8].w
 148: mul r5.xyz, r1.zzzz, r3.xzwx
 149: mad r2.xyw, r6.xyxz, r2.wwww, r5.xyxz
 150: mul r3.xyz, r3.xzwx, r1.xxxx
 151: add r1.x, -r1.y, l(1.000000)
 152: mul r1.y, r1.x, r1.x
 153: mul r1.y, r1.y, r1.y
 154: mul r1.x, r1.x, r1.y
 155: add r5.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 156: mad r1.xyz, r5.xyzx, r1.xxxx, cb0[3].xyzx
 157: mul r1.xyz, r1.xyzx, r3.xyzx
 158: mad r0.xyz, r0.xyzx, r2.xywx, r1.xyzx
 159: mul r1.xyz, r4.xyzx, r1.wwww
 160: add r2.xyw, r0.wwww, -cb0[3].xyxz
 161: mad r2.xyz, r2.zzzz, r2.xywx, cb0[3].xyzx
 162: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
 163: mov o0.w, l(1.000000)
 164: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 5 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[68], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  16: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  19: mov r2.x, cb4[0].x
  20: add o2.xyz, r1.xyzx, -cb3[r2.x + 64].xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mad o6.xy, v3.xyxx, cb5[0].xyxx, cb5[0].zwzz
  32: mov o6.zw, l(0,0,0,0)
  33: mul r0.y, r0.y, cb1[4].x
  34: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  35: add r0.xy, r1.zzzz, r1.xwxx
  36: mul r1.xy, r0.wwww, cb3[r2.x + 66].zwzz
  37: mad o7.xy, r0.xyxx, cb3[r2.x + 66].xyxx, r1.xyxx
  38: mov o7.zw, r0.zzzw
  39: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 142 math, 13 temp registers, 4 textures, 4 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 3
Set 2D Texture "unity_Lightmap" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 13
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: dp3 r1.w, v2.xyzx, v2.xyzx
  10: rsq r1.w, r1.w
  11: mul r2.xyz, r1.wwww, v2.xyzx
  12: div r3.xy, v7.xyxx, v7.wwww
  13: sample r3.xyzw, r3.xyxx, t1.xyzw, s4
  14: sample r4.xyzw, v1.xyxx, t2.xyzw, s3
  15: add r2.w, -cb0[9].y, l(1.000000)
  16: mad r2.w, r4.y, cb0[9].y, r2.w
  17: add r3.y, -cb0[8].w, l(1.000000)
  18: dp3 r3.z, r2.xyzx, r1.xyzx
  19: add r3.z, r3.z, r3.z
  20: mad r4.xyz, r1.xyzx, -r3.zzzz, r2.xyzx
  21: mov r5.x, v3.w
  22: mov r5.y, v4.w
  23: mov r5.z, v5.w
  24: mov r3.z, cb4[0].x
  25: add r6.xyz, -r5.xyzx, cb3[r3.z + 64].xyzx
  26: ishl r3.z, cb4[0].x, l(2)
  27: mov r7.x, cb3[r3.z + 8].z
  28: mov r7.y, cb3[r3.z + 9].z
  29: mov r7.z, cb3[r3.z + 10].z
  30: dp3 r3.z, r6.xyzx, r7.xyzx
  31: add r6.xyz, r5.xyzx, -cb2[25].xyzx
  32: dp3 r3.w, r6.xyzx, r6.xyzx
  33: sqrt r3.w, r3.w
  34: add r3.w, -r3.z, r3.w
  35: mad r3.z, cb2[25].w, r3.w, r3.z
  36: mad_sat r3.z, r3.z, cb2[24].z, cb2[24].w
  37: add r3.w, -r3.x, l(1.000000)
  38: mad r3.x, r3.z, r3.w, r3.x
  39: mul r3.xzw, r3.xxxx, cb0[2].xxyz
  40: sample r6.xyzw, v6.xyxx, t3.xyzw, s0
  41: lt r4.w, l(0.000000), cb5[2].w
  42: if_nz r4.w
  43:   dp3 r4.w, r4.xyzx, r4.xyzx
  44:   rsq r4.w, r4.w
  45:   mul r7.xyz, r4.wwww, r4.xyzx
  46:   add r8.xyz, -r5.xyzx, cb5[0].xyzx
  47:   div r8.xyz, r8.xyzx, r7.xyzx
  48:   add r9.xyz, -r5.xyzx, cb5[1].xyzx
  49:   div r9.xyz, r9.xyzx, r7.xyzx
  50:   lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  51:   movc r8.xyz, r10.xyzx, r8.xyzx, r9.xyzx
  52:   min r4.w, r8.y, r8.x
  53:   min r4.w, r8.z, r4.w
  54:   add r8.xyz, r5.xyzx, -cb5[2].xyzx
  55:   mad r7.xyz, r7.xyzx, r4.wwww, r8.xyzx
  56: else 
  57:   mov r7.xyz, r4.xyzx
  58: endif 
  59: mad r4.w, -r3.y, l(0.700000), l(1.700000)
  60: mul r4.w, r3.y, r4.w
  61: mul r4.w, r4.w, l(6.000000)
  62: sample_l r7.xyzw, r7.xyzx, t4.xyzw, s1, r4.w
  63: add r5.w, r7.w, l(-1.000000)
  64: mad r5.w, cb5[3].w, r5.w, l(1.000000)
  65: log r5.w, r5.w
  66: mul r5.w, r5.w, cb5[3].y
  67: exp r5.w, r5.w
  68: mul r5.w, r5.w, cb5[3].x
  69: mul r8.xyz, r7.xyzx, r5.wwww
  70: lt r6.w, cb5[1].w, l(0.999990)
  71: if_nz r6.w
  72:   lt r6.w, l(0.000000), cb5[6].w
  73:   if_nz r6.w
  74:     dp3 r6.w, r4.xyzx, r4.xyzx
  75:     rsq r6.w, r6.w
  76:     mul r9.xyz, r4.xyzx, r6.wwww
  77:     add r10.xyz, -r5.xyzx, cb5[4].xyzx
  78:     div r10.xyz, r10.xyzx, r9.xyzx
  79:     add r11.xyz, -r5.xyzx, cb5[5].xyzx
  80:     div r11.xyz, r11.xyzx, r9.xyzx
  81:     lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  82:     movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  83:     min r6.w, r10.y, r10.x
  84:     min r6.w, r10.z, r6.w
  85:     add r5.xyz, r5.xyzx, -cb5[6].xyzx
  86:     mad r4.xyz, r9.xyzx, r6.wwww, r5.xyzx
  87:   endif 
  88:   sample_l r4.xyzw, r4.xyzx, t5.xyzw, s1, r4.w
  89:   add r4.w, r4.w, l(-1.000000)
  90:   mad r4.w, cb5[7].w, r4.w, l(1.000000)
  91:   log r4.w, r4.w
  92:   mul r4.w, r4.w, cb5[7].y
  93:   exp r4.w, r4.w
  94:   mul r4.w, r4.w, cb5[7].x
  95:   mul r4.xyz, r4.xyzx, r4.wwww
  96:   mad r5.xyz, r5.wwww, r7.xyzx, -r4.xyzx
  97:   mad r8.xyz, cb5[1].wwww, r5.xyzx, r4.xyzx
  98: endif 
  99: mul r4.xyz, r2.wwww, r8.xyzx
 100: mad r5.xyz, -v2.xyzx, r1.wwww, cb1[0].xyzx
 101: dp3 r1.w, r5.xyzx, r5.xyzx
 102: max r1.w, r1.w, l(0.001000)
 103: rsq r1.w, r1.w
 104: mul r5.xyz, r1.wwww, r5.xyzx
 105: dp3 r1.w, r1.xyzx, -r2.xyzx
 106: dp3_sat r2.x, r1.xyzx, cb1[0].xyzx
 107: dp3_sat r1.x, r1.xyzx, r5.xyzx
 108: dp3_sat r1.y, cb1[0].xyzx, r5.xyzx
 109: mul r1.z, r1.y, r1.y
 110: dp2 r1.z, r1.zzzz, r3.yyyy
 111: add r1.z, r1.z, l(-0.500000)
 112: add r2.y, -r2.x, l(1.000000)
 113: mul r2.z, r2.y, r2.y
 114: mul r2.z, r2.z, r2.z
 115: mul r2.y, r2.y, r2.z
 116: mad r2.y, r1.z, r2.y, l(1.000000)
 117: add r2.z, -|r1.w|, l(1.000000)
 118: mul r4.w, r2.z, r2.z
 119: mul r4.w, r4.w, r4.w
 120: mul r2.z, r2.z, r4.w
 121: mad r1.z, r1.z, r2.z, l(1.000000)
 122: mul r1.z, r1.z, r2.y
 123: mul r2.y, r3.y, r3.y
 124: max r2.y, r2.y, l(0.002000)
 125: add r3.y, -r2.y, l(1.000000)
 126: mad r4.w, |r1.w|, r3.y, r2.y
 127: mad r3.y, r2.x, r3.y, r2.y
 128: mul r1.w, |r1.w|, r3.y
 129: mad r1.w, r2.x, r4.w, r1.w
 130: add r1.w, r1.w, l(0.000010)
 131: div r1.w, l(0.500000), r1.w
 132: mul r3.y, r2.y, r2.y
 133: mad r4.w, r1.x, r3.y, -r1.x
 134: mad r1.x, r4.w, r1.x, l(1.000000)
 135: mul r3.y, r3.y, l(0.318310)
 136: mad r1.x, r1.x, r1.x, l(0.000000)
 137: div r1.x, r3.y, r1.x
 138: mul r1.x, r1.x, r1.w
 139: mul r1.x, r1.x, l(3.141593)
 140: mul r1.xz, r2.xxxx, r1.xxzx
 141: max r1.x, r1.x, l(0.000000)
 142: mad r1.w, r2.y, r2.y, l(1.000000)
 143: div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
 144: dp3 r2.x, cb0[3].xyzx, cb0[3].xyzx
 145: ne r2.x, r2.x, l(0.000000)
 146: and r2.x, r2.x, l(0x3f800000)
 147: mul r1.x, r1.x, r2.x
 148: add r0.w, -r0.w, l(1.000000)
 149: add_sat r0.w, r0.w, cb0[8].w
 150: mul r5.xyz, r1.zzzz, r3.xzwx
 151: mad r2.xyw, r6.xyxz, r2.wwww, r5.xyxz
 152: mul r3.xyz, r3.xzwx, r1.xxxx
 153: add r1.x, -r1.y, l(1.000000)
 154: mul r1.y, r1.x, r1.x
 155: mul r1.y, r1.y, r1.y
 156: mul r1.x, r1.x, r1.y
 157: add r5.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 158: mad r1.xyz, r5.xyzx, r1.xxxx, cb0[3].xyzx
 159: mul r1.xyz, r1.xyzx, r3.xyzx
 160: mad r0.xyz, r0.xyzx, r2.xywx, r1.xyzx
 161: mul r1.xyz, r4.xyzx, r1.wwww
 162: add r2.xyw, r0.wwww, -cb0[3].xyxz
 163: mad r2.xyz, r2.zzzz, r2.xywx, cb0[3].xyzx
 164: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
 165: mov o0.w, l(1.000000)
 166: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul o5.xyz, r1.wwww, r1.xyzx
  29: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  30: mov o6.zw, l(0,0,0,0)
  31: mul r0.y, r0.y, cb1[5].x
  32: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  33: mov o7.zw, r0.zzzw
  34: add o7.xy, r1.zzzz, r1.xwxx
  35: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 172 math, 15 temp registers, 8 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 6
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 5
Set 2D Texture "unity_Lightmap" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r3.x, v2.xyzx, v2.xyzx
  11: rsq r3.x, r3.x
  12: mul r3.yzw, r3.xxxx, v2.xxyz
  13: div r4.xy, v7.xyxx, v7.wwww
  14: sample r4.xyzw, r4.xyxx, t2.xyzw, s6
  15: sample r5.xyzw, v1.xyxx, t3.xyzw, s5
  16: add r4.y, -cb0[9].y, l(1.000000)
  17: mad r4.y, r5.y, cb0[9].y, r4.y
  18: mad r4.z, -r0.w, cb0[9].x, l(1.000000)
  19: dp3 r4.w, r3.yzwy, r2.xyzx
  20: add r4.w, r4.w, r4.w
  21: mad r5.xyz, r2.xyzx, -r4.wwww, r3.yzwy
  22: mov r6.x, v3.w
  23: mov r6.y, v4.w
  24: mov r6.z, v5.w
  25: add r7.xyz, -r6.xyzx, cb1[4].xyzx
  26: mov r8.x, cb4[9].z
  27: mov r8.y, cb4[10].z
  28: mov r8.z, cb4[11].z
  29: dp3 r4.w, r7.xyzx, r8.xyzx
  30: add r7.xyz, r6.xyzx, -cb3[25].xyzx
  31: dp3 r5.w, r7.xyzx, r7.xyzx
  32: sqrt r5.w, r5.w
  33: add r5.w, -r4.w, r5.w
  34: mad r4.w, cb3[25].w, r5.w, r4.w
  35: mad_sat r4.w, r4.w, cb3[24].z, cb3[24].w
  36: add r5.w, -r4.x, l(1.000000)
  37: mad r4.x, r4.w, r5.w, r4.x
  38: mul r7.xyz, r4.xxxx, cb0[2].xyzx
  39: eq r4.x, cb6[0].x, l(1.000000)
  40: if_nz r4.x
  41:   eq r4.x, cb6[0].y, l(1.000000)
  42:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  43:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  44:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  45:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  46:   movc r8.xyz, r4.xxxx, r8.xyzx, r6.xyzx
  47:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  48:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  49:   mul r4.x, r8.y, l(0.250000)
  50:   mul r4.w, cb6[0].z, l(0.500000)
  51:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  52:   max r4.x, r4.w, r4.x
  53:   min r8.x, r5.w, r4.x
  54:   sample r9.xyzw, r8.xzwx, t7.xyzw, s2
  55:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  56:   sample r10.xyzw, r10.xyzx, t7.xyzw, s2
  57:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  58:   sample r8.xyzw, r8.xyzx, t7.xyzw, s2
  59:   mov r2.w, l(1.000000)
  60:   dp4 r9.x, r9.xyzw, r2.xyzw
  61:   dp4 r9.y, r10.xyzw, r2.xyzw
  62:   dp4 r9.z, r8.xyzw, r2.xyzw
  63: else 
  64:   mov r2.w, l(1.000000)
  65:   dp4 r9.x, cb2[39].xyzw, r2.xyzw
  66:   dp4 r9.y, cb2[40].xyzw, r2.xyzw
  67:   dp4 r9.z, cb2[41].xyzw, r2.xyzw
  68: endif 
  69: mul r8.xyzw, r2.yzzx, r2.xyzz
  70: dp4 r10.x, cb2[42].xyzw, r8.xyzw
  71: dp4 r10.y, cb2[43].xyzw, r8.xyzw
  72: dp4 r10.z, cb2[44].xyzw, r8.xyzw
  73: mul r2.w, r2.y, r2.y
  74: mad r2.w, r2.x, r2.x, -r2.w
  75: mad r8.xyz, cb2[45].xyzx, r2.wwww, r10.xyzx
  76: add r8.xyz, r8.xyzx, r9.xyzx
  77: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  78: sample r9.xyzw, v6.xyxx, t4.xyzw, s0
  79: add r8.xyz, r8.xyzx, r9.xyzx
  80: lt r2.w, l(0.000000), cb5[2].w
  81: if_nz r2.w
  82:   dp3 r2.w, r5.xyzx, r5.xyzx
  83:   rsq r2.w, r2.w
  84:   mul r9.xyz, r2.wwww, r5.xyzx
  85:   add r10.xyz, -r6.xyzx, cb5[0].xyzx
  86:   div r10.xyz, r10.xyzx, r9.xyzx
  87:   add r11.xyz, -r6.xyzx, cb5[1].xyzx
  88:   div r11.xyz, r11.xyzx, r9.xyzx
  89:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  90:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  91:   min r2.w, r10.y, r10.x
  92:   min r2.w, r10.z, r2.w
  93:   add r10.xyz, r6.xyzx, -cb5[2].xyzx
  94:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
  95: else 
  96:   mov r9.xyz, r5.xyzx
  97: endif 
  98: mad r2.w, -r4.z, l(0.700000), l(1.700000)
  99: mul r2.w, r2.w, r4.z
 100: mul r2.w, r2.w, l(6.000000)
 101: sample_l r9.xyzw, r9.xyzx, t5.xyzw, s1, r2.w
 102: add r4.x, r9.w, l(-1.000000)
 103: mad r4.x, cb5[3].w, r4.x, l(1.000000)
 104: log r4.x, r4.x
 105: mul r4.x, r4.x, cb5[3].y
 106: exp r4.x, r4.x
 107: mul r4.x, r4.x, cb5[3].x
 108: mul r10.xyz, r9.xyzx, r4.xxxx
 109: lt r4.w, cb5[1].w, l(0.999990)
 110: if_nz r4.w
 111:   lt r4.w, l(0.000000), cb5[6].w
 112:   if_nz r4.w
 113:     dp3 r4.w, r5.xyzx, r5.xyzx
 114:     rsq r4.w, r4.w
 115:     mul r11.xyz, r4.wwww, r5.xyzx
 116:     add r12.xyz, -r6.xyzx, cb5[4].xyzx
 117:     div r12.xyz, r12.xyzx, r11.xyzx
 118:     add r13.xyz, -r6.xyzx, cb5[5].xyzx
 119:     div r13.xyz, r13.xyzx, r11.xyzx
 120:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 121:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 122:     min r4.w, r12.y, r12.x
 123:     min r4.w, r12.z, r4.w
 124:     add r6.xyz, r6.xyzx, -cb5[6].xyzx
 125:     mad r5.xyz, r11.xyzx, r4.wwww, r6.xyzx
 126:   endif 
 127:   sample_l r5.xyzw, r5.xyzx, t6.xyzw, s1, r2.w
 128:   add r2.w, r5.w, l(-1.000000)
 129:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 130:   log r2.w, r2.w
 131:   mul r2.w, r2.w, cb5[7].y
 132:   exp r2.w, r2.w
 133:   mul r2.w, r2.w, cb5[7].x
 134:   mul r5.xyz, r5.xyzx, r2.wwww
 135:   mad r6.xyz, r4.xxxx, r9.xyzx, -r5.xyzx
 136:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
 137: endif 
 138: mul r5.xyz, r4.yyyy, r10.xyzx
 139: mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
 140: dp3 r2.w, r6.xyzx, r6.xyzx
 141: max r2.w, r2.w, l(0.001000)
 142: rsq r2.w, r2.w
 143: mul r6.xyz, r2.wwww, r6.xyzx
 144: dp3 r2.w, r2.xyzx, -r3.yzwy
 145: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 146: dp3_sat r2.x, r2.xyzx, r6.xyzx
 147: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 148: mul r2.z, r2.y, r2.y
 149: dp2 r2.z, r2.zzzz, r4.zzzz
 150: add r2.z, r2.z, l(-0.500000)
 151: add r3.y, -r3.x, l(1.000000)
 152: mul r3.z, r3.y, r3.y
 153: mul r3.z, r3.z, r3.z
 154: mul r3.y, r3.y, r3.z
 155: mad r3.y, r2.z, r3.y, l(1.000000)
 156: add r3.z, -|r2.w|, l(1.000000)
 157: mul r3.w, r3.z, r3.z
 158: mul r3.w, r3.w, r3.w
 159: mul r3.z, r3.z, r3.w
 160: mad r2.z, r2.z, r3.z, l(1.000000)
 161: mul r2.z, r2.z, r3.y
 162: mul r3.y, r4.z, r4.z
 163: max r3.y, r3.y, l(0.002000)
 164: add r3.w, -r3.y, l(1.000000)
 165: mad r4.x, |r2.w|, r3.w, r3.y
 166: mad r3.w, r3.x, r3.w, r3.y
 167: mul r2.w, |r2.w|, r3.w
 168: mad r2.w, r3.x, r4.x, r2.w
 169: add r2.w, r2.w, l(0.000010)
 170: div r2.w, l(0.500000), r2.w
 171: mul r3.w, r3.y, r3.y
 172: mad r4.x, r2.x, r3.w, -r2.x
 173: mad r2.x, r4.x, r2.x, l(1.000000)
 174: mul r3.w, r3.w, l(0.318310)
 175: mad r2.x, r2.x, r2.x, l(0.000000)
 176: div r2.x, r3.w, r2.x
 177: mul r2.x, r2.x, r2.w
 178: mul r2.x, r2.x, l(3.141593)
 179: mul r2.xz, r3.xxxx, r2.xxzx
 180: max r2.x, r2.x, l(0.000000)
 181: mad r2.w, r3.y, r3.y, l(1.000000)
 182: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 183: dp3 r3.x, r0.xyzx, r0.xyzx
 184: ne r3.x, r3.x, l(0.000000)
 185: and r3.x, r3.x, l(0x3f800000)
 186: mul r2.x, r2.x, r3.x
 187: mad r0.w, r0.w, cb0[9].x, -r1.w
 188: add_sat r0.w, r0.w, l(1.000000)
 189: mul r3.xyw, r2.zzzz, r7.xyxz
 190: mad r3.xyw, r8.xyxz, r4.yyyy, r3.xyxw
 191: mul r4.xyz, r7.xyzx, r2.xxxx
 192: add r1.w, -r2.y, l(1.000000)
 193: mul r2.x, r1.w, r1.w
 194: mul r2.x, r2.x, r2.x
 195: mul r1.w, r1.w, r2.x
 196: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 197: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 198: mul r2.xyz, r2.xyzx, r4.xyzx
 199: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 200: mul r2.xyz, r5.xyzx, r2.wwww
 201: add r3.xyw, -r0.xyxz, r0.wwww
 202: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 203: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 204: mov o0.w, l(1.000000)
 205: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON LIGHTPROBE_SH SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 5 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[68], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  16: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  19: mov r2.x, cb4[0].x
  20: add o2.xyz, r1.xyzx, -cb3[r2.x + 64].xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mad o6.xy, v3.xyxx, cb5[0].xyxx, cb5[0].zwzz
  32: mov o6.zw, l(0,0,0,0)
  33: mul r0.y, r0.y, cb1[4].x
  34: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  35: add r0.xy, r1.zzzz, r1.xwxx
  36: mul r1.xy, r0.wwww, cb3[r2.x + 66].zwzz
  37: mad o7.xy, r0.xyxx, cb3[r2.x + 66].xyxx, r1.xyxx
  38: mov o7.zw, r0.zzzw
  39: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 173 math, 15 temp registers, 8 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 6
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 5
Set 2D Texture "unity_Lightmap" to slot 4 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 6 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 7 sampler slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texture3d (float,float,float,float) t7
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r2.x, v5.xyzx, v5.xyzx
   8: rsq r2.x, r2.x
   9: mul r2.xyz, r2.xxxx, v5.xyzx
  10: dp3 r3.x, v2.xyzx, v2.xyzx
  11: rsq r3.x, r3.x
  12: mul r3.yzw, r3.xxxx, v2.xxyz
  13: div r4.xy, v7.xyxx, v7.wwww
  14: sample r4.xyzw, r4.xyxx, t2.xyzw, s6
  15: sample r5.xyzw, v1.xyxx, t3.xyzw, s5
  16: add r4.y, -cb0[9].y, l(1.000000)
  17: mad r4.y, r5.y, cb0[9].y, r4.y
  18: mad r4.z, -r0.w, cb0[9].x, l(1.000000)
  19: dp3 r4.w, r3.yzwy, r2.xyzx
  20: add r4.w, r4.w, r4.w
  21: mad r5.xyz, r2.xyzx, -r4.wwww, r3.yzwy
  22: mov r6.x, v3.w
  23: mov r6.y, v4.w
  24: mov r6.z, v5.w
  25: mov r4.w, cb4[0].x
  26: add r7.xyz, -r6.xyzx, cb3[r4.w + 64].xyzx
  27: ishl r4.w, cb4[0].x, l(2)
  28: mov r8.x, cb3[r4.w + 8].z
  29: mov r8.y, cb3[r4.w + 9].z
  30: mov r8.z, cb3[r4.w + 10].z
  31: dp3 r4.w, r7.xyzx, r8.xyzx
  32: add r7.xyz, r6.xyzx, -cb2[25].xyzx
  33: dp3 r5.w, r7.xyzx, r7.xyzx
  34: sqrt r5.w, r5.w
  35: add r5.w, -r4.w, r5.w
  36: mad r4.w, cb2[25].w, r5.w, r4.w
  37: mad_sat r4.w, r4.w, cb2[24].z, cb2[24].w
  38: add r5.w, -r4.x, l(1.000000)
  39: mad r4.x, r4.w, r5.w, r4.x
  40: mul r7.xyz, r4.xxxx, cb0[2].xyzx
  41: eq r4.x, cb6[0].x, l(1.000000)
  42: if_nz r4.x
  43:   eq r4.x, cb6[0].y, l(1.000000)
  44:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  45:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  46:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  47:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  48:   movc r8.xyz, r4.xxxx, r8.xyzx, r6.xyzx
  49:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  50:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  51:   mul r4.x, r8.y, l(0.250000)
  52:   mul r4.w, cb6[0].z, l(0.500000)
  53:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  54:   max r4.x, r4.w, r4.x
  55:   min r8.x, r5.w, r4.x
  56:   sample r9.xyzw, r8.xzwx, t7.xyzw, s2
  57:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  58:   sample r10.xyzw, r10.xyzx, t7.xyzw, s2
  59:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  60:   sample r8.xyzw, r8.xyzx, t7.xyzw, s2
  61:   mov r2.w, l(1.000000)
  62:   dp4 r9.x, r9.xyzw, r2.xyzw
  63:   dp4 r9.y, r10.xyzw, r2.xyzw
  64:   dp4 r9.z, r8.xyzw, r2.xyzw
  65: else 
  66:   mov r2.w, l(1.000000)
  67:   dp4 r9.x, cb1[39].xyzw, r2.xyzw
  68:   dp4 r9.y, cb1[40].xyzw, r2.xyzw
  69:   dp4 r9.z, cb1[41].xyzw, r2.xyzw
  70: endif 
  71: mul r8.xyzw, r2.yzzx, r2.xyzz
  72: dp4 r10.x, cb1[42].xyzw, r8.xyzw
  73: dp4 r10.y, cb1[43].xyzw, r8.xyzw
  74: dp4 r10.z, cb1[44].xyzw, r8.xyzw
  75: mul r2.w, r2.y, r2.y
  76: mad r2.w, r2.x, r2.x, -r2.w
  77: mad r8.xyz, cb1[45].xyzx, r2.wwww, r10.xyzx
  78: add r8.xyz, r8.xyzx, r9.xyzx
  79: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  80: sample r9.xyzw, v6.xyxx, t4.xyzw, s0
  81: add r8.xyz, r8.xyzx, r9.xyzx
  82: lt r2.w, l(0.000000), cb5[2].w
  83: if_nz r2.w
  84:   dp3 r2.w, r5.xyzx, r5.xyzx
  85:   rsq r2.w, r2.w
  86:   mul r9.xyz, r2.wwww, r5.xyzx
  87:   add r10.xyz, -r6.xyzx, cb5[0].xyzx
  88:   div r10.xyz, r10.xyzx, r9.xyzx
  89:   add r11.xyz, -r6.xyzx, cb5[1].xyzx
  90:   div r11.xyz, r11.xyzx, r9.xyzx
  91:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
  92:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
  93:   min r2.w, r10.y, r10.x
  94:   min r2.w, r10.z, r2.w
  95:   add r10.xyz, r6.xyzx, -cb5[2].xyzx
  96:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
  97: else 
  98:   mov r9.xyz, r5.xyzx
  99: endif 
 100: mad r2.w, -r4.z, l(0.700000), l(1.700000)
 101: mul r2.w, r2.w, r4.z
 102: mul r2.w, r2.w, l(6.000000)
 103: sample_l r9.xyzw, r9.xyzx, t5.xyzw, s1, r2.w
 104: add r4.x, r9.w, l(-1.000000)
 105: mad r4.x, cb5[3].w, r4.x, l(1.000000)
 106: log r4.x, r4.x
 107: mul r4.x, r4.x, cb5[3].y
 108: exp r4.x, r4.x
 109: mul r4.x, r4.x, cb5[3].x
 110: mul r10.xyz, r9.xyzx, r4.xxxx
 111: lt r4.w, cb5[1].w, l(0.999990)
 112: if_nz r4.w
 113:   lt r4.w, l(0.000000), cb5[6].w
 114:   if_nz r4.w
 115:     dp3 r4.w, r5.xyzx, r5.xyzx
 116:     rsq r4.w, r4.w
 117:     mul r11.xyz, r4.wwww, r5.xyzx
 118:     add r12.xyz, -r6.xyzx, cb5[4].xyzx
 119:     div r12.xyz, r12.xyzx, r11.xyzx
 120:     add r13.xyz, -r6.xyzx, cb5[5].xyzx
 121:     div r13.xyz, r13.xyzx, r11.xyzx
 122:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 123:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 124:     min r4.w, r12.y, r12.x
 125:     min r4.w, r12.z, r4.w
 126:     add r6.xyz, r6.xyzx, -cb5[6].xyzx
 127:     mad r5.xyz, r11.xyzx, r4.wwww, r6.xyzx
 128:   endif 
 129:   sample_l r5.xyzw, r5.xyzx, t6.xyzw, s1, r2.w
 130:   add r2.w, r5.w, l(-1.000000)
 131:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 132:   log r2.w, r2.w
 133:   mul r2.w, r2.w, cb5[7].y
 134:   exp r2.w, r2.w
 135:   mul r2.w, r2.w, cb5[7].x
 136:   mul r5.xyz, r5.xyzx, r2.wwww
 137:   mad r6.xyz, r4.xxxx, r9.xyzx, -r5.xyzx
 138:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
 139: endif 
 140: mul r5.xyz, r4.yyyy, r10.xyzx
 141: mad r6.xyz, -v2.xyzx, r3.xxxx, cb1[0].xyzx
 142: dp3 r2.w, r6.xyzx, r6.xyzx
 143: max r2.w, r2.w, l(0.001000)
 144: rsq r2.w, r2.w
 145: mul r6.xyz, r2.wwww, r6.xyzx
 146: dp3 r2.w, r2.xyzx, -r3.yzwy
 147: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 148: dp3_sat r2.x, r2.xyzx, r6.xyzx
 149: dp3_sat r2.y, cb1[0].xyzx, r6.xyzx
 150: mul r2.z, r2.y, r2.y
 151: dp2 r2.z, r2.zzzz, r4.zzzz
 152: add r2.z, r2.z, l(-0.500000)
 153: add r3.y, -r3.x, l(1.000000)
 154: mul r3.z, r3.y, r3.y
 155: mul r3.z, r3.z, r3.z
 156: mul r3.y, r3.y, r3.z
 157: mad r3.y, r2.z, r3.y, l(1.000000)
 158: add r3.z, -|r2.w|, l(1.000000)
 159: mul r3.w, r3.z, r3.z
 160: mul r3.w, r3.w, r3.w
 161: mul r3.z, r3.z, r3.w
 162: mad r2.z, r2.z, r3.z, l(1.000000)
 163: mul r2.z, r2.z, r3.y
 164: mul r3.y, r4.z, r4.z
 165: max r3.y, r3.y, l(0.002000)
 166: add r3.w, -r3.y, l(1.000000)
 167: mad r4.x, |r2.w|, r3.w, r3.y
 168: mad r3.w, r3.x, r3.w, r3.y
 169: mul r2.w, |r2.w|, r3.w
 170: mad r2.w, r3.x, r4.x, r2.w
 171: add r2.w, r2.w, l(0.000010)
 172: div r2.w, l(0.500000), r2.w
 173: mul r3.w, r3.y, r3.y
 174: mad r4.x, r2.x, r3.w, -r2.x
 175: mad r2.x, r4.x, r2.x, l(1.000000)
 176: mul r3.w, r3.w, l(0.318310)
 177: mad r2.x, r2.x, r2.x, l(0.000000)
 178: div r2.x, r3.w, r2.x
 179: mul r2.x, r2.x, r2.w
 180: mul r2.x, r2.x, l(3.141593)
 181: mul r2.xz, r3.xxxx, r2.xxzx
 182: max r2.x, r2.x, l(0.000000)
 183: mad r2.w, r3.y, r3.y, l(1.000000)
 184: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 185: dp3 r3.x, r0.xyzx, r0.xyzx
 186: ne r3.x, r3.x, l(0.000000)
 187: and r3.x, r3.x, l(0x3f800000)
 188: mul r2.x, r2.x, r3.x
 189: mad r0.w, r0.w, cb0[9].x, -r1.w
 190: add_sat r0.w, r0.w, l(1.000000)
 191: mul r3.xyw, r2.zzzz, r7.xyxz
 192: mad r3.xyw, r8.xyxz, r4.yyyy, r3.xyxw
 193: mul r4.xyz, r7.xyzx, r2.xxxx
 194: add r1.w, -r2.y, l(1.000000)
 195: mul r2.x, r1.w, r1.w
 196: mul r2.x, r2.x, r2.x
 197: mul r1.w, r1.w, r2.x
 198: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 199: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 200: mul r2.xyz, r2.xyzx, r4.xyzx
 201: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 202: mul r2.xyz, r5.xyzx, r2.wwww
 203: add r3.xyw, -r0.xyxz, r0.wwww
 204: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 205: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 206: mov o0.w, l(1.000000)
 207: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 36 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov o3.w, r1.x
  20: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  21: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  22: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  23: dp3 r1.x, r2.xyzx, r2.xyzx
  24: rsq r1.x, r1.x
  25: mul r2.xyz, r1.xxxx, r2.xyzx
  26: mov o3.xyz, r2.xyzx
  27: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.x, r3.xyzx, r3.xyzx
  31: rsq r1.x, r1.x
  32: mul r3.xyz, r1.xxxx, r3.xyzx
  33: mul r4.xyz, r2.yzxy, r3.zxyz
  34: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  35: mov o5.xyz, r3.xyzx
  36: mul r1.x, v4.w, cb2[9].w
  37: mul o4.xyz, r1.xxxx, r2.xyzx
  38: mov o4.w, r1.y
  39: mov o5.w, r1.z
  40: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  41: mov o6.zw, l(0,0,0,0)
  42: mul r0.y, r0.y, cb1[5].x
  43: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  44: mov o7.zw, r0.zzzw
  45: add o7.xy, r1.zzzz, r1.xwxx
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 182 math, 15 temp registers, 9 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 5
Set 2D Texture "_BumpMap" to slot 2 sampler slot 4
Set 2D Texture "_ShadowMapTexture" to slot 3 sampler slot 7
Set 2D Texture "_OcclusionMap" to slot 4 sampler slot 6
Set 2D Texture "unity_Lightmap" to slot 5 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 6 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 7 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s5
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s4
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r2.z, r2.xyxx, r2.xyxx
  12: min r2.z, r2.z, l(1.000000)
  13: add r2.z, -r2.z, l(1.000000)
  14: sqrt r2.z, r2.z
  15: mul r3.xyz, r2.yyyy, v4.xyzx
  16: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  17: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  18: dp3 r2.w, r2.xyzx, r2.xyzx
  19: rsq r2.w, r2.w
  20: mul r2.xyz, r2.wwww, r2.xyzx
  21: dp3 r3.x, v2.xyzx, v2.xyzx
  22: rsq r3.x, r3.x
  23: mul r3.yzw, r3.xxxx, v2.xxyz
  24: div r4.xy, v7.xyxx, v7.wwww
  25: sample r4.xyzw, r4.xyxx, t3.xyzw, s7
  26: sample r5.xyzw, v1.xyxx, t4.xyzw, s6
  27: add r4.y, -cb0[9].y, l(1.000000)
  28: mad r4.y, r5.y, cb0[9].y, r4.y
  29: mad r4.z, -r0.w, cb0[9].x, l(1.000000)
  30: dp3 r4.w, r3.yzwy, r2.xyzx
  31: add r4.w, r4.w, r4.w
  32: mad r5.xyz, r2.xyzx, -r4.wwww, r3.yzwy
  33: mov r6.x, v3.w
  34: mov r6.y, v4.w
  35: mov r6.z, v5.w
  36: add r7.xyz, -r6.xyzx, cb1[4].xyzx
  37: mov r8.x, cb4[9].z
  38: mov r8.y, cb4[10].z
  39: mov r8.z, cb4[11].z
  40: dp3 r4.w, r7.xyzx, r8.xyzx
  41: add r7.xyz, r6.xyzx, -cb3[25].xyzx
  42: dp3 r5.w, r7.xyzx, r7.xyzx
  43: sqrt r5.w, r5.w
  44: add r5.w, -r4.w, r5.w
  45: mad r4.w, cb3[25].w, r5.w, r4.w
  46: mad_sat r4.w, r4.w, cb3[24].z, cb3[24].w
  47: add r5.w, -r4.x, l(1.000000)
  48: mad r4.x, r4.w, r5.w, r4.x
  49: mul r7.xyz, r4.xxxx, cb0[2].xyzx
  50: eq r4.x, cb6[0].x, l(1.000000)
  51: if_nz r4.x
  52:   eq r4.x, cb6[0].y, l(1.000000)
  53:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  54:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  55:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  56:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  57:   movc r8.xyz, r4.xxxx, r8.xyzx, r6.xyzx
  58:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  59:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  60:   mul r4.x, r8.y, l(0.250000)
  61:   mul r4.w, cb6[0].z, l(0.500000)
  62:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  63:   max r4.x, r4.w, r4.x
  64:   min r8.x, r5.w, r4.x
  65:   sample r9.xyzw, r8.xzwx, t8.xyzw, s2
  66:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  67:   sample r10.xyzw, r10.xyzx, t8.xyzw, s2
  68:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  69:   sample r8.xyzw, r8.xyzx, t8.xyzw, s2
  70:   mov r2.w, l(1.000000)
  71:   dp4 r9.x, r9.xyzw, r2.xyzw
  72:   dp4 r9.y, r10.xyzw, r2.xyzw
  73:   dp4 r9.z, r8.xyzw, r2.xyzw
  74: else 
  75:   mov r2.w, l(1.000000)
  76:   dp4 r9.x, cb2[39].xyzw, r2.xyzw
  77:   dp4 r9.y, cb2[40].xyzw, r2.xyzw
  78:   dp4 r9.z, cb2[41].xyzw, r2.xyzw
  79: endif 
  80: mul r8.xyzw, r2.yzzx, r2.xyzz
  81: dp4 r10.x, cb2[42].xyzw, r8.xyzw
  82: dp4 r10.y, cb2[43].xyzw, r8.xyzw
  83: dp4 r10.z, cb2[44].xyzw, r8.xyzw
  84: mul r2.w, r2.y, r2.y
  85: mad r2.w, r2.x, r2.x, -r2.w
  86: mad r8.xyz, cb2[45].xyzx, r2.wwww, r10.xyzx
  87: add r8.xyz, r8.xyzx, r9.xyzx
  88: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  89: sample r9.xyzw, v6.xyxx, t5.xyzw, s0
  90: add r8.xyz, r8.xyzx, r9.xyzx
  91: lt r2.w, l(0.000000), cb5[2].w
  92: if_nz r2.w
  93:   dp3 r2.w, r5.xyzx, r5.xyzx
  94:   rsq r2.w, r2.w
  95:   mul r9.xyz, r2.wwww, r5.xyzx
  96:   add r10.xyz, -r6.xyzx, cb5[0].xyzx
  97:   div r10.xyz, r10.xyzx, r9.xyzx
  98:   add r11.xyz, -r6.xyzx, cb5[1].xyzx
  99:   div r11.xyz, r11.xyzx, r9.xyzx
 100:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 101:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 102:   min r2.w, r10.y, r10.x
 103:   min r2.w, r10.z, r2.w
 104:   add r10.xyz, r6.xyzx, -cb5[2].xyzx
 105:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 106: else 
 107:   mov r9.xyz, r5.xyzx
 108: endif 
 109: mad r2.w, -r4.z, l(0.700000), l(1.700000)
 110: mul r2.w, r2.w, r4.z
 111: mul r2.w, r2.w, l(6.000000)
 112: sample_l r9.xyzw, r9.xyzx, t6.xyzw, s1, r2.w
 113: add r4.x, r9.w, l(-1.000000)
 114: mad r4.x, cb5[3].w, r4.x, l(1.000000)
 115: log r4.x, r4.x
 116: mul r4.x, r4.x, cb5[3].y
 117: exp r4.x, r4.x
 118: mul r4.x, r4.x, cb5[3].x
 119: mul r10.xyz, r9.xyzx, r4.xxxx
 120: lt r4.w, cb5[1].w, l(0.999990)
 121: if_nz r4.w
 122:   lt r4.w, l(0.000000), cb5[6].w
 123:   if_nz r4.w
 124:     dp3 r4.w, r5.xyzx, r5.xyzx
 125:     rsq r4.w, r4.w
 126:     mul r11.xyz, r4.wwww, r5.xyzx
 127:     add r12.xyz, -r6.xyzx, cb5[4].xyzx
 128:     div r12.xyz, r12.xyzx, r11.xyzx
 129:     add r13.xyz, -r6.xyzx, cb5[5].xyzx
 130:     div r13.xyz, r13.xyzx, r11.xyzx
 131:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 132:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 133:     min r4.w, r12.y, r12.x
 134:     min r4.w, r12.z, r4.w
 135:     add r6.xyz, r6.xyzx, -cb5[6].xyzx
 136:     mad r5.xyz, r11.xyzx, r4.wwww, r6.xyzx
 137:   endif 
 138:   sample_l r5.xyzw, r5.xyzx, t7.xyzw, s1, r2.w
 139:   add r2.w, r5.w, l(-1.000000)
 140:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 141:   log r2.w, r2.w
 142:   mul r2.w, r2.w, cb5[7].y
 143:   exp r2.w, r2.w
 144:   mul r2.w, r2.w, cb5[7].x
 145:   mul r5.xyz, r5.xyzx, r2.wwww
 146:   mad r6.xyz, r4.xxxx, r9.xyzx, -r5.xyzx
 147:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
 148: endif 
 149: mul r5.xyz, r4.yyyy, r10.xyzx
 150: mad r6.xyz, -v2.xyzx, r3.xxxx, cb2[0].xyzx
 151: dp3 r2.w, r6.xyzx, r6.xyzx
 152: max r2.w, r2.w, l(0.001000)
 153: rsq r2.w, r2.w
 154: mul r6.xyz, r2.wwww, r6.xyzx
 155: dp3 r2.w, r2.xyzx, -r3.yzwy
 156: dp3_sat r3.x, r2.xyzx, cb2[0].xyzx
 157: dp3_sat r2.x, r2.xyzx, r6.xyzx
 158: dp3_sat r2.y, cb2[0].xyzx, r6.xyzx
 159: mul r2.z, r2.y, r2.y
 160: dp2 r2.z, r2.zzzz, r4.zzzz
 161: add r2.z, r2.z, l(-0.500000)
 162: add r3.y, -r3.x, l(1.000000)
 163: mul r3.z, r3.y, r3.y
 164: mul r3.z, r3.z, r3.z
 165: mul r3.y, r3.y, r3.z
 166: mad r3.y, r2.z, r3.y, l(1.000000)
 167: add r3.z, -|r2.w|, l(1.000000)
 168: mul r3.w, r3.z, r3.z
 169: mul r3.w, r3.w, r3.w
 170: mul r3.z, r3.z, r3.w
 171: mad r2.z, r2.z, r3.z, l(1.000000)
 172: mul r2.z, r2.z, r3.y
 173: mul r3.y, r4.z, r4.z
 174: max r3.y, r3.y, l(0.002000)
 175: add r3.w, -r3.y, l(1.000000)
 176: mad r4.x, |r2.w|, r3.w, r3.y
 177: mad r3.w, r3.x, r3.w, r3.y
 178: mul r2.w, |r2.w|, r3.w
 179: mad r2.w, r3.x, r4.x, r2.w
 180: add r2.w, r2.w, l(0.000010)
 181: div r2.w, l(0.500000), r2.w
 182: mul r3.w, r3.y, r3.y
 183: mad r4.x, r2.x, r3.w, -r2.x
 184: mad r2.x, r4.x, r2.x, l(1.000000)
 185: mul r3.w, r3.w, l(0.318310)
 186: mad r2.x, r2.x, r2.x, l(0.000000)
 187: div r2.x, r3.w, r2.x
 188: mul r2.x, r2.x, r2.w
 189: mul r2.x, r2.x, l(3.141593)
 190: mul r2.xz, r3.xxxx, r2.xxzx
 191: max r2.x, r2.x, l(0.000000)
 192: mad r2.w, r3.y, r3.y, l(1.000000)
 193: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 194: dp3 r3.x, r0.xyzx, r0.xyzx
 195: ne r3.x, r3.x, l(0.000000)
 196: and r3.x, r3.x, l(0x3f800000)
 197: mul r2.x, r2.x, r3.x
 198: mad r0.w, r0.w, cb0[9].x, -r1.w
 199: add_sat r0.w, r0.w, l(1.000000)
 200: mul r3.xyw, r2.zzzz, r7.xyxz
 201: mad r3.xyw, r8.xyxz, r4.yyyy, r3.xyxw
 202: mul r4.xyz, r7.xyzx, r2.xxxx
 203: add r1.w, -r2.y, l(1.000000)
 204: mul r2.x, r1.w, r1.w
 205: mul r2.x, r2.x, r2.x
 206: mul r1.w, r1.w, r2.x
 207: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 208: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 209: mul r2.xyz, r2.xyzx, r4.xyzx
 210: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 211: mul r2.xyz, r5.xyzx, r2.wwww
 212: add r3.xyw, -r0.xyxz, r0.wwww
 213: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 214: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 215: mov o0.w, l(1.000000)
 216: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON LIGHTPROBE_SH SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 5 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[68], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  16: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  19: mov r1.w, cb4[0].x
  20: add o2.xyz, r1.xyzx, -cb3[r1.w + 64].xyzx
  21: mov o3.w, r1.x
  22: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  23: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  24: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  25: dp3 r1.x, r2.xyzx, r2.xyzx
  26: rsq r1.x, r1.x
  27: mul r2.xyz, r1.xxxx, r2.xyzx
  28: mov o3.xyz, r2.xyzx
  29: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  30: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  31: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  32: dp3 r1.x, r3.xyzx, r3.xyzx
  33: rsq r1.x, r1.x
  34: mul r3.xyz, r1.xxxx, r3.xyzx
  35: mul r4.xyz, r2.yzxy, r3.zxyz
  36: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r3.xyzx
  38: mul r1.x, v4.w, cb2[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r1.y
  41: mov o5.w, r1.z
  42: mad o6.xy, v3.xyxx, cb5[0].xyxx, cb5[0].zwzz
  43: mov o6.zw, l(0,0,0,0)
  44: mul r0.y, r0.y, cb1[4].x
  45: mul r2.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  46: add r0.xy, r2.zzzz, r2.xwxx
  47: mul r1.xy, r0.wwww, cb3[r1.w + 66].zwzz
  48: mad o7.xy, r0.xyxx, cb3[r1.w + 66].xyxx, r1.xyxx
  49: mov o7.zw, r0.zzzw
  50: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 183 math, 15 temp registers, 9 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 5
Set 2D Texture "_BumpMap" to slot 2 sampler slot 4
Set 2D Texture "_ShadowMapTexture" to slot 3 sampler slot 7
Set 2D Texture "_OcclusionMap" to slot 4 sampler slot 6
Set 2D Texture "unity_Lightmap" to slot 5 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 6 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 7 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 8 sampler slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_sampler s7, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_resource_texturecube (float,float,float,float) t7
      dcl_resource_texture3d (float,float,float,float) t8
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 15
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s5
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s4
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r2.z, r2.xyxx, r2.xyxx
  12: min r2.z, r2.z, l(1.000000)
  13: add r2.z, -r2.z, l(1.000000)
  14: sqrt r2.z, r2.z
  15: mul r3.xyz, r2.yyyy, v4.xyzx
  16: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  17: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  18: dp3 r2.w, r2.xyzx, r2.xyzx
  19: rsq r2.w, r2.w
  20: mul r2.xyz, r2.wwww, r2.xyzx
  21: dp3 r3.x, v2.xyzx, v2.xyzx
  22: rsq r3.x, r3.x
  23: mul r3.yzw, r3.xxxx, v2.xxyz
  24: div r4.xy, v7.xyxx, v7.wwww
  25: sample r4.xyzw, r4.xyxx, t3.xyzw, s7
  26: sample r5.xyzw, v1.xyxx, t4.xyzw, s6
  27: add r4.y, -cb0[9].y, l(1.000000)
  28: mad r4.y, r5.y, cb0[9].y, r4.y
  29: mad r4.z, -r0.w, cb0[9].x, l(1.000000)
  30: dp3 r4.w, r3.yzwy, r2.xyzx
  31: add r4.w, r4.w, r4.w
  32: mad r5.xyz, r2.xyzx, -r4.wwww, r3.yzwy
  33: mov r6.x, v3.w
  34: mov r6.y, v4.w
  35: mov r6.z, v5.w
  36: mov r4.w, cb4[0].x
  37: add r7.xyz, -r6.xyzx, cb3[r4.w + 64].xyzx
  38: ishl r4.w, cb4[0].x, l(2)
  39: mov r8.x, cb3[r4.w + 8].z
  40: mov r8.y, cb3[r4.w + 9].z
  41: mov r8.z, cb3[r4.w + 10].z
  42: dp3 r4.w, r7.xyzx, r8.xyzx
  43: add r7.xyz, r6.xyzx, -cb2[25].xyzx
  44: dp3 r5.w, r7.xyzx, r7.xyzx
  45: sqrt r5.w, r5.w
  46: add r5.w, -r4.w, r5.w
  47: mad r4.w, cb2[25].w, r5.w, r4.w
  48: mad_sat r4.w, r4.w, cb2[24].z, cb2[24].w
  49: add r5.w, -r4.x, l(1.000000)
  50: mad r4.x, r4.w, r5.w, r4.x
  51: mul r7.xyz, r4.xxxx, cb0[2].xyzx
  52: eq r4.x, cb6[0].x, l(1.000000)
  53: if_nz r4.x
  54:   eq r4.x, cb6[0].y, l(1.000000)
  55:   mul r8.xyz, v4.wwww, cb6[2].xyzx
  56:   mad r8.xyz, cb6[1].xyzx, v3.wwww, r8.xyzx
  57:   mad r8.xyz, cb6[3].xyzx, v5.wwww, r8.xyzx
  58:   add r8.xyz, r8.xyzx, cb6[4].xyzx
  59:   movc r8.xyz, r4.xxxx, r8.xyzx, r6.xyzx
  60:   add r8.xyz, r8.xyzx, -cb6[6].xyzx
  61:   mul r8.yzw, r8.xxyz, cb6[5].xxyz
  62:   mul r4.x, r8.y, l(0.250000)
  63:   mul r4.w, cb6[0].z, l(0.500000)
  64:   mad r5.w, -cb6[0].z, l(0.500000), l(0.250000)
  65:   max r4.x, r4.w, r4.x
  66:   min r8.x, r5.w, r4.x
  67:   sample r9.xyzw, r8.xzwx, t8.xyzw, s2
  68:   add r10.xyz, r8.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  69:   sample r10.xyzw, r10.xyzx, t8.xyzw, s2
  70:   add r8.xyz, r8.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  71:   sample r8.xyzw, r8.xyzx, t8.xyzw, s2
  72:   mov r2.w, l(1.000000)
  73:   dp4 r9.x, r9.xyzw, r2.xyzw
  74:   dp4 r9.y, r10.xyzw, r2.xyzw
  75:   dp4 r9.z, r8.xyzw, r2.xyzw
  76: else 
  77:   mov r2.w, l(1.000000)
  78:   dp4 r9.x, cb1[39].xyzw, r2.xyzw
  79:   dp4 r9.y, cb1[40].xyzw, r2.xyzw
  80:   dp4 r9.z, cb1[41].xyzw, r2.xyzw
  81: endif 
  82: mul r8.xyzw, r2.yzzx, r2.xyzz
  83: dp4 r10.x, cb1[42].xyzw, r8.xyzw
  84: dp4 r10.y, cb1[43].xyzw, r8.xyzw
  85: dp4 r10.z, cb1[44].xyzw, r8.xyzw
  86: mul r2.w, r2.y, r2.y
  87: mad r2.w, r2.x, r2.x, -r2.w
  88: mad r8.xyz, cb1[45].xyzx, r2.wwww, r10.xyzx
  89: add r8.xyz, r8.xyzx, r9.xyzx
  90: max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  91: sample r9.xyzw, v6.xyxx, t5.xyzw, s0
  92: add r8.xyz, r8.xyzx, r9.xyzx
  93: lt r2.w, l(0.000000), cb5[2].w
  94: if_nz r2.w
  95:   dp3 r2.w, r5.xyzx, r5.xyzx
  96:   rsq r2.w, r2.w
  97:   mul r9.xyz, r2.wwww, r5.xyzx
  98:   add r10.xyz, -r6.xyzx, cb5[0].xyzx
  99:   div r10.xyz, r10.xyzx, r9.xyzx
 100:   add r11.xyz, -r6.xyzx, cb5[1].xyzx
 101:   div r11.xyz, r11.xyzx, r9.xyzx
 102:   lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xyzx
 103:   movc r10.xyz, r12.xyzx, r10.xyzx, r11.xyzx
 104:   min r2.w, r10.y, r10.x
 105:   min r2.w, r10.z, r2.w
 106:   add r10.xyz, r6.xyzx, -cb5[2].xyzx
 107:   mad r9.xyz, r9.xyzx, r2.wwww, r10.xyzx
 108: else 
 109:   mov r9.xyz, r5.xyzx
 110: endif 
 111: mad r2.w, -r4.z, l(0.700000), l(1.700000)
 112: mul r2.w, r2.w, r4.z
 113: mul r2.w, r2.w, l(6.000000)
 114: sample_l r9.xyzw, r9.xyzx, t6.xyzw, s1, r2.w
 115: add r4.x, r9.w, l(-1.000000)
 116: mad r4.x, cb5[3].w, r4.x, l(1.000000)
 117: log r4.x, r4.x
 118: mul r4.x, r4.x, cb5[3].y
 119: exp r4.x, r4.x
 120: mul r4.x, r4.x, cb5[3].x
 121: mul r10.xyz, r9.xyzx, r4.xxxx
 122: lt r4.w, cb5[1].w, l(0.999990)
 123: if_nz r4.w
 124:   lt r4.w, l(0.000000), cb5[6].w
 125:   if_nz r4.w
 126:     dp3 r4.w, r5.xyzx, r5.xyzx
 127:     rsq r4.w, r4.w
 128:     mul r11.xyz, r4.wwww, r5.xyzx
 129:     add r12.xyz, -r6.xyzx, cb5[4].xyzx
 130:     div r12.xyz, r12.xyzx, r11.xyzx
 131:     add r13.xyz, -r6.xyzx, cb5[5].xyzx
 132:     div r13.xyz, r13.xyzx, r11.xyzx
 133:     lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
 134:     movc r12.xyz, r14.xyzx, r12.xyzx, r13.xyzx
 135:     min r4.w, r12.y, r12.x
 136:     min r4.w, r12.z, r4.w
 137:     add r6.xyz, r6.xyzx, -cb5[6].xyzx
 138:     mad r5.xyz, r11.xyzx, r4.wwww, r6.xyzx
 139:   endif 
 140:   sample_l r5.xyzw, r5.xyzx, t7.xyzw, s1, r2.w
 141:   add r2.w, r5.w, l(-1.000000)
 142:   mad r2.w, cb5[7].w, r2.w, l(1.000000)
 143:   log r2.w, r2.w
 144:   mul r2.w, r2.w, cb5[7].y
 145:   exp r2.w, r2.w
 146:   mul r2.w, r2.w, cb5[7].x
 147:   mul r5.xyz, r5.xyzx, r2.wwww
 148:   mad r6.xyz, r4.xxxx, r9.xyzx, -r5.xyzx
 149:   mad r10.xyz, cb5[1].wwww, r6.xyzx, r5.xyzx
 150: endif 
 151: mul r5.xyz, r4.yyyy, r10.xyzx
 152: mad r6.xyz, -v2.xyzx, r3.xxxx, cb1[0].xyzx
 153: dp3 r2.w, r6.xyzx, r6.xyzx
 154: max r2.w, r2.w, l(0.001000)
 155: rsq r2.w, r2.w
 156: mul r6.xyz, r2.wwww, r6.xyzx
 157: dp3 r2.w, r2.xyzx, -r3.yzwy
 158: dp3_sat r3.x, r2.xyzx, cb1[0].xyzx
 159: dp3_sat r2.x, r2.xyzx, r6.xyzx
 160: dp3_sat r2.y, cb1[0].xyzx, r6.xyzx
 161: mul r2.z, r2.y, r2.y
 162: dp2 r2.z, r2.zzzz, r4.zzzz
 163: add r2.z, r2.z, l(-0.500000)
 164: add r3.y, -r3.x, l(1.000000)
 165: mul r3.z, r3.y, r3.y
 166: mul r3.z, r3.z, r3.z
 167: mul r3.y, r3.y, r3.z
 168: mad r3.y, r2.z, r3.y, l(1.000000)
 169: add r3.z, -|r2.w|, l(1.000000)
 170: mul r3.w, r3.z, r3.z
 171: mul r3.w, r3.w, r3.w
 172: mul r3.z, r3.z, r3.w
 173: mad r2.z, r2.z, r3.z, l(1.000000)
 174: mul r2.z, r2.z, r3.y
 175: mul r3.y, r4.z, r4.z
 176: max r3.y, r3.y, l(0.002000)
 177: add r3.w, -r3.y, l(1.000000)
 178: mad r4.x, |r2.w|, r3.w, r3.y
 179: mad r3.w, r3.x, r3.w, r3.y
 180: mul r2.w, |r2.w|, r3.w
 181: mad r2.w, r3.x, r4.x, r2.w
 182: add r2.w, r2.w, l(0.000010)
 183: div r2.w, l(0.500000), r2.w
 184: mul r3.w, r3.y, r3.y
 185: mad r4.x, r2.x, r3.w, -r2.x
 186: mad r2.x, r4.x, r2.x, l(1.000000)
 187: mul r3.w, r3.w, l(0.318310)
 188: mad r2.x, r2.x, r2.x, l(0.000000)
 189: div r2.x, r3.w, r2.x
 190: mul r2.x, r2.x, r2.w
 191: mul r2.x, r2.x, l(3.141593)
 192: mul r2.xz, r3.xxxx, r2.xxzx
 193: max r2.x, r2.x, l(0.000000)
 194: mad r2.w, r3.y, r3.y, l(1.000000)
 195: div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
 196: dp3 r3.x, r0.xyzx, r0.xyzx
 197: ne r3.x, r3.x, l(0.000000)
 198: and r3.x, r3.x, l(0x3f800000)
 199: mul r2.x, r2.x, r3.x
 200: mad r0.w, r0.w, cb0[9].x, -r1.w
 201: add_sat r0.w, r0.w, l(1.000000)
 202: mul r3.xyw, r2.zzzz, r7.xyxz
 203: mad r3.xyw, r8.xyxz, r4.yyyy, r3.xyxw
 204: mul r4.xyz, r7.xyzx, r2.xxxx
 205: add r1.w, -r2.y, l(1.000000)
 206: mul r2.x, r1.w, r1.w
 207: mul r2.x, r2.x, r2.x
 208: mul r1.w, r1.w, r2.x
 209: add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 210: mad r2.xyz, r2.xyzx, r1.wwww, r0.xyzx
 211: mul r2.xyz, r2.xyzx, r4.xyzx
 212: mad r1.xyz, r1.xyzx, r3.xywx, r2.xyzx
 213: mul r2.xyz, r5.xyzx, r2.wwww
 214: add r3.xyw, -r0.xyxz, r0.wwww
 215: mad r0.xyz, r3.zzzz, r3.xywx, r0.xyzx
 216: mad o0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
 217: mov o0.w, l(1.000000)
 218: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON LIGHTPROBE_SH SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 4 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul o5.xyz, r1.wwww, r1.xyzx
  29: mad o6.xy, v3.xyxx, cb4[0].xyxx, cb4[0].zwzz
  30: mov o6.zw, l(0,0,0,0)
  31: mul r0.y, r0.y, cb1[5].x
  32: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  33: mov o7.zw, r0.zzzw
  34: add o7.xy, r1.zzzz, r1.xwxx
  35: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 172 math, 14 temp registers, 7 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 5
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 4
Set 2D Texture "unity_Lightmap" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: dp3 r2.x, v2.xyzx, v2.xyzx
  10: rsq r2.x, r2.x
  11: mul r2.yzw, r2.xxxx, v2.xxyz
  12: div r3.xy, v7.xyxx, v7.wwww
  13: sample r3.xyzw, r3.xyxx, t1.xyzw, s5
  14: sample r4.xyzw, v1.xyxx, t2.xyzw, s4
  15: add r3.y, -cb0[9].y, l(1.000000)
  16: mad r3.y, r4.y, cb0[9].y, r3.y
  17: add r3.z, -cb0[8].w, l(1.000000)
  18: dp3 r3.w, r2.yzwy, r1.xyzx
  19: add r3.w, r3.w, r3.w
  20: mad r4.xyz, r1.xyzx, -r3.wwww, r2.yzwy
  21: mov r5.x, v3.w
  22: mov r5.y, v4.w
  23: mov r5.z, v5.w
  24: add r6.xyz, -r5.xyzx, cb1[4].xyzx
  25: mov r7.x, cb4[9].z
  26: mov r7.y, cb4[10].z
  27: mov r7.z, cb4[11].z
  28: dp3 r3.w, r6.xyzx, r7.xyzx
  29: add r6.xyz, r5.xyzx, -cb3[25].xyzx
  30: dp3 r4.w, r6.xyzx, r6.xyzx
  31: sqrt r4.w, r4.w
  32: add r4.w, -r3.w, r4.w
  33: mad r3.w, cb3[25].w, r4.w, r3.w
  34: mad_sat r3.w, r3.w, cb3[24].z, cb3[24].w
  35: add r4.w, -r3.x, l(1.000000)
  36: mad r3.x, r3.w, r4.w, r3.x
  37: mul r6.xyz, r3.xxxx, cb0[2].xyzx
  38: eq r3.x, cb6[0].x, l(1.000000)
  39: if_nz r3.x
  40:   eq r3.x, cb6[0].y, l(1.000000)
  41:   mul r7.xyz, v4.wwww, cb6[2].xyzx
  42:   mad r7.xyz, cb6[1].xyzx, v3.wwww, r7.xyzx
  43:   mad r7.xyz, cb6[3].xyzx, v5.wwww, r7.xyzx
  44:   add r7.xyz, r7.xyzx, cb6[4].xyzx
  45:   movc r7.xyz, r3.xxxx, r7.xyzx, r5.xyzx
  46:   add r7.xyz, r7.xyzx, -cb6[6].xyzx
  47:   mul r7.yzw, r7.xxyz, cb6[5].xxyz
  48:   mul r3.x, r7.y, l(0.250000)
  49:   mul r3.w, cb6[0].z, l(0.500000)
  50:   mad r4.w, -cb6[0].z, l(0.500000), l(0.250000)
  51:   max r3.x, r3.w, r3.x
  52:   min r7.x, r4.w, r3.x
  53:   sample r8.xyzw, r7.xzwx, t6.xyzw, s2
  54:   add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  55:   sample r9.xyzw, r9.xyzx, t6.xyzw, s2
  56:   add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  57:   sample r7.xyzw, r7.xyzx, t6.xyzw, s2
  58:   mov r1.w, l(1.000000)
  59:   dp4 r8.x, r8.xyzw, r1.xyzw
  60:   dp4 r8.y, r9.xyzw, r1.xyzw
  61:   dp4 r8.z, r7.xyzw, r1.xyzw
  62: else 
  63:   mov r1.w, l(1.000000)
  64:   dp4 r8.x, cb2[39].xyzw, r1.xyzw
  65:   dp4 r8.y, cb2[40].xyzw, r1.xyzw
  66:   dp4 r8.z, cb2[41].xyzw, r1.xyzw
  67: endif 
  68: mul r7.xyzw, r1.yzzx, r1.xyzz
  69: dp4 r9.x, cb2[42].xyzw, r7.xyzw
  70: dp4 r9.y, cb2[43].xyzw, r7.xyzw
  71: dp4 r9.z, cb2[44].xyzw, r7.xyzw
  72: mul r1.w, r1.y, r1.y
  73: mad r1.w, r1.x, r1.x, -r1.w
  74: mad r7.xyz, cb2[45].xyzx, r1.wwww, r9.xyzx
  75: add r7.xyz, r7.xyzx, r8.xyzx
  76: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  77: sample r8.xyzw, v6.xyxx, t3.xyzw, s0
  78: add r7.xyz, r7.xyzx, r8.xyzx
  79: lt r1.w, l(0.000000), cb5[2].w
  80: if_nz r1.w
  81:   dp3 r1.w, r4.xyzx, r4.xyzx
  82:   rsq r1.w, r1.w
  83:   mul r8.xyz, r1.wwww, r4.xyzx
  84:   add r9.xyz, -r5.xyzx, cb5[0].xyzx
  85:   div r9.xyz, r9.xyzx, r8.xyzx
  86:   add r10.xyz, -r5.xyzx, cb5[1].xyzx
  87:   div r10.xyz, r10.xyzx, r8.xyzx
  88:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  89:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  90:   min r1.w, r9.y, r9.x
  91:   min r1.w, r9.z, r1.w
  92:   add r9.xyz, r5.xyzx, -cb5[2].xyzx
  93:   mad r8.xyz, r8.xyzx, r1.wwww, r9.xyzx
  94: else 
  95:   mov r8.xyz, r4.xyzx
  96: endif 
  97: mad r1.w, -r3.z, l(0.700000), l(1.700000)
  98: mul r1.w, r1.w, r3.z
  99: mul r1.w, r1.w, l(6.000000)
 100: sample_l r8.xyzw, r8.xyzx, t4.xyzw, s1, r1.w
 101: add r3.x, r8.w, l(-1.000000)
 102: mad r3.x, cb5[3].w, r3.x, l(1.000000)
 103: log r3.x, r3.x
 104: mul r3.x, r3.x, cb5[3].y
 105: exp r3.x, r3.x
 106: mul r3.x, r3.x, cb5[3].x
 107: mul r9.xyz, r8.xyzx, r3.xxxx
 108: lt r3.w, cb5[1].w, l(0.999990)
 109: if_nz r3.w
 110:   lt r3.w, l(0.000000), cb5[6].w
 111:   if_nz r3.w
 112:     dp3 r3.w, r4.xyzx, r4.xyzx
 113:     rsq r3.w, r3.w
 114:     mul r10.xyz, r3.wwww, r4.xyzx
 115:     add r11.xyz, -r5.xyzx, cb5[4].xyzx
 116:     div r11.xyz, r11.xyzx, r10.xyzx
 117:     add r12.xyz, -r5.xyzx, cb5[5].xyzx
 118:     div r12.xyz, r12.xyzx, r10.xyzx
 119:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 120:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 121:     min r3.w, r11.y, r11.x
 122:     min r3.w, r11.z, r3.w
 123:     add r5.xyz, r5.xyzx, -cb5[6].xyzx
 124:     mad r4.xyz, r10.xyzx, r3.wwww, r5.xyzx
 125:   endif 
 126:   sample_l r4.xyzw, r4.xyzx, t5.xyzw, s1, r1.w
 127:   add r1.w, r4.w, l(-1.000000)
 128:   mad r1.w, cb5[7].w, r1.w, l(1.000000)
 129:   log r1.w, r1.w
 130:   mul r1.w, r1.w, cb5[7].y
 131:   exp r1.w, r1.w
 132:   mul r1.w, r1.w, cb5[7].x
 133:   mul r4.xyz, r4.xyzx, r1.wwww
 134:   mad r5.xyz, r3.xxxx, r8.xyzx, -r4.xyzx
 135:   mad r9.xyz, cb5[1].wwww, r5.xyzx, r4.xyzx
 136: endif 
 137: mul r4.xyz, r3.yyyy, r9.xyzx
 138: mad r5.xyz, -v2.xyzx, r2.xxxx, cb2[0].xyzx
 139: dp3 r1.w, r5.xyzx, r5.xyzx
 140: max r1.w, r1.w, l(0.001000)
 141: rsq r1.w, r1.w
 142: mul r5.xyz, r1.wwww, r5.xyzx
 143: dp3 r1.w, r1.xyzx, -r2.yzwy
 144: dp3_sat r2.x, r1.xyzx, cb2[0].xyzx
 145: dp3_sat r1.x, r1.xyzx, r5.xyzx
 146: dp3_sat r1.y, cb2[0].xyzx, r5.xyzx
 147: mul r1.z, r1.y, r1.y
 148: dp2 r1.z, r1.zzzz, r3.zzzz
 149: add r1.z, r1.z, l(-0.500000)
 150: add r2.y, -r2.x, l(1.000000)
 151: mul r2.z, r2.y, r2.y
 152: mul r2.z, r2.z, r2.z
 153: mul r2.y, r2.y, r2.z
 154: mad r2.y, r1.z, r2.y, l(1.000000)
 155: add r2.z, -|r1.w|, l(1.000000)
 156: mul r2.w, r2.z, r2.z
 157: mul r2.w, r2.w, r2.w
 158: mul r2.z, r2.z, r2.w
 159: mad r1.z, r1.z, r2.z, l(1.000000)
 160: mul r1.z, r1.z, r2.y
 161: mul r2.y, r3.z, r3.z
 162: max r2.y, r2.y, l(0.002000)
 163: add r2.w, -r2.y, l(1.000000)
 164: mad r3.x, |r1.w|, r2.w, r2.y
 165: mad r2.w, r2.x, r2.w, r2.y
 166: mul r1.w, |r1.w|, r2.w
 167: mad r1.w, r2.x, r3.x, r1.w
 168: add r1.w, r1.w, l(0.000010)
 169: div r1.w, l(0.500000), r1.w
 170: mul r2.w, r2.y, r2.y
 171: mad r3.x, r1.x, r2.w, -r1.x
 172: mad r1.x, r3.x, r1.x, l(1.000000)
 173: mul r2.w, r2.w, l(0.318310)
 174: mad r1.x, r1.x, r1.x, l(0.000000)
 175: div r1.x, r2.w, r1.x
 176: mul r1.x, r1.x, r1.w
 177: mul r1.x, r1.x, l(3.141593)
 178: mul r1.xz, r2.xxxx, r1.xxzx
 179: max r1.x, r1.x, l(0.000000)
 180: mad r1.w, r2.y, r2.y, l(1.000000)
 181: div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
 182: dp3 r2.x, cb0[3].xyzx, cb0[3].xyzx
 183: ne r2.x, r2.x, l(0.000000)
 184: and r2.x, r2.x, l(0x3f800000)
 185: mul r1.x, r1.x, r2.x
 186: add r0.w, -r0.w, l(1.000000)
 187: add_sat r0.w, r0.w, cb0[8].w
 188: mul r2.xyw, r1.zzzz, r6.xyxz
 189: mad r2.xyw, r7.xyxz, r3.yyyy, r2.xyxw
 190: mul r3.xyz, r6.xyzx, r1.xxxx
 191: add r1.x, -r1.y, l(1.000000)
 192: mul r1.y, r1.x, r1.x
 193: mul r1.y, r1.y, r1.y
 194: mul r1.x, r1.x, r1.y
 195: add r5.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 196: mad r1.xyz, r5.xyzx, r1.xxxx, cb0[3].xyzx
 197: mul r1.xyz, r1.xyzx, r3.xyzx
 198: mad r0.xyz, r0.xyzx, r2.xywx, r1.xyzx
 199: mul r1.xyz, r4.xyzx, r1.wwww
 200: add r2.xyw, r0.wwww, -cb0[3].xyxz
 201: mad r2.xyz, r2.zzzz, r2.xywx, cb0[3].xyzx
 202: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
 203: mov o0.w, l(1.000000)
 204: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTMAP_ON LIGHTPROBE_SH SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityLightmaps" (32 bytes) on slot 5 {
  Vector4 unity_LightmapST at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[68], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  16: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  19: mov r2.x, cb4[0].x
  20: add o2.xyz, r1.xyzx, -cb3[r2.x + 64].xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mad o6.xy, v3.xyxx, cb5[0].xyxx, cb5[0].zwzz
  32: mov o6.zw, l(0,0,0,0)
  33: mul r0.y, r0.y, cb1[4].x
  34: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  35: add r0.xy, r1.zzzz, r1.xwxx
  36: mul r1.xy, r0.wwww, cb3[r2.x + 66].zwzz
  37: mad o7.xy, r0.xyxx, cb3[r2.x + 66].xyxx, r1.xyxx
  38: mov o7.zw, r0.zzzw
  39: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 173 math, 14 temp registers, 7 textures, 6 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 5
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 4
Set 2D Texture "unity_Lightmap" to slot 3 sampler slot 0
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 1
Set CUBE Texture "unity_SpecCube1" to slot 5 sampler slot -1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 2

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
  Float _OcclusionStrength at 148
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 5 {
  Vector4 unity_SpecCube0_BoxMax at 0
  Vector4 unity_SpecCube0_BoxMin at 16
  Vector4 unity_SpecCube0_ProbePosition at 32
  Vector4 unity_SpecCube0_HDR at 48
  Vector4 unity_SpecCube1_BoxMax at 64
  Vector4 unity_SpecCube1_BoxMin at 80
  Vector4 unity_SpecCube1_ProbePosition at 96
  Vector4 unity_SpecCube1_HDR at 112
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 6 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xy  
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[8], immediateIndexed
      dcl_constantbuffer CB6[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xy
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 14
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s3
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r1.x, v5.xyzx, v5.xyzx
   7: rsq r1.x, r1.x
   8: mul r1.xyz, r1.xxxx, v5.xyzx
   9: dp3 r2.x, v2.xyzx, v2.xyzx
  10: rsq r2.x, r2.x
  11: mul r2.yzw, r2.xxxx, v2.xxyz
  12: div r3.xy, v7.xyxx, v7.wwww
  13: sample r3.xyzw, r3.xyxx, t1.xyzw, s5
  14: sample r4.xyzw, v1.xyxx, t2.xyzw, s4
  15: add r3.y, -cb0[9].y, l(1.000000)
  16: mad r3.y, r4.y, cb0[9].y, r3.y
  17: add r3.z, -cb0[8].w, l(1.000000)
  18: dp3 r3.w, r2.yzwy, r1.xyzx
  19: add r3.w, r3.w, r3.w
  20: mad r4.xyz, r1.xyzx, -r3.wwww, r2.yzwy
  21: mov r5.x, v3.w
  22: mov r5.y, v4.w
  23: mov r5.z, v5.w
  24: mov r3.w, cb4[0].x
  25: add r6.xyz, -r5.xyzx, cb3[r3.w + 64].xyzx
  26: ishl r3.w, cb4[0].x, l(2)
  27: mov r7.x, cb3[r3.w + 8].z
  28: mov r7.y, cb3[r3.w + 9].z
  29: mov r7.z, cb3[r3.w + 10].z
  30: dp3 r3.w, r6.xyzx, r7.xyzx
  31: add r6.xyz, r5.xyzx, -cb2[25].xyzx
  32: dp3 r4.w, r6.xyzx, r6.xyzx
  33: sqrt r4.w, r4.w
  34: add r4.w, -r3.w, r4.w
  35: mad r3.w, cb2[25].w, r4.w, r3.w
  36: mad_sat r3.w, r3.w, cb2[24].z, cb2[24].w
  37: add r4.w, -r3.x, l(1.000000)
  38: mad r3.x, r3.w, r4.w, r3.x
  39: mul r6.xyz, r3.xxxx, cb0[2].xyzx
  40: eq r3.x, cb6[0].x, l(1.000000)
  41: if_nz r3.x
  42:   eq r3.x, cb6[0].y, l(1.000000)
  43:   mul r7.xyz, v4.wwww, cb6[2].xyzx
  44:   mad r7.xyz, cb6[1].xyzx, v3.wwww, r7.xyzx
  45:   mad r7.xyz, cb6[3].xyzx, v5.wwww, r7.xyzx
  46:   add r7.xyz, r7.xyzx, cb6[4].xyzx
  47:   movc r7.xyz, r3.xxxx, r7.xyzx, r5.xyzx
  48:   add r7.xyz, r7.xyzx, -cb6[6].xyzx
  49:   mul r7.yzw, r7.xxyz, cb6[5].xxyz
  50:   mul r3.x, r7.y, l(0.250000)
  51:   mul r3.w, cb6[0].z, l(0.500000)
  52:   mad r4.w, -cb6[0].z, l(0.500000), l(0.250000)
  53:   max r3.x, r3.w, r3.x
  54:   min r7.x, r4.w, r3.x
  55:   sample r8.xyzw, r7.xzwx, t6.xyzw, s2
  56:   add r9.xyz, r7.xzwx, l(0.250000, 0.000000, 0.000000, 0.000000)
  57:   sample r9.xyzw, r9.xyzx, t6.xyzw, s2
  58:   add r7.xyz, r7.xzwx, l(0.500000, 0.000000, 0.000000, 0.000000)
  59:   sample r7.xyzw, r7.xyzx, t6.xyzw, s2
  60:   mov r1.w, l(1.000000)
  61:   dp4 r8.x, r8.xyzw, r1.xyzw
  62:   dp4 r8.y, r9.xyzw, r1.xyzw
  63:   dp4 r8.z, r7.xyzw, r1.xyzw
  64: else 
  65:   mov r1.w, l(1.000000)
  66:   dp4 r8.x, cb1[39].xyzw, r1.xyzw
  67:   dp4 r8.y, cb1[40].xyzw, r1.xyzw
  68:   dp4 r8.z, cb1[41].xyzw, r1.xyzw
  69: endif 
  70: mul r7.xyzw, r1.yzzx, r1.xyzz
  71: dp4 r9.x, cb1[42].xyzw, r7.xyzw
  72: dp4 r9.y, cb1[43].xyzw, r7.xyzw
  73: dp4 r9.z, cb1[44].xyzw, r7.xyzw
  74: mul r1.w, r1.y, r1.y
  75: mad r1.w, r1.x, r1.x, -r1.w
  76: mad r7.xyz, cb1[45].xyzx, r1.wwww, r9.xyzx
  77: add r7.xyz, r7.xyzx, r8.xyzx
  78: max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  79: sample r8.xyzw, v6.xyxx, t3.xyzw, s0
  80: add r7.xyz, r7.xyzx, r8.xyzx
  81: lt r1.w, l(0.000000), cb5[2].w
  82: if_nz r1.w
  83:   dp3 r1.w, r4.xyzx, r4.xyzx
  84:   rsq r1.w, r1.w
  85:   mul r8.xyz, r1.wwww, r4.xyzx
  86:   add r9.xyz, -r5.xyzx, cb5[0].xyzx
  87:   div r9.xyz, r9.xyzx, r8.xyzx
  88:   add r10.xyz, -r5.xyzx, cb5[1].xyzx
  89:   div r10.xyz, r10.xyzx, r8.xyzx
  90:   lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
  91:   movc r9.xyz, r11.xyzx, r9.xyzx, r10.xyzx
  92:   min r1.w, r9.y, r9.x
  93:   min r1.w, r9.z, r1.w
  94:   add r9.xyz, r5.xyzx, -cb5[2].xyzx
  95:   mad r8.xyz, r8.xyzx, r1.wwww, r9.xyzx
  96: else 
  97:   mov r8.xyz, r4.xyzx
  98: endif 
  99: mad r1.w, -r3.z, l(0.700000), l(1.700000)
 100: mul r1.w, r1.w, r3.z
 101: mul r1.w, r1.w, l(6.000000)
 102: sample_l r8.xyzw, r8.xyzx, t4.xyzw, s1, r1.w
 103: add r3.x, r8.w, l(-1.000000)
 104: mad r3.x, cb5[3].w, r3.x, l(1.000000)
 105: log r3.x, r3.x
 106: mul r3.x, r3.x, cb5[3].y
 107: exp r3.x, r3.x
 108: mul r3.x, r3.x, cb5[3].x
 109: mul r9.xyz, r8.xyzx, r3.xxxx
 110: lt r3.w, cb5[1].w, l(0.999990)
 111: if_nz r3.w
 112:   lt r3.w, l(0.000000), cb5[6].w
 113:   if_nz r3.w
 114:     dp3 r3.w, r4.xyzx, r4.xyzx
 115:     rsq r3.w, r3.w
 116:     mul r10.xyz, r3.wwww, r4.xyzx
 117:     add r11.xyz, -r5.xyzx, cb5[4].xyzx
 118:     div r11.xyz, r11.xyzx, r10.xyzx
 119:     add r12.xyz, -r5.xyzx, cb5[5].xyzx
 120:     div r12.xyz, r12.xyzx, r10.xyzx
 121:     lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
 122:     movc r11.xyz, r13.xyzx, r11.xyzx, r12.xyzx
 123:     min r3.w, r11.y, r11.x
 124:     min r3.w, r11.z, r3.w
 125:     add r5.xyz, r5.xyzx, -cb5[6].xyzx
 126:     mad r4.xyz, r10.xyzx, r3.wwww, r5.xyzx
 127:   endif 
 128:   sample_l r4.xyzw, r4.xyzx, t5.xyzw, s1, r1.w
 129:   add r1.w, r4.w, l(-1.000000)
 130:   mad r1.w, cb5[7].w, r1.w, l(1.000000)
 131:   log r1.w, r1.w
 132:   mul r1.w, r1.w, cb5[7].y
 133:   exp r1.w, r1.w
 134:   mul r1.w, r1.w, cb5[7].x
 135:   mul r4.xyz, r4.xyzx, r1.wwww
 136:   mad r5.xyz, r3.xxxx, r8.xyzx, -r4.xyzx
 137:   mad r9.xyz, cb5[1].wwww, r5.xyzx, r4.xyzx
 138: endif 
 139: mul r4.xyz, r3.yyyy, r9.xyzx
 140: mad r5.xyz, -v2.xyzx, r2.xxxx, cb1[0].xyzx
 141: dp3 r1.w, r5.xyzx, r5.xyzx
 142: max r1.w, r1.w, l(0.001000)
 143: rsq r1.w, r1.w
 144: mul r5.xyz, r1.wwww, r5.xyzx
 145: dp3 r1.w, r1.xyzx, -r2.yzwy
 146: dp3_sat r2.x, r1.xyzx, cb1[0].xyzx
 147: dp3_sat r1.x, r1.xyzx, r5.xyzx
 148: dp3_sat r1.y, cb1[0].xyzx, r5.xyzx
 149: mul r1.z, r1.y, r1.y
 150: dp2 r1.z, r1.zzzz, r3.zzzz
 151: add r1.z, r1.z, l(-0.500000)
 152: add r2.y, -r2.x, l(1.000000)
 153: mul r2.z, r2.y, r2.y
 154: mul r2.z, r2.z, r2.z
 155: mul r2.y, r2.y, r2.z
 156: mad r2.y, r1.z, r2.y, l(1.000000)
 157: add r2.z, -|r1.w|, l(1.000000)
 158: mul r2.w, r2.z, r2.z
 159: mul r2.w, r2.w, r2.w
 160: mul r2.z, r2.z, r2.w
 161: mad r1.z, r1.z, r2.z, l(1.000000)
 162: mul r1.z, r1.z, r2.y
 163: mul r2.y, r3.z, r3.z
 164: max r2.y, r2.y, l(0.002000)
 165: add r2.w, -r2.y, l(1.000000)
 166: mad r3.x, |r1.w|, r2.w, r2.y
 167: mad r2.w, r2.x, r2.w, r2.y
 168: mul r1.w, |r1.w|, r2.w
 169: mad r1.w, r2.x, r3.x, r1.w
 170: add r1.w, r1.w, l(0.000010)
 171: div r1.w, l(0.500000), r1.w
 172: mul r2.w, r2.y, r2.y
 173: mad r3.x, r1.x, r2.w, -r1.x
 174: mad r1.x, r3.x, r1.x, l(1.000000)
 175: mul r2.w, r2.w, l(0.318310)
 176: mad r1.x, r1.x, r1.x, l(0.000000)
 177: div r1.x, r2.w, r1.x
 178: mul r1.x, r1.x, r1.w
 179: mul r1.x, r1.x, l(3.141593)
 180: mul r1.xz, r2.xxxx, r1.xxzx
 181: max r1.x, r1.x, l(0.000000)
 182: mad r1.w, r2.y, r2.y, l(1.000000)
 183: div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
 184: dp3 r2.x, cb0[3].xyzx, cb0[3].xyzx
 185: ne r2.x, r2.x, l(0.000000)
 186: and r2.x, r2.x, l(0x3f800000)
 187: mul r1.x, r1.x, r2.x
 188: add r0.w, -r0.w, l(1.000000)
 189: add_sat r0.w, r0.w, cb0[8].w
 190: mul r2.xyw, r1.zzzz, r6.xyxz
 191: mad r2.xyw, r7.xyxz, r3.yyyy, r2.xyxw
 192: mul r3.xyz, r6.xyzx, r1.xxxx
 193: add r1.x, -r1.y, l(1.000000)
 194: mul r1.y, r1.x, r1.x
 195: mul r1.y, r1.y, r1.y
 196: mul r1.x, r1.x, r1.y
 197: add r5.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 198: mad r1.xyz, r5.xyzx, r1.xxxx, cb0[3].xyzx
 199: mul r1.xyz, r1.xyzx, r3.xyzx
 200: mad r0.xyz, r0.xyzx, r2.xywx, r1.xyzx
 201: mul r1.xyz, r4.xyzx, r1.wwww
 202: add r2.xyw, r0.wwww, -cb0[3].xyxz
 203: mad r2.xyz, r2.zzzz, r2.xywx, cb0[3].xyzx
 204: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
 205: mov o0.w, l(1.000000)
 206: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _SPECGLOSSMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 52 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: dp3 r2.x, v5.xyzx, v5.xyzx
   5: rsq r2.x, r2.x
   6: mul r2.xyz, r2.xxxx, v5.xyzx
   7: eq r2.w, cb3[0].x, l(1.000000)
   8: if_nz r2.w
   9:   eq r2.w, cb3[0].y, l(1.000000)
  10:   mul r3.xyz, v4.wwww, cb3[2].xyzx
  11:   mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  12:   mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  13:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  14:   mov r4.y, v3.w
  15:   mov r4.z, v4.w
  16:   mov r4.w, v5.w
  17:   movc r3.xyz, r2.wwww, r3.xyzx, r4.yzwy
  18:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  19:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  20:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  21:   mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
  22:   max r3.x, r2.w, r3.y
  23:   sample r3.xyzw, r3.xzwx, t5.xyzw, s1
  24: else 
  25:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  26: endif 
  27: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  28: sample r3.xyzw, v1.xyxx, t2.xyzw, s5
  29: mad r4.z, -r0.w, cb0[9].x, l(1.000000)
  30: dp3 r3.x, v2.xyzx, r2.xyzx
  31: add r3.x, r3.x, r3.x
  32: mad r3.xzw, r2.xxyz, -r3.xxxx, v2.xxyz
  33: mul r5.xyz, r2.wwww, cb0[2].xyzx
  34: mad r2.w, -r4.z, l(0.700000), l(1.700000)
  35: mul r2.w, r2.w, r4.z
  36: mul r2.w, r2.w, l(6.000000)
  37: sample_l r6.xyzw, r3.xzwx, t4.xyzw, s0, r2.w
  38: add r2.w, r6.w, l(-1.000000)
  39: mad r2.w, cb2[3].w, r2.w, l(1.000000)
  40: log r2.w, r2.w
  41: mul r2.w, r2.w, cb2[3].y
  42: exp r2.w, r2.w
  43: mul r2.w, r2.w, cb2[3].x
  44: mul r3.xzw, r6.xxyz, r2.wwww
  45: mul r3.xyz, r3.yyyy, r3.xzwx
  46: dp3 r2.w, -v2.xyzx, r2.xyzx
  47: add r3.w, r2.w, r2.w
  48: mad r6.xyz, r2.xyzx, -r3.wwww, -v2.xyzx
  49: dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
  50: mov_sat r2.w, r2.w
  51: dp3 r6.x, r6.xyzx, cb1[0].xyzx
  52: add r6.y, -r2.w, l(1.000000)
  53: mul r6.zw, r6.xxxy, r6.xxxy
  54: mul r2.yz, r6.xxyx, r6.xxwx
  55: mul r4.xy, r6.zyzz, r2.yzyy
  56: mad r0.w, r0.w, cb0[9].x, -r1.w
  57: add_sat r0.w, r0.w, l(1.000000)
  58: sample r6.xyzw, r4.xzxx, t3.xyzw, s2
  59: mul r2.y, r6.x, l(16.000000)
  60: mul r2.yzw, r0.xxyz, r2.yyyy
  61: mad r1.xyz, r1.xyzx, r1.wwww, r2.yzwy
  62: mul r2.xyz, r2.xxxx, r5.xyzx
  63: add r4.xzw, -r0.xxyz, r0.wwww
  64: mad r0.xyz, r4.yyyy, r4.xzwx, r0.xyzx
  65: mul r0.xyz, r0.xyzx, r3.xyzx
  66: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
  67: mov o0.w, l(1.000000)
  68: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL VERTEXLIGHT_ON 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mov r0.w, l(0)
  22: mov o3.xyzw, r0.wwwx
  23: mov o4.xyzw, r0.wwwy
  24: mov o5.w, r0.z
  25: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o6.xyzw, l(0,0,0,0)
  32: mov o7.xyzw, l(0,0,0,0)
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 52 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 2 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 4 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: dp3 r2.x, v5.xyzx, v5.xyzx
   5: rsq r2.x, r2.x
   6: mul r2.xyz, r2.xxxx, v5.xyzx
   7: eq r2.w, cb3[0].x, l(1.000000)
   8: if_nz r2.w
   9:   eq r2.w, cb3[0].y, l(1.000000)
  10:   mul r3.xyz, v4.wwww, cb3[2].xyzx
  11:   mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  12:   mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  13:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  14:   mov r4.y, v3.w
  15:   mov r4.z, v4.w
  16:   mov r4.w, v5.w
  17:   movc r3.xyz, r2.wwww, r3.xyzx, r4.yzwy
  18:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  19:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  20:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  21:   mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
  22:   max r3.x, r2.w, r3.y
  23:   sample r3.xyzw, r3.xzwx, t5.xyzw, s1
  24: else 
  25:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  26: endif 
  27: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  28: sample r3.xyzw, v1.xyxx, t2.xyzw, s5
  29: mad r4.z, -r0.w, cb0[9].x, l(1.000000)
  30: dp3 r3.x, v2.xyzx, r2.xyzx
  31: add r3.x, r3.x, r3.x
  32: mad r3.xzw, r2.xxyz, -r3.xxxx, v2.xxyz
  33: mul r5.xyz, r2.wwww, cb0[2].xyzx
  34: mad r2.w, -r4.z, l(0.700000), l(1.700000)
  35: mul r2.w, r2.w, r4.z
  36: mul r2.w, r2.w, l(6.000000)
  37: sample_l r6.xyzw, r3.xzwx, t4.xyzw, s0, r2.w
  38: add r2.w, r6.w, l(-1.000000)
  39: mad r2.w, cb2[3].w, r2.w, l(1.000000)
  40: log r2.w, r2.w
  41: mul r2.w, r2.w, cb2[3].y
  42: exp r2.w, r2.w
  43: mul r2.w, r2.w, cb2[3].x
  44: mul r3.xzw, r6.xxyz, r2.wwww
  45: mul r3.xyz, r3.yyyy, r3.xzwx
  46: dp3 r2.w, -v2.xyzx, r2.xyzx
  47: add r3.w, r2.w, r2.w
  48: mad r6.xyz, r2.xyzx, -r3.wwww, -v2.xyzx
  49: dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
  50: mov_sat r2.w, r2.w
  51: dp3 r6.x, r6.xyzx, cb1[0].xyzx
  52: add r6.y, -r2.w, l(1.000000)
  53: mul r6.zw, r6.xxxy, r6.xxxy
  54: mul r2.yz, r6.xxyx, r6.xxwx
  55: mul r4.xy, r6.zyzz, r2.yzyy
  56: add r2.y, -r1.w, l(1.000000)
  57: mad_sat r0.w, r0.w, cb0[9].x, r2.y
  58: sample r6.xyzw, r4.xzxx, t3.xyzw, s2
  59: mul r2.y, r6.x, l(16.000000)
  60: mul r2.yzw, r0.xxyz, r2.yyyy
  61: mad r1.xyz, r1.xyzx, r1.wwww, r2.yzwy
  62: mul r2.xyz, r2.xxxx, r5.xyzx
  63: add r4.xzw, -r0.xxyz, r0.wwww
  64: mad r0.xyz, r4.yyyy, r4.xzwx, r0.xyzx
  65: mul r0.xyz, r0.xyzx, r3.xyzx
  66: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
  67: mov o0.w, l(1.000000)
  68: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL UNITY_SINGLE_PASS_STEREO VERTEXLIGHT_ON 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  18: add r0.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  19: dp3 r0.w, r0.xyzx, r0.xyzx
  20: rsq r0.w, r0.w
  21: mul o2.xyz, r0.wwww, r0.xyzx
  22: mov o2.w, l(0)
  23: mov r1.w, l(0)
  24: mov o3.xyzw, r1.wwwx
  25: mov o4.xyzw, r1.wwwy
  26: mov o5.w, r1.z
  27: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  28: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  29: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  30: dp3 r0.w, r0.xyzx, r0.xyzx
  31: rsq r0.w, r0.w
  32: mul o5.xyz, r0.wwww, r0.xyzx
  33: mov o6.xyzw, l(0,0,0,0)
  34: mov o7.xyzw, l(0,0,0,0)
  35: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 58 math, 7 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 5
Set 2D Texture "_BumpMap" to slot 2 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 6
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s5
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: sample r2.xyzw, v1.xyxx, t2.xyzw, s4
   5: mul r2.x, r2.w, r2.x
   6: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   7: dp2 r2.z, r2.xyxx, r2.xyxx
   8: min r2.z, r2.z, l(1.000000)
   9: add r2.z, -r2.z, l(1.000000)
  10: sqrt r2.z, r2.z
  11: mul r3.xyz, r2.yyyy, v4.xyzx
  12: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  13: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  14: eq r2.w, cb3[0].x, l(1.000000)
  15: if_nz r2.w
  16:   eq r2.w, cb3[0].y, l(1.000000)
  17:   mul r3.xyz, v4.wwww, cb3[2].xyzx
  18:   mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  19:   mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  20:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  21:   mov r4.y, v3.w
  22:   mov r4.z, v4.w
  23:   mov r4.w, v5.w
  24:   movc r3.xyz, r2.wwww, r3.xyzx, r4.yzwy
  25:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  26:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  27:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  28:   mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
  29:   max r3.x, r2.w, r3.y
  30:   sample r3.xyzw, r3.xzwx, t6.xyzw, s1
  31: else 
  32:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  33: endif 
  34: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  35: sample r3.xyzw, v1.xyxx, t3.xyzw, s6
  36: mad r4.z, -r0.w, cb0[9].x, l(1.000000)
  37: dp3 r3.x, v2.xyzx, r2.xyzx
  38: add r3.x, r3.x, r3.x
  39: mad r3.xzw, r2.xxyz, -r3.xxxx, v2.xxyz
  40: mul r5.xyz, r2.wwww, cb0[2].xyzx
  41: mad r2.w, -r4.z, l(0.700000), l(1.700000)
  42: mul r2.w, r2.w, r4.z
  43: mul r2.w, r2.w, l(6.000000)
  44: sample_l r6.xyzw, r3.xzwx, t5.xyzw, s0, r2.w
  45: add r2.w, r6.w, l(-1.000000)
  46: mad r2.w, cb2[3].w, r2.w, l(1.000000)
  47: log r2.w, r2.w
  48: mul r2.w, r2.w, cb2[3].y
  49: exp r2.w, r2.w
  50: mul r2.w, r2.w, cb2[3].x
  51: mul r3.xzw, r6.xxyz, r2.wwww
  52: mul r3.xyz, r3.yyyy, r3.xzwx
  53: dp3 r2.w, -v2.xyzx, r2.xyzx
  54: add r3.w, r2.w, r2.w
  55: mad r6.xyz, r2.xyzx, -r3.wwww, -v2.xyzx
  56: dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
  57: mov_sat r2.w, r2.w
  58: dp3 r6.x, r6.xyzx, cb1[0].xyzx
  59: add r6.y, -r2.w, l(1.000000)
  60: mul r6.zw, r6.xxxy, r6.xxxy
  61: mul r2.yz, r6.xxyx, r6.xxwx
  62: mul r4.xy, r6.zyzz, r2.yzyy
  63: add r2.y, -r1.w, l(1.000000)
  64: mad_sat r0.w, r0.w, cb0[9].x, r2.y
  65: sample r6.xyzw, r4.xzxx, t4.xyzw, s2
  66: mul r2.y, r6.x, l(16.000000)
  67: mul r2.yzw, r0.xxyz, r2.yyyy
  68: mad r1.xyz, r1.xyzx, r1.wwww, r2.yzwy
  69: mul r2.xyz, r2.xxxx, r5.xyzx
  70: add r4.xzw, -r0.xxyz, r0.wwww
  71: mad r0.xyz, r4.yyyy, r4.xzwx, r0.xyzx
  72: mul r0.xyz, r0.xyzx, r3.xyzx
  73: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
  74: mov o0.w, l(1.000000)
  75: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL VERTEXLIGHT_ON 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mov o3.w, r0.x
  22: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  23: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  24: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  25: dp3 r0.x, r1.xyzx, r1.xyzx
  26: rsq r0.x, r0.x
  27: mul r1.xyz, r0.xxxx, r1.xyzx
  28: mov o3.xyz, r1.xyzx
  29: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  30: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  31: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  32: dp3 r0.x, r2.xyzx, r2.xyzx
  33: rsq r0.x, r0.x
  34: mul r2.xyz, r0.xxxx, r2.xyzx
  35: mul r3.xyz, r1.yzxy, r2.zxyz
  36: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  37: mov o5.xyz, r2.xyzx
  38: mul r0.x, v4.w, cb2[9].w
  39: mul o4.xyz, r0.xxxx, r1.xyzx
  40: mov o4.w, r0.y
  41: mov o5.w, r0.z
  42: mov o6.xyzw, l(0,0,0,0)
  43: mov o7.xyzw, l(0,0,0,0)
  44: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Vertex shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 58 math, 7 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 3
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 5
Set 2D Texture "_BumpMap" to slot 2 sampler slot 4
Set 2D Texture "_OcclusionMap" to slot 3 sampler slot 6
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 2
Set CUBE Texture "unity_SpecCube0" to slot 5 sampler slot 0
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 1

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityReflectionProbes" (128 bytes) on slot 2 {
  Vector4 unity_SpecCube0_HDR at 48
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 3 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float       
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[4], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s5
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s3
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: sample r2.xyzw, v1.xyxx, t2.xyzw, s4
   5: mul r2.x, r2.w, r2.x
   6: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   7: dp2 r2.z, r2.xyxx, r2.xyxx
   8: min r2.z, r2.z, l(1.000000)
   9: add r2.z, -r2.z, l(1.000000)
  10: sqrt r2.z, r2.z
  11: mul r3.xyz, r2.yyyy, v4.xyzx
  12: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  13: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  14: eq r2.w, cb3[0].x, l(1.000000)
  15: if_nz r2.w
  16:   eq r2.w, cb3[0].y, l(1.000000)
  17:   mul r3.xyz, v4.wwww, cb3[2].xyzx
  18:   mad r3.xyz, cb3[1].xyzx, v3.wwww, r3.xyzx
  19:   mad r3.xyz, cb3[3].xyzx, v5.wwww, r3.xyzx
  20:   add r3.xyz, r3.xyzx, cb3[4].xyzx
  21:   mov r4.y, v3.w
  22:   mov r4.z, v4.w
  23:   mov r4.w, v5.w
  24:   movc r3.xyz, r2.wwww, r3.xyzx, r4.yzwy
  25:   add r3.xyz, r3.xyzx, -cb3[6].xyzx
  26:   mul r3.yzw, r3.xxyz, cb3[5].xxyz
  27:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  28:   mad r3.y, cb3[0].z, l(0.500000), l(0.750000)
  29:   max r3.x, r2.w, r3.y
  30:   sample r3.xyzw, r3.xzwx, t6.xyzw, s1
  31: else 
  32:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  33: endif 
  34: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  35: sample r3.xyzw, v1.xyxx, t3.xyzw, s6
  36: mad r4.z, -r0.w, cb0[9].x, l(1.000000)
  37: dp3 r3.x, v2.xyzx, r2.xyzx
  38: add r3.x, r3.x, r3.x
  39: mad r3.xzw, r2.xxyz, -r3.xxxx, v2.xxyz
  40: mul r5.xyz, r2.wwww, cb0[2].xyzx
  41: mad r2.w, -r4.z, l(0.700000), l(1.700000)
  42: mul r2.w, r2.w, r4.z
  43: mul r2.w, r2.w, l(6.000000)
  44: sample_l r6.xyzw, r3.xzwx, t5.xyzw, s0, r2.w
  45: add r2.w, r6.w, l(-1.000000)
  46: mad r2.w, cb2[3].w, r2.w, l(1.000000)
  47: log r2.w, r2.w
  48: mul r2.w, r2.w, cb2[3].y
  49: exp r2.w, r2.w
  50: mul r2.w, r2.w, cb2[3].x
  51: mul r3.xzw, r6.xxyz, r2.wwww
  52: mul r3.xyz, r3.yyyy, r3.xzwx
  53: dp3 r2.w, -v2.xyzx, r2.xyzx
  54: add r3.w, r2.w, r2.w
  55: mad r6.xyz, r2.xyzx, -r3.wwww, -v2.xyzx
  56: dp3_sat r2.x, r2.xyzx, cb1[0].xyzx
  57: mov_sat r2.w, r2.w
  58: dp3 r6.x, r6.xyzx, cb1[0].xyzx
  59: add r6.y, -r2.w, l(1.000000)
  60: mul r6.zw, r6.xxxy, r6.xxxy
  61: mul r2.yz, r6.xxyx, r6.xxwx
  62: mul r4.xy, r6.zyzz, r2.yzyy
  63: add r2.y, -r1.w, l(1.000000)
  64: mad_sat r0.w, r0.w, cb0[9].x, r2.y
  65: sample r6.xyzw, r4.xzxx, t4.xyzw, s2
  66: mul r2.y, r6.x, l(16.000000)
  67: mul r2.yzw, r0.xxyz, r2.yyyy
  68: mad r1.xyz, r1.xyzx, r1.wwww, r2.yzwy
  69: mul r2.xyz, r2.xxxx, r5.xyzx
  70: add r4.xzw, -r0.xxyz, r0.wwww
  71: mad r0.xyz, r4.yyyy, r4.xzwx, r0.xyzx
  72: mul r0.xyz, r0.xyzx, r3.xyzx
  73: mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
  74: mov o0.w, l(1.000000)
  75: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL UNITY_SINGLE_PASS_STEREO VERTEXLIGHT_ON 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 36 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r0.yzw, cb1[3].xxyz, v0.wwww, r0.yyzw
  18: add r1.xyz, r0.yzwy, -cb2[r0.x + 64].xyzx
  19: dp3 r0.x, r1.xyzx, r1.xyzx
  20: rsq r0.x, r0.x
  21: mul o2.xyz, r0.xxxx, r1.xyzx
  22: mov o2.w, l(0)
  23: mov o3.w, r0.y
  24: mul r1.xyz, v4.yyyy, cb1[1].xyzx
  25: mad r1.xyz, cb1[0].xyzx, v4.xxxx, r1.xyzx
  26: mad r1.xyz, cb1[2].xyzx, v4.zzzz, r1.xyzx
  27: dp3 r0.x, r1.xyzx, r1.xyzx
  28: rsq r0.x, r0.x
  29: mul r1.xyz, r0.xxxx, r1.xyzx
  30: mov o3.xyz, r1.xyzx
  31: dp3 r2.x, v1.xyzx, cb1[4].xyzx
  32: dp3 r2.y, v1.xyzx, cb1[5].xyzx
  33: dp3 r2.z, v1.xyzx, cb1[6].xyzx
  34: dp3 r0.x, r2.xyzx, r2.xyzx
  35: rsq r0.x, r0.x
  36: mul r2.xyz, r0.xxxx, r2.xyzx
  37: mul r3.xyz, r1.yzxy, r2.zxyz
  38: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  39: mov o5.xyz, r2.xyzx
  40: mul r0.x, v4.w, cb1[9].w
  41: mul o4.xyz, r0.xxxx, r1.xyzx
  42: mov o4.w, r0.z
  43: mov o5.w, r0.w
  44: mov o6.xyzw, l(0,0,0,0)
  45: mov o7.xyzw, l(0,0,0,0)
  46: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mov r0.w, l(0)
  22: mov o3.xyzw, r0.wwwx
  23: mov o4.xyzw, r0.wwwy
  24: mov o5.w, r0.z
  25: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o6.xyzw, l(0,0,0,0)
  32: mov o7.xyzw, l(0,0,0,0)
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL UNITY_SINGLE_PASS_STEREO VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  18: add r0.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  19: dp3 r0.w, r0.xyzx, r0.xyzx
  20: rsq r0.w, r0.w
  21: mul o2.xyz, r0.wwww, r0.xyzx
  22: mov o2.w, l(0)
  23: mov r1.w, l(0)
  24: mov o3.xyzw, r1.wwwx
  25: mov o4.xyzw, r1.wwwy
  26: mov o5.w, r1.z
  27: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  28: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  29: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  30: dp3 r0.w, r0.xyzx, r0.xyzx
  31: rsq r0.w, r0.w
  32: mul o5.xyz, r0.wwww, r0.xyzx
  33: mov o6.xyzw, l(0,0,0,0)
  34: mov o7.xyzw, l(0,0,0,0)
  35: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH VERTEXLIGHT_ON 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 58 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  17: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r1.xyzx, r1.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r1.xyzx
  21: mov r0.w, l(0)
  22: mov o3.xyzw, r0.wwwx
  23: mov o4.xyzw, r0.wwwy
  24: mov o5.w, r0.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r1.xyzx, r1.xyzx
  29: rsq r0.w, r0.w
  30: mul r1.xyz, r0.wwww, r1.xyzx
  31: mov o5.xyz, r1.xyzx
  32: mul r0.w, r1.y, r1.y
  33: mad r0.w, r1.x, r1.x, -r0.w
  34: mul r2.xyzw, r1.yzzx, r1.xyzz
  35: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  36: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  37: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  38: mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
  39: mov r1.w, l(1.000000)
  40: dp4 r3.x, cb2[39].xyzw, r1.xyzw
  41: dp4 r3.y, cb2[40].xyzw, r1.xyzw
  42: dp4 r3.z, cb2[41].xyzw, r1.xyzw
  43: add r2.xyz, r2.xyzx, r3.xyzx
  44: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: add r3.xyzw, -r0.yyyy, cb2[4].xyzw
  46: mul r4.xyzw, r1.yyyy, r3.xyzw
  47: mul r3.xyzw, r3.xyzw, r3.xyzw
  48: add r5.xyzw, -r0.xxxx, cb2[3].xyzw
  49: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  50: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  51: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  52: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  53: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  54: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  55: rsq r3.xyzw, r0.xyzw
  56: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  57: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  58: mul r1.xyzw, r1.xyzw, r3.xyzw
  59: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  60: mul r0.xyzw, r0.xyzw, r1.xyzw
  61: mul r1.xyz, r0.yyyy, cb2[8].xyzx
  62: mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
  63: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
  64: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  65: add o6.xyz, r2.xyzx, r0.xyzx
  66: mov o6.w, l(0)
  67: mov o7.xyzw, l(0,0,0,0)
  68: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH UNITY_SINGLE_PASS_STEREO VERTEXLIGHT_ON 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mov r0.x, cb4[0].x
  15: mul r0.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r0.yzw, cb2[0].xxyz, v0.xxxx, r0.yyzw
  17: mad r0.yzw, cb2[2].xxyz, v0.zzzz, r0.yyzw
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r0.yzwy
  19: add r0.xyz, r1.xyzx, -cb3[r0.x + 64].xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: rsq r0.w, r0.w
  22: mul o2.xyz, r0.wwww, r0.xyzx
  23: mov r1.w, l(0)
  24: mov o3.xyzw, r1.wwwx
  25: mov o4.xyzw, r1.wwwy
  26: mov o5.w, r1.z
  27: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r0.w, r0.xyzx, r0.xyzx
  31: rsq r0.w, r0.w
  32: mul r0.xyz, r0.wwww, r0.xyzx
  33: mov o5.xyz, r0.xyzx
  34: mul r1.w, r0.y, r0.y
  35: mad r1.w, r0.x, r0.x, -r1.w
  36: mul r2.xyzw, r0.yzzx, r0.xyzz
  37: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  38: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  39: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  40: mad r2.xyz, cb1[45].xyzx, r1.wwww, r3.xyzx
  41: mov r0.w, l(1.000000)
  42: dp4 r3.x, cb1[39].xyzw, r0.xyzw
  43: dp4 r3.y, cb1[40].xyzw, r0.xyzw
  44: dp4 r3.z, cb1[41].xyzw, r0.xyzw
  45: add r2.xyz, r2.xyzx, r3.xyzx
  46: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: add r3.xyzw, -r1.yyyy, cb1[4].xyzw
  48: mul r4.xyzw, r0.yyyy, r3.xyzw
  49: mul r3.xyzw, r3.xyzw, r3.xyzw
  50: add r5.xyzw, -r1.xxxx, cb1[3].xyzw
  51: add r1.xyzw, -r1.zzzz, cb1[5].xyzw
  52: mad r4.xyzw, r5.xyzw, r0.xxxx, r4.xyzw
  53: mad r0.xyzw, r1.xyzw, r0.zzzz, r4.xyzw
  54: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  55: mad r1.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
  56: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  57: rsq r3.xyzw, r1.xyzw
  58: mad r1.xyzw, r1.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  59: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  60: mul r0.xyzw, r0.xyzw, r3.xyzw
  61: max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  62: mul r0.xyzw, r1.xyzw, r0.xyzw
  63: mul r1.xyz, r0.yyyy, cb1[8].xyzx
  64: mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
  65: mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
  66: mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
  67: add o6.xyz, r2.xyzx, r0.xyzx
  68: mov o6.w, l(0)
  69: mov o7.xyzw, l(0,0,0,0)
  70: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH VERTEXLIGHT_ON 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 68 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  17: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  18: dp3 r0.w, r1.xyzx, r1.xyzx
  19: rsq r0.w, r0.w
  20: mul o2.xyz, r0.wwww, r1.xyzx
  21: mul r1.xyz, v4.yyyy, cb3[1].xyzx
  22: mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
  23: mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
  24: dp3 r0.w, r1.xyzx, r1.xyzx
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: mov o3.xyz, r1.xyzx
  28: mov o3.w, r0.x
  29: mul r0.w, v4.w, cb3[9].w
  30: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  31: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  32: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  33: dp3 r1.w, r2.xyzx, r2.xyzx
  34: rsq r1.w, r1.w
  35: mul r2.xyz, r1.wwww, r2.xyzx
  36: mul r3.xyz, r1.yzxy, r2.zxyz
  37: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  38: mul o4.xyz, r0.wwww, r1.xyzx
  39: mov o4.w, r0.y
  40: mov o5.w, r0.z
  41: mov o5.xyz, r2.xyzx
  42: mul r0.w, r2.y, r2.y
  43: mad r0.w, r2.x, r2.x, -r0.w
  44: mul r1.xyzw, r2.yzzx, r2.xyzz
  45: dp4 r3.x, cb2[42].xyzw, r1.xyzw
  46: dp4 r3.y, cb2[43].xyzw, r1.xyzw
  47: dp4 r3.z, cb2[44].xyzw, r1.xyzw
  48: mad r1.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
  49: mov r2.w, l(1.000000)
  50: dp4 r3.x, cb2[39].xyzw, r2.xyzw
  51: dp4 r3.y, cb2[40].xyzw, r2.xyzw
  52: dp4 r3.z, cb2[41].xyzw, r2.xyzw
  53: add r1.xyz, r1.xyzx, r3.xyzx
  54: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  55: add r3.xyzw, -r0.yyyy, cb2[4].xyzw
  56: mul r4.xyzw, r2.yyyy, r3.xyzw
  57: mul r3.xyzw, r3.xyzw, r3.xyzw
  58: add r5.xyzw, -r0.xxxx, cb2[3].xyzw
  59: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  60: mad r4.xyzw, r5.xyzw, r2.xxxx, r4.xyzw
  61: mad r2.xyzw, r0.xyzw, r2.zzzz, r4.xyzw
  62: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  63: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  64: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  65: rsq r3.xyzw, r0.xyzw
  66: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  67: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  68: mul r2.xyzw, r2.xyzw, r3.xyzw
  69: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  70: mul r0.xyzw, r0.xyzw, r2.xyzw
  71: mul r2.xyz, r0.yyyy, cb2[8].xyzx
  72: mad r2.xyz, cb2[7].xyzx, r0.xxxx, r2.xyzx
  73: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r2.xyzx
  74: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  75: add o6.xyz, r1.xyzx, r0.xyzx
  76: mov o6.w, l(0)
  77: mov o7.xyzw, l(0,0,0,0)
  78: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH UNITY_SINGLE_PASS_STEREO VERTEXLIGHT_ON 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 69 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mov r0.x, cb4[0].x
  15: mul r0.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r0.yzw, cb2[0].xxyz, v0.xxxx, r0.yyzw
  17: mad r0.yzw, cb2[2].xxyz, v0.zzzz, r0.yyzw
  18: mad r0.yzw, cb2[3].xxyz, v0.wwww, r0.yyzw
  19: add r1.xyz, r0.yzwy, -cb3[r0.x + 64].xyzx
  20: dp3 r0.x, r1.xyzx, r1.xyzx
  21: rsq r0.x, r0.x
  22: mul o2.xyz, r0.xxxx, r1.xyzx
  23: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  24: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  25: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  26: dp3 r0.x, r1.xyzx, r1.xyzx
  27: rsq r0.x, r0.x
  28: mul r1.xyz, r0.xxxx, r1.xyzx
  29: mov o3.xyz, r1.xyzx
  30: mov o3.w, r0.y
  31: mul r0.x, v4.w, cb2[9].w
  32: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  33: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  34: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  35: dp3 r1.w, r2.xyzx, r2.xyzx
  36: rsq r1.w, r1.w
  37: mul r2.xyz, r1.wwww, r2.xyzx
  38: mul r3.xyz, r1.yzxy, r2.zxyz
  39: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  40: mul o4.xyz, r0.xxxx, r1.xyzx
  41: mov o4.w, r0.z
  42: mov o5.w, r0.w
  43: mov o5.xyz, r2.xyzx
  44: mul r0.x, r2.y, r2.y
  45: mad r0.x, r2.x, r2.x, -r0.x
  46: mul r1.xyzw, r2.yzzx, r2.xyzz
  47: dp4 r3.x, cb1[42].xyzw, r1.xyzw
  48: dp4 r3.y, cb1[43].xyzw, r1.xyzw
  49: dp4 r3.z, cb1[44].xyzw, r1.xyzw
  50: mad r1.xyz, cb1[45].xyzx, r0.xxxx, r3.xyzx
  51: mov r2.w, l(1.000000)
  52: dp4 r3.x, cb1[39].xyzw, r2.xyzw
  53: dp4 r3.y, cb1[40].xyzw, r2.xyzw
  54: dp4 r3.z, cb1[41].xyzw, r2.xyzw
  55: add r1.xyz, r1.xyzx, r3.xyzx
  56: max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  57: add r3.xyzw, -r0.zzzz, cb1[4].xyzw
  58: mul r4.xyzw, r2.yyyy, r3.xyzw
  59: mul r3.xyzw, r3.xyzw, r3.xyzw
  60: add r5.xyzw, -r0.yyyy, cb1[3].xyzw
  61: add r0.xyzw, -r0.wwww, cb1[5].xyzw
  62: mad r4.xyzw, r5.xyzw, r2.xxxx, r4.xyzw
  63: mad r2.xyzw, r0.xyzw, r2.zzzz, r4.xyzw
  64: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  65: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  66: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  67: rsq r3.xyzw, r0.xyzw
  68: mad r0.xyzw, r0.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  69: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  70: mul r2.xyzw, r2.xyzw, r3.xyzw
  71: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  72: mul r0.xyzw, r0.xyzw, r2.xyzw
  73: mul r2.xyz, r0.yyyy, cb1[8].xyzx
  74: mad r2.xyz, cb1[7].xyzx, r0.xxxx, r2.xyzx
  75: mad r0.xyz, cb1[9].xyzx, r0.zzzz, r2.xyzx
  76: mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
  77: add o6.xyz, r1.xyzx, r0.xyzx
  78: mov o6.w, l(0)
  79: mov o7.xyzw, l(0,0,0,0)
  80: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 58 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mov o2.w, l(0)
  13: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  15: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  16: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  17: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r1.xyzx, r1.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r1.xyzx
  21: mov r0.w, l(0)
  22: mov o3.xyzw, r0.wwwx
  23: mov o4.xyzw, r0.wwwy
  24: mov o5.w, r0.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r0.w, r1.xyzx, r1.xyzx
  29: rsq r0.w, r0.w
  30: mul r1.xyz, r0.wwww, r1.xyzx
  31: mov o5.xyz, r1.xyzx
  32: mul r0.w, r1.y, r1.y
  33: mad r0.w, r1.x, r1.x, -r0.w
  34: mul r2.xyzw, r1.yzzx, r1.xyzz
  35: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  36: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  37: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  38: mad r2.xyz, cb2[45].xyzx, r0.wwww, r3.xyzx
  39: mov r1.w, l(1.000000)
  40: dp4 r3.x, cb2[39].xyzw, r1.xyzw
  41: dp4 r3.y, cb2[40].xyzw, r1.xyzw
  42: dp4 r3.z, cb2[41].xyzw, r1.xyzw
  43: add r2.xyz, r2.xyzx, r3.xyzx
  44: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: add r3.xyzw, -r0.yyyy, cb2[4].xyzw
  46: mul r4.xyzw, r1.yyyy, r3.xyzw
  47: mul r3.xyzw, r3.xyzw, r3.xyzw
  48: add r5.xyzw, -r0.xxxx, cb2[3].xyzw
  49: add r0.xyzw, -r0.zzzz, cb2[5].xyzw
  50: mad r4.xyzw, r5.xyzw, r1.xxxx, r4.xyzw
  51: mad r1.xyzw, r0.xyzw, r1.zzzz, r4.xyzw
  52: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  53: mad r0.xyzw, r0.xyzw, r0.xyzw, r3.xyzw
  54: max r0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  55: rsq r3.xyzw, r0.xyzw
  56: mad r0.xyzw, r0.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  57: div r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyzw
  58: mul r1.xyzw, r1.xyzw, r3.xyzw
  59: max r1.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  60: mul r0.xyzw, r0.xyzw, r1.xyzw
  61: mul r1.xyz, r0.yyyy, cb2[8].xyzx
  62: mad r1.xyz, cb2[7].xyzx, r0.xxxx, r1.xyzx
  63: mad r0.xyz, cb2[9].xyzx, r0.zzzz, r1.xyzx
  64: mad r0.xyz, cb2[10].xyzx, r0.wwww, r0.xyzx
  65: add o6.xyz, r2.xyzx, r0.xyzx
  66: mov o6.w, l(0)
  67: mov o7.xyzw, l(0,0,0,0)
  68: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH UNITY_SINGLE_PASS_STEREO VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 59 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHAr at 624
  Vector4 unity_SHAg at 640
  Vector4 unity_SHAb at 656
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[46], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mov r0.x, cb4[0].x
  15: mul r0.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r0.yzw, cb2[0].xxyz, v0.xxxx, r0.yyzw
  17: mad r0.yzw, cb2[2].xxyz, v0.zzzz, r0.yyzw
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r0.yzwy
  19: add r0.xyz, r1.xyzx, -cb3[r0.x + 64].xyzx
  20: dp3 r0.w, r0.xyzx, r0.xyzx
  21: rsq r0.w, r0.w
  22: mul o2.xyz, r0.wwww, r0.xyzx
  23: mov r1.w, l(0)
  24: mov o3.xyzw, r1.wwwx
  25: mov o4.xyzw, r1.wwwy
  26: mov o5.w, r1.z
  27: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r0.w, r0.xyzx, r0.xyzx
  31: rsq r0.w, r0.w
  32: mul r0.xyz, r0.wwww, r0.xyzx
  33: mov o5.xyz, r0.xyzx
  34: mul r1.w, r0.y, r0.y
  35: mad r1.w, r0.x, r0.x, -r1.w
  36: mul r2.xyzw, r0.yzzx, r0.xyzz
  37: dp4 r3.x, cb1[42].xyzw, r2.xyzw
  38: dp4 r3.y, cb1[43].xyzw, r2.xyzw
  39: dp4 r3.z, cb1[44].xyzw, r2.xyzw
  40: mad r2.xyz, cb1[45].xyzx, r1.wwww, r3.xyzx
  41: mov r0.w, l(1.000000)
  42: dp4 r3.x, cb1[39].xyzw, r0.xyzw
  43: dp4 r3.y, cb1[40].xyzw, r0.xyzw
  44: dp4 r3.z, cb1[41].xyzw, r0.xyzw
  45: add r2.xyz, r2.xyzx, r3.xyzx
  46: max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: add r3.xyzw, -r1.yyyy, cb1[4].xyzw
  48: mul r4.xyzw, r0.yyyy, r3.xyzw
  49: mul r3.xyzw, r3.xyzw, r3.xyzw
  50: add r5.xyzw, -r1.xxxx, cb1[3].xyzw
  51: add r1.xyzw, -r1.zzzz, cb1[5].xyzw
  52: mad r4.xyzw, r5.xyzw, r0.xxxx, r4.xyzw
  53: mad r0.xyzw, r1.xyzw, r0.zzzz, r4.xyzw
  54: mad r3.xyzw, r5.xyzw, r5.xyzw, r3.xyzw
  55: mad r1.xyzw, r1.xyzw, r1.xyzw, r3.xyzw
  56: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  57: rsq r3.xyzw, r1.xyzw
  58: mad r1.xyzw, r1.xyzw, cb1[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  59: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  60: mul r0.xyzw, r0.xyzw, r3.xyzw
  61: max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  62: mul r0.xyzw, r1.xyzw, r0.xyzw
  63: mul r1.xyz, r0.yyyy, cb1[8].xyzx
  64: mad r1.xyz, cb1[7].xyzx, r0.xxxx, r1.xyzx
  65: mad r0.xyz, cb1[9].xyzx, r0.zzzz, r1.xyzx
  66: mad r0.xyz, cb1[10].xyzx, r0.wwww, r0.xyzx
  67: add o6.xyz, r2.xyzx, r0.xyzx
  68: mov o6.w, l(0)
  69: mov o7.xyzw, l(0,0,0,0)
  70: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul o5.xyz, r1.wwww, r1.xyzx
  29: mov o6.xyzw, l(0,0,0,0)
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO VERTEXLIGHT_ON 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[68], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  16: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  19: mov r2.x, cb4[0].x
  20: add o2.xyz, r1.xyzx, -cb3[r2.x + 64].xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mov o6.xyzw, l(0,0,0,0)
  32: mul r0.y, r0.y, cb1[4].x
  33: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  34: add r0.xy, r1.zzzz, r1.xwxx
  35: mul r1.xy, r0.wwww, cb3[r2.x + 66].zwzz
  36: mad o7.xy, r0.xyxx, cb3[r2.x + 66].xyxx, r1.xyxx
  37: mov o7.zw, r0.zzzw
  38: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov o3.w, r1.x
  20: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  21: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  22: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  23: dp3 r1.x, r2.xyzx, r2.xyzx
  24: rsq r1.x, r1.x
  25: mul r2.xyz, r1.xxxx, r2.xyzx
  26: mov o3.xyz, r2.xyzx
  27: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  28: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  29: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  30: dp3 r1.x, r3.xyzx, r3.xyzx
  31: rsq r1.x, r1.x
  32: mul r3.xyz, r1.xxxx, r3.xyzx
  33: mul r4.xyz, r2.yzxy, r3.zxyz
  34: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  35: mov o5.xyz, r3.xyzx
  36: mul r1.x, v4.w, cb2[9].w
  37: mul o4.xyz, r1.xxxx, r2.xyzx
  38: mov o4.w, r1.y
  39: mov o5.w, r1.z
  40: mov o6.xyzw, l(0,0,0,0)
  41: mul r0.y, r0.y, cb1[5].x
  42: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  43: mov o7.zw, r0.zzzw
  44: add o7.xy, r1.zzzz, r1.xwxx
  45: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO VERTEXLIGHT_ON 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 38 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[68], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  16: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  19: mov r1.w, cb4[0].x
  20: add o2.xyz, r1.xyzx, -cb3[r1.w + 64].xyzx
  21: mov o3.w, r1.x
  22: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  23: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  24: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  25: dp3 r1.x, r2.xyzx, r2.xyzx
  26: rsq r1.x, r1.x
  27: mul r2.xyz, r1.xxxx, r2.xyzx
  28: mov o3.xyz, r2.xyzx
  29: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  30: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  31: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  32: dp3 r1.x, r3.xyzx, r3.xyzx
  33: rsq r1.x, r1.x
  34: mul r3.xyz, r1.xxxx, r3.xyzx
  35: mul r4.xyz, r2.yzxy, r3.zxyz
  36: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r3.xyzx
  38: mul r1.x, v4.w, cb2[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r1.y
  41: mov o5.w, r1.z
  42: mov o6.xyzw, l(0,0,0,0)
  43: mul r0.y, r0.y, cb1[4].x
  44: mul r2.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  45: add r0.xy, r2.zzzz, r2.xwxx
  46: mul r1.xy, r0.wwww, cb3[r1.w + 66].zwzz
  47: mad o7.xy, r0.xyxx, cb3[r1.w + 66].xyxx, r1.xyxx
  48: mov o7.zw, r0.zzzw
  49: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  15: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  24: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  25: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  26: dp3 r1.w, r1.xyzx, r1.xyzx
  27: rsq r1.w, r1.w
  28: mul o5.xyz, r1.wwww, r1.xyzx
  29: mov o6.xyzw, l(0,0,0,0)
  30: mul r0.y, r0.y, cb1[5].x
  31: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  32: mov o7.zw, r0.zzzw
  33: add o7.xy, r1.zzzz, r1.xwxx
  34: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[68], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb2[1].xyzx
  16: mad r1.xyz, cb2[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb2[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb2[3].xyzx, v0.wwww, r1.xyzx
  19: mov r2.x, cb4[0].x
  20: add o2.xyz, r1.xyzx, -cb3[r2.x + 64].xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mov o6.xyzw, l(0,0,0,0)
  32: mul r0.y, r0.y, cb1[4].x
  33: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  34: add r0.xy, r1.zzzz, r1.xwxx
  35: mul r1.xy, r0.wwww, cb3[r2.x + 66].zwzz
  36: mad o7.xy, r0.xyxx, cb3[r2.x + 66].xyxx, r1.xyxx
  37: mov o7.zw, r0.zzzw
  38: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 53 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r1.w, r2.xyzx, r2.xyzx
  27: rsq r1.w, r1.w
  28: mul r2.xyz, r1.wwww, r2.xyzx
  29: mov o5.xyz, r2.xyzx
  30: add r3.xyzw, -r1.xxxx, cb2[3].xyzw
  31: add r4.xyzw, -r1.yyyy, cb2[4].xyzw
  32: add r1.xyzw, -r1.zzzz, cb2[5].xyzw
  33: mul r5.xyzw, r2.yyyy, r4.xyzw
  34: mul r4.xyzw, r4.xyzw, r4.xyzw
  35: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  36: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  37: mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
  38: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  39: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  40: rsq r4.xyzw, r1.xyzw
  41: mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  42: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  43: mul r3.xyzw, r3.xyzw, r4.xyzw
  44: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: mul r1.xyzw, r1.xyzw, r3.xyzw
  46: mul r3.xyz, r1.yyyy, cb2[8].xyzx
  47: mad r3.xyz, cb2[7].xyzx, r1.xxxx, r3.xyzx
  48: mad r1.xyz, cb2[9].xyzx, r1.zzzz, r3.xyzx
  49: mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
  50: mul r1.w, r2.y, r2.y
  51: mad r1.w, r2.x, r2.x, -r1.w
  52: mul r2.xyzw, r2.yzzx, r2.xyzz
  53: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  54: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  55: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  56: mad r2.xyz, cb2[45].xyzx, r1.wwww, r3.xyzx
  57: add o6.xyz, r1.xyzx, r2.xyzx
  58: mov o6.w, l(0)
  59: mul r0.y, r0.y, cb1[5].x
  60: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  61: mov o7.zw, r0.zzzw
  62: add o7.xy, r1.zzzz, r1.xwxx
  63: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO VERTEXLIGHT_ON 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 56 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 4 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 5 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[68], dynamicIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: ishl r1.x, cb5[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb4[r1.x + 25].xyzw
   6: mad r2.xyzw, cb4[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb4[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  16: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  19: mov r2.x, cb5[0].x
  20: add o2.xyz, r1.xyzx, -cb4[r2.x + 64].xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r3.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r3.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r3.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r3.xyzx, r3.xyzx
  29: rsq r1.w, r1.w
  30: mul r2.yzw, r1.wwww, r3.xxyz
  31: mov o5.xyz, r2.yzwy
  32: add r3.xyzw, -r1.xxxx, cb2[3].xyzw
  33: add r4.xyzw, -r1.yyyy, cb2[4].xyzw
  34: add r1.xyzw, -r1.zzzz, cb2[5].xyzw
  35: mul r5.xyzw, r2.zzzz, r4.xyzw
  36: mul r4.xyzw, r4.xyzw, r4.xyzw
  37: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  38: mad r3.xyzw, r3.xyzw, r2.yyyy, r5.xyzw
  39: mad r3.xyzw, r1.xyzw, r2.wwww, r3.xyzw
  40: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  41: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  42: rsq r4.xyzw, r1.xyzw
  43: mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  44: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  45: mul r3.xyzw, r3.xyzw, r4.xyzw
  46: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: mul r1.xyzw, r1.xyzw, r3.xyzw
  48: mul r3.xyz, r1.yyyy, cb2[8].xyzx
  49: mad r3.xyz, cb2[7].xyzx, r1.xxxx, r3.xyzx
  50: mad r1.xyz, cb2[9].xyzx, r1.zzzz, r3.xyzx
  51: mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
  52: mul r1.w, r2.z, r2.z
  53: mad r1.w, r2.y, r2.y, -r1.w
  54: mul r3.xyzw, r2.zwwy, r2.yzww
  55: dp4 r4.x, cb2[42].xyzw, r3.xyzw
  56: dp4 r4.y, cb2[43].xyzw, r3.xyzw
  57: dp4 r4.z, cb2[44].xyzw, r3.xyzw
  58: mad r2.yzw, cb2[45].xxyz, r1.wwww, r4.xxyz
  59: add o6.xyz, r1.xyzx, r2.yzwy
  60: mov o6.w, l(0)
  61: mul r0.y, r0.y, cb1[4].x
  62: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  63: add r0.xy, r1.zzzz, r1.xwxx
  64: mul r1.xy, r0.wwww, cb4[r2.x + 66].zwzz
  65: mad o7.xy, r0.xyxx, cb4[r2.x + 66].xyxx, r1.xyxx
  66: mov o7.zw, r0.zzzw
  67: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 63 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mov o3.w, r1.x
  27: dp3 r3.x, v1.xyzx, cb3[4].xyzx
  28: dp3 r3.y, v1.xyzx, cb3[5].xyzx
  29: dp3 r3.z, v1.xyzx, cb3[6].xyzx
  30: dp3 r1.w, r3.xyzx, r3.xyzx
  31: rsq r1.w, r1.w
  32: mul r3.xyz, r1.wwww, r3.xyzx
  33: mul r4.xyz, r2.yzxy, r3.zxyz
  34: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  35: mul r1.w, v4.w, cb3[9].w
  36: mul o4.xyz, r1.wwww, r2.xyzx
  37: mov o4.w, r1.y
  38: mov o5.w, r1.z
  39: mov o5.xyz, r3.xyzx
  40: add r2.xyzw, -r1.xxxx, cb2[3].xyzw
  41: add r4.xyzw, -r1.yyyy, cb2[4].xyzw
  42: add r1.xyzw, -r1.zzzz, cb2[5].xyzw
  43: mul r5.xyzw, r3.yyyy, r4.xyzw
  44: mul r4.xyzw, r4.xyzw, r4.xyzw
  45: mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
  46: mad r2.xyzw, r2.xyzw, r3.xxxx, r5.xyzw
  47: mad r2.xyzw, r1.xyzw, r3.zzzz, r2.xyzw
  48: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  49: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  50: rsq r4.xyzw, r1.xyzw
  51: mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  52: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  53: mul r2.xyzw, r2.xyzw, r4.xyzw
  54: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  55: mul r1.xyzw, r1.xyzw, r2.xyzw
  56: mul r2.xyz, r1.yyyy, cb2[8].xyzx
  57: mad r2.xyz, cb2[7].xyzx, r1.xxxx, r2.xyzx
  58: mad r1.xyz, cb2[9].xyzx, r1.zzzz, r2.xyzx
  59: mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
  60: mul r1.w, r3.y, r3.y
  61: mad r1.w, r3.x, r3.x, -r1.w
  62: mul r2.xyzw, r3.yzzx, r3.xyzz
  63: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  64: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  65: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  66: mad r2.xyz, cb2[45].xyzx, r1.wwww, r3.xyzx
  67: add o6.xyz, r1.xyzx, r2.xyzx
  68: mov o6.w, l(0)
  69: mul r0.y, r0.y, cb1[5].x
  70: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  71: mov o7.zw, r0.zzzw
  72: add o7.xy, r1.zzzz, r1.xwxx
  73: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO VERTEXLIGHT_ON 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 66 math, 7 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 4 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 5 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[68], dynamicIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 7
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: ishl r1.x, cb5[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb4[r1.x + 25].xyzw
   6: mad r2.xyzw, cb4[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb4[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  16: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  19: mov r1.w, cb5[0].x
  20: add o2.xyz, r1.xyzx, -cb4[r1.w + 64].xyzx
  21: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  22: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  23: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  24: dp3 r2.w, r2.xyzx, r2.xyzx
  25: rsq r2.w, r2.w
  26: mul r2.xyz, r2.wwww, r2.xyzx
  27: mov o3.xyz, r2.xyzx
  28: mov o3.w, r1.x
  29: dp3 r3.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r3.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r3.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r2.w, r3.xyzx, r3.xyzx
  33: rsq r2.w, r2.w
  34: mul r3.xyz, r2.wwww, r3.xyzx
  35: mul r4.xyz, r2.yzxy, r3.zxyz
  36: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  37: mul r2.w, v4.w, cb3[9].w
  38: mul o4.xyz, r2.wwww, r2.xyzx
  39: mov o4.w, r1.y
  40: mov o5.w, r1.z
  41: mov o5.xyz, r3.xyzx
  42: add r2.xyzw, -r1.xxxx, cb2[3].xyzw
  43: add r4.xyzw, -r1.yyyy, cb2[4].xyzw
  44: add r5.xyzw, -r1.zzzz, cb2[5].xyzw
  45: mul r6.xyzw, r3.yyyy, r4.xyzw
  46: mul r4.xyzw, r4.xyzw, r4.xyzw
  47: mad r4.xyzw, r2.xyzw, r2.xyzw, r4.xyzw
  48: mad r2.xyzw, r2.xyzw, r3.xxxx, r6.xyzw
  49: mad r2.xyzw, r5.xyzw, r3.zzzz, r2.xyzw
  50: mad r4.xyzw, r5.xyzw, r5.xyzw, r4.xyzw
  51: max r4.xyzw, r4.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  52: rsq r5.xyzw, r4.xyzw
  53: mad r4.xyzw, r4.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  54: div r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r4.xyzw
  55: mul r2.xyzw, r2.xyzw, r5.xyzw
  56: max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  57: mul r2.xyzw, r4.xyzw, r2.xyzw
  58: mul r1.xyz, r2.yyyy, cb2[8].xyzx
  59: mad r1.xyz, cb2[7].xyzx, r2.xxxx, r1.xyzx
  60: mad r1.xyz, cb2[9].xyzx, r2.zzzz, r1.xyzx
  61: mad r1.xyz, cb2[10].xyzx, r2.wwww, r1.xyzx
  62: mul r2.x, r3.y, r3.y
  63: mad r2.x, r3.x, r3.x, -r2.x
  64: mul r3.xyzw, r3.yzzx, r3.xyzz
  65: dp4 r4.x, cb2[42].xyzw, r3.xyzw
  66: dp4 r4.y, cb2[43].xyzw, r3.xyzw
  67: dp4 r4.z, cb2[44].xyzw, r3.xyzw
  68: mad r2.xyz, cb2[45].xyzx, r2.xxxx, r4.xyzx
  69: add o6.xyz, r1.xyzx, r2.xyzx
  70: mov o6.w, l(0)
  71: mul r0.y, r0.y, cb1[4].x
  72: mul r2.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  73: add r0.xy, r2.zzzz, r2.xwxx
  74: mul r1.xy, r0.wwww, cb4[r1.w + 66].zwzz
  75: mad o7.xy, r0.xyxx, cb4[r1.w + 66].xyxx, r1.xyxx
  76: mov o7.zw, r0.zzzw
  77: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 53 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov o2.w, l(0)
  14: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  16: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  17: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  18: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  19: mov r1.w, l(0)
  20: mov o3.xyzw, r1.wwwx
  21: mov o4.xyzw, r1.wwwy
  22: mov o5.w, r1.z
  23: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  24: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  25: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  26: dp3 r1.w, r2.xyzx, r2.xyzx
  27: rsq r1.w, r1.w
  28: mul r2.xyz, r1.wwww, r2.xyzx
  29: mov o5.xyz, r2.xyzx
  30: add r3.xyzw, -r1.xxxx, cb2[3].xyzw
  31: add r4.xyzw, -r1.yyyy, cb2[4].xyzw
  32: add r1.xyzw, -r1.zzzz, cb2[5].xyzw
  33: mul r5.xyzw, r2.yyyy, r4.xyzw
  34: mul r4.xyzw, r4.xyzw, r4.xyzw
  35: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  36: mad r3.xyzw, r3.xyzw, r2.xxxx, r5.xyzw
  37: mad r3.xyzw, r1.xyzw, r2.zzzz, r3.xyzw
  38: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  39: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  40: rsq r4.xyzw, r1.xyzw
  41: mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  42: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  43: mul r3.xyzw, r3.xyzw, r4.xyzw
  44: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  45: mul r1.xyzw, r1.xyzw, r3.xyzw
  46: mul r3.xyz, r1.yyyy, cb2[8].xyzx
  47: mad r3.xyz, cb2[7].xyzx, r1.xxxx, r3.xyzx
  48: mad r1.xyz, cb2[9].xyzx, r1.zzzz, r3.xyzx
  49: mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
  50: mul r1.w, r2.y, r2.y
  51: mad r1.w, r2.x, r2.x, -r1.w
  52: mul r2.xyzw, r2.yzzx, r2.xyzz
  53: dp4 r3.x, cb2[42].xyzw, r2.xyzw
  54: dp4 r3.y, cb2[43].xyzw, r2.xyzw
  55: dp4 r3.z, cb2[44].xyzw, r2.xyzw
  56: mad r2.xyz, cb2[45].xyzx, r1.wwww, r3.xyzx
  57: add o6.xyz, r1.xyzx, r2.xyzx
  58: mov o6.w, l(0)
  59: mul r0.y, r0.y, cb1[5].x
  60: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  61: mov o7.zw, r0.zzzw
  62: add o7.xy, r1.zzzz, r1.xwxx
  63: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL LIGHTPROBE_SH SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO VERTEXLIGHT_ON 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 56 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_4LightPosX0 at 48
  Vector4 unity_4LightPosY0 at 64
  Vector4 unity_4LightPosZ0 at 80
  Vector4 unity_4LightAtten0 at 96
  Vector4 unity_LightColor[8] at 112
  Vector4 unity_SHBr at 672
  Vector4 unity_SHBg at 688
  Vector4 unity_SHBb at 704
  Vector4 unity_SHC at 720
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 4 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 5 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[46], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[68], dynamicIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: ishl r1.x, cb5[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb4[r1.x + 25].xyzw
   6: mad r2.xyzw, cb4[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb4[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  16: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  19: mov r2.x, cb5[0].x
  20: add o2.xyz, r1.xyzx, -cb4[r2.x + 64].xyzx
  21: mov r1.w, l(0)
  22: mov o3.xyzw, r1.wwwx
  23: mov o4.xyzw, r1.wwwy
  24: mov o5.w, r1.z
  25: dp3 r3.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r3.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r3.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r3.xyzx, r3.xyzx
  29: rsq r1.w, r1.w
  30: mul r2.yzw, r1.wwww, r3.xxyz
  31: mov o5.xyz, r2.yzwy
  32: add r3.xyzw, -r1.xxxx, cb2[3].xyzw
  33: add r4.xyzw, -r1.yyyy, cb2[4].xyzw
  34: add r1.xyzw, -r1.zzzz, cb2[5].xyzw
  35: mul r5.xyzw, r2.zzzz, r4.xyzw
  36: mul r4.xyzw, r4.xyzw, r4.xyzw
  37: mad r4.xyzw, r3.xyzw, r3.xyzw, r4.xyzw
  38: mad r3.xyzw, r3.xyzw, r2.yyyy, r5.xyzw
  39: mad r3.xyzw, r1.xyzw, r2.wwww, r3.xyzw
  40: mad r1.xyzw, r1.xyzw, r1.xyzw, r4.xyzw
  41: max r1.xyzw, r1.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
  42: rsq r4.xyzw, r1.xyzw
  43: mad r1.xyzw, r1.xyzw, cb2[6].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  44: div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyzw
  45: mul r3.xyzw, r3.xyzw, r4.xyzw
  46: max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  47: mul r1.xyzw, r1.xyzw, r3.xyzw
  48: mul r3.xyz, r1.yyyy, cb2[8].xyzx
  49: mad r3.xyz, cb2[7].xyzx, r1.xxxx, r3.xyzx
  50: mad r1.xyz, cb2[9].xyzx, r1.zzzz, r3.xyzx
  51: mad r1.xyz, cb2[10].xyzx, r1.wwww, r1.xyzx
  52: mul r1.w, r2.z, r2.z
  53: mad r1.w, r2.y, r2.y, -r1.w
  54: mul r3.xyzw, r2.zwwy, r2.yzww
  55: dp4 r4.x, cb2[42].xyzw, r3.xyzw
  56: dp4 r4.y, cb2[43].xyzw, r3.xyzw
  57: dp4 r4.z, cb2[44].xyzw, r3.xyzw
  58: mad r2.yzw, cb2[45].xxyz, r1.wwww, r4.xxyz
  59: add o6.xyz, r1.xyzx, r2.yzwy
  60: mov o6.w, l(0)
  61: mul r0.y, r0.y, cb1[4].x
  62: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  63: add r0.xy, r1.zzzz, r1.xwxx
  64: mul r1.xy, r0.wwww, cb4[r2.x + 66].zwzz
  65: mad o7.xy, r0.xyxx, cb4[r2.x + 66].xyxx, r1.xyxx
  66: mov o7.zw, r0.zzzw
  67: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 25 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r1.w, r1.xyzx, r1.xyzx
  18: rsq r1.w, r1.w
  19: mul o2.xyz, r1.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mov r0.w, l(0)
  22: mov o3.xyzw, r0.wwwx
  23: mov o4.xyzw, r0.wwwy
  24: mov o5.w, r0.z
  25: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  26: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  27: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  28: dp3 r0.w, r0.xyzx, r0.xyzx
  29: rsq r0.w, r0.w
  30: mul o5.xyz, r0.wwww, r0.xyzx
  31: mov o6.xyzw, l(0,0,0,0)
  32: mov o7.xyzw, l(0,0,0,0)
  33: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[7], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r1.xyz, cb1[3].xyzx, v0.wwww, r0.yzwy
  18: add r0.xyz, r1.xyzx, -cb2[r0.x + 64].xyzx
  19: dp3 r0.w, r0.xyzx, r0.xyzx
  20: rsq r0.w, r0.w
  21: mul o2.xyz, r0.wwww, r0.xyzx
  22: mov o2.w, l(0)
  23: mov r1.w, l(0)
  24: mov o3.xyzw, r1.wwwx
  25: mov o4.xyzw, r1.wwwy
  26: mov o5.w, r1.z
  27: dp3 r0.x, v1.xyzx, cb1[4].xyzx
  28: dp3 r0.y, v1.xyzx, cb1[5].xyzx
  29: dp3 r0.z, v1.xyzx, cb1[6].xyzx
  30: dp3 r0.w, r0.xyzx, r0.xyzx
  31: rsq r0.w, r0.w
  32: mul o5.xyz, r0.wwww, r0.xyzx
  33: mov o6.xyzw, l(0,0,0,0)
  34: mov o7.xyzw, l(0,0,0,0)
  35: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb3[18].xyzw
   5: mad r1.xyzw, cb3[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb3[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb3[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb2[1].xyzx
  13: mad r0.xyz, cb2[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb2[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb2[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mov o3.w, r0.x
  22: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  23: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  24: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  25: dp3 r0.x, r1.xyzx, r1.xyzx
  26: rsq r0.x, r0.x
  27: mul r1.xyz, r0.xxxx, r1.xyzx
  28: mov o3.xyz, r1.xyzx
  29: dp3 r2.x, v1.xyzx, cb2[4].xyzx
  30: dp3 r2.y, v1.xyzx, cb2[5].xyzx
  31: dp3 r2.z, v1.xyzx, cb2[6].xyzx
  32: dp3 r0.x, r2.xyzx, r2.xyzx
  33: rsq r0.x, r0.x
  34: mul r2.xyz, r0.xxxx, r2.xyzx
  35: mul r3.xyz, r1.yzxy, r2.zxyz
  36: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  37: mov o5.xyz, r2.xyzx
  38: mul r0.x, v4.w, cb2[9].w
  39: mul o4.xyz, r0.xxxx, r1.xyzx
  40: mov o4.w, r0.y
  41: mov o5.w, r0.z
  42: mov o6.xyzw, l(0,0,0,0)
  43: mov o7.xyzw, l(0,0,0,0)
  44: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 36 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 1 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 2 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 3 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyzw        6     NONE   float   xyzw
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[10], immediateIndexed
      dcl_constantbuffer CB2[66], dynamicIndexed
      dcl_constantbuffer CB3[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyzw
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb1[1].xyzw
   1: mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb1[3].xyzw
   4: ishl r1.x, cb3[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb2[r1.x + 25].xyzw
   6: mad r2.xyzw, cb2[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb2[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb2[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb3[0].x
  14: mul r0.yzw, v0.yyyy, cb1[1].xxyz
  15: mad r0.yzw, cb1[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb1[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r0.yzw, cb1[3].xxyz, v0.wwww, r0.yyzw
  18: add r1.xyz, r0.yzwy, -cb2[r0.x + 64].xyzx
  19: dp3 r0.x, r1.xyzx, r1.xyzx
  20: rsq r0.x, r0.x
  21: mul o2.xyz, r0.xxxx, r1.xyzx
  22: mov o2.w, l(0)
  23: mov o3.w, r0.y
  24: mul r1.xyz, v4.yyyy, cb1[1].xyzx
  25: mad r1.xyz, cb1[0].xyzx, v4.xxxx, r1.xyzx
  26: mad r1.xyz, cb1[2].xyzx, v4.zzzz, r1.xyzx
  27: dp3 r0.x, r1.xyzx, r1.xyzx
  28: rsq r0.x, r0.x
  29: mul r1.xyz, r0.xxxx, r1.xyzx
  30: mov o3.xyz, r1.xyzx
  31: dp3 r2.x, v1.xyzx, cb1[4].xyzx
  32: dp3 r2.y, v1.xyzx, cb1[5].xyzx
  33: dp3 r2.z, v1.xyzx, cb1[6].xyzx
  34: dp3 r0.x, r2.xyzx, r2.xyzx
  35: rsq r0.x, r0.x
  36: mul r2.xyz, r0.xxxx, r2.xyzx
  37: mul r3.xyz, r1.yzxy, r2.zxyz
  38: mad r1.xyz, r2.yzxy, r1.zxyz, -r3.xyzx
  39: mov o5.xyz, r2.xyzx
  40: mul r0.x, v4.w, cb1[9].w
  41: mul o4.xyz, r0.xxxx, r1.xyzx
  42: mov o4.w, r0.z
  43: mov o5.w, r0.w
  44: mov o6.xyzw, l(0,0,0,0)
  45: mov o7.xyzw, l(0,0,0,0)
  46: ret 
// Approximately 0 instruction slots used


-- Fragment shader for "d3d11":
// No shader variant for this keyword set. The closest match will be used instead.

 }


 // Stats for Vertex shader:
 //        d3d11: 35 avg math (26..45)
 // Stats for Fragment shader:
 //        d3d11: 51 avg math (31..109), 4 avg texture (3..7), 1 avg branch (0..2)
 Pass {
  Name "FORWARD_DELTA"
  Tags { "LIGHTMODE"="FORWARDADD" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  ZWrite Off
  Blend [_SrcBlend] One
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: POINT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov r1.w, l(0)
  28: mov o3.xyzw, r1.wwwx
  29: mov o4.xyzw, r1.wwwy
  30: mov o5.w, r1.z
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul o5.xyz, r1.wwww, r1.xyzx
  37: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  38: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  39: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  40: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  41: mov o8.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 37 math, 5 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: add r0.w, -cb0[3].x, l(1.000000)
   3: dp3 r1.x, v5.xyzx, v5.xyzx
   4: rsq r1.x, r1.x
   5: mul r1.xyz, r1.xxxx, v5.xyzx
   6: mul r2.xyz, v6.yyyy, cb0[12].xyzx
   7: mad r2.xyz, cb0[11].xyzx, v6.xxxx, r2.xyzx
   8: mad r2.xyz, cb0[13].xyzx, v6.zzzz, r2.xyzx
   9: add r2.xyz, r2.xyzx, cb0[14].xyzx
  10: eq r1.w, cb2[0].x, l(1.000000)
  11: if_nz r1.w
  12:   eq r1.w, cb2[0].y, l(1.000000)
  13:   mul r3.xyz, v6.yyyy, cb2[2].xyzx
  14:   mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
  15:   mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
  16:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  17:   movc r3.xyz, r1.wwww, r3.xyzx, v6.xyzx
  18:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  19:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  20:   mad r1.w, r3.y, l(0.250000), l(0.750000)
  21:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  22:   max r3.x, r1.w, r2.w
  23:   sample r3.xyzw, r3.xzwx, t3.xyzw, s0
  24: else 
  25:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  26: endif 
  27: dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
  28: dp3 r2.x, r2.xyzx, r2.xyzx
  29: sample r2.xyzw, r2.xxxx, t1.xyzw, s3
  30: mul r1.w, r1.w, r2.x
  31: mul r2.xyz, r1.wwww, cb0[2].xyzx
  32: dp3 r1.w, -v2.xyzx, r1.xyzx
  33: add r1.w, r1.w, r1.w
  34: mad r3.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  35: mov r4.x, v3.w
  36: mov r4.y, v4.w
  37: mov r4.z, v5.w
  38: dp3_sat r1.x, r1.xyzx, r4.xyzx
  39: dp3 r1.y, r3.xyzx, r4.xyzx
  40: mul r1.y, r1.y, r1.y
  41: mul r3.x, r1.y, r1.y
  42: add r3.y, -cb0[8].w, l(1.000000)
  43: sample r3.xyzw, r3.xyxx, t2.xyzw, s1
  44: mul r1.y, r3.x, l(16.000000)
  45: mul r1.yzw, r1.yyyy, cb0[3].xxyz
  46: mad r0.xyz, r0.xyzx, r0.wwww, r1.yzwy
  47: mul r1.xyz, r1.xxxx, r2.xyzx
  48: mul o0.xyz, r0.xyzx, r1.xyzx
  49: mov o0.w, l(1.000000)
  50: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add r2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: dp3 r1.x, r2.xyzx, r2.xyzx
  21: rsq r1.x, r1.x
  22: mul o2.xyz, r1.xxxx, r2.xyzx
  23: mov o2.w, l(0)
  24: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  25: mov o6.xyz, r1.yzwy
  26: dp3 r1.x, r2.xyzx, r2.xyzx
  27: rsq r1.x, r1.x
  28: mul r1.xyz, r1.xxxx, r2.xyzx
  29: mov r1.w, l(0)
  30: mov o3.xyzw, r1.wwwx
  31: mov o4.xyzw, r1.wwwy
  32: mov o5.w, r1.z
  33: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  34: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  35: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  36: dp3 r1.w, r1.xyzx, r1.xyzx
  37: rsq r1.w, r1.w
  38: mul o5.xyz, r1.wwww, r1.xyzx
  39: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  40: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  41: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  42: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  43: mov o8.xyzw, l(0,0,0,0)
  44: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 37 math, 5 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: add r0.w, -cb0[3].x, l(1.000000)
   3: dp3 r1.x, v5.xyzx, v5.xyzx
   4: rsq r1.x, r1.x
   5: mul r1.xyz, r1.xxxx, v5.xyzx
   6: mul r2.xyz, v6.yyyy, cb0[12].xyzx
   7: mad r2.xyz, cb0[11].xyzx, v6.xxxx, r2.xyzx
   8: mad r2.xyz, cb0[13].xyzx, v6.zzzz, r2.xyzx
   9: add r2.xyz, r2.xyzx, cb0[14].xyzx
  10: eq r1.w, cb2[0].x, l(1.000000)
  11: if_nz r1.w
  12:   eq r1.w, cb2[0].y, l(1.000000)
  13:   mul r3.xyz, v6.yyyy, cb2[2].xyzx
  14:   mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
  15:   mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
  16:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  17:   movc r3.xyz, r1.wwww, r3.xyzx, v6.xyzx
  18:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  19:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  20:   mad r1.w, r3.y, l(0.250000), l(0.750000)
  21:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  22:   max r3.x, r1.w, r2.w
  23:   sample r3.xyzw, r3.xzwx, t3.xyzw, s0
  24: else 
  25:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  26: endif 
  27: dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
  28: dp3 r2.x, r2.xyzx, r2.xyzx
  29: sample r2.xyzw, r2.xxxx, t1.xyzw, s3
  30: mul r1.w, r1.w, r2.x
  31: mul r2.xyz, r1.wwww, cb0[2].xyzx
  32: dp3 r1.w, -v2.xyzx, r1.xyzx
  33: add r1.w, r1.w, r1.w
  34: mad r3.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  35: mov r4.x, v3.w
  36: mov r4.y, v4.w
  37: mov r4.z, v5.w
  38: dp3_sat r1.x, r1.xyzx, r4.xyzx
  39: dp3 r1.y, r3.xyzx, r4.xyzx
  40: mul r1.y, r1.y, r1.y
  41: mul r3.x, r1.y, r1.y
  42: add r3.y, -cb0[8].w, l(1.000000)
  43: sample r3.xyzw, r3.xyxx, t2.xyzw, s1
  44: mul r1.y, r3.x, l(16.000000)
  45: mul r1.yzw, r1.yyyy, cb0[3].xxyz
  46: mad r0.xyz, r0.xyzx, r0.wwww, r1.yzwy
  47: mul r1.xyz, r1.xxxx, r2.xyzx
  48: mul o0.xyz, r0.xyzx, r1.xyzx
  49: mov o0.w, l(1.000000)
  50: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  22: mov o6.xyz, r0.xyzx
  23: mov r1.w, l(0)
  24: mov o3.xyzw, r1.wwwx
  25: mov o4.xyzw, r1.wwwy
  26: mov o5.w, r1.z
  27: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  28: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  29: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  30: dp3 r0.w, r0.xyzx, r0.xyzx
  31: rsq r0.w, r0.w
  32: mul o5.xyz, r0.wwww, r0.xyzx
  33: mov o7.xyzw, l(0,0,0,0)
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 31 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: dp3 r2.x, v5.xyzx, v5.xyzx
   5: rsq r2.x, r2.x
   6: mul r2.xyz, r2.xxxx, v5.xyzx
   7: eq r2.w, cb2[0].x, l(1.000000)
   8: if_nz r2.w
   9:   eq r2.w, cb2[0].y, l(1.000000)
  10:   mul r3.xyz, v6.yyyy, cb2[2].xyzx
  11:   mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
  12:   mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
  13:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  14:   movc r3.xyz, r2.wwww, r3.xyzx, v6.xyzx
  15:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  16:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  17:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  18:   mad r3.y, cb2[0].z, l(0.500000), l(0.750000)
  19:   max r3.x, r2.w, r3.y
  20:   sample r3.xyzw, r3.xzwx, t3.xyzw, s0
  21: else 
  22:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  23: endif 
  24: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  25: mul r3.xyz, r2.wwww, cb0[2].xyzx
  26: dp3 r2.w, -v2.xyzx, r2.xyzx
  27: add r2.w, r2.w, r2.w
  28: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  29: mov r5.x, v3.w
  30: mov r5.y, v4.w
  31: mov r5.z, v5.w
  32: dp3_sat r2.x, r2.xyzx, r5.xyzx
  33: dp3 r2.y, r4.xyzx, r5.xyzx
  34: mul r2.y, r2.y, r2.y
  35: mul r4.x, r2.y, r2.y
  36: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  37: sample r4.xyzw, r4.xyxx, t2.xyzw, s1
  38: mul r0.w, r4.x, l(16.000000)
  39: mul r0.xyz, r0.xyzx, r0.wwww
  40: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  41: mul r1.xyz, r2.xxxx, r3.xyzx
  42: mul o0.xyz, r0.xyzx, r1.xyzx
  43: mov o0.w, l(1.000000)
  44: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 27 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb4[0].x
  14: mul r0.yzw, v0.yyyy, cb2[1].xxyz
  15: mad r0.yzw, cb2[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb2[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r0.yzw, cb2[3].xxyz, v0.wwww, r0.yyzw
  18: add r1.xyz, r0.yzwy, -cb3[r0.x + 64].xyzx
  19: dp3 r0.x, r1.xyzx, r1.xyzx
  20: rsq r0.x, r0.x
  21: mul o2.xyz, r0.xxxx, r1.xyzx
  22: mov o2.w, l(0)
  23: mad r1.xyz, -r0.yzwy, cb1[0].wwww, cb1[0].xyzx
  24: mov o6.xyz, r0.yzwy
  25: mov r1.w, l(0)
  26: mov o3.xyzw, r1.wwwx
  27: mov o4.xyzw, r1.wwwy
  28: mov o5.w, r1.z
  29: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul o5.xyz, r0.wwww, r0.xyzx
  35: mov o7.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 31 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: dp3 r2.x, v5.xyzx, v5.xyzx
   5: rsq r2.x, r2.x
   6: mul r2.xyz, r2.xxxx, v5.xyzx
   7: eq r2.w, cb2[0].x, l(1.000000)
   8: if_nz r2.w
   9:   eq r2.w, cb2[0].y, l(1.000000)
  10:   mul r3.xyz, v6.yyyy, cb2[2].xyzx
  11:   mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
  12:   mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
  13:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  14:   movc r3.xyz, r2.wwww, r3.xyzx, v6.xyzx
  15:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  16:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  17:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  18:   mad r3.y, cb2[0].z, l(0.500000), l(0.750000)
  19:   max r3.x, r2.w, r3.y
  20:   sample r3.xyzw, r3.xzwx, t3.xyzw, s0
  21: else 
  22:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  23: endif 
  24: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  25: mul r3.xyz, r2.wwww, cb0[2].xyzx
  26: dp3 r2.w, -v2.xyzx, r2.xyzx
  27: add r2.w, r2.w, r2.w
  28: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  29: mov r5.x, v3.w
  30: mov r5.y, v4.w
  31: mov r5.z, v5.w
  32: dp3_sat r2.x, r2.xyzx, r5.xyzx
  33: dp3 r2.y, r4.xyzx, r5.xyzx
  34: mul r2.y, r2.y, r2.y
  35: mul r4.x, r2.y, r2.y
  36: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  37: sample r4.xyzw, r4.xyxx, t2.xyzw, s1
  38: mul r0.w, r4.x, l(16.000000)
  39: mul r0.xyz, r0.xyzx, r0.wwww
  40: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  41: mul r1.xyz, r2.xxxx, r3.xyzx
  42: mul o0.xyz, r0.xyzx, r1.xyzx
  43: mov o0.w, l(1.000000)
  44: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 36 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mul r1.xyz, v4.yyyy, cb3[1].xyzx
  22: mad r1.xyz, cb3[0].xyzx, v4.xxxx, r1.xyzx
  23: mad r1.xyz, cb3[2].xyzx, v4.zzzz, r1.xyzx
  24: dp3 r0.w, r1.xyzx, r1.xyzx
  25: rsq r0.w, r0.w
  26: mul r1.xyz, r0.wwww, r1.xyzx
  27: mov o3.xyz, r1.xyzx
  28: mad r2.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  29: mov o6.xyz, r0.xyzx
  30: mov o3.w, r2.x
  31: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r0.w, r0.xyzx, r0.xyzx
  35: rsq r0.w, r0.w
  36: mul r0.xyz, r0.wwww, r0.xyzx
  37: mul r3.xyz, r1.yzxy, r0.zxyz
  38: mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
  39: mov o5.xyz, r0.xyzx
  40: mul r0.x, v4.w, cb3[9].w
  41: mul o4.xyz, r0.xxxx, r1.xyzx
  42: mov o4.w, r2.y
  43: mov o5.w, r2.z
  44: mov o7.xyzw, l(0,0,0,0)
  45: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 37 math, 6 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   5: mul r2.x, r2.w, r2.x
   6: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   7: dp2 r2.z, r2.xyxx, r2.xyxx
   8: min r2.z, r2.z, l(1.000000)
   9: add r2.z, -r2.z, l(1.000000)
  10: sqrt r2.z, r2.z
  11: mul r3.xyz, r2.yyyy, v4.xyzx
  12: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  13: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  14: eq r2.w, cb2[0].x, l(1.000000)
  15: if_nz r2.w
  16:   eq r2.w, cb2[0].y, l(1.000000)
  17:   mul r3.xyz, v6.yyyy, cb2[2].xyzx
  18:   mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
  19:   mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
  20:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  21:   movc r3.xyz, r2.wwww, r3.xyzx, v6.xyzx
  22:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  23:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  24:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  25:   mad r3.y, cb2[0].z, l(0.500000), l(0.750000)
  26:   max r3.x, r2.w, r3.y
  27:   sample r3.xyzw, r3.xzwx, t4.xyzw, s0
  28: else 
  29:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  30: endif 
  31: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  32: mul r3.xyz, r2.wwww, cb0[2].xyzx
  33: dp3 r2.w, -v2.xyzx, r2.xyzx
  34: add r2.w, r2.w, r2.w
  35: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  36: mov r5.x, v3.w
  37: mov r5.y, v4.w
  38: mov r5.z, v5.w
  39: dp3_sat r2.x, r2.xyzx, r5.xyzx
  40: dp3 r2.y, r4.xyzx, r5.xyzx
  41: mul r2.y, r2.y, r2.y
  42: mul r4.x, r2.y, r2.y
  43: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  44: sample r4.xyzw, r4.xyxx, t3.xyzw, s1
  45: mul r0.w, r4.x, l(16.000000)
  46: mul r0.xyz, r0.xyzx, r0.wwww
  47: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  48: mul r1.xyz, r2.xxxx, r3.xyzx
  49: mul o0.xyz, r0.xyzx, r1.xyzx
  50: mov o0.w, l(1.000000)
  51: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 37 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb4[0].x
  14: mul r0.yzw, v0.yyyy, cb2[1].xxyz
  15: mad r0.yzw, cb2[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb2[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r0.yzw, cb2[3].xxyz, v0.wwww, r0.yyzw
  18: add r1.xyz, r0.yzwy, -cb3[r0.x + 64].xyzx
  19: dp3 r0.x, r1.xyzx, r1.xyzx
  20: rsq r0.x, r0.x
  21: mul o2.xyz, r0.xxxx, r1.xyzx
  22: mov o2.w, l(0)
  23: mul r1.xyz, v4.yyyy, cb2[1].xyzx
  24: mad r1.xyz, cb2[0].xyzx, v4.xxxx, r1.xyzx
  25: mad r1.xyz, cb2[2].xyzx, v4.zzzz, r1.xyzx
  26: dp3 r0.x, r1.xyzx, r1.xyzx
  27: rsq r0.x, r0.x
  28: mul r1.xyz, r0.xxxx, r1.xyzx
  29: mov o3.xyz, r1.xyzx
  30: mad r2.xyz, -r0.yzwy, cb1[0].wwww, cb1[0].xyzx
  31: mov o6.xyz, r0.yzwy
  32: mov o3.w, r2.x
  33: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  34: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  35: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  36: dp3 r0.w, r0.xyzx, r0.xyzx
  37: rsq r0.w, r0.w
  38: mul r0.xyz, r0.wwww, r0.xyzx
  39: mul r3.xyz, r1.yzxy, r0.zxyz
  40: mad r1.xyz, r0.yzxy, r1.zxyz, -r3.xyzx
  41: mov o5.xyz, r0.xyzx
  42: mul r0.x, v4.w, cb2[9].w
  43: mul o4.xyz, r0.xxxx, r1.xyzx
  44: mov o4.w, r2.y
  45: mov o5.w, r2.z
  46: mov o7.xyzw, l(0,0,0,0)
  47: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 37 math, 6 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   5: mul r2.x, r2.w, r2.x
   6: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   7: dp2 r2.z, r2.xyxx, r2.xyxx
   8: min r2.z, r2.z, l(1.000000)
   9: add r2.z, -r2.z, l(1.000000)
  10: sqrt r2.z, r2.z
  11: mul r3.xyz, r2.yyyy, v4.xyzx
  12: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  13: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  14: eq r2.w, cb2[0].x, l(1.000000)
  15: if_nz r2.w
  16:   eq r2.w, cb2[0].y, l(1.000000)
  17:   mul r3.xyz, v6.yyyy, cb2[2].xyzx
  18:   mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
  19:   mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
  20:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  21:   movc r3.xyz, r2.wwww, r3.xyzx, v6.xyzx
  22:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  23:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  24:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  25:   mad r3.y, cb2[0].z, l(0.500000), l(0.750000)
  26:   max r3.x, r2.w, r3.y
  27:   sample r3.xyzw, r3.xzwx, t4.xyzw, s0
  28: else 
  29:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  30: endif 
  31: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  32: mul r3.xyz, r2.wwww, cb0[2].xyzx
  33: dp3 r2.w, -v2.xyzx, r2.xyzx
  34: add r2.w, r2.w, r2.w
  35: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  36: mov r5.x, v3.w
  37: mov r5.y, v4.w
  38: mov r5.z, v5.w
  39: dp3_sat r2.x, r2.xyzx, r5.xyzx
  40: dp3 r2.y, r4.xyzx, r5.xyzx
  41: mul r2.y, r2.y, r2.y
  42: mul r4.x, r2.y, r2.y
  43: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  44: sample r4.xyzw, r4.xyxx, t3.xyzw, s1
  45: mul r0.w, r4.x, l(16.000000)
  46: mul r0.xyz, r0.xyzx, r0.wwww
  47: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  48: mul r1.xyz, r2.xxxx, r3.xyzx
  49: mul o0.xyz, r0.xyzx, r1.xyzx
  50: mov o0.w, l(1.000000)
  51: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 2 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 2
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad o0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: eq r0.x, cb0[9].w, l(0.000000)
   9: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  10: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  11: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  12: mul r0.xyz, v0.yyyy, cb3[1].xyzx
  13: mad r0.xyz, cb3[0].xyzx, v0.xxxx, r0.xyzx
  14: mad r0.xyz, cb3[2].xyzx, v0.zzzz, r0.xyzx
  15: mad r0.xyz, cb3[3].xyzx, v0.wwww, r0.xyzx
  16: add r1.xyz, r0.xyzx, -cb1[4].xyzx
  17: dp3 r0.w, r1.xyzx, r1.xyzx
  18: rsq r0.w, r0.w
  19: mul o2.xyz, r0.wwww, r1.xyzx
  20: mov o2.w, l(0)
  21: mad r1.xyz, -r0.xyzx, cb2[0].wwww, cb2[0].xyzx
  22: mov o6.xyz, r0.xyzx
  23: mov r1.w, l(0)
  24: mov o3.xyzw, r1.wwwx
  25: mov o4.xyzw, r1.wwwy
  26: mov o5.w, r1.z
  27: dp3 r0.x, v1.xyzx, cb3[4].xyzx
  28: dp3 r0.y, v1.xyzx, cb3[5].xyzx
  29: dp3 r0.z, v1.xyzx, cb3[6].xyzx
  30: dp3 r0.w, r0.xyzx, r0.xyzx
  31: rsq r0.w, r0.w
  32: mul o5.xyz, r0.wwww, r0.xyzx
  33: mov o7.xyzw, l(0,0,0,0)
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 31 math, 5 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "unity_NHxRoughness" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: add r0.w, -cb0[3].x, l(1.000000)
   3: dp3 r1.x, v5.xyzx, v5.xyzx
   4: rsq r1.x, r1.x
   5: mul r1.xyz, r1.xxxx, v5.xyzx
   6: eq r1.w, cb2[0].x, l(1.000000)
   7: if_nz r1.w
   8:   eq r1.w, cb2[0].y, l(1.000000)
   9:   mul r2.xyz, v6.yyyy, cb2[2].xyzx
  10:   mad r2.xyz, cb2[1].xyzx, v6.xxxx, r2.xyzx
  11:   mad r2.xyz, cb2[3].xyzx, v6.zzzz, r2.xyzx
  12:   add r2.xyz, r2.xyzx, cb2[4].xyzx
  13:   movc r2.xyz, r1.wwww, r2.xyzx, v6.xyzx
  14:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  15:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  16:   mad r1.w, r2.y, l(0.250000), l(0.750000)
  17:   mad r2.y, cb2[0].z, l(0.500000), l(0.750000)
  18:   max r2.x, r1.w, r2.y
  19:   sample r2.xyzw, r2.xzwx, t2.xyzw, s0
  20: else 
  21:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  22: endif 
  23: dp4_sat r1.w, r2.xyzw, cb1[46].xyzw
  24: mul r2.xyz, r1.wwww, cb0[2].xyzx
  25: dp3 r1.w, -v2.xyzx, r1.xyzx
  26: add r1.w, r1.w, r1.w
  27: mad r3.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  28: mov r4.x, v3.w
  29: mov r4.y, v4.w
  30: mov r4.z, v5.w
  31: dp3_sat r1.x, r1.xyzx, r4.xyzx
  32: dp3 r1.y, r3.xyzx, r4.xyzx
  33: mul r1.y, r1.y, r1.y
  34: mul r3.x, r1.y, r1.y
  35: add r3.y, -cb0[8].w, l(1.000000)
  36: sample r3.xyzw, r3.xyxx, t1.xyzw, s1
  37: mul r1.y, r3.x, l(16.000000)
  38: mul r1.yzw, r1.yyyy, cb0[3].xxyz
  39: mad r0.xyz, r0.xyzx, r0.wwww, r1.yzwy
  40: mul r1.xyz, r1.xxxx, r2.xyzx
  41: mul o0.xyz, r0.xyzx, r1.xyzx
  42: mov o0.w, l(1.000000)
  43: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 27 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb2[3].xyzw
   4: ishl r1.x, cb4[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb3[r1.x + 25].xyzw
   6: mad r2.xyzw, cb3[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb3[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad o0.xyzw, cb3[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: eq r0.x, cb0[9].w, l(0.000000)
  10: movc r0.xy, r0.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r0.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mov r0.x, cb4[0].x
  14: mul r0.yzw, v0.yyyy, cb2[1].xxyz
  15: mad r0.yzw, cb2[0].xxyz, v0.xxxx, r0.yyzw
  16: mad r0.yzw, cb2[2].xxyz, v0.zzzz, r0.yyzw
  17: mad r0.yzw, cb2[3].xxyz, v0.wwww, r0.yyzw
  18: add r1.xyz, r0.yzwy, -cb3[r0.x + 64].xyzx
  19: dp3 r0.x, r1.xyzx, r1.xyzx
  20: rsq r0.x, r0.x
  21: mul o2.xyz, r0.xxxx, r1.xyzx
  22: mov o2.w, l(0)
  23: mad r1.xyz, -r0.yzwy, cb1[0].wwww, cb1[0].xyzx
  24: mov o6.xyz, r0.yzwy
  25: mov r1.w, l(0)
  26: mov o3.xyzw, r1.wwwx
  27: mov o4.xyzw, r1.wwwy
  28: mov o5.w, r1.z
  29: dp3 r0.x, v1.xyzx, cb2[4].xyzx
  30: dp3 r0.y, v1.xyzx, cb2[5].xyzx
  31: dp3 r0.z, v1.xyzx, cb2[6].xyzx
  32: dp3 r0.w, r0.xyzx, r0.xyzx
  33: rsq r0.w, r0.w
  34: mul o5.xyz, r0.wwww, r0.xyzx
  35: mov o7.xyzw, l(0,0,0,0)
  36: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 31 math, 5 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "unity_NHxRoughness" to slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: add r0.w, -cb0[3].x, l(1.000000)
   3: dp3 r1.x, v5.xyzx, v5.xyzx
   4: rsq r1.x, r1.x
   5: mul r1.xyz, r1.xxxx, v5.xyzx
   6: eq r1.w, cb2[0].x, l(1.000000)
   7: if_nz r1.w
   8:   eq r1.w, cb2[0].y, l(1.000000)
   9:   mul r2.xyz, v6.yyyy, cb2[2].xyzx
  10:   mad r2.xyz, cb2[1].xyzx, v6.xxxx, r2.xyzx
  11:   mad r2.xyz, cb2[3].xyzx, v6.zzzz, r2.xyzx
  12:   add r2.xyz, r2.xyzx, cb2[4].xyzx
  13:   movc r2.xyz, r1.wwww, r2.xyzx, v6.xyzx
  14:   add r2.xyz, r2.xyzx, -cb2[6].xyzx
  15:   mul r2.yzw, r2.xxyz, cb2[5].xxyz
  16:   mad r1.w, r2.y, l(0.250000), l(0.750000)
  17:   mad r2.y, cb2[0].z, l(0.500000), l(0.750000)
  18:   max r2.x, r1.w, r2.y
  19:   sample r2.xyzw, r2.xzwx, t2.xyzw, s0
  20: else 
  21:   mov r2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  22: endif 
  23: dp4_sat r1.w, r2.xyzw, cb1[46].xyzw
  24: mul r2.xyz, r1.wwww, cb0[2].xyzx
  25: dp3 r1.w, -v2.xyzx, r1.xyzx
  26: add r1.w, r1.w, r1.w
  27: mad r3.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  28: mov r4.x, v3.w
  29: mov r4.y, v4.w
  30: mov r4.z, v5.w
  31: dp3_sat r1.x, r1.xyzx, r4.xyzx
  32: dp3 r1.y, r3.xyzx, r4.xyzx
  33: mul r1.y, r1.y, r1.y
  34: mul r3.x, r1.y, r1.y
  35: add r3.y, -cb0[8].w, l(1.000000)
  36: sample r3.xyzw, r3.xyxx, t1.xyzw, s1
  37: mul r1.y, r3.x, l(16.000000)
  38: mul r1.yzw, r1.yyyy, cb0[3].xxyz
  39: mad r0.xyz, r0.xyzx, r0.wwww, r1.yzwy
  40: mul r1.xyz, r1.xxxx, r2.xyzx
  41: mul o0.xyz, r0.xyzx, r1.xyzx
  42: mov o0.w, l(1.000000)
  43: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SPOT 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov r1.w, l(0)
  28: mov o3.xyzw, r1.wwwx
  29: mov o4.xyzw, r1.wwwy
  30: mov o5.w, r1.z
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul o5.xyz, r1.wwww, r1.xyzx
  37: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  38: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  39: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  40: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  41: mov o8.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 6 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: dp3 r2.x, v5.xyzx, v5.xyzx
   5: rsq r2.x, r2.x
   6: mul r2.xyz, r2.xxxx, v5.xyzx
   7: mul r3.xyzw, v6.yyyy, cb0[12].xyzw
   8: mad r3.xyzw, cb0[11].xyzw, v6.xxxx, r3.xyzw
   9: mad r3.xyzw, cb0[13].xyzw, v6.zzzz, r3.xyzw
  10: add r3.xyzw, r3.xyzw, cb0[14].xyzw
  11: eq r2.w, cb2[0].x, l(1.000000)
  12: if_nz r2.w
  13:   eq r2.w, cb2[0].y, l(1.000000)
  14:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  15:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  16:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  17:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  18:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  19:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  20:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  21:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  22:   mad r4.y, cb2[0].z, l(0.500000), l(0.750000)
  23:   max r4.x, r2.w, r4.y
  24:   sample r4.xyzw, r4.xzwx, t5.xyzw, s0
  25: else 
  26:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  27: endif 
  28: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  29: lt r4.x, l(0.000000), r3.z
  30: and r4.x, r4.x, l(0x3f800000)
  31: div r4.yz, r3.xxyx, r3.wwww
  32: add r4.yz, r4.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  33: sample r5.xyzw, r4.yzyy, t2.xyzw, s4
  34: mul r3.w, r4.x, r5.w
  35: dp3 r3.x, r3.xyzx, r3.xyzx
  36: sample r4.xyzw, r3.xxxx, t3.xyzw, s5
  37: mul r3.x, r3.w, r4.x
  38: mul r2.w, r2.w, r3.x
  39: mul r3.xyz, r2.wwww, cb0[2].xyzx
  40: dp3 r2.w, -v2.xyzx, r2.xyzx
  41: add r2.w, r2.w, r2.w
  42: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  43: mov r5.x, v3.w
  44: mov r5.y, v4.w
  45: mov r5.z, v5.w
  46: dp3_sat r2.x, r2.xyzx, r5.xyzx
  47: dp3 r2.y, r4.xyzx, r5.xyzx
  48: mul r2.y, r2.y, r2.y
  49: mul r4.x, r2.y, r2.y
  50: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  51: sample r4.xyzw, r4.xyxx, t4.xyzw, s1
  52: mul r0.w, r4.x, l(16.000000)
  53: mul r0.xyz, r0.xyzx, r0.wwww
  54: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  55: mul r1.xyz, r2.xxxx, r3.xyzx
  56: mul o0.xyz, r0.xyzx, r1.xyzx
  57: mov o0.w, l(1.000000)
  58: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SPOT UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add r2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: dp3 r1.x, r2.xyzx, r2.xyzx
  21: rsq r1.x, r1.x
  22: mul o2.xyz, r1.xxxx, r2.xyzx
  23: mov o2.w, l(0)
  24: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  25: mov o6.xyz, r1.yzwy
  26: dp3 r1.x, r2.xyzx, r2.xyzx
  27: rsq r1.x, r1.x
  28: mul r1.xyz, r1.xxxx, r2.xyzx
  29: mov r1.w, l(0)
  30: mov o3.xyzw, r1.wwwx
  31: mov o4.xyzw, r1.wwwy
  32: mov o5.w, r1.z
  33: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  34: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  35: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  36: dp3 r1.w, r1.xyzx, r1.xyzx
  37: rsq r1.w, r1.w
  38: mul o5.xyz, r1.wwww, r1.xyzx
  39: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  40: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  41: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  42: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  43: mov o8.xyzw, l(0,0,0,0)
  44: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 6 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: dp3 r2.x, v5.xyzx, v5.xyzx
   5: rsq r2.x, r2.x
   6: mul r2.xyz, r2.xxxx, v5.xyzx
   7: mul r3.xyzw, v6.yyyy, cb0[12].xyzw
   8: mad r3.xyzw, cb0[11].xyzw, v6.xxxx, r3.xyzw
   9: mad r3.xyzw, cb0[13].xyzw, v6.zzzz, r3.xyzw
  10: add r3.xyzw, r3.xyzw, cb0[14].xyzw
  11: eq r2.w, cb2[0].x, l(1.000000)
  12: if_nz r2.w
  13:   eq r2.w, cb2[0].y, l(1.000000)
  14:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  15:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  16:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  17:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  18:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  19:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  20:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  21:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  22:   mad r4.y, cb2[0].z, l(0.500000), l(0.750000)
  23:   max r4.x, r2.w, r4.y
  24:   sample r4.xyzw, r4.xzwx, t5.xyzw, s0
  25: else 
  26:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  27: endif 
  28: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  29: lt r4.x, l(0.000000), r3.z
  30: and r4.x, r4.x, l(0x3f800000)
  31: div r4.yz, r3.xxyx, r3.wwww
  32: add r4.yz, r4.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  33: sample r5.xyzw, r4.yzyy, t2.xyzw, s4
  34: mul r3.w, r4.x, r5.w
  35: dp3 r3.x, r3.xyzx, r3.xyzx
  36: sample r4.xyzw, r3.xxxx, t3.xyzw, s5
  37: mul r3.x, r3.w, r4.x
  38: mul r2.w, r2.w, r3.x
  39: mul r3.xyz, r2.wwww, cb0[2].xyzx
  40: dp3 r2.w, -v2.xyzx, r2.xyzx
  41: add r2.w, r2.w, r2.w
  42: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  43: mov r5.x, v3.w
  44: mov r5.y, v4.w
  45: mov r5.z, v5.w
  46: dp3_sat r2.x, r2.xyzx, r5.xyzx
  47: dp3 r2.y, r4.xyzx, r5.xyzx
  48: mul r2.y, r2.y, r2.y
  49: mul r4.x, r2.y, r2.y
  50: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  51: sample r4.xyzw, r4.xyxx, t4.xyzw, s1
  52: mul r0.w, r4.x, l(16.000000)
  53: mul r0.xyz, r0.xyzx, r0.wwww
  54: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  55: mul r1.xyz, r2.xxxx, r3.xyzx
  56: mul o0.xyz, r0.xyzx, r1.xyzx
  57: mov o0.w, l(1.000000)
  58: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SPOT 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 44 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov o3.w, r1.x
  28: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  29: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  30: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  31: dp3 r1.x, r2.xyzx, r2.xyzx
  32: rsq r1.x, r1.x
  33: mul r2.xyz, r1.xxxx, r2.xyzx
  34: mov o3.xyz, r2.xyzx
  35: dp3 r3.x, v1.xyzx, cb3[4].xyzx
  36: dp3 r3.y, v1.xyzx, cb3[5].xyzx
  37: dp3 r3.z, v1.xyzx, cb3[6].xyzx
  38: dp3 r1.x, r3.xyzx, r3.xyzx
  39: rsq r1.x, r1.x
  40: mul r3.xyz, r1.xxxx, r3.xyzx
  41: mul r4.xyz, r2.yzxy, r3.zxyz
  42: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  43: mov o5.xyz, r3.xyzx
  44: mul r1.x, v4.w, cb3[9].w
  45: mul o4.xyz, r1.xxxx, r2.xyzx
  46: mov o4.w, r1.y
  47: mov o5.w, r1.z
  48: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  49: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  50: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  51: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  52: mov o8.xyzw, l(0,0,0,0)
  53: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 49 math, 6 temp registers, 7 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 5
Set 2D Texture "_LightTextureB0" to slot 4 sampler slot 6
Set 2D Texture "unity_NHxRoughness" to slot 5 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   5: mul r2.x, r2.w, r2.x
   6: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   7: dp2 r2.z, r2.xyxx, r2.xyxx
   8: min r2.z, r2.z, l(1.000000)
   9: add r2.z, -r2.z, l(1.000000)
  10: sqrt r2.z, r2.z
  11: mul r3.xyz, r2.yyyy, v4.xyzx
  12: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  13: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  14: mul r3.xyzw, v6.yyyy, cb0[12].xyzw
  15: mad r3.xyzw, cb0[11].xyzw, v6.xxxx, r3.xyzw
  16: mad r3.xyzw, cb0[13].xyzw, v6.zzzz, r3.xyzw
  17: add r3.xyzw, r3.xyzw, cb0[14].xyzw
  18: eq r2.w, cb2[0].x, l(1.000000)
  19: if_nz r2.w
  20:   eq r2.w, cb2[0].y, l(1.000000)
  21:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  22:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  23:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  24:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  25:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  26:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  27:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  28:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  29:   mad r4.y, cb2[0].z, l(0.500000), l(0.750000)
  30:   max r4.x, r2.w, r4.y
  31:   sample r4.xyzw, r4.xzwx, t6.xyzw, s0
  32: else 
  33:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  34: endif 
  35: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  36: lt r4.x, l(0.000000), r3.z
  37: and r4.x, r4.x, l(0x3f800000)
  38: div r4.yz, r3.xxyx, r3.wwww
  39: add r4.yz, r4.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  40: sample r5.xyzw, r4.yzyy, t3.xyzw, s5
  41: mul r3.w, r4.x, r5.w
  42: dp3 r3.x, r3.xyzx, r3.xyzx
  43: sample r4.xyzw, r3.xxxx, t4.xyzw, s6
  44: mul r3.x, r3.w, r4.x
  45: mul r2.w, r2.w, r3.x
  46: mul r3.xyz, r2.wwww, cb0[2].xyzx
  47: dp3 r2.w, -v2.xyzx, r2.xyzx
  48: add r2.w, r2.w, r2.w
  49: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  50: mov r5.x, v3.w
  51: mov r5.y, v4.w
  52: mov r5.z, v5.w
  53: dp3_sat r2.x, r2.xyzx, r5.xyzx
  54: dp3 r2.y, r4.xyzx, r5.xyzx
  55: mul r2.y, r2.y, r2.y
  56: mul r4.x, r2.y, r2.y
  57: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  58: sample r4.xyzw, r4.xyxx, t5.xyzw, s1
  59: mul r0.w, r4.x, l(16.000000)
  60: mul r0.xyz, r0.xyzx, r0.wwww
  61: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  62: mul r1.xyz, r2.xxxx, r3.xyzx
  63: mul o0.xyz, r0.xyzx, r1.xyzx
  64: mov o0.w, l(1.000000)
  65: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SPOT UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 45 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add r2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: dp3 r1.x, r2.xyzx, r2.xyzx
  21: rsq r1.x, r1.x
  22: mul o2.xyz, r1.xxxx, r2.xyzx
  23: mov o2.w, l(0)
  24: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  25: mov o6.xyz, r1.yzwy
  26: dp3 r1.x, r2.xyzx, r2.xyzx
  27: rsq r1.x, r1.x
  28: mul r1.xyz, r1.xxxx, r2.xyzx
  29: mov o3.w, r1.x
  30: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  31: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  32: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  33: dp3 r1.x, r2.xyzx, r2.xyzx
  34: rsq r1.x, r1.x
  35: mul r2.xyz, r1.xxxx, r2.xyzx
  36: mov o3.xyz, r2.xyzx
  37: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  38: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  39: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  40: dp3 r1.x, r3.xyzx, r3.xyzx
  41: rsq r1.x, r1.x
  42: mul r3.xyz, r1.xxxx, r3.xyzx
  43: mul r4.xyz, r2.yzxy, r3.zxyz
  44: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  45: mov o5.xyz, r3.xyzx
  46: mul r1.x, v4.w, cb2[9].w
  47: mul o4.xyz, r1.xxxx, r2.xyzx
  48: mov o4.w, r1.y
  49: mov o5.w, r1.z
  50: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  51: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  52: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  53: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  54: mov o8.xyzw, l(0,0,0,0)
  55: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 49 math, 6 temp registers, 7 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 5
Set 2D Texture "_LightTextureB0" to slot 4 sampler slot 6
Set 2D Texture "unity_NHxRoughness" to slot 5 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   5: mul r2.x, r2.w, r2.x
   6: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   7: dp2 r2.z, r2.xyxx, r2.xyxx
   8: min r2.z, r2.z, l(1.000000)
   9: add r2.z, -r2.z, l(1.000000)
  10: sqrt r2.z, r2.z
  11: mul r3.xyz, r2.yyyy, v4.xyzx
  12: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  13: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  14: mul r3.xyzw, v6.yyyy, cb0[12].xyzw
  15: mad r3.xyzw, cb0[11].xyzw, v6.xxxx, r3.xyzw
  16: mad r3.xyzw, cb0[13].xyzw, v6.zzzz, r3.xyzw
  17: add r3.xyzw, r3.xyzw, cb0[14].xyzw
  18: eq r2.w, cb2[0].x, l(1.000000)
  19: if_nz r2.w
  20:   eq r2.w, cb2[0].y, l(1.000000)
  21:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  22:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  23:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  24:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  25:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  26:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  27:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  28:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  29:   mad r4.y, cb2[0].z, l(0.500000), l(0.750000)
  30:   max r4.x, r2.w, r4.y
  31:   sample r4.xyzw, r4.xzwx, t6.xyzw, s0
  32: else 
  33:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  34: endif 
  35: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  36: lt r4.x, l(0.000000), r3.z
  37: and r4.x, r4.x, l(0x3f800000)
  38: div r4.yz, r3.xxyx, r3.wwww
  39: add r4.yz, r4.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  40: sample r5.xyzw, r4.yzyy, t3.xyzw, s5
  41: mul r3.w, r4.x, r5.w
  42: dp3 r3.x, r3.xyzx, r3.xyzx
  43: sample r4.xyzw, r3.xxxx, t4.xyzw, s6
  44: mul r3.x, r3.w, r4.x
  45: mul r2.w, r2.w, r3.x
  46: mul r3.xyz, r2.wwww, cb0[2].xyzx
  47: dp3 r2.w, -v2.xyzx, r2.xyzx
  48: add r2.w, r2.w, r2.w
  49: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  50: mov r5.x, v3.w
  51: mov r5.y, v4.w
  52: mov r5.z, v5.w
  53: dp3_sat r2.x, r2.xyzx, r5.xyzx
  54: dp3 r2.y, r4.xyzx, r5.xyzx
  55: mul r2.y, r2.y, r2.y
  56: mul r4.x, r2.y, r2.y
  57: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  58: sample r4.xyzw, r4.xyxx, t5.xyzw, s1
  59: mul r0.w, r4.x, l(16.000000)
  60: mul r0.xyz, r0.xyzx, r0.wwww
  61: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  62: mul r1.xyz, r2.xxxx, r3.xyzx
  63: mul o0.xyz, r0.xyzx, r1.xyzx
  64: mov o0.w, l(1.000000)
  65: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SPOT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov r1.w, l(0)
  28: mov o3.xyzw, r1.wwwx
  29: mov o4.xyzw, r1.wwwy
  30: mov o5.w, r1.z
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul o5.xyz, r1.wwww, r1.xyzx
  37: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  38: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  39: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  40: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  41: mov o8.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 5 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: add r0.w, -cb0[3].x, l(1.000000)
   3: dp3 r1.x, v5.xyzx, v5.xyzx
   4: rsq r1.x, r1.x
   5: mul r1.xyz, r1.xxxx, v5.xyzx
   6: mul r2.xyzw, v6.yyyy, cb0[12].xyzw
   7: mad r2.xyzw, cb0[11].xyzw, v6.xxxx, r2.xyzw
   8: mad r2.xyzw, cb0[13].xyzw, v6.zzzz, r2.xyzw
   9: add r2.xyzw, r2.xyzw, cb0[14].xyzw
  10: eq r1.w, cb2[0].x, l(1.000000)
  11: if_nz r1.w
  12:   eq r1.w, cb2[0].y, l(1.000000)
  13:   mul r3.xyz, v6.yyyy, cb2[2].xyzx
  14:   mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
  15:   mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
  16:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  17:   movc r3.xyz, r1.wwww, r3.xyzx, v6.xyzx
  18:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  19:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  20:   mad r1.w, r3.y, l(0.250000), l(0.750000)
  21:   mad r3.y, cb2[0].z, l(0.500000), l(0.750000)
  22:   max r3.x, r1.w, r3.y
  23:   sample r3.xyzw, r3.xzwx, t4.xyzw, s0
  24: else 
  25:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  26: endif 
  27: dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
  28: lt r3.x, l(0.000000), r2.z
  29: and r3.x, r3.x, l(0x3f800000)
  30: div r3.yz, r2.xxyx, r2.wwww
  31: add r3.yz, r3.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  32: sample r4.xyzw, r3.yzyy, t1.xyzw, s3
  33: mul r2.w, r3.x, r4.w
  34: dp3 r2.x, r2.xyzx, r2.xyzx
  35: sample r3.xyzw, r2.xxxx, t2.xyzw, s4
  36: mul r2.x, r2.w, r3.x
  37: mul r1.w, r1.w, r2.x
  38: mul r2.xyz, r1.wwww, cb0[2].xyzx
  39: dp3 r1.w, -v2.xyzx, r1.xyzx
  40: add r1.w, r1.w, r1.w
  41: mad r3.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  42: mov r4.x, v3.w
  43: mov r4.y, v4.w
  44: mov r4.z, v5.w
  45: dp3_sat r1.x, r1.xyzx, r4.xyzx
  46: dp3 r1.y, r3.xyzx, r4.xyzx
  47: mul r1.y, r1.y, r1.y
  48: mul r3.x, r1.y, r1.y
  49: add r3.y, -cb0[8].w, l(1.000000)
  50: sample r3.xyzw, r3.xyxx, t3.xyzw, s1
  51: mul r1.y, r3.x, l(16.000000)
  52: mul r1.yzw, r1.yyyy, cb0[3].xxyz
  53: mad r0.xyz, r0.xyzx, r0.wwww, r1.yzwy
  54: mul r1.xyz, r1.xxxx, r2.xyzx
  55: mul o0.xyz, r0.xyzx, r1.xyzx
  56: mov o0.w, l(1.000000)
  57: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SPOT UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add r2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: dp3 r1.x, r2.xyzx, r2.xyzx
  21: rsq r1.x, r1.x
  22: mul o2.xyz, r1.xxxx, r2.xyzx
  23: mov o2.w, l(0)
  24: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  25: mov o6.xyz, r1.yzwy
  26: dp3 r1.x, r2.xyzx, r2.xyzx
  27: rsq r1.x, r1.x
  28: mul r1.xyz, r1.xxxx, r2.xyzx
  29: mov r1.w, l(0)
  30: mov o3.xyzw, r1.wwwx
  31: mov o4.xyzw, r1.wwwy
  32: mov o5.w, r1.z
  33: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  34: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  35: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  36: dp3 r1.w, r1.xyzx, r1.xyzx
  37: rsq r1.w, r1.w
  38: mul o5.xyz, r1.wwww, r1.xyzx
  39: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  40: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  41: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  42: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  43: mov o8.xyzw, l(0,0,0,0)
  44: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 5 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: add r0.w, -cb0[3].x, l(1.000000)
   3: dp3 r1.x, v5.xyzx, v5.xyzx
   4: rsq r1.x, r1.x
   5: mul r1.xyz, r1.xxxx, v5.xyzx
   6: mul r2.xyzw, v6.yyyy, cb0[12].xyzw
   7: mad r2.xyzw, cb0[11].xyzw, v6.xxxx, r2.xyzw
   8: mad r2.xyzw, cb0[13].xyzw, v6.zzzz, r2.xyzw
   9: add r2.xyzw, r2.xyzw, cb0[14].xyzw
  10: eq r1.w, cb2[0].x, l(1.000000)
  11: if_nz r1.w
  12:   eq r1.w, cb2[0].y, l(1.000000)
  13:   mul r3.xyz, v6.yyyy, cb2[2].xyzx
  14:   mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
  15:   mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
  16:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  17:   movc r3.xyz, r1.wwww, r3.xyzx, v6.xyzx
  18:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  19:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  20:   mad r1.w, r3.y, l(0.250000), l(0.750000)
  21:   mad r3.y, cb2[0].z, l(0.500000), l(0.750000)
  22:   max r3.x, r1.w, r3.y
  23:   sample r3.xyzw, r3.xzwx, t4.xyzw, s0
  24: else 
  25:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  26: endif 
  27: dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
  28: lt r3.x, l(0.000000), r2.z
  29: and r3.x, r3.x, l(0x3f800000)
  30: div r3.yz, r2.xxyx, r2.wwww
  31: add r3.yz, r3.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  32: sample r4.xyzw, r3.yzyy, t1.xyzw, s3
  33: mul r2.w, r3.x, r4.w
  34: dp3 r2.x, r2.xyzx, r2.xyzx
  35: sample r3.xyzw, r2.xxxx, t2.xyzw, s4
  36: mul r2.x, r2.w, r3.x
  37: mul r1.w, r1.w, r2.x
  38: mul r2.xyz, r1.wwww, cb0[2].xyzx
  39: dp3 r1.w, -v2.xyzx, r1.xyzx
  40: add r1.w, r1.w, r1.w
  41: mad r3.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  42: mov r4.x, v3.w
  43: mov r4.y, v4.w
  44: mov r4.z, v5.w
  45: dp3_sat r1.x, r1.xyzx, r4.xyzx
  46: dp3 r1.y, r3.xyzx, r4.xyzx
  47: mul r1.y, r1.y, r1.y
  48: mul r3.x, r1.y, r1.y
  49: add r3.y, -cb0[8].w, l(1.000000)
  50: sample r3.xyzw, r3.xyxx, t3.xyzw, s1
  51: mul r1.y, r3.x, l(16.000000)
  52: mul r1.yzw, r1.yyyy, cb0[3].xxyz
  53: mad r0.xyz, r0.xyzx, r0.wwww, r1.yzwy
  54: mul r1.xyz, r1.xxxx, r2.xyzx
  55: mul o0.xyz, r0.xyzx, r1.xyzx
  56: mov o0.w, l(1.000000)
  57: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov r1.w, l(0)
  28: mov o3.xyzw, r1.wwwx
  29: mov o4.xyzw, r1.wwwy
  30: mov o5.w, r1.z
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul o5.xyz, r1.wwww, r1.xyzx
  37: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  38: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  39: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  40: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  41: mov o8.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 38 math, 6 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 5
Set CUBE Texture "_LightTexture0" to slot 3 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: dp3 r2.x, v5.xyzx, v5.xyzx
   5: rsq r2.x, r2.x
   6: mul r2.xyz, r2.xxxx, v5.xyzx
   7: mul r3.xyz, v6.yyyy, cb0[12].xyzx
   8: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
   9: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  10: add r3.xyz, r3.xyzx, cb0[14].xyzx
  11: eq r2.w, cb2[0].x, l(1.000000)
  12: if_nz r2.w
  13:   eq r2.w, cb2[0].y, l(1.000000)
  14:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  15:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  16:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  17:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  18:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  19:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  20:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  21:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  22:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  23:   max r4.x, r2.w, r3.w
  24:   sample r4.xyzw, r4.xzwx, t5.xyzw, s0
  25: else 
  26:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  27: endif 
  28: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  29: dp3 r3.w, r3.xyzx, r3.xyzx
  30: sample r4.xyzw, r3.wwww, t2.xyzw, s5
  31: sample r3.xyzw, r3.xyzx, t3.xyzw, s4
  32: mul r3.x, r3.w, r4.x
  33: mul r2.w, r2.w, r3.x
  34: mul r3.xyz, r2.wwww, cb0[2].xyzx
  35: dp3 r2.w, -v2.xyzx, r2.xyzx
  36: add r2.w, r2.w, r2.w
  37: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  38: mov r5.x, v3.w
  39: mov r5.y, v4.w
  40: mov r5.z, v5.w
  41: dp3_sat r2.x, r2.xyzx, r5.xyzx
  42: dp3 r2.y, r4.xyzx, r5.xyzx
  43: mul r2.y, r2.y, r2.y
  44: mul r4.x, r2.y, r2.y
  45: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  46: sample r4.xyzw, r4.xyxx, t4.xyzw, s1
  47: mul r0.w, r4.x, l(16.000000)
  48: mul r0.xyz, r0.xyzx, r0.wwww
  49: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  50: mul r1.xyz, r2.xxxx, r3.xyzx
  51: mul o0.xyz, r0.xyzx, r1.xyzx
  52: mov o0.w, l(1.000000)
  53: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add r2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: dp3 r1.x, r2.xyzx, r2.xyzx
  21: rsq r1.x, r1.x
  22: mul o2.xyz, r1.xxxx, r2.xyzx
  23: mov o2.w, l(0)
  24: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  25: mov o6.xyz, r1.yzwy
  26: dp3 r1.x, r2.xyzx, r2.xyzx
  27: rsq r1.x, r1.x
  28: mul r1.xyz, r1.xxxx, r2.xyzx
  29: mov r1.w, l(0)
  30: mov o3.xyzw, r1.wwwx
  31: mov o4.xyzw, r1.wwwy
  32: mov o5.w, r1.z
  33: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  34: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  35: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  36: dp3 r1.w, r1.xyzx, r1.xyzx
  37: rsq r1.w, r1.w
  38: mul o5.xyz, r1.wwww, r1.xyzx
  39: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  40: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  41: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  42: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  43: mov o8.xyzw, l(0,0,0,0)
  44: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 38 math, 6 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 5
Set CUBE Texture "_LightTexture0" to slot 3 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: dp3 r2.x, v5.xyzx, v5.xyzx
   5: rsq r2.x, r2.x
   6: mul r2.xyz, r2.xxxx, v5.xyzx
   7: mul r3.xyz, v6.yyyy, cb0[12].xyzx
   8: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
   9: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  10: add r3.xyz, r3.xyzx, cb0[14].xyzx
  11: eq r2.w, cb2[0].x, l(1.000000)
  12: if_nz r2.w
  13:   eq r2.w, cb2[0].y, l(1.000000)
  14:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  15:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  16:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  17:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  18:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  19:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  20:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  21:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  22:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  23:   max r4.x, r2.w, r3.w
  24:   sample r4.xyzw, r4.xzwx, t5.xyzw, s0
  25: else 
  26:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  27: endif 
  28: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  29: dp3 r3.w, r3.xyzx, r3.xyzx
  30: sample r4.xyzw, r3.wwww, t2.xyzw, s5
  31: sample r3.xyzw, r3.xyzx, t3.xyzw, s4
  32: mul r3.x, r3.w, r4.x
  33: mul r2.w, r2.w, r3.x
  34: mul r3.xyz, r2.wwww, cb0[2].xyzx
  35: dp3 r2.w, -v2.xyzx, r2.xyzx
  36: add r2.w, r2.w, r2.w
  37: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  38: mov r5.x, v3.w
  39: mov r5.y, v4.w
  40: mov r5.z, v5.w
  41: dp3_sat r2.x, r2.xyzx, r5.xyzx
  42: dp3 r2.y, r4.xyzx, r5.xyzx
  43: mul r2.y, r2.y, r2.y
  44: mul r4.x, r2.y, r2.y
  45: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  46: sample r4.xyzw, r4.xyxx, t4.xyzw, s1
  47: mul r0.w, r4.x, l(16.000000)
  48: mul r0.xyz, r0.xyzx, r0.wwww
  49: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  50: mul r1.xyz, r2.xxxx, r3.xyzx
  51: mul o0.xyz, r0.xyzx, r1.xyzx
  52: mov o0.w, l(1.000000)
  53: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 44 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov o3.w, r1.x
  28: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  29: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  30: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  31: dp3 r1.x, r2.xyzx, r2.xyzx
  32: rsq r1.x, r1.x
  33: mul r2.xyz, r1.xxxx, r2.xyzx
  34: mov o3.xyz, r2.xyzx
  35: dp3 r3.x, v1.xyzx, cb3[4].xyzx
  36: dp3 r3.y, v1.xyzx, cb3[5].xyzx
  37: dp3 r3.z, v1.xyzx, cb3[6].xyzx
  38: dp3 r1.x, r3.xyzx, r3.xyzx
  39: rsq r1.x, r1.x
  40: mul r3.xyz, r1.xxxx, r3.xyzx
  41: mul r4.xyz, r2.yzxy, r3.zxyz
  42: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  43: mov o5.xyz, r3.xyzx
  44: mul r1.x, v4.w, cb3[9].w
  45: mul o4.xyz, r1.xxxx, r2.xyzx
  46: mov o4.w, r1.y
  47: mov o5.w, r1.z
  48: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  49: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  50: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  51: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  52: mov o8.xyzw, l(0,0,0,0)
  53: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 44 math, 6 temp registers, 7 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 6
Set CUBE Texture "_LightTexture0" to slot 4 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 5 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   5: mul r2.x, r2.w, r2.x
   6: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   7: dp2 r2.z, r2.xyxx, r2.xyxx
   8: min r2.z, r2.z, l(1.000000)
   9: add r2.z, -r2.z, l(1.000000)
  10: sqrt r2.z, r2.z
  11: mul r3.xyz, r2.yyyy, v4.xyzx
  12: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  13: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  14: mul r3.xyz, v6.yyyy, cb0[12].xyzx
  15: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  16: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  17: add r3.xyz, r3.xyzx, cb0[14].xyzx
  18: eq r2.w, cb2[0].x, l(1.000000)
  19: if_nz r2.w
  20:   eq r2.w, cb2[0].y, l(1.000000)
  21:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  22:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  23:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  24:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  25:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  26:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  27:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  28:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  29:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  30:   max r4.x, r2.w, r3.w
  31:   sample r4.xyzw, r4.xzwx, t6.xyzw, s0
  32: else 
  33:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  34: endif 
  35: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  36: dp3 r3.w, r3.xyzx, r3.xyzx
  37: sample r4.xyzw, r3.wwww, t3.xyzw, s6
  38: sample r3.xyzw, r3.xyzx, t4.xyzw, s5
  39: mul r3.x, r3.w, r4.x
  40: mul r2.w, r2.w, r3.x
  41: mul r3.xyz, r2.wwww, cb0[2].xyzx
  42: dp3 r2.w, -v2.xyzx, r2.xyzx
  43: add r2.w, r2.w, r2.w
  44: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  45: mov r5.x, v3.w
  46: mov r5.y, v4.w
  47: mov r5.z, v5.w
  48: dp3_sat r2.x, r2.xyzx, r5.xyzx
  49: dp3 r2.y, r4.xyzx, r5.xyzx
  50: mul r2.y, r2.y, r2.y
  51: mul r4.x, r2.y, r2.y
  52: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  53: sample r4.xyzw, r4.xyxx, t5.xyzw, s1
  54: mul r0.w, r4.x, l(16.000000)
  55: mul r0.xyz, r0.xyzx, r0.wwww
  56: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  57: mul r1.xyz, r2.xxxx, r3.xyzx
  58: mul o0.xyz, r0.xyzx, r1.xyzx
  59: mov o0.w, l(1.000000)
  60: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 45 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add r2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: dp3 r1.x, r2.xyzx, r2.xyzx
  21: rsq r1.x, r1.x
  22: mul o2.xyz, r1.xxxx, r2.xyzx
  23: mov o2.w, l(0)
  24: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  25: mov o6.xyz, r1.yzwy
  26: dp3 r1.x, r2.xyzx, r2.xyzx
  27: rsq r1.x, r1.x
  28: mul r1.xyz, r1.xxxx, r2.xyzx
  29: mov o3.w, r1.x
  30: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  31: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  32: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  33: dp3 r1.x, r2.xyzx, r2.xyzx
  34: rsq r1.x, r1.x
  35: mul r2.xyz, r1.xxxx, r2.xyzx
  36: mov o3.xyz, r2.xyzx
  37: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  38: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  39: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  40: dp3 r1.x, r3.xyzx, r3.xyzx
  41: rsq r1.x, r1.x
  42: mul r3.xyz, r1.xxxx, r3.xyzx
  43: mul r4.xyz, r2.yzxy, r3.zxyz
  44: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  45: mov o5.xyz, r3.xyzx
  46: mul r1.x, v4.w, cb2[9].w
  47: mul o4.xyz, r1.xxxx, r2.xyzx
  48: mov o4.w, r1.y
  49: mov o5.w, r1.z
  50: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  51: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  52: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  53: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  54: mov o8.xyzw, l(0,0,0,0)
  55: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 44 math, 6 temp registers, 7 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 6
Set CUBE Texture "_LightTexture0" to slot 4 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 5 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 6 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture3d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   5: mul r2.x, r2.w, r2.x
   6: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   7: dp2 r2.z, r2.xyxx, r2.xyxx
   8: min r2.z, r2.z, l(1.000000)
   9: add r2.z, -r2.z, l(1.000000)
  10: sqrt r2.z, r2.z
  11: mul r3.xyz, r2.yyyy, v4.xyzx
  12: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  13: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  14: mul r3.xyz, v6.yyyy, cb0[12].xyzx
  15: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  16: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  17: add r3.xyz, r3.xyzx, cb0[14].xyzx
  18: eq r2.w, cb2[0].x, l(1.000000)
  19: if_nz r2.w
  20:   eq r2.w, cb2[0].y, l(1.000000)
  21:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  22:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  23:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  24:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  25:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  26:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  27:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  28:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  29:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  30:   max r4.x, r2.w, r3.w
  31:   sample r4.xyzw, r4.xzwx, t6.xyzw, s0
  32: else 
  33:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  34: endif 
  35: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  36: dp3 r3.w, r3.xyzx, r3.xyzx
  37: sample r4.xyzw, r3.wwww, t3.xyzw, s6
  38: sample r3.xyzw, r3.xyzx, t4.xyzw, s5
  39: mul r3.x, r3.w, r4.x
  40: mul r2.w, r2.w, r3.x
  41: mul r3.xyz, r2.wwww, cb0[2].xyzx
  42: dp3 r2.w, -v2.xyzx, r2.xyzx
  43: add r2.w, r2.w, r2.w
  44: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  45: mov r5.x, v3.w
  46: mov r5.y, v4.w
  47: mov r5.z, v5.w
  48: dp3_sat r2.x, r2.xyzx, r5.xyzx
  49: dp3 r2.y, r4.xyzx, r5.xyzx
  50: mul r2.y, r2.y, r2.y
  51: mul r4.x, r2.y, r2.y
  52: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  53: sample r4.xyzw, r4.xyxx, t5.xyzw, s1
  54: mul r0.w, r4.x, l(16.000000)
  55: mul r0.xyz, r0.xyzx, r0.wwww
  56: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  57: mul r1.xyz, r2.xxxx, r3.xyzx
  58: mul o0.xyz, r0.xyzx, r1.xyzx
  59: mov o0.w, l(1.000000)
  60: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov r1.w, l(0)
  28: mov o3.xyzw, r1.wwwx
  29: mov o4.xyzw, r1.wwwy
  30: mov o5.w, r1.z
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul o5.xyz, r1.wwww, r1.xyzx
  37: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  38: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  39: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  40: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  41: mov o8.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 38 math, 5 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: add r0.w, -cb0[3].x, l(1.000000)
   3: dp3 r1.x, v5.xyzx, v5.xyzx
   4: rsq r1.x, r1.x
   5: mul r1.xyz, r1.xxxx, v5.xyzx
   6: mul r2.xyz, v6.yyyy, cb0[12].xyzx
   7: mad r2.xyz, cb0[11].xyzx, v6.xxxx, r2.xyzx
   8: mad r2.xyz, cb0[13].xyzx, v6.zzzz, r2.xyzx
   9: add r2.xyz, r2.xyzx, cb0[14].xyzx
  10: eq r1.w, cb2[0].x, l(1.000000)
  11: if_nz r1.w
  12:   eq r1.w, cb2[0].y, l(1.000000)
  13:   mul r3.xyz, v6.yyyy, cb2[2].xyzx
  14:   mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
  15:   mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
  16:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  17:   movc r3.xyz, r1.wwww, r3.xyzx, v6.xyzx
  18:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  19:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  20:   mad r1.w, r3.y, l(0.250000), l(0.750000)
  21:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  22:   max r3.x, r1.w, r2.w
  23:   sample r3.xyzw, r3.xzwx, t4.xyzw, s0
  24: else 
  25:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  26: endif 
  27: dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
  28: dp3 r2.w, r2.xyzx, r2.xyzx
  29: sample r3.xyzw, r2.wwww, t1.xyzw, s4
  30: sample r2.xyzw, r2.xyzx, t2.xyzw, s3
  31: mul r2.x, r2.w, r3.x
  32: mul r1.w, r1.w, r2.x
  33: mul r2.xyz, r1.wwww, cb0[2].xyzx
  34: dp3 r1.w, -v2.xyzx, r1.xyzx
  35: add r1.w, r1.w, r1.w
  36: mad r3.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  37: mov r4.x, v3.w
  38: mov r4.y, v4.w
  39: mov r4.z, v5.w
  40: dp3_sat r1.x, r1.xyzx, r4.xyzx
  41: dp3 r1.y, r3.xyzx, r4.xyzx
  42: mul r1.y, r1.y, r1.y
  43: mul r3.x, r1.y, r1.y
  44: add r3.y, -cb0[8].w, l(1.000000)
  45: sample r3.xyzw, r3.xyxx, t3.xyzw, s1
  46: mul r1.y, r3.x, l(16.000000)
  47: mul r1.yzw, r1.yyyy, cb0[3].xxyz
  48: mad r0.xyz, r0.xyzx, r0.wwww, r1.yzwy
  49: mul r1.xyz, r1.xxxx, r2.xyzx
  50: mul o0.xyz, r0.xyzx, r1.xyzx
  51: mov o0.w, l(1.000000)
  52: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add r2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: dp3 r1.x, r2.xyzx, r2.xyzx
  21: rsq r1.x, r1.x
  22: mul o2.xyz, r1.xxxx, r2.xyzx
  23: mov o2.w, l(0)
  24: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  25: mov o6.xyz, r1.yzwy
  26: dp3 r1.x, r2.xyzx, r2.xyzx
  27: rsq r1.x, r1.x
  28: mul r1.xyz, r1.xxxx, r2.xyzx
  29: mov r1.w, l(0)
  30: mov o3.xyzw, r1.wwwx
  31: mov o4.xyzw, r1.wwwy
  32: mov o5.w, r1.z
  33: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  34: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  35: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  36: dp3 r1.w, r1.xyzx, r1.xyzx
  37: rsq r1.w, r1.w
  38: mul o5.xyz, r1.wwww, r1.xyzx
  39: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  40: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  41: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  42: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  43: mov o8.xyzw, l(0,0,0,0)
  44: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 38 math, 5 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: add r0.w, -cb0[3].x, l(1.000000)
   3: dp3 r1.x, v5.xyzx, v5.xyzx
   4: rsq r1.x, r1.x
   5: mul r1.xyz, r1.xxxx, v5.xyzx
   6: mul r2.xyz, v6.yyyy, cb0[12].xyzx
   7: mad r2.xyz, cb0[11].xyzx, v6.xxxx, r2.xyzx
   8: mad r2.xyz, cb0[13].xyzx, v6.zzzz, r2.xyzx
   9: add r2.xyz, r2.xyzx, cb0[14].xyzx
  10: eq r1.w, cb2[0].x, l(1.000000)
  11: if_nz r1.w
  12:   eq r1.w, cb2[0].y, l(1.000000)
  13:   mul r3.xyz, v6.yyyy, cb2[2].xyzx
  14:   mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
  15:   mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
  16:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  17:   movc r3.xyz, r1.wwww, r3.xyzx, v6.xyzx
  18:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  19:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  20:   mad r1.w, r3.y, l(0.250000), l(0.750000)
  21:   mad r2.w, cb2[0].z, l(0.500000), l(0.750000)
  22:   max r3.x, r1.w, r2.w
  23:   sample r3.xyzw, r3.xzwx, t4.xyzw, s0
  24: else 
  25:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  26: endif 
  27: dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
  28: dp3 r2.w, r2.xyzx, r2.xyzx
  29: sample r3.xyzw, r2.wwww, t1.xyzw, s4
  30: sample r2.xyzw, r2.xyzx, t2.xyzw, s3
  31: mul r2.x, r2.w, r3.x
  32: mul r1.w, r1.w, r2.x
  33: mul r2.xyz, r1.wwww, cb0[2].xyzx
  34: dp3 r1.w, -v2.xyzx, r1.xyzx
  35: add r1.w, r1.w, r1.w
  36: mad r3.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  37: mov r4.x, v3.w
  38: mov r4.y, v4.w
  39: mov r4.z, v5.w
  40: dp3_sat r1.x, r1.xyzx, r4.xyzx
  41: dp3 r1.y, r3.xyzx, r4.xyzx
  42: mul r1.y, r1.y, r1.y
  43: mul r3.x, r1.y, r1.y
  44: add r3.y, -cb0[8].w, l(1.000000)
  45: sample r3.xyzw, r3.xyxx, t3.xyzw, s1
  46: mul r1.y, r3.x, l(16.000000)
  47: mul r1.yzw, r1.yyyy, cb0[3].xxyz
  48: mad r0.xyz, r0.xyzx, r0.wwww, r1.yzwy
  49: mul r1.xyz, r1.xxxx, r2.xyzx
  50: mul o0.xyz, r0.xyzx, r1.xyzx
  51: mov o0.w, l(1.000000)
  52: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: mov r2.w, l(0)
  25: mov o3.xyzw, r2.wwwx
  26: mov o4.xyzw, r2.wwwy
  27: mov o5.w, r2.z
  28: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  29: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  30: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  31: dp3 r1.w, r1.xyzx, r1.xyzx
  32: rsq r1.w, r1.w
  33: mul o5.xyz, r1.wwww, r1.xyzx
  34: mul r1.xy, r0.yyyy, cb0[12].xyxx
  35: mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
  36: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  37: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  38: mov o8.xyzw, l(0,0,0,0)
  39: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 36 math, 6 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: dp3 r2.x, v5.xyzx, v5.xyzx
   5: rsq r2.x, r2.x
   6: mul r2.xyz, r2.xxxx, v5.xyzx
   7: mul r3.xy, v6.yyyy, cb0[12].xyxx
   8: mad r3.xy, cb0[11].xyxx, v6.xxxx, r3.xyxx
   9: mad r3.xy, cb0[13].xyxx, v6.zzzz, r3.xyxx
  10: add r3.xy, r3.xyxx, cb0[14].xyxx
  11: eq r2.w, cb2[0].x, l(1.000000)
  12: if_nz r2.w
  13:   eq r2.w, cb2[0].y, l(1.000000)
  14:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  15:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  16:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  17:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  18:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  19:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  20:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  21:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  22:   mad r3.z, cb2[0].z, l(0.500000), l(0.750000)
  23:   max r4.x, r2.w, r3.z
  24:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  25: else 
  26:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  27: endif 
  28: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  29: sample r3.xyzw, r3.xyxx, t2.xyzw, s4
  30: mul r2.w, r2.w, r3.w
  31: mul r3.xyz, r2.wwww, cb0[2].xyzx
  32: dp3 r2.w, -v2.xyzx, r2.xyzx
  33: add r2.w, r2.w, r2.w
  34: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  35: mov r5.x, v3.w
  36: mov r5.y, v4.w
  37: mov r5.z, v5.w
  38: dp3_sat r2.x, r2.xyzx, r5.xyzx
  39: dp3 r2.y, r4.xyzx, r5.xyzx
  40: mul r2.y, r2.y, r2.y
  41: mul r4.x, r2.y, r2.y
  42: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  43: sample r4.xyzw, r4.xyxx, t3.xyzw, s1
  44: mul r0.w, r4.x, l(16.000000)
  45: mul r0.xyz, r0.xyzx, r0.wwww
  46: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  47: mul r1.xyz, r2.xxxx, r3.xyzx
  48: mul o0.xyz, r0.xyzx, r1.xyzx
  49: mov o0.w, l(1.000000)
  50: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add r2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: dp3 r1.x, r2.xyzx, r2.xyzx
  21: rsq r1.x, r1.x
  22: mul o2.xyz, r1.xxxx, r2.xyzx
  23: mov o2.w, l(0)
  24: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  25: mov o6.xyz, r1.yzwy
  26: mov r2.w, l(0)
  27: mov o3.xyzw, r2.wwwx
  28: mov o4.xyzw, r2.wwwy
  29: mov o5.w, r2.z
  30: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  31: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  32: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  33: dp3 r1.w, r1.xyzx, r1.xyzx
  34: rsq r1.w, r1.w
  35: mul o5.xyz, r1.wwww, r1.xyzx
  36: mul r1.xy, r0.yyyy, cb0[12].xyxx
  37: mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
  38: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  39: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  40: mov o8.xyzw, l(0,0,0,0)
  41: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 36 math, 6 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: dp3 r2.x, v5.xyzx, v5.xyzx
   5: rsq r2.x, r2.x
   6: mul r2.xyz, r2.xxxx, v5.xyzx
   7: mul r3.xy, v6.yyyy, cb0[12].xyxx
   8: mad r3.xy, cb0[11].xyxx, v6.xxxx, r3.xyxx
   9: mad r3.xy, cb0[13].xyxx, v6.zzzz, r3.xyxx
  10: add r3.xy, r3.xyxx, cb0[14].xyxx
  11: eq r2.w, cb2[0].x, l(1.000000)
  12: if_nz r2.w
  13:   eq r2.w, cb2[0].y, l(1.000000)
  14:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  15:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  16:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  17:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  18:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  19:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  20:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  21:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  22:   mad r3.z, cb2[0].z, l(0.500000), l(0.750000)
  23:   max r4.x, r2.w, r3.z
  24:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  25: else 
  26:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  27: endif 
  28: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  29: sample r3.xyzw, r3.xyxx, t2.xyzw, s4
  30: mul r2.w, r2.w, r3.w
  31: mul r3.xyz, r2.wwww, cb0[2].xyzx
  32: dp3 r2.w, -v2.xyzx, r2.xyzx
  33: add r2.w, r2.w, r2.w
  34: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  35: mov r5.x, v3.w
  36: mov r5.y, v4.w
  37: mov r5.z, v5.w
  38: dp3_sat r2.x, r2.xyzx, r5.xyzx
  39: dp3 r2.y, r4.xyzx, r5.xyzx
  40: mul r2.y, r2.y, r2.y
  41: mul r4.x, r2.y, r2.y
  42: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  43: sample r4.xyzw, r4.xyxx, t3.xyzw, s1
  44: mul r0.w, r4.x, l(16.000000)
  45: mul r0.xyz, r0.xyzx, r0.wwww
  46: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  47: mul r1.xyz, r2.xxxx, r3.xyzx
  48: mul o0.xyz, r0.xyzx, r1.xyzx
  49: mov o0.w, l(1.000000)
  50: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 41 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  23: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  24: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  25: dp3 r1.w, r2.xyzx, r2.xyzx
  26: rsq r1.w, r1.w
  27: mul r2.xyz, r1.wwww, r2.xyzx
  28: mov o3.xyz, r2.xyzx
  29: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  30: mov o6.xyz, r1.xyzx
  31: mov o3.w, r3.x
  32: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  33: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  34: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  35: dp3 r1.w, r1.xyzx, r1.xyzx
  36: rsq r1.w, r1.w
  37: mul r1.xyz, r1.wwww, r1.xyzx
  38: mul r4.xyz, r2.yzxy, r1.zxyz
  39: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  40: mov o5.xyz, r1.xyzx
  41: mul r1.x, v4.w, cb3[9].w
  42: mul o4.xyz, r1.xxxx, r2.xyzx
  43: mov o4.w, r3.y
  44: mov o5.w, r3.z
  45: mul r1.xy, r0.yyyy, cb0[12].xyxx
  46: mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
  47: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  48: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  49: mov o8.xyzw, l(0,0,0,0)
  50: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 42 math, 6 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   5: mul r2.x, r2.w, r2.x
   6: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   7: dp2 r2.z, r2.xyxx, r2.xyxx
   8: min r2.z, r2.z, l(1.000000)
   9: add r2.z, -r2.z, l(1.000000)
  10: sqrt r2.z, r2.z
  11: mul r3.xyz, r2.yyyy, v4.xyzx
  12: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  13: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  14: mul r3.xy, v6.yyyy, cb0[12].xyxx
  15: mad r3.xy, cb0[11].xyxx, v6.xxxx, r3.xyxx
  16: mad r3.xy, cb0[13].xyxx, v6.zzzz, r3.xyxx
  17: add r3.xy, r3.xyxx, cb0[14].xyxx
  18: eq r2.w, cb2[0].x, l(1.000000)
  19: if_nz r2.w
  20:   eq r2.w, cb2[0].y, l(1.000000)
  21:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  22:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  23:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  24:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  25:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  26:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  27:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  28:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  29:   mad r3.z, cb2[0].z, l(0.500000), l(0.750000)
  30:   max r4.x, r2.w, r3.z
  31:   sample r4.xyzw, r4.xzwx, t5.xyzw, s0
  32: else 
  33:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  34: endif 
  35: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  36: sample r3.xyzw, r3.xyxx, t3.xyzw, s5
  37: mul r2.w, r2.w, r3.w
  38: mul r3.xyz, r2.wwww, cb0[2].xyzx
  39: dp3 r2.w, -v2.xyzx, r2.xyzx
  40: add r2.w, r2.w, r2.w
  41: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  42: mov r5.x, v3.w
  43: mov r5.y, v4.w
  44: mov r5.z, v5.w
  45: dp3_sat r2.x, r2.xyzx, r5.xyzx
  46: dp3 r2.y, r4.xyzx, r5.xyzx
  47: mul r2.y, r2.y, r2.y
  48: mul r4.x, r2.y, r2.y
  49: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  50: sample r4.xyzw, r4.xyxx, t4.xyzw, s1
  51: mul r0.w, r4.x, l(16.000000)
  52: mul r0.xyz, r0.xyzx, r0.wwww
  53: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  54: mul r1.xyz, r2.xxxx, r3.xyzx
  55: mul o0.xyz, r0.xyzx, r1.xyzx
  56: mov o0.w, l(1.000000)
  57: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 42 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add r2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: dp3 r1.x, r2.xyzx, r2.xyzx
  21: rsq r1.x, r1.x
  22: mul o2.xyz, r1.xxxx, r2.xyzx
  23: mov o2.w, l(0)
  24: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  25: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  26: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  27: dp3 r1.x, r2.xyzx, r2.xyzx
  28: rsq r1.x, r1.x
  29: mul r2.xyz, r1.xxxx, r2.xyzx
  30: mov o3.xyz, r2.xyzx
  31: mad r3.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  32: mov o6.xyz, r1.yzwy
  33: mov o3.w, r3.x
  34: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  35: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  36: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  37: dp3 r1.w, r1.xyzx, r1.xyzx
  38: rsq r1.w, r1.w
  39: mul r1.xyz, r1.wwww, r1.xyzx
  40: mul r4.xyz, r2.yzxy, r1.zxyz
  41: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  42: mov o5.xyz, r1.xyzx
  43: mul r1.x, v4.w, cb2[9].w
  44: mul o4.xyz, r1.xxxx, r2.xyzx
  45: mov o4.w, r3.y
  46: mov o5.w, r3.z
  47: mul r1.xy, r0.yyyy, cb0[12].xyxx
  48: mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
  49: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  50: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  51: mov o8.xyzw, l(0,0,0,0)
  52: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 42 math, 6 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   5: mul r2.x, r2.w, r2.x
   6: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   7: dp2 r2.z, r2.xyxx, r2.xyxx
   8: min r2.z, r2.z, l(1.000000)
   9: add r2.z, -r2.z, l(1.000000)
  10: sqrt r2.z, r2.z
  11: mul r3.xyz, r2.yyyy, v4.xyzx
  12: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  13: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  14: mul r3.xy, v6.yyyy, cb0[12].xyxx
  15: mad r3.xy, cb0[11].xyxx, v6.xxxx, r3.xyxx
  16: mad r3.xy, cb0[13].xyxx, v6.zzzz, r3.xyxx
  17: add r3.xy, r3.xyxx, cb0[14].xyxx
  18: eq r2.w, cb2[0].x, l(1.000000)
  19: if_nz r2.w
  20:   eq r2.w, cb2[0].y, l(1.000000)
  21:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  22:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  23:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  24:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  25:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  26:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  27:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  28:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  29:   mad r3.z, cb2[0].z, l(0.500000), l(0.750000)
  30:   max r4.x, r2.w, r3.z
  31:   sample r4.xyzw, r4.xzwx, t5.xyzw, s0
  32: else 
  33:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  34: endif 
  35: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  36: sample r3.xyzw, r3.xyxx, t3.xyzw, s5
  37: mul r2.w, r2.w, r3.w
  38: mul r3.xyz, r2.wwww, cb0[2].xyzx
  39: dp3 r2.w, -v2.xyzx, r2.xyzx
  40: add r2.w, r2.w, r2.w
  41: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  42: mov r5.x, v3.w
  43: mov r5.y, v4.w
  44: mov r5.z, v5.w
  45: dp3_sat r2.x, r2.xyzx, r5.xyzx
  46: dp3 r2.y, r4.xyzx, r5.xyzx
  47: mul r2.y, r2.y, r2.y
  48: mul r4.x, r2.y, r2.y
  49: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  50: sample r4.xyzw, r4.xyxx, t4.xyzw, s1
  51: mul r0.w, r4.x, l(16.000000)
  52: mul r0.xyz, r0.xyzx, r0.wwww
  53: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  54: mul r1.xyz, r2.xxxx, r3.xyzx
  55: mul o0.xyz, r0.xyzx, r1.xyzx
  56: mov o0.w, l(1.000000)
  57: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: mov r2.w, l(0)
  25: mov o3.xyzw, r2.wwwx
  26: mov o4.xyzw, r2.wwwy
  27: mov o5.w, r2.z
  28: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  29: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  30: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  31: dp3 r1.w, r1.xyzx, r1.xyzx
  32: rsq r1.w, r1.w
  33: mul o5.xyz, r1.wwww, r1.xyzx
  34: mul r1.xy, r0.yyyy, cb0[12].xyxx
  35: mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
  36: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  37: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  38: mov o8.xyzw, l(0,0,0,0)
  39: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 36 math, 5 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: add r0.w, -cb0[3].x, l(1.000000)
   3: dp3 r1.x, v5.xyzx, v5.xyzx
   4: rsq r1.x, r1.x
   5: mul r1.xyz, r1.xxxx, v5.xyzx
   6: mul r2.xy, v6.yyyy, cb0[12].xyxx
   7: mad r2.xy, cb0[11].xyxx, v6.xxxx, r2.xyxx
   8: mad r2.xy, cb0[13].xyxx, v6.zzzz, r2.xyxx
   9: add r2.xy, r2.xyxx, cb0[14].xyxx
  10: eq r1.w, cb2[0].x, l(1.000000)
  11: if_nz r1.w
  12:   eq r1.w, cb2[0].y, l(1.000000)
  13:   mul r3.xyz, v6.yyyy, cb2[2].xyzx
  14:   mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
  15:   mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
  16:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  17:   movc r3.xyz, r1.wwww, r3.xyzx, v6.xyzx
  18:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  19:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  20:   mad r1.w, r3.y, l(0.250000), l(0.750000)
  21:   mad r2.z, cb2[0].z, l(0.500000), l(0.750000)
  22:   max r3.x, r1.w, r2.z
  23:   sample r3.xyzw, r3.xzwx, t3.xyzw, s0
  24: else 
  25:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  26: endif 
  27: dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
  28: sample r2.xyzw, r2.xyxx, t1.xyzw, s3
  29: mul r1.w, r1.w, r2.w
  30: mul r2.xyz, r1.wwww, cb0[2].xyzx
  31: dp3 r1.w, -v2.xyzx, r1.xyzx
  32: add r1.w, r1.w, r1.w
  33: mad r3.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  34: mov r4.x, v3.w
  35: mov r4.y, v4.w
  36: mov r4.z, v5.w
  37: dp3_sat r1.x, r1.xyzx, r4.xyzx
  38: dp3 r1.y, r3.xyzx, r4.xyzx
  39: mul r1.y, r1.y, r1.y
  40: mul r3.x, r1.y, r1.y
  41: add r3.y, -cb0[8].w, l(1.000000)
  42: sample r3.xyzw, r3.xyxx, t2.xyzw, s1
  43: mul r1.y, r3.x, l(16.000000)
  44: mul r1.yzw, r1.yyyy, cb0[3].xxyz
  45: mad r0.xyz, r0.xyzx, r0.wwww, r1.yzwy
  46: mul r1.xyz, r1.xxxx, r2.xyzx
  47: mul o0.xyz, r0.xyzx, r1.xyzx
  48: mov o0.w, l(1.000000)
  49: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add r2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: dp3 r1.x, r2.xyzx, r2.xyzx
  21: rsq r1.x, r1.x
  22: mul o2.xyz, r1.xxxx, r2.xyzx
  23: mov o2.w, l(0)
  24: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  25: mov o6.xyz, r1.yzwy
  26: mov r2.w, l(0)
  27: mov o3.xyzw, r2.wwwx
  28: mov o4.xyzw, r2.wwwy
  29: mov o5.w, r2.z
  30: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  31: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  32: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  33: dp3 r1.w, r1.xyzx, r1.xyzx
  34: rsq r1.w, r1.w
  35: mul o5.xyz, r1.wwww, r1.xyzx
  36: mul r1.xy, r0.yyyy, cb0[12].xyxx
  37: mad r0.xy, cb0[11].xyxx, r0.xxxx, r1.xyxx
  38: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  39: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  40: mov o8.xyzw, l(0,0,0,0)
  41: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 36 math, 5 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 5
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s2
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: add r0.w, -cb0[3].x, l(1.000000)
   3: dp3 r1.x, v5.xyzx, v5.xyzx
   4: rsq r1.x, r1.x
   5: mul r1.xyz, r1.xxxx, v5.xyzx
   6: mul r2.xy, v6.yyyy, cb0[12].xyxx
   7: mad r2.xy, cb0[11].xyxx, v6.xxxx, r2.xyxx
   8: mad r2.xy, cb0[13].xyxx, v6.zzzz, r2.xyxx
   9: add r2.xy, r2.xyxx, cb0[14].xyxx
  10: eq r1.w, cb2[0].x, l(1.000000)
  11: if_nz r1.w
  12:   eq r1.w, cb2[0].y, l(1.000000)
  13:   mul r3.xyz, v6.yyyy, cb2[2].xyzx
  14:   mad r3.xyz, cb2[1].xyzx, v6.xxxx, r3.xyzx
  15:   mad r3.xyz, cb2[3].xyzx, v6.zzzz, r3.xyzx
  16:   add r3.xyz, r3.xyzx, cb2[4].xyzx
  17:   movc r3.xyz, r1.wwww, r3.xyzx, v6.xyzx
  18:   add r3.xyz, r3.xyzx, -cb2[6].xyzx
  19:   mul r3.yzw, r3.xxyz, cb2[5].xxyz
  20:   mad r1.w, r3.y, l(0.250000), l(0.750000)
  21:   mad r2.z, cb2[0].z, l(0.500000), l(0.750000)
  22:   max r3.x, r1.w, r2.z
  23:   sample r3.xyzw, r3.xzwx, t3.xyzw, s0
  24: else 
  25:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  26: endif 
  27: dp4_sat r1.w, r3.xyzw, cb1[46].xyzw
  28: sample r2.xyzw, r2.xyxx, t1.xyzw, s3
  29: mul r1.w, r1.w, r2.w
  30: mul r2.xyz, r1.wwww, cb0[2].xyzx
  31: dp3 r1.w, -v2.xyzx, r1.xyzx
  32: add r1.w, r1.w, r1.w
  33: mad r3.xyz, r1.xyzx, -r1.wwww, -v2.xyzx
  34: mov r4.x, v3.w
  35: mov r4.y, v4.w
  36: mov r4.z, v5.w
  37: dp3_sat r1.x, r1.xyzx, r4.xyzx
  38: dp3 r1.y, r3.xyzx, r4.xyzx
  39: mul r1.y, r1.y, r1.y
  40: mul r3.x, r1.y, r1.y
  41: add r3.y, -cb0[8].w, l(1.000000)
  42: sample r3.xyzw, r3.xyxx, t2.xyzw, s1
  43: mul r1.y, r3.x, l(16.000000)
  44: mul r1.yzw, r1.yyyy, cb0[3].xxyz
  45: mad r0.xyz, r0.xyzx, r0.wwww, r1.yzwy
  46: mul r1.xyz, r1.xxxx, r2.xyzx
  47: mul o0.xyz, r0.xyzx, r1.xyzx
  48: mov o0.w, l(1.000000)
  49: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SPOT 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov r1.w, l(0)
  28: mov o3.xyzw, r1.wwwx
  29: mov o4.xyzw, r1.wwwy
  30: mov o5.w, r1.z
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul o5.xyz, r1.wwww, r1.xyzx
  37: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  38: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  39: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  40: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  41: mov o8.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 38 math, 3 temp registers, 5 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 5 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v6.yyyy, cb0[12].xyzw
   1: mad r0.xyzw, cb0[11].xyzw, v6.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[13].xyzw, v6.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb0[14].xyzw
   4: div r1.xy, r0.xyxx, r0.wwww
   5: add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: sample r1.xyzw, r1.xyxx, t2.xyzw, s4
   7: lt r0.w, l(0.000000), r0.z
   8: dp3 r0.x, r0.xyzx, r0.xyzx
   9: sample r2.xyzw, r0.xxxx, t3.xyzw, s5
  10: and r0.x, r0.w, l(0x3f800000)
  11: mul r0.x, r1.w, r0.x
  12: mul r0.x, r2.x, r0.x
  13: mul r1.xyzw, v6.yyyy, cb1[9].xyzw
  14: mad r1.xyzw, cb1[8].xyzw, v6.xxxx, r1.xyzw
  15: mad r1.xyzw, cb1[10].xyzw, v6.zzzz, r1.xyzw
  16: add r1.xyzw, r1.xyzw, cb1[11].xyzw
  17: div r0.yzw, r1.xxyz, r1.wwww
  18: sample_c_lz r0.y, r0.yzyy, t5.xxxx, s1, r0.w
  19: add r0.z, -cb1[24].x, l(1.000000)
  20: mad r0.y, r0.y, r0.z, cb1[24].x
  21: mul r0.x, r0.y, r0.x
  22: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  23: dp3 r0.w, v5.xyzx, v5.xyzx
  24: rsq r0.w, r0.w
  25: mul r1.xyz, r0.wwww, v5.xyzx
  26: mov r2.x, v3.w
  27: mov r2.y, v4.w
  28: mov r2.z, v5.w
  29: dp3_sat r0.w, r1.xyzx, r2.xyzx
  30: mul r0.xyz, r0.wwww, r0.xyzx
  31: dp3 r0.w, -v2.xyzx, r1.xyzx
  32: add r0.w, r0.w, r0.w
  33: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  34: dp3 r0.w, r1.xyzx, r2.xyzx
  35: mul r0.w, r0.w, r0.w
  36: mul r1.x, r0.w, r0.w
  37: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  38: mad r1.y, -r2.w, cb0[9].x, l(1.000000)
  39: sample r1.xyzw, r1.xyxx, t4.xyzw, s0
  40: mul r0.w, r1.x, l(16.000000)
  41: mul r1.xyz, r2.xyzx, r0.wwww
  42: add r0.w, -r2.x, l(1.000000)
  43: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
  44: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  45: mad r1.xyz, r2.xyzx, r0.wwww, r1.xyzx
  46: mul o0.xyz, r0.xyzx, r1.xyzx
  47: mov o0.w, l(1.000000)
  48: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SPOT UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add r2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: dp3 r1.x, r2.xyzx, r2.xyzx
  21: rsq r1.x, r1.x
  22: mul o2.xyz, r1.xxxx, r2.xyzx
  23: mov o2.w, l(0)
  24: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  25: mov o6.xyz, r1.yzwy
  26: dp3 r1.x, r2.xyzx, r2.xyzx
  27: rsq r1.x, r1.x
  28: mul r1.xyz, r1.xxxx, r2.xyzx
  29: mov r1.w, l(0)
  30: mov o3.xyzw, r1.wwwx
  31: mov o4.xyzw, r1.wwwy
  32: mov o5.w, r1.z
  33: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  34: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  35: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  36: dp3 r1.w, r1.xyzx, r1.xyzx
  37: rsq r1.w, r1.w
  38: mul o5.xyz, r1.wwww, r1.xyzx
  39: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  40: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  41: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  42: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  43: mov o8.xyzw, l(0,0,0,0)
  44: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 38 math, 3 temp registers, 5 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 5 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v6.yyyy, cb0[12].xyzw
   1: mad r0.xyzw, cb0[11].xyzw, v6.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[13].xyzw, v6.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb0[14].xyzw
   4: div r1.xy, r0.xyxx, r0.wwww
   5: add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: sample r1.xyzw, r1.xyxx, t2.xyzw, s4
   7: lt r0.w, l(0.000000), r0.z
   8: dp3 r0.x, r0.xyzx, r0.xyzx
   9: sample r2.xyzw, r0.xxxx, t3.xyzw, s5
  10: and r0.x, r0.w, l(0x3f800000)
  11: mul r0.x, r1.w, r0.x
  12: mul r0.x, r2.x, r0.x
  13: mul r1.xyzw, v6.yyyy, cb1[9].xyzw
  14: mad r1.xyzw, cb1[8].xyzw, v6.xxxx, r1.xyzw
  15: mad r1.xyzw, cb1[10].xyzw, v6.zzzz, r1.xyzw
  16: add r1.xyzw, r1.xyzw, cb1[11].xyzw
  17: div r0.yzw, r1.xxyz, r1.wwww
  18: sample_c_lz r0.y, r0.yzyy, t5.xxxx, s1, r0.w
  19: add r0.z, -cb1[24].x, l(1.000000)
  20: mad r0.y, r0.y, r0.z, cb1[24].x
  21: mul r0.x, r0.y, r0.x
  22: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  23: dp3 r0.w, v5.xyzx, v5.xyzx
  24: rsq r0.w, r0.w
  25: mul r1.xyz, r0.wwww, v5.xyzx
  26: mov r2.x, v3.w
  27: mov r2.y, v4.w
  28: mov r2.z, v5.w
  29: dp3_sat r0.w, r1.xyzx, r2.xyzx
  30: mul r0.xyz, r0.wwww, r0.xyzx
  31: dp3 r0.w, -v2.xyzx, r1.xyzx
  32: add r0.w, r0.w, r0.w
  33: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  34: dp3 r0.w, r1.xyzx, r2.xyzx
  35: mul r0.w, r0.w, r0.w
  36: mul r1.x, r0.w, r0.w
  37: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  38: mad r1.y, -r2.w, cb0[9].x, l(1.000000)
  39: sample r1.xyzw, r1.xyxx, t4.xyzw, s0
  40: mul r0.w, r1.x, l(16.000000)
  41: mul r1.xyz, r2.xyzx, r0.wwww
  42: add r0.w, -r2.x, l(1.000000)
  43: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
  44: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  45: mad r1.xyz, r2.xyzx, r0.wwww, r1.xyzx
  46: mul o0.xyz, r0.xyzx, r1.xyzx
  47: mov o0.w, l(1.000000)
  48: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SPOT 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 44 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov o3.w, r1.x
  28: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  29: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  30: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  31: dp3 r1.x, r2.xyzx, r2.xyzx
  32: rsq r1.x, r1.x
  33: mul r2.xyz, r1.xxxx, r2.xyzx
  34: mov o3.xyz, r2.xyzx
  35: dp3 r3.x, v1.xyzx, cb3[4].xyzx
  36: dp3 r3.y, v1.xyzx, cb3[5].xyzx
  37: dp3 r3.z, v1.xyzx, cb3[6].xyzx
  38: dp3 r1.x, r3.xyzx, r3.xyzx
  39: rsq r1.x, r1.x
  40: mul r3.xyz, r1.xxxx, r3.xyzx
  41: mul r4.xyz, r2.yzxy, r3.zxyz
  42: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  43: mov o5.xyz, r3.xyzx
  44: mul r1.x, v4.w, cb3[9].w
  45: mul o4.xyz, r1.xxxx, r2.xyzx
  46: mov o4.w, r1.y
  47: mov o5.w, r1.z
  48: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  49: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  50: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  51: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  52: mov o8.xyzw, l(0,0,0,0)
  53: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 44 math, 3 temp registers, 6 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 5
Set 2D Texture "_LightTextureB0" to slot 4 sampler slot 6
Set 2D Texture "unity_NHxRoughness" to slot 5 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 6 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v6.yyyy, cb0[12].xyzw
   1: mad r0.xyzw, cb0[11].xyzw, v6.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[13].xyzw, v6.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb0[14].xyzw
   4: div r1.xy, r0.xyxx, r0.wwww
   5: add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: sample r1.xyzw, r1.xyxx, t3.xyzw, s5
   7: lt r0.w, l(0.000000), r0.z
   8: dp3 r0.x, r0.xyzx, r0.xyzx
   9: sample r2.xyzw, r0.xxxx, t4.xyzw, s6
  10: and r0.x, r0.w, l(0x3f800000)
  11: mul r0.x, r1.w, r0.x
  12: mul r0.x, r2.x, r0.x
  13: mul r1.xyzw, v6.yyyy, cb1[9].xyzw
  14: mad r1.xyzw, cb1[8].xyzw, v6.xxxx, r1.xyzw
  15: mad r1.xyzw, cb1[10].xyzw, v6.zzzz, r1.xyzw
  16: add r1.xyzw, r1.xyzw, cb1[11].xyzw
  17: div r0.yzw, r1.xxyz, r1.wwww
  18: sample_c_lz r0.y, r0.yzyy, t6.xxxx, s1, r0.w
  19: add r0.z, -cb1[24].x, l(1.000000)
  20: mad r0.y, r0.y, r0.z, cb1[24].x
  21: mul r0.x, r0.y, r0.x
  22: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  23: sample r1.xyzw, v1.xyxx, t2.xyzw, s3
  24: mul r1.x, r1.w, r1.x
  25: mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  26: mul r2.xyz, r1.yyyy, v4.xyzx
  27: mad r2.xyz, v3.xyzx, r1.xxxx, r2.xyzx
  28: dp2 r0.w, r1.xyxx, r1.xyxx
  29: min r0.w, r0.w, l(1.000000)
  30: add r0.w, -r0.w, l(1.000000)
  31: sqrt r0.w, r0.w
  32: mad r1.xyz, v5.xyzx, r0.wwww, r2.xyzx
  33: mov r2.x, v3.w
  34: mov r2.y, v4.w
  35: mov r2.z, v5.w
  36: dp3_sat r0.w, r1.xyzx, r2.xyzx
  37: mul r0.xyz, r0.wwww, r0.xyzx
  38: dp3 r0.w, -v2.xyzx, r1.xyzx
  39: add r0.w, r0.w, r0.w
  40: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  41: dp3 r0.w, r1.xyzx, r2.xyzx
  42: mul r0.w, r0.w, r0.w
  43: mul r1.x, r0.w, r0.w
  44: sample r2.xyzw, v1.xyxx, t1.xyzw, s4
  45: mad r1.y, -r2.w, cb0[9].x, l(1.000000)
  46: sample r1.xyzw, r1.xyxx, t5.xyzw, s0
  47: mul r0.w, r1.x, l(16.000000)
  48: mul r1.xyz, r2.xyzx, r0.wwww
  49: add r0.w, -r2.x, l(1.000000)
  50: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
  51: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  52: mad r1.xyz, r2.xyzx, r0.wwww, r1.xyzx
  53: mul o0.xyz, r0.xyzx, r1.xyzx
  54: mov o0.w, l(1.000000)
  55: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SPOT UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 45 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add r2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: dp3 r1.x, r2.xyzx, r2.xyzx
  21: rsq r1.x, r1.x
  22: mul o2.xyz, r1.xxxx, r2.xyzx
  23: mov o2.w, l(0)
  24: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  25: mov o6.xyz, r1.yzwy
  26: dp3 r1.x, r2.xyzx, r2.xyzx
  27: rsq r1.x, r1.x
  28: mul r1.xyz, r1.xxxx, r2.xyzx
  29: mov o3.w, r1.x
  30: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  31: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  32: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  33: dp3 r1.x, r2.xyzx, r2.xyzx
  34: rsq r1.x, r1.x
  35: mul r2.xyz, r1.xxxx, r2.xyzx
  36: mov o3.xyz, r2.xyzx
  37: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  38: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  39: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  40: dp3 r1.x, r3.xyzx, r3.xyzx
  41: rsq r1.x, r1.x
  42: mul r3.xyz, r1.xxxx, r3.xyzx
  43: mul r4.xyz, r2.yzxy, r3.zxyz
  44: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  45: mov o5.xyz, r3.xyzx
  46: mul r1.x, v4.w, cb2[9].w
  47: mul o4.xyz, r1.xxxx, r2.xyzx
  48: mov o4.w, r1.y
  49: mov o5.w, r1.z
  50: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  51: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  52: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  53: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  54: mov o8.xyzw, l(0,0,0,0)
  55: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 44 math, 3 temp registers, 6 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 5
Set 2D Texture "_LightTextureB0" to slot 4 sampler slot 6
Set 2D Texture "unity_NHxRoughness" to slot 5 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 6 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texture2d (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v6.yyyy, cb0[12].xyzw
   1: mad r0.xyzw, cb0[11].xyzw, v6.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[13].xyzw, v6.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb0[14].xyzw
   4: div r1.xy, r0.xyxx, r0.wwww
   5: add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: sample r1.xyzw, r1.xyxx, t3.xyzw, s5
   7: lt r0.w, l(0.000000), r0.z
   8: dp3 r0.x, r0.xyzx, r0.xyzx
   9: sample r2.xyzw, r0.xxxx, t4.xyzw, s6
  10: and r0.x, r0.w, l(0x3f800000)
  11: mul r0.x, r1.w, r0.x
  12: mul r0.x, r2.x, r0.x
  13: mul r1.xyzw, v6.yyyy, cb1[9].xyzw
  14: mad r1.xyzw, cb1[8].xyzw, v6.xxxx, r1.xyzw
  15: mad r1.xyzw, cb1[10].xyzw, v6.zzzz, r1.xyzw
  16: add r1.xyzw, r1.xyzw, cb1[11].xyzw
  17: div r0.yzw, r1.xxyz, r1.wwww
  18: sample_c_lz r0.y, r0.yzyy, t6.xxxx, s1, r0.w
  19: add r0.z, -cb1[24].x, l(1.000000)
  20: mad r0.y, r0.y, r0.z, cb1[24].x
  21: mul r0.x, r0.y, r0.x
  22: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  23: sample r1.xyzw, v1.xyxx, t2.xyzw, s3
  24: mul r1.x, r1.w, r1.x
  25: mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  26: mul r2.xyz, r1.yyyy, v4.xyzx
  27: mad r2.xyz, v3.xyzx, r1.xxxx, r2.xyzx
  28: dp2 r0.w, r1.xyxx, r1.xyxx
  29: min r0.w, r0.w, l(1.000000)
  30: add r0.w, -r0.w, l(1.000000)
  31: sqrt r0.w, r0.w
  32: mad r1.xyz, v5.xyzx, r0.wwww, r2.xyzx
  33: mov r2.x, v3.w
  34: mov r2.y, v4.w
  35: mov r2.z, v5.w
  36: dp3_sat r0.w, r1.xyzx, r2.xyzx
  37: mul r0.xyz, r0.wwww, r0.xyzx
  38: dp3 r0.w, -v2.xyzx, r1.xyzx
  39: add r0.w, r0.w, r0.w
  40: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  41: dp3 r0.w, r1.xyzx, r2.xyzx
  42: mul r0.w, r0.w, r0.w
  43: mul r1.x, r0.w, r0.w
  44: sample r2.xyzw, v1.xyxx, t1.xyzw, s4
  45: mad r1.y, -r2.w, cb0[9].x, l(1.000000)
  46: sample r1.xyzw, r1.xyxx, t5.xyzw, s0
  47: mul r0.w, r1.x, l(16.000000)
  48: mul r1.xyz, r2.xyzx, r0.wwww
  49: add r0.w, -r2.x, l(1.000000)
  50: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
  51: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  52: mad r1.xyz, r2.xyzx, r0.wwww, r1.xyzx
  53: mul o0.xyz, r0.xyzx, r1.xyzx
  54: mov o0.w, l(1.000000)
  55: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SPOT 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov r1.w, l(0)
  28: mov o3.xyzw, r1.wwwx
  29: mov o4.xyzw, r1.wwwy
  30: mov o5.w, r1.z
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul o5.xyz, r1.wwww, r1.xyzx
  37: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  38: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  39: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  40: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  41: mov o8.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 38 math, 3 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v6.yyyy, cb0[12].xyzw
   1: mad r0.xyzw, cb0[11].xyzw, v6.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[13].xyzw, v6.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb0[14].xyzw
   4: div r1.xy, r0.xyxx, r0.wwww
   5: add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: sample r1.xyzw, r1.xyxx, t1.xyzw, s3
   7: lt r0.w, l(0.000000), r0.z
   8: dp3 r0.x, r0.xyzx, r0.xyzx
   9: sample r2.xyzw, r0.xxxx, t2.xyzw, s4
  10: and r0.x, r0.w, l(0x3f800000)
  11: mul r0.x, r1.w, r0.x
  12: mul r0.x, r2.x, r0.x
  13: mul r1.xyzw, v6.yyyy, cb1[9].xyzw
  14: mad r1.xyzw, cb1[8].xyzw, v6.xxxx, r1.xyzw
  15: mad r1.xyzw, cb1[10].xyzw, v6.zzzz, r1.xyzw
  16: add r1.xyzw, r1.xyzw, cb1[11].xyzw
  17: div r0.yzw, r1.xxyz, r1.wwww
  18: sample_c_lz r0.y, r0.yzyy, t4.xxxx, s1, r0.w
  19: add r0.z, -cb1[24].x, l(1.000000)
  20: mad r0.y, r0.y, r0.z, cb1[24].x
  21: mul r0.x, r0.y, r0.x
  22: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  23: dp3 r0.w, v5.xyzx, v5.xyzx
  24: rsq r0.w, r0.w
  25: mul r1.xyz, r0.wwww, v5.xyzx
  26: mov r2.x, v3.w
  27: mov r2.y, v4.w
  28: mov r2.z, v5.w
  29: dp3_sat r0.w, r1.xyzx, r2.xyzx
  30: mul r0.xyz, r0.wwww, r0.xyzx
  31: dp3 r0.w, -v2.xyzx, r1.xyzx
  32: add r0.w, r0.w, r0.w
  33: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  34: dp3 r0.w, r1.xyzx, r2.xyzx
  35: mul r0.w, r0.w, r0.w
  36: mul r1.x, r0.w, r0.w
  37: add r1.y, -cb0[8].w, l(1.000000)
  38: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  39: mul r0.w, r1.x, l(16.000000)
  40: mul r1.xyz, r0.wwww, cb0[3].xyzx
  41: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
  42: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  43: add r0.w, -cb0[3].x, l(1.000000)
  44: mad r1.xyz, r2.xyzx, r0.wwww, r1.xyzx
  45: mul o0.xyz, r0.xyzx, r1.xyzx
  46: mov o0.w, l(1.000000)
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH SPOT UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float   xyzw
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add r2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: dp3 r1.x, r2.xyzx, r2.xyzx
  21: rsq r1.x, r1.x
  22: mul o2.xyz, r1.xxxx, r2.xyzx
  23: mov o2.w, l(0)
  24: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  25: mov o6.xyz, r1.yzwy
  26: dp3 r1.x, r2.xyzx, r2.xyzx
  27: rsq r1.x, r1.x
  28: mul r1.xyz, r1.xxxx, r2.xyzx
  29: mov r1.w, l(0)
  30: mov o3.xyzw, r1.wwwx
  31: mov o4.xyzw, r1.wwwy
  32: mov o5.w, r1.z
  33: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  34: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  35: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  36: dp3 r1.w, r1.xyzx, r1.xyzx
  37: rsq r1.w, r1.w
  38: mul o5.xyz, r1.wwww, r1.xyzx
  39: mul r1.xyzw, r0.yyyy, cb0[12].xyzw
  40: mad r1.xyzw, cb0[11].xyzw, r0.xxxx, r1.xyzw
  41: mad r1.xyzw, cb0[13].xyzw, r0.zzzz, r1.xyzw
  42: mad o7.xyzw, cb0[14].xyzw, r0.wwww, r1.xyzw
  43: mov o8.xyzw, l(0,0,0,0)
  44: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 38 math, 3 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 0
Set 2D Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Matrix4x4 unity_WorldToShadow[4] at 128
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyzw        7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v6.yyyy, cb0[12].xyzw
   1: mad r0.xyzw, cb0[11].xyzw, v6.xxxx, r0.xyzw
   2: mad r0.xyzw, cb0[13].xyzw, v6.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb0[14].xyzw
   4: div r1.xy, r0.xyxx, r0.wwww
   5: add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
   6: sample r1.xyzw, r1.xyxx, t1.xyzw, s3
   7: lt r0.w, l(0.000000), r0.z
   8: dp3 r0.x, r0.xyzx, r0.xyzx
   9: sample r2.xyzw, r0.xxxx, t2.xyzw, s4
  10: and r0.x, r0.w, l(0x3f800000)
  11: mul r0.x, r1.w, r0.x
  12: mul r0.x, r2.x, r0.x
  13: mul r1.xyzw, v6.yyyy, cb1[9].xyzw
  14: mad r1.xyzw, cb1[8].xyzw, v6.xxxx, r1.xyzw
  15: mad r1.xyzw, cb1[10].xyzw, v6.zzzz, r1.xyzw
  16: add r1.xyzw, r1.xyzw, cb1[11].xyzw
  17: div r0.yzw, r1.xxyz, r1.wwww
  18: sample_c_lz r0.y, r0.yzyy, t4.xxxx, s1, r0.w
  19: add r0.z, -cb1[24].x, l(1.000000)
  20: mad r0.y, r0.y, r0.z, cb1[24].x
  21: mul r0.x, r0.y, r0.x
  22: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  23: dp3 r0.w, v5.xyzx, v5.xyzx
  24: rsq r0.w, r0.w
  25: mul r1.xyz, r0.wwww, v5.xyzx
  26: mov r2.x, v3.w
  27: mov r2.y, v4.w
  28: mov r2.z, v5.w
  29: dp3_sat r0.w, r1.xyzx, r2.xyzx
  30: mul r0.xyz, r0.wwww, r0.xyzx
  31: dp3 r0.w, -v2.xyzx, r1.xyzx
  32: add r0.w, r0.w, r0.w
  33: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  34: dp3 r0.w, r1.xyzx, r2.xyzx
  35: mul r0.w, r0.w, r0.w
  36: mul r1.x, r0.w, r0.w
  37: add r1.y, -cb0[8].w, l(1.000000)
  38: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  39: mul r0.w, r1.x, l(16.000000)
  40: mul r1.xyz, r0.wwww, cb0[3].xyzx
  41: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
  42: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  43: add r0.w, -cb0[3].x, l(1.000000)
  44: mad r1.xyz, r2.xyzx, r0.wwww, r1.xyzx
  45: mul o0.xyz, r0.xyzx, r1.xyzx
  46: mov o0.w, l(1.000000)
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r0.y, r0.y, cb1[5].x
  32: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  33: mov o7.zw, r0.zzzw
  34: add o7.xy, r1.zzzz, r1.xwxx
  35: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 93 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s2
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  14: mov r5.x, cb4[9].z
  15: mov r5.y, cb4[10].z
  16: mov r5.z, cb4[11].z
  17: dp3 r2.w, r4.xyzx, r5.xyzx
  18: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  19: dp3 r3.w, r4.xyzx, r4.xyzx
  20: sqrt r3.w, r3.w
  21: add r3.w, -r2.w, r3.w
  22: mad r2.w, cb3[25].w, r3.w, r2.w
  23: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  24: eq r3.w, cb5[0].x, l(1.000000)
  25: if_nz r3.w
  26:   eq r3.w, cb5[0].y, l(1.000000)
  27:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  28:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  29:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  30:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  31:   movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
  32:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  33:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  34:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  35:   mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
  36:   max r4.x, r3.w, r4.y
  37:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  38: else 
  39:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  40: endif 
  41: dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
  42: div r4.xy, v7.xyxx, v7.wwww
  43: sample r4.xyzw, r4.xyxx, t2.xyzw, s3
  44: add r3.w, r3.w, -r4.x
  45: mad r2.w, r2.w, r3.w, r4.x
  46: mul r4.xyz, r2.wwww, cb0[2].xyzx
  47: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  48: mov r5.x, v3.w
  49: mov r5.y, v4.w
  50: mov r5.z, v5.w
  51: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  52: dp3 r1.w, r6.xyzx, r6.xyzx
  53: max r1.w, r1.w, l(0.001000)
  54: rsq r1.w, r1.w
  55: mul r6.xyz, r1.wwww, r6.xyzx
  56: dp3 r1.w, r2.xyzx, -r3.xyzx
  57: dp3_sat r2.w, r2.xyzx, r5.xyzx
  58: dp3_sat r2.x, r2.xyzx, r6.xyzx
  59: dp3_sat r2.y, r5.xyzx, r6.xyzx
  60: mul r2.z, r2.y, r2.y
  61: dp2 r2.z, r2.zzzz, r0.wwww
  62: add r2.z, r2.z, l(-0.500000)
  63: add r3.x, -r2.w, l(1.000000)
  64: mul r3.y, r3.x, r3.x
  65: mul r3.y, r3.y, r3.y
  66: mul r3.x, r3.x, r3.y
  67: mad r3.x, r2.z, r3.x, l(1.000000)
  68: add r3.y, -|r1.w|, l(1.000000)
  69: mul r3.z, r3.y, r3.y
  70: mul r3.z, r3.z, r3.z
  71: mul r3.y, r3.y, r3.z
  72: mad r2.z, r2.z, r3.y, l(1.000000)
  73: mul r2.z, r2.z, r3.x
  74: mul r2.z, r2.w, r2.z
  75: mul r0.w, r0.w, r0.w
  76: max r0.w, r0.w, l(0.002000)
  77: add r3.x, -r0.w, l(1.000000)
  78: mad r3.y, |r1.w|, r3.x, r0.w
  79: mad r3.x, r2.w, r3.x, r0.w
  80: mul r1.w, |r1.w|, r3.x
  81: mad r1.w, r2.w, r3.y, r1.w
  82: add r1.w, r1.w, l(0.000010)
  83: div r1.w, l(0.500000), r1.w
  84: mul r0.w, r0.w, r0.w
  85: mad r3.x, r2.x, r0.w, -r2.x
  86: mad r2.x, r3.x, r2.x, l(1.000000)
  87: mul r0.w, r0.w, l(0.318310)
  88: mad r2.x, r2.x, r2.x, l(0.000000)
  89: div r0.w, r0.w, r2.x
  90: mul r0.w, r0.w, r1.w
  91: mul r0.w, r0.w, l(3.141593)
  92: mul r0.w, r2.w, r0.w
  93: max r0.w, r0.w, l(0.000000)
  94: dp3 r1.w, r0.xyzx, r0.xyzx
  95: ne r1.w, r1.w, l(0.000000)
  96: and r1.w, r1.w, l(0x3f800000)
  97: mul r0.w, r0.w, r1.w
  98: mul r2.xzw, r2.zzzz, r4.xxyz
  99: mul r3.xyz, r4.xyzx, r0.wwww
 100: add r0.w, -r2.y, l(1.000000)
 101: mul r1.w, r0.w, r0.w
 102: mul r1.w, r1.w, r1.w
 103: mul r0.w, r0.w, r1.w
 104: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 105: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 106: mul r0.xyz, r0.xyzx, r3.xyzx
 107: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 108: mov o0.w, l(1.000000)
 109: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 4 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 5 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[68], dynamicIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: ishl r1.x, cb5[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb4[r1.x + 25].xyzw
   6: mad r2.xyzw, cb4[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb4[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  16: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  19: mov r1.w, cb5[0].x
  20: add o2.xyz, r1.xyzx, -cb4[r1.w + 64].xyzx
  21: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  22: mov o6.xyz, r1.xyzx
  23: mov r2.w, l(0)
  24: mov o3.xyzw, r2.wwwx
  25: mov o4.xyzw, r2.wwwy
  26: mov o5.w, r2.z
  27: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  28: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  29: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  30: dp3 r2.x, r1.xyzx, r1.xyzx
  31: rsq r2.x, r2.x
  32: mul o5.xyz, r1.xyzx, r2.xxxx
  33: mul r0.y, r0.y, cb1[4].x
  34: mul r2.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  35: add r0.xy, r2.zzzz, r2.xwxx
  36: mul r1.xy, r0.wwww, cb4[r1.w + 66].zwzz
  37: mad o7.xy, r0.xyxx, cb4[r1.w + 66].xyxx, r1.xyxx
  38: mov o7.zw, r0.zzzw
  39: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 94 math, 7 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s2
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mov r2.w, cb4[0].x
  14: add r4.xyz, -v6.xyzx, cb3[r2.w + 64].xyzx
  15: ishl r2.w, cb4[0].x, l(2)
  16: mov r5.x, cb3[r2.w + 8].z
  17: mov r5.y, cb3[r2.w + 9].z
  18: mov r5.z, cb3[r2.w + 10].z
  19: dp3 r2.w, r4.xyzx, r5.xyzx
  20: add r4.xyz, v6.xyzx, -cb2[25].xyzx
  21: dp3 r3.w, r4.xyzx, r4.xyzx
  22: sqrt r3.w, r3.w
  23: add r3.w, -r2.w, r3.w
  24: mad r2.w, cb2[25].w, r3.w, r2.w
  25: mad_sat r2.w, r2.w, cb2[24].z, cb2[24].w
  26: eq r3.w, cb5[0].x, l(1.000000)
  27: if_nz r3.w
  28:   eq r3.w, cb5[0].y, l(1.000000)
  29:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  30:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  31:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  32:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  33:   movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
  34:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  35:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  36:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  37:   mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
  38:   max r4.x, r3.w, r4.y
  39:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  40: else 
  41:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  42: endif 
  43: dp4_sat r3.w, r4.xyzw, cb1[46].xyzw
  44: div r4.xy, v7.xyxx, v7.wwww
  45: sample r4.xyzw, r4.xyxx, t2.xyzw, s3
  46: add r3.w, r3.w, -r4.x
  47: mad r2.w, r2.w, r3.w, r4.x
  48: mul r4.xyz, r2.wwww, cb0[2].xyzx
  49: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  50: mov r5.x, v3.w
  51: mov r5.y, v4.w
  52: mov r5.z, v5.w
  53: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  54: dp3 r1.w, r6.xyzx, r6.xyzx
  55: max r1.w, r1.w, l(0.001000)
  56: rsq r1.w, r1.w
  57: mul r6.xyz, r1.wwww, r6.xyzx
  58: dp3 r1.w, r2.xyzx, -r3.xyzx
  59: dp3_sat r2.w, r2.xyzx, r5.xyzx
  60: dp3_sat r2.x, r2.xyzx, r6.xyzx
  61: dp3_sat r2.y, r5.xyzx, r6.xyzx
  62: mul r2.z, r2.y, r2.y
  63: dp2 r2.z, r2.zzzz, r0.wwww
  64: add r2.z, r2.z, l(-0.500000)
  65: add r3.x, -r2.w, l(1.000000)
  66: mul r3.y, r3.x, r3.x
  67: mul r3.y, r3.y, r3.y
  68: mul r3.x, r3.x, r3.y
  69: mad r3.x, r2.z, r3.x, l(1.000000)
  70: add r3.y, -|r1.w|, l(1.000000)
  71: mul r3.z, r3.y, r3.y
  72: mul r3.z, r3.z, r3.z
  73: mul r3.y, r3.y, r3.z
  74: mad r2.z, r2.z, r3.y, l(1.000000)
  75: mul r2.z, r2.z, r3.x
  76: mul r2.z, r2.w, r2.z
  77: mul r0.w, r0.w, r0.w
  78: max r0.w, r0.w, l(0.002000)
  79: add r3.x, -r0.w, l(1.000000)
  80: mad r3.y, |r1.w|, r3.x, r0.w
  81: mad r3.x, r2.w, r3.x, r0.w
  82: mul r1.w, |r1.w|, r3.x
  83: mad r1.w, r2.w, r3.y, r1.w
  84: add r1.w, r1.w, l(0.000010)
  85: div r1.w, l(0.500000), r1.w
  86: mul r0.w, r0.w, r0.w
  87: mad r3.x, r2.x, r0.w, -r2.x
  88: mad r2.x, r3.x, r2.x, l(1.000000)
  89: mul r0.w, r0.w, l(0.318310)
  90: mad r2.x, r2.x, r2.x, l(0.000000)
  91: div r0.w, r0.w, r2.x
  92: mul r0.w, r0.w, r1.w
  93: mul r0.w, r0.w, l(3.141593)
  94: mul r0.w, r2.w, r0.w
  95: max r0.w, r0.w, l(0.000000)
  96: dp3 r1.w, r0.xyzx, r0.xyzx
  97: ne r1.w, r1.w, l(0.000000)
  98: and r1.w, r1.w, l(0x3f800000)
  99: mul r0.w, r0.w, r1.w
 100: mul r2.xzw, r2.zzzz, r4.xxyz
 101: mul r3.xyz, r4.xyzx, r0.wwww
 102: add r0.w, -r2.y, l(1.000000)
 103: mul r1.w, r0.w, r0.w
 104: mul r1.w, r1.w, r1.w
 105: mul r0.w, r0.w, r1.w
 106: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 107: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 108: mul r0.xyz, r0.xyzx, r3.xyzx
 109: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 110: mov o0.w, l(1.000000)
 111: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 36 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  20: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  21: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  22: dp3 r1.w, r2.xyzx, r2.xyzx
  23: rsq r1.w, r1.w
  24: mul r2.xyz, r1.wwww, r2.xyzx
  25: mov o3.xyz, r2.xyzx
  26: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  27: mov o6.xyz, r1.xyzx
  28: mov o3.w, r3.x
  29: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  30: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  31: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  32: dp3 r1.w, r1.xyzx, r1.xyzx
  33: rsq r1.w, r1.w
  34: mul r1.xyz, r1.wwww, r1.xyzx
  35: mul r4.xyz, r2.yzxy, r1.zxyz
  36: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  37: mov o5.xyz, r1.xyzx
  38: mul r1.x, v4.w, cb3[9].w
  39: mul o4.xyz, r1.xxxx, r2.xyzx
  40: mov o4.w, r3.y
  41: mov o5.w, r3.z
  42: mul r0.y, r0.y, cb1[5].x
  43: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  44: mov o7.zw, r0.zzzw
  45: add o7.xy, r1.zzzz, r1.xwxx
  46: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 103 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_BumpMap" to slot 2
Set 2D Texture "_ShadowMapTexture" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  25: mov r5.x, cb4[9].z
  26: mov r5.y, cb4[10].z
  27: mov r5.z, cb4[11].z
  28: dp3 r2.w, r4.xyzx, r5.xyzx
  29: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  30: dp3 r3.w, r4.xyzx, r4.xyzx
  31: sqrt r3.w, r3.w
  32: add r3.w, -r2.w, r3.w
  33: mad r2.w, cb3[25].w, r3.w, r2.w
  34: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  35: eq r3.w, cb5[0].x, l(1.000000)
  36: if_nz r3.w
  37:   eq r3.w, cb5[0].y, l(1.000000)
  38:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  39:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  40:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  41:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  42:   movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
  43:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  44:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  45:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  46:   mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
  47:   max r4.x, r3.w, r4.y
  48:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  49: else 
  50:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  51: endif 
  52: dp4_sat r3.w, r4.xyzw, cb2[46].xyzw
  53: div r4.xy, v7.xyxx, v7.wwww
  54: sample r4.xyzw, r4.xyxx, t3.xyzw, s4
  55: add r3.w, r3.w, -r4.x
  56: mad r2.w, r2.w, r3.w, r4.x
  57: mul r4.xyz, r2.wwww, cb0[2].xyzx
  58: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  59: mov r5.x, v3.w
  60: mov r5.y, v4.w
  61: mov r5.z, v5.w
  62: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  63: dp3 r1.w, r6.xyzx, r6.xyzx
  64: max r1.w, r1.w, l(0.001000)
  65: rsq r1.w, r1.w
  66: mul r6.xyz, r1.wwww, r6.xyzx
  67: dp3 r1.w, r2.xyzx, -r3.xyzx
  68: dp3_sat r2.w, r2.xyzx, r5.xyzx
  69: dp3_sat r2.x, r2.xyzx, r6.xyzx
  70: dp3_sat r2.y, r5.xyzx, r6.xyzx
  71: mul r2.z, r2.y, r2.y
  72: dp2 r2.z, r2.zzzz, r0.wwww
  73: add r2.z, r2.z, l(-0.500000)
  74: add r3.x, -r2.w, l(1.000000)
  75: mul r3.y, r3.x, r3.x
  76: mul r3.y, r3.y, r3.y
  77: mul r3.x, r3.x, r3.y
  78: mad r3.x, r2.z, r3.x, l(1.000000)
  79: add r3.y, -|r1.w|, l(1.000000)
  80: mul r3.z, r3.y, r3.y
  81: mul r3.z, r3.z, r3.z
  82: mul r3.y, r3.y, r3.z
  83: mad r2.z, r2.z, r3.y, l(1.000000)
  84: mul r2.z, r2.z, r3.x
  85: mul r2.z, r2.w, r2.z
  86: mul r0.w, r0.w, r0.w
  87: max r0.w, r0.w, l(0.002000)
  88: add r3.x, -r0.w, l(1.000000)
  89: mad r3.y, |r1.w|, r3.x, r0.w
  90: mad r3.x, r2.w, r3.x, r0.w
  91: mul r1.w, |r1.w|, r3.x
  92: mad r1.w, r2.w, r3.y, r1.w
  93: add r1.w, r1.w, l(0.000010)
  94: div r1.w, l(0.500000), r1.w
  95: mul r0.w, r0.w, r0.w
  96: mad r3.x, r2.x, r0.w, -r2.x
  97: mad r2.x, r3.x, r2.x, l(1.000000)
  98: mul r0.w, r0.w, l(0.318310)
  99: mad r2.x, r2.x, r2.x, l(0.000000)
 100: div r0.w, r0.w, r2.x
 101: mul r0.w, r0.w, r1.w
 102: mul r0.w, r0.w, l(3.141593)
 103: mul r0.w, r2.w, r0.w
 104: max r0.w, r0.w, l(0.000000)
 105: dp3 r1.w, r0.xyzx, r0.xyzx
 106: ne r1.w, r1.w, l(0.000000)
 107: and r1.w, r1.w, l(0x3f800000)
 108: mul r0.w, r0.w, r1.w
 109: mul r2.xzw, r2.zzzz, r4.xxyz
 110: mul r3.xyz, r4.xyzx, r0.wwww
 111: add r0.w, -r2.y, l(1.000000)
 112: mul r1.w, r0.w, r0.w
 113: mul r1.w, r1.w, r1.w
 114: mul r0.w, r0.w, r1.w
 115: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 116: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 117: mul r0.xyz, r0.xyzx, r3.xyzx
 118: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 119: mov o0.w, l(1.000000)
 120: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 39 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 4 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 5 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[68], dynamicIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: ishl r1.x, cb5[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb4[r1.x + 25].xyzw
   6: mad r2.xyzw, cb4[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb4[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  16: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  19: mov r1.w, cb5[0].x
  20: add o2.xyz, r1.xyzx, -cb4[r1.w + 64].xyzx
  21: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  22: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  23: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  24: dp3 r2.w, r2.xyzx, r2.xyzx
  25: rsq r2.w, r2.w
  26: mul r2.xyz, r2.wwww, r2.xyzx
  27: mov o3.xyz, r2.xyzx
  28: mad r3.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  29: mov o6.xyz, r1.xyzx
  30: mov o3.w, r3.x
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r2.w, r1.xyzx, r1.xyzx
  35: rsq r2.w, r2.w
  36: mul r1.xyz, r1.xyzx, r2.wwww
  37: mul r4.xyz, r2.yzxy, r1.zxyz
  38: mad r2.xyz, r1.yzxy, r2.zxyz, -r4.xyzx
  39: mov o5.xyz, r1.xyzx
  40: mul r1.x, v4.w, cb3[9].w
  41: mul o4.xyz, r1.xxxx, r2.xyzx
  42: mov o4.w, r3.y
  43: mov o5.w, r3.z
  44: mul r0.y, r0.y, cb1[4].x
  45: mul r2.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  46: add r0.xy, r2.zzzz, r2.xwxx
  47: mul r1.xy, r0.wwww, cb4[r1.w + 66].zwzz
  48: mad o7.xy, r0.xyxx, cb4[r1.w + 66].xyxx, r1.xyxx
  49: mov o7.zw, r0.zzzw
  50: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 104 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_BumpMap" to slot 2
Set 2D Texture "_ShadowMapTexture" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: mov r2.w, cb4[0].x
  25: add r4.xyz, -v6.xyzx, cb3[r2.w + 64].xyzx
  26: ishl r2.w, cb4[0].x, l(2)
  27: mov r5.x, cb3[r2.w + 8].z
  28: mov r5.y, cb3[r2.w + 9].z
  29: mov r5.z, cb3[r2.w + 10].z
  30: dp3 r2.w, r4.xyzx, r5.xyzx
  31: add r4.xyz, v6.xyzx, -cb2[25].xyzx
  32: dp3 r3.w, r4.xyzx, r4.xyzx
  33: sqrt r3.w, r3.w
  34: add r3.w, -r2.w, r3.w
  35: mad r2.w, cb2[25].w, r3.w, r2.w
  36: mad_sat r2.w, r2.w, cb2[24].z, cb2[24].w
  37: eq r3.w, cb5[0].x, l(1.000000)
  38: if_nz r3.w
  39:   eq r3.w, cb5[0].y, l(1.000000)
  40:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  41:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  42:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  43:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  44:   movc r4.xyz, r3.wwww, r4.xyzx, v6.xyzx
  45:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  46:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  47:   mad r3.w, r4.y, l(0.250000), l(0.750000)
  48:   mad r4.y, cb5[0].z, l(0.500000), l(0.750000)
  49:   max r4.x, r3.w, r4.y
  50:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  51: else 
  52:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  53: endif 
  54: dp4_sat r3.w, r4.xyzw, cb1[46].xyzw
  55: div r4.xy, v7.xyxx, v7.wwww
  56: sample r4.xyzw, r4.xyxx, t3.xyzw, s4
  57: add r3.w, r3.w, -r4.x
  58: mad r2.w, r2.w, r3.w, r4.x
  59: mul r4.xyz, r2.wwww, cb0[2].xyzx
  60: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  61: mov r5.x, v3.w
  62: mov r5.y, v4.w
  63: mov r5.z, v5.w
  64: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  65: dp3 r1.w, r6.xyzx, r6.xyzx
  66: max r1.w, r1.w, l(0.001000)
  67: rsq r1.w, r1.w
  68: mul r6.xyz, r1.wwww, r6.xyzx
  69: dp3 r1.w, r2.xyzx, -r3.xyzx
  70: dp3_sat r2.w, r2.xyzx, r5.xyzx
  71: dp3_sat r2.x, r2.xyzx, r6.xyzx
  72: dp3_sat r2.y, r5.xyzx, r6.xyzx
  73: mul r2.z, r2.y, r2.y
  74: dp2 r2.z, r2.zzzz, r0.wwww
  75: add r2.z, r2.z, l(-0.500000)
  76: add r3.x, -r2.w, l(1.000000)
  77: mul r3.y, r3.x, r3.x
  78: mul r3.y, r3.y, r3.y
  79: mul r3.x, r3.x, r3.y
  80: mad r3.x, r2.z, r3.x, l(1.000000)
  81: add r3.y, -|r1.w|, l(1.000000)
  82: mul r3.z, r3.y, r3.y
  83: mul r3.z, r3.z, r3.z
  84: mul r3.y, r3.y, r3.z
  85: mad r2.z, r2.z, r3.y, l(1.000000)
  86: mul r2.z, r2.z, r3.x
  87: mul r2.z, r2.w, r2.z
  88: mul r0.w, r0.w, r0.w
  89: max r0.w, r0.w, l(0.002000)
  90: add r3.x, -r0.w, l(1.000000)
  91: mad r3.y, |r1.w|, r3.x, r0.w
  92: mad r3.x, r2.w, r3.x, r0.w
  93: mul r1.w, |r1.w|, r3.x
  94: mad r1.w, r2.w, r3.y, r1.w
  95: add r1.w, r1.w, l(0.000010)
  96: div r1.w, l(0.500000), r1.w
  97: mul r0.w, r0.w, r0.w
  98: mad r3.x, r2.x, r0.w, -r2.x
  99: mad r2.x, r3.x, r2.x, l(1.000000)
 100: mul r0.w, r0.w, l(0.318310)
 101: mad r2.x, r2.x, r2.x, l(0.000000)
 102: div r0.w, r0.w, r2.x
 103: mul r0.w, r0.w, r1.w
 104: mul r0.w, r0.w, l(3.141593)
 105: mul r0.w, r2.w, r0.w
 106: max r0.w, r0.w, l(0.000000)
 107: dp3 r1.w, r0.xyzx, r0.xyzx
 108: ne r1.w, r1.w, l(0.000000)
 109: and r1.w, r1.w, l(0x3f800000)
 110: mul r0.w, r0.w, r1.w
 111: mul r2.xzw, r2.zzzz, r4.xxyz
 112: mul r3.xyz, r4.xyzx, r0.wwww
 113: add r0.w, -r2.y, l(1.000000)
 114: mul r1.w, r0.w, r0.w
 115: mul r1.w, r1.w, r1.w
 116: mul r0.w, r0.w, r1.w
 117: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 118: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 119: mul r0.xyz, r0.xyzx, r3.xyzx
 120: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 121: mov o0.w, l(1.000000)
 122: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 26 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: mul r1.xyzw, r0.yyyy, cb4[18].xyzw
   5: mad r1.xyzw, cb4[17].xyzw, r0.xxxx, r1.xyzw
   6: mad r1.xyzw, cb4[19].xyzw, r0.zzzz, r1.xyzw
   7: mad r0.xyzw, cb4[20].xyzw, r0.wwww, r1.xyzw
   8: mov o0.xyzw, r0.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add o2.xyz, r1.xyzx, -cb1[4].xyzx
  18: mov o2.w, l(0)
  19: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  20: mov o6.xyz, r1.xyzx
  21: mov r2.w, l(0)
  22: mov o3.xyzw, r2.wwwx
  23: mov o4.xyzw, r2.wwwy
  24: mov o5.w, r2.z
  25: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  26: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  27: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  28: dp3 r1.w, r1.xyzx, r1.xyzx
  29: rsq r1.w, r1.w
  30: mul o5.xyz, r1.wwww, r1.xyzx
  31: mul r0.y, r0.y, cb1[5].x
  32: mul r1.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  33: mov o7.zw, r0.zzzw
  34: add o7.xy, r1.zzzz, r1.xwxx
  35: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 93 math, 6 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: add r3.xyz, -v6.xyzx, cb1[4].xyzx
  13: mov r4.x, cb4[9].z
  14: mov r4.y, cb4[10].z
  15: mov r4.z, cb4[11].z
  16: dp3 r1.w, r3.xyzx, r4.xyzx
  17: add r3.xyz, v6.xyzx, -cb3[25].xyzx
  18: dp3 r2.w, r3.xyzx, r3.xyzx
  19: sqrt r2.w, r2.w
  20: add r2.w, -r1.w, r2.w
  21: mad r1.w, cb3[25].w, r2.w, r1.w
  22: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  23: eq r2.w, cb5[0].x, l(1.000000)
  24: if_nz r2.w
  25:   eq r2.w, cb5[0].y, l(1.000000)
  26:   mul r3.xyz, v6.yyyy, cb5[2].xyzx
  27:   mad r3.xyz, cb5[1].xyzx, v6.xxxx, r3.xyzx
  28:   mad r3.xyz, cb5[3].xyzx, v6.zzzz, r3.xyzx
  29:   add r3.xyz, r3.xyzx, cb5[4].xyzx
  30:   movc r3.xyz, r2.wwww, r3.xyzx, v6.xyzx
  31:   add r3.xyz, r3.xyzx, -cb5[6].xyzx
  32:   mul r3.yzw, r3.xxyz, cb5[5].xxyz
  33:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  34:   mad r3.y, cb5[0].z, l(0.500000), l(0.750000)
  35:   max r3.x, r2.w, r3.y
  36:   sample r3.xyzw, r3.xzwx, t2.xyzw, s0
  37: else 
  38:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  39: endif 
  40: dp4_sat r2.w, r3.xyzw, cb2[46].xyzw
  41: div r3.xy, v7.xyxx, v7.wwww
  42: sample r3.xyzw, r3.xyxx, t1.xyzw, s2
  43: add r2.w, r2.w, -r3.x
  44: mad r1.w, r1.w, r2.w, r3.x
  45: mul r3.xyz, r1.wwww, cb0[2].xyzx
  46: add r1.w, -cb0[8].w, l(1.000000)
  47: mov r4.x, v3.w
  48: mov r4.y, v4.w
  49: mov r4.z, v5.w
  50: mad r5.xyz, -v2.xyzx, r0.wwww, r4.xyzx
  51: dp3 r0.w, r5.xyzx, r5.xyzx
  52: max r0.w, r0.w, l(0.001000)
  53: rsq r0.w, r0.w
  54: mul r5.xyz, r0.wwww, r5.xyzx
  55: dp3 r0.w, r1.xyzx, -r2.xyzx
  56: dp3_sat r2.x, r1.xyzx, r4.xyzx
  57: dp3_sat r1.x, r1.xyzx, r5.xyzx
  58: dp3_sat r1.y, r4.xyzx, r5.xyzx
  59: mul r1.z, r1.y, r1.y
  60: dp2 r1.z, r1.zzzz, r1.wwww
  61: add r1.z, r1.z, l(-0.500000)
  62: add r2.y, -r2.x, l(1.000000)
  63: mul r2.z, r2.y, r2.y
  64: mul r2.z, r2.z, r2.z
  65: mul r2.y, r2.y, r2.z
  66: mad r2.y, r1.z, r2.y, l(1.000000)
  67: add r2.z, -|r0.w|, l(1.000000)
  68: mul r2.w, r2.z, r2.z
  69: mul r2.w, r2.w, r2.w
  70: mul r2.z, r2.z, r2.w
  71: mad r1.z, r1.z, r2.z, l(1.000000)
  72: mul r1.z, r1.z, r2.y
  73: mul r1.z, r2.x, r1.z
  74: mul r1.w, r1.w, r1.w
  75: max r1.w, r1.w, l(0.002000)
  76: add r2.y, -r1.w, l(1.000000)
  77: mad r2.z, |r0.w|, r2.y, r1.w
  78: mad r2.y, r2.x, r2.y, r1.w
  79: mul r0.w, |r0.w|, r2.y
  80: mad r0.w, r2.x, r2.z, r0.w
  81: add r0.w, r0.w, l(0.000010)
  82: div r0.w, l(0.500000), r0.w
  83: mul r1.w, r1.w, r1.w
  84: mad r2.y, r1.x, r1.w, -r1.x
  85: mad r1.x, r2.y, r1.x, l(1.000000)
  86: mul r1.w, r1.w, l(0.318310)
  87: mad r1.x, r1.x, r1.x, l(0.000000)
  88: div r1.x, r1.w, r1.x
  89: mul r0.w, r0.w, r1.x
  90: mul r0.w, r0.w, l(3.141593)
  91: mul r0.w, r2.x, r0.w
  92: max r0.w, r0.w, l(0.000000)
  93: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
  94: ne r1.x, r1.x, l(0.000000)
  95: and r1.x, r1.x, l(0x3f800000)
  96: mul r0.w, r0.w, r1.x
  97: mul r1.xzw, r1.zzzz, r3.xxyz
  98: mul r2.xyz, r3.xyzx, r0.wwww
  99: add r0.w, -r1.y, l(1.000000)
 100: mul r1.y, r0.w, r0.w
 101: mul r1.y, r1.y, r1.y
 102: mul r0.w, r0.w, r1.y
 103: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 104: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
 105: mul r2.xyz, r2.xyzx, r3.xyzx
 106: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
 107: mov o0.w, l(1.000000)
 108: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 29 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 4 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 5 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[10], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[68], dynamicIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r0.xyzw, r0.xyzw, cb3[3].xyzw
   4: ishl r1.x, cb5[0].x, l(2)
   5: mul r2.xyzw, r0.yyyy, cb4[r1.x + 25].xyzw
   6: mad r2.xyzw, cb4[r1.x + 24].xyzw, r0.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[r1.x + 26].xyzw, r0.zzzz, r2.xyzw
   8: mad r0.xyzw, cb4[r1.x + 27].xyzw, r0.wwww, r2.xyzw
   9: mov o0.xyzw, r0.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov o2.w, l(0)
  15: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  16: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  17: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  18: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  19: mov r1.w, cb5[0].x
  20: add o2.xyz, r1.xyzx, -cb4[r1.w + 64].xyzx
  21: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  22: mov o6.xyz, r1.xyzx
  23: mov r2.w, l(0)
  24: mov o3.xyzw, r2.wwwx
  25: mov o4.xyzw, r2.wwwy
  26: mov o5.w, r2.z
  27: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  28: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  29: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  30: dp3 r2.x, r1.xyzx, r1.xyzx
  31: rsq r2.x, r2.x
  32: mul o5.xyz, r1.xyzx, r2.xxxx
  33: mul r0.y, r0.y, cb1[4].x
  34: mul r2.xzw, r0.xxwy, l(0.500000, 0.000000, 0.500000, 0.500000)
  35: add r0.xy, r2.zzzz, r2.xwxx
  36: mul r1.xy, r0.wwww, cb4[r1.w + 66].zwzz
  37: mad o7.xy, r0.xyxx, cb4[r1.w + 66].xyxx, r1.xyxx
  38: mov o7.zw, r0.zzzw
  39: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 94 math, 6 temp registers, 3 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 3D Texture "unity_ProbeVolumeSH" to slot 2 sampler slot 0

Constant Buffer "$Globals" (176 bytes) on slot 0 {
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[9], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture3d (float,float,float,float) t2
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v7.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: mov r1.w, cb4[0].x
  13: add r3.xyz, -v6.xyzx, cb3[r1.w + 64].xyzx
  14: ishl r1.w, cb4[0].x, l(2)
  15: mov r4.x, cb3[r1.w + 8].z
  16: mov r4.y, cb3[r1.w + 9].z
  17: mov r4.z, cb3[r1.w + 10].z
  18: dp3 r1.w, r3.xyzx, r4.xyzx
  19: add r3.xyz, v6.xyzx, -cb2[25].xyzx
  20: dp3 r2.w, r3.xyzx, r3.xyzx
  21: sqrt r2.w, r2.w
  22: add r2.w, -r1.w, r2.w
  23: mad r1.w, cb2[25].w, r2.w, r1.w
  24: mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
  25: eq r2.w, cb5[0].x, l(1.000000)
  26: if_nz r2.w
  27:   eq r2.w, cb5[0].y, l(1.000000)
  28:   mul r3.xyz, v6.yyyy, cb5[2].xyzx
  29:   mad r3.xyz, cb5[1].xyzx, v6.xxxx, r3.xyzx
  30:   mad r3.xyz, cb5[3].xyzx, v6.zzzz, r3.xyzx
  31:   add r3.xyz, r3.xyzx, cb5[4].xyzx
  32:   movc r3.xyz, r2.wwww, r3.xyzx, v6.xyzx
  33:   add r3.xyz, r3.xyzx, -cb5[6].xyzx
  34:   mul r3.yzw, r3.xxyz, cb5[5].xxyz
  35:   mad r2.w, r3.y, l(0.250000), l(0.750000)
  36:   mad r3.y, cb5[0].z, l(0.500000), l(0.750000)
  37:   max r3.x, r2.w, r3.y
  38:   sample r3.xyzw, r3.xzwx, t2.xyzw, s0
  39: else 
  40:   mov r3.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  41: endif 
  42: dp4_sat r2.w, r3.xyzw, cb1[46].xyzw
  43: div r3.xy, v7.xyxx, v7.wwww
  44: sample r3.xyzw, r3.xyxx, t1.xyzw, s2
  45: add r2.w, r2.w, -r3.x
  46: mad r1.w, r1.w, r2.w, r3.x
  47: mul r3.xyz, r1.wwww, cb0[2].xyzx
  48: add r1.w, -cb0[8].w, l(1.000000)
  49: mov r4.x, v3.w
  50: mov r4.y, v4.w
  51: mov r4.z, v5.w
  52: mad r5.xyz, -v2.xyzx, r0.wwww, r4.xyzx
  53: dp3 r0.w, r5.xyzx, r5.xyzx
  54: max r0.w, r0.w, l(0.001000)
  55: rsq r0.w, r0.w
  56: mul r5.xyz, r0.wwww, r5.xyzx
  57: dp3 r0.w, r1.xyzx, -r2.xyzx
  58: dp3_sat r2.x, r1.xyzx, r4.xyzx
  59: dp3_sat r1.x, r1.xyzx, r5.xyzx
  60: dp3_sat r1.y, r4.xyzx, r5.xyzx
  61: mul r1.z, r1.y, r1.y
  62: dp2 r1.z, r1.zzzz, r1.wwww
  63: add r1.z, r1.z, l(-0.500000)
  64: add r2.y, -r2.x, l(1.000000)
  65: mul r2.z, r2.y, r2.y
  66: mul r2.z, r2.z, r2.z
  67: mul r2.y, r2.y, r2.z
  68: mad r2.y, r1.z, r2.y, l(1.000000)
  69: add r2.z, -|r0.w|, l(1.000000)
  70: mul r2.w, r2.z, r2.z
  71: mul r2.w, r2.w, r2.w
  72: mul r2.z, r2.z, r2.w
  73: mad r1.z, r1.z, r2.z, l(1.000000)
  74: mul r1.z, r1.z, r2.y
  75: mul r1.z, r2.x, r1.z
  76: mul r1.w, r1.w, r1.w
  77: max r1.w, r1.w, l(0.002000)
  78: add r2.y, -r1.w, l(1.000000)
  79: mad r2.z, |r0.w|, r2.y, r1.w
  80: mad r2.y, r2.x, r2.y, r1.w
  81: mul r0.w, |r0.w|, r2.y
  82: mad r0.w, r2.x, r2.z, r0.w
  83: add r0.w, r0.w, l(0.000010)
  84: div r0.w, l(0.500000), r0.w
  85: mul r1.w, r1.w, r1.w
  86: mad r2.y, r1.x, r1.w, -r1.x
  87: mad r1.x, r2.y, r1.x, l(1.000000)
  88: mul r1.w, r1.w, l(0.318310)
  89: mad r1.x, r1.x, r1.x, l(0.000000)
  90: div r1.x, r1.w, r1.x
  91: mul r0.w, r0.w, r1.x
  92: mul r0.w, r0.w, l(3.141593)
  93: mul r0.w, r2.x, r0.w
  94: max r0.w, r0.w, l(0.000000)
  95: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
  96: ne r1.x, r1.x, l(0.000000)
  97: and r1.x, r1.x, l(0x3f800000)
  98: mul r0.w, r0.w, r1.x
  99: mul r1.xzw, r1.zzzz, r3.xxyz
 100: mul r2.xyz, r3.xyzx, r0.wwww
 101: add r0.w, -r1.y, l(1.000000)
 102: mul r1.y, r0.w, r0.w
 103: mul r1.y, r1.y, r1.y
 104: mul r0.w, r0.w, r1.y
 105: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 106: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
 107: mul r2.xyz, r2.xyzx, r3.xyzx
 108: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
 109: mov o0.w, l(1.000000)
 110: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE SHADOWS_SCREEN 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: mov o0.xyzw, r1.xyzw
  10: eq r2.x, cb0[9].w, l(0.000000)
  11: movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r2.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
  16: mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
  17: mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
  18: add o2.xyz, r2.xyzx, -cb1[4].xyzx
  19: mov o2.w, l(0)
  20: mad r3.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r2.xyzx
  22: mov r3.w, l(0)
  23: mov o3.xyzw, r3.wwwx
  24: mov o4.xyzw, r3.wwwy
  25: mov o5.w, r3.z
  26: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  27: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  28: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  29: dp3 r2.w, r2.xyzx, r2.xyzx
  30: rsq r2.w, r2.w
  31: mul o5.xyz, r2.wwww, r2.xyzx
  32: mul r2.xy, r0.yyyy, cb0[12].xyxx
  33: mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
  34: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  35: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  36: mul r0.x, r1.y, cb1[5].x
  37: mul r0.w, r0.x, l(0.500000)
  38: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  39: mov o8.zw, r1.zzzw
  40: add o8.xy, r0.zzzz, r0.xwxx
  41: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 98 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v8.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s2
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xy, v6.yyyy, cb0[12].xyxx
  14: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  15: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  16: add r4.xy, r4.xyxx, cb0[14].xyxx
  17: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  18: mov r6.x, cb4[9].z
  19: mov r6.y, cb4[10].z
  20: mov r6.z, cb4[11].z
  21: dp3 r2.w, r5.xyzx, r6.xyzx
  22: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  23: dp3 r3.w, r5.xyzx, r5.xyzx
  24: sqrt r3.w, r3.w
  25: add r3.w, -r2.w, r3.w
  26: mad r2.w, cb3[25].w, r3.w, r2.w
  27: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  28: eq r3.w, cb5[0].x, l(1.000000)
  29: if_nz r3.w
  30:   eq r3.w, cb5[0].y, l(1.000000)
  31:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  32:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  33:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  34:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  35:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  36:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  37:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  38:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  39:   mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
  40:   max r5.x, r3.w, r4.z
  41:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  42: else 
  43:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  44: endif 
  45: dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
  46: div r4.zw, v8.xxxy, v8.wwww
  47: sample r5.xyzw, r4.zwzz, t2.xyzw, s3
  48: add r3.w, r3.w, -r5.x
  49: mad r2.w, r2.w, r3.w, r5.x
  50: sample r4.xyzw, r4.xyxx, t3.xyzw, s4
  51: mul r2.w, r2.w, r4.w
  52: mul r4.xyz, r2.wwww, cb0[2].xyzx
  53: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  54: mov r5.x, v3.w
  55: mov r5.y, v4.w
  56: mov r5.z, v5.w
  57: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  58: dp3 r1.w, r6.xyzx, r6.xyzx
  59: max r1.w, r1.w, l(0.001000)
  60: rsq r1.w, r1.w
  61: mul r6.xyz, r1.wwww, r6.xyzx
  62: dp3 r1.w, r2.xyzx, -r3.xyzx
  63: dp3_sat r2.w, r2.xyzx, r5.xyzx
  64: dp3_sat r2.x, r2.xyzx, r6.xyzx
  65: dp3_sat r2.y, r5.xyzx, r6.xyzx
  66: mul r2.z, r2.y, r2.y
  67: dp2 r2.z, r2.zzzz, r0.wwww
  68: add r2.z, r2.z, l(-0.500000)
  69: add r3.x, -r2.w, l(1.000000)
  70: mul r3.y, r3.x, r3.x
  71: mul r3.y, r3.y, r3.y
  72: mul r3.x, r3.x, r3.y
  73: mad r3.x, r2.z, r3.x, l(1.000000)
  74: add r3.y, -|r1.w|, l(1.000000)
  75: mul r3.z, r3.y, r3.y
  76: mul r3.z, r3.z, r3.z
  77: mul r3.y, r3.y, r3.z
  78: mad r2.z, r2.z, r3.y, l(1.000000)
  79: mul r2.z, r2.z, r3.x
  80: mul r2.z, r2.w, r2.z
  81: mul r0.w, r0.w, r0.w
  82: max r0.w, r0.w, l(0.002000)
  83: add r3.x, -r0.w, l(1.000000)
  84: mad r3.y, |r1.w|, r3.x, r0.w
  85: mad r3.x, r2.w, r3.x, r0.w
  86: mul r1.w, |r1.w|, r3.x
  87: mad r1.w, r2.w, r3.y, r1.w
  88: add r1.w, r1.w, l(0.000010)
  89: div r1.w, l(0.500000), r1.w
  90: mul r0.w, r0.w, r0.w
  91: mad r3.x, r2.x, r0.w, -r2.x
  92: mad r2.x, r3.x, r2.x, l(1.000000)
  93: mul r0.w, r0.w, l(0.318310)
  94: mad r2.x, r2.x, r2.x, l(0.000000)
  95: div r0.w, r0.w, r2.x
  96: mul r0.w, r0.w, r1.w
  97: mul r0.w, r0.w, l(3.141593)
  98: mul r0.w, r2.w, r0.w
  99: max r0.w, r0.w, l(0.000000)
 100: dp3 r1.w, r0.xyzx, r0.xyzx
 101: ne r1.w, r1.w, l(0.000000)
 102: and r1.w, r1.w, l(0x3f800000)
 103: mul r0.w, r0.w, r1.w
 104: mul r2.xzw, r2.zzzz, r4.xxyz
 105: mul r3.xyz, r4.xyzx, r0.wwww
 106: add r0.w, -r2.y, l(1.000000)
 107: mul r1.w, r0.w, r0.w
 108: mul r1.w, r1.w, r1.w
 109: mul r0.w, r0.w, r1.w
 110: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 111: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 112: mul r0.xyz, r0.xyzx, r3.xyzx
 113: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 114: mov o0.w, l(1.000000)
 115: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 4 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 5 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[68], dynamicIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb5[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb4[r2.x + 25].xyzw
   7: mad r3.xyzw, cb4[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb4[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad r1.xyzw, cb4[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: mov o0.xyzw, r1.xyzw
  11: eq r2.x, cb0[9].w, l(0.000000)
  12: movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
  13: mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
  14: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mov o2.w, l(0)
  16: mul r2.xyz, v0.yyyy, cb3[1].xyzx
  17: mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
  18: mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
  19: mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
  20: mov r2.w, cb5[0].x
  21: add o2.xyz, r2.xyzx, -cb4[r2.w + 64].xyzx
  22: mad r3.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r2.xyzx
  24: mov r3.w, l(0)
  25: mov o3.xyzw, r3.wwwx
  26: mov o4.xyzw, r3.wwwy
  27: mov o5.w, r3.z
  28: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  29: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  30: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  31: dp3 r3.x, r2.xyzx, r2.xyzx
  32: rsq r3.x, r3.x
  33: mul o5.xyz, r2.xyzx, r3.xxxx
  34: mul r2.xy, r0.yyyy, cb0[12].xyxx
  35: mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
  36: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  37: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  38: mul r0.x, r1.y, cb1[4].x
  39: mul r0.w, r0.x, l(0.500000)
  40: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  41: add r0.xy, r0.zzzz, r0.xwxx
  42: mul r0.zw, r1.wwww, cb4[r2.w + 66].zzzw
  43: mad o8.xy, r0.xyxx, cb4[r2.w + 66].xyxx, r0.zwzz
  44: mov o8.zw, r1.zzzw
  45: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 99 math, 7 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 2
Set 2D Texture "_ShadowMapTexture" to slot 2 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 4
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v8.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s2
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: dp3 r1.w, v5.xyzx, v5.xyzx
   8: rsq r1.w, r1.w
   9: mul r2.xyz, r1.wwww, v5.xyzx
  10: dp3 r1.w, v2.xyzx, v2.xyzx
  11: rsq r1.w, r1.w
  12: mul r3.xyz, r1.wwww, v2.xyzx
  13: mul r4.xy, v6.yyyy, cb0[12].xyxx
  14: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  15: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  16: add r4.xy, r4.xyxx, cb0[14].xyxx
  17: mov r2.w, cb4[0].x
  18: add r5.xyz, -v6.xyzx, cb3[r2.w + 64].xyzx
  19: ishl r2.w, cb4[0].x, l(2)
  20: mov r6.x, cb3[r2.w + 8].z
  21: mov r6.y, cb3[r2.w + 9].z
  22: mov r6.z, cb3[r2.w + 10].z
  23: dp3 r2.w, r5.xyzx, r6.xyzx
  24: add r5.xyz, v6.xyzx, -cb2[25].xyzx
  25: dp3 r3.w, r5.xyzx, r5.xyzx
  26: sqrt r3.w, r3.w
  27: add r3.w, -r2.w, r3.w
  28: mad r2.w, cb2[25].w, r3.w, r2.w
  29: mad_sat r2.w, r2.w, cb2[24].z, cb2[24].w
  30: eq r3.w, cb5[0].x, l(1.000000)
  31: if_nz r3.w
  32:   eq r3.w, cb5[0].y, l(1.000000)
  33:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  34:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  35:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  36:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  37:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  38:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  39:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  40:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  41:   mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
  42:   max r5.x, r3.w, r4.z
  43:   sample r5.xyzw, r5.xzwx, t4.xyzw, s0
  44: else 
  45:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  46: endif 
  47: dp4_sat r3.w, r5.xyzw, cb1[46].xyzw
  48: div r4.zw, v8.xxxy, v8.wwww
  49: sample r5.xyzw, r4.zwzz, t2.xyzw, s3
  50: add r3.w, r3.w, -r5.x
  51: mad r2.w, r2.w, r3.w, r5.x
  52: sample r4.xyzw, r4.xyxx, t3.xyzw, s4
  53: mul r2.w, r2.w, r4.w
  54: mul r4.xyz, r2.wwww, cb0[2].xyzx
  55: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  56: mov r5.x, v3.w
  57: mov r5.y, v4.w
  58: mov r5.z, v5.w
  59: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  60: dp3 r1.w, r6.xyzx, r6.xyzx
  61: max r1.w, r1.w, l(0.001000)
  62: rsq r1.w, r1.w
  63: mul r6.xyz, r1.wwww, r6.xyzx
  64: dp3 r1.w, r2.xyzx, -r3.xyzx
  65: dp3_sat r2.w, r2.xyzx, r5.xyzx
  66: dp3_sat r2.x, r2.xyzx, r6.xyzx
  67: dp3_sat r2.y, r5.xyzx, r6.xyzx
  68: mul r2.z, r2.y, r2.y
  69: dp2 r2.z, r2.zzzz, r0.wwww
  70: add r2.z, r2.z, l(-0.500000)
  71: add r3.x, -r2.w, l(1.000000)
  72: mul r3.y, r3.x, r3.x
  73: mul r3.y, r3.y, r3.y
  74: mul r3.x, r3.x, r3.y
  75: mad r3.x, r2.z, r3.x, l(1.000000)
  76: add r3.y, -|r1.w|, l(1.000000)
  77: mul r3.z, r3.y, r3.y
  78: mul r3.z, r3.z, r3.z
  79: mul r3.y, r3.y, r3.z
  80: mad r2.z, r2.z, r3.y, l(1.000000)
  81: mul r2.z, r2.z, r3.x
  82: mul r2.z, r2.w, r2.z
  83: mul r0.w, r0.w, r0.w
  84: max r0.w, r0.w, l(0.002000)
  85: add r3.x, -r0.w, l(1.000000)
  86: mad r3.y, |r1.w|, r3.x, r0.w
  87: mad r3.x, r2.w, r3.x, r0.w
  88: mul r1.w, |r1.w|, r3.x
  89: mad r1.w, r2.w, r3.y, r1.w
  90: add r1.w, r1.w, l(0.000010)
  91: div r1.w, l(0.500000), r1.w
  92: mul r0.w, r0.w, r0.w
  93: mad r3.x, r2.x, r0.w, -r2.x
  94: mad r2.x, r3.x, r2.x, l(1.000000)
  95: mul r0.w, r0.w, l(0.318310)
  96: mad r2.x, r2.x, r2.x, l(0.000000)
  97: div r0.w, r0.w, r2.x
  98: mul r0.w, r0.w, r1.w
  99: mul r0.w, r0.w, l(3.141593)
 100: mul r0.w, r2.w, r0.w
 101: max r0.w, r0.w, l(0.000000)
 102: dp3 r1.w, r0.xyzx, r0.xyzx
 103: ne r1.w, r1.w, l(0.000000)
 104: and r1.w, r1.w, l(0x3f800000)
 105: mul r0.w, r0.w, r1.w
 106: mul r2.xzw, r2.zzzz, r4.xxyz
 107: mul r3.xyz, r4.xyzx, r0.wwww
 108: add r0.w, -r2.y, l(1.000000)
 109: mul r1.w, r0.w, r0.w
 110: mul r1.w, r1.w, r1.w
 111: mul r0.w, r0.w, r1.w
 112: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 113: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 114: mul r0.xyz, r0.xyzx, r3.xyzx
 115: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 116: mov o0.w, l(1.000000)
 117: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE SHADOWS_SCREEN 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 42 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: mov o0.xyzw, r1.xyzw
  10: eq r2.x, cb0[9].w, l(0.000000)
  11: movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r2.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
  16: mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
  17: mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
  18: add o2.xyz, r2.xyzx, -cb1[4].xyzx
  19: mov o2.w, l(0)
  20: mul r3.xyz, v4.yyyy, cb3[1].xyzx
  21: mad r3.xyz, cb3[0].xyzx, v4.xxxx, r3.xyzx
  22: mad r3.xyz, cb3[2].xyzx, v4.zzzz, r3.xyzx
  23: dp3 r2.w, r3.xyzx, r3.xyzx
  24: rsq r2.w, r2.w
  25: mul r3.xyz, r2.wwww, r3.xyzx
  26: mov o3.xyz, r3.xyzx
  27: mad r4.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
  28: mov o6.xyz, r2.xyzx
  29: mov o3.w, r4.x
  30: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  31: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  32: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  33: dp3 r2.w, r2.xyzx, r2.xyzx
  34: rsq r2.w, r2.w
  35: mul r2.xyz, r2.wwww, r2.xyzx
  36: mul r5.xyz, r3.yzxy, r2.zxyz
  37: mad r3.xyz, r2.yzxy, r3.zxyz, -r5.xyzx
  38: mov o5.xyz, r2.xyzx
  39: mul r2.x, v4.w, cb3[9].w
  40: mul o4.xyz, r2.xxxx, r3.xyzx
  41: mov o4.w, r4.y
  42: mov o5.w, r4.z
  43: mul r2.xy, r0.yyyy, cb0[12].xyxx
  44: mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
  45: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  46: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  47: mul r0.x, r1.y, cb1[5].x
  48: mul r0.w, r0.x, l(0.500000)
  49: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  50: mov o8.zw, r1.zzzw
  51: add o8.xy, r0.zzzz, r0.xwxx
  52: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 108 math, 7 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_BumpMap" to slot 2
Set 2D Texture "_ShadowMapTexture" to slot 3 sampler slot 4
Set 2D Texture "_LightTexture0" to slot 4 sampler slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v8.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: mul r4.xy, v6.yyyy, cb0[12].xyxx
  25: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  26: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  27: add r4.xy, r4.xyxx, cb0[14].xyxx
  28: add r5.xyz, -v6.xyzx, cb1[4].xyzx
  29: mov r6.x, cb4[9].z
  30: mov r6.y, cb4[10].z
  31: mov r6.z, cb4[11].z
  32: dp3 r2.w, r5.xyzx, r6.xyzx
  33: add r5.xyz, v6.xyzx, -cb3[25].xyzx
  34: dp3 r3.w, r5.xyzx, r5.xyzx
  35: sqrt r3.w, r3.w
  36: add r3.w, -r2.w, r3.w
  37: mad r2.w, cb3[25].w, r3.w, r2.w
  38: mad_sat r2.w, r2.w, cb3[24].z, cb3[24].w
  39: eq r3.w, cb5[0].x, l(1.000000)
  40: if_nz r3.w
  41:   eq r3.w, cb5[0].y, l(1.000000)
  42:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  43:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  44:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  45:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  46:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  47:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  48:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  49:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  50:   mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
  51:   max r5.x, r3.w, r4.z
  52:   sample r5.xyzw, r5.xzwx, t5.xyzw, s0
  53: else 
  54:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  55: endif 
  56: dp4_sat r3.w, r5.xyzw, cb2[46].xyzw
  57: div r4.zw, v8.xxxy, v8.wwww
  58: sample r5.xyzw, r4.zwzz, t3.xyzw, s4
  59: add r3.w, r3.w, -r5.x
  60: mad r2.w, r2.w, r3.w, r5.x
  61: sample r4.xyzw, r4.xyxx, t4.xyzw, s5
  62: mul r2.w, r2.w, r4.w
  63: mul r4.xyz, r2.wwww, cb0[2].xyzx
  64: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  65: mov r5.x, v3.w
  66: mov r5.y, v4.w
  67: mov r5.z, v5.w
  68: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  69: dp3 r1.w, r6.xyzx, r6.xyzx
  70: max r1.w, r1.w, l(0.001000)
  71: rsq r1.w, r1.w
  72: mul r6.xyz, r1.wwww, r6.xyzx
  73: dp3 r1.w, r2.xyzx, -r3.xyzx
  74: dp3_sat r2.w, r2.xyzx, r5.xyzx
  75: dp3_sat r2.x, r2.xyzx, r6.xyzx
  76: dp3_sat r2.y, r5.xyzx, r6.xyzx
  77: mul r2.z, r2.y, r2.y
  78: dp2 r2.z, r2.zzzz, r0.wwww
  79: add r2.z, r2.z, l(-0.500000)
  80: add r3.x, -r2.w, l(1.000000)
  81: mul r3.y, r3.x, r3.x
  82: mul r3.y, r3.y, r3.y
  83: mul r3.x, r3.x, r3.y
  84: mad r3.x, r2.z, r3.x, l(1.000000)
  85: add r3.y, -|r1.w|, l(1.000000)
  86: mul r3.z, r3.y, r3.y
  87: mul r3.z, r3.z, r3.z
  88: mul r3.y, r3.y, r3.z
  89: mad r2.z, r2.z, r3.y, l(1.000000)
  90: mul r2.z, r2.z, r3.x
  91: mul r2.z, r2.w, r2.z
  92: mul r0.w, r0.w, r0.w
  93: max r0.w, r0.w, l(0.002000)
  94: add r3.x, -r0.w, l(1.000000)
  95: mad r3.y, |r1.w|, r3.x, r0.w
  96: mad r3.x, r2.w, r3.x, r0.w
  97: mul r1.w, |r1.w|, r3.x
  98: mad r1.w, r2.w, r3.y, r1.w
  99: add r1.w, r1.w, l(0.000010)
 100: div r1.w, l(0.500000), r1.w
 101: mul r0.w, r0.w, r0.w
 102: mad r3.x, r2.x, r0.w, -r2.x
 103: mad r2.x, r3.x, r2.x, l(1.000000)
 104: mul r0.w, r0.w, l(0.318310)
 105: mad r2.x, r2.x, r2.x, l(0.000000)
 106: div r0.w, r0.w, r2.x
 107: mul r0.w, r0.w, r1.w
 108: mul r0.w, r0.w, l(3.141593)
 109: mul r0.w, r2.w, r0.w
 110: max r0.w, r0.w, l(0.000000)
 111: dp3 r1.w, r0.xyzx, r0.xyzx
 112: ne r1.w, r1.w, l(0.000000)
 113: and r1.w, r1.w, l(0x3f800000)
 114: mul r0.w, r0.w, r1.w
 115: mul r2.xzw, r2.zzzz, r4.xxyz
 116: mul r3.xyz, r4.xyzx, r0.wwww
 117: add r0.w, -r2.y, l(1.000000)
 118: mul r1.w, r0.w, r0.w
 119: mul r1.w, r1.w, r1.w
 120: mul r0.w, r0.w, r1.w
 121: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 122: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 123: mul r0.xyz, r0.xyzx, r3.xyzx
 124: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 125: mov o0.w, l(1.000000)
 126: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 45 math, 6 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 4 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 5 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[68], dynamicIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 6
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb5[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb4[r2.x + 25].xyzw
   7: mad r3.xyzw, cb4[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb4[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad r1.xyzw, cb4[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: mov o0.xyzw, r1.xyzw
  11: eq r2.x, cb0[9].w, l(0.000000)
  12: movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
  13: mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
  14: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mov o2.w, l(0)
  16: mul r2.xyz, v0.yyyy, cb3[1].xyzx
  17: mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
  18: mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
  19: mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
  20: mov r2.w, cb5[0].x
  21: add o2.xyz, r2.xyzx, -cb4[r2.w + 64].xyzx
  22: mul r3.xyz, v4.yyyy, cb3[1].xyzx
  23: mad r3.xyz, cb3[0].xyzx, v4.xxxx, r3.xyzx
  24: mad r3.xyz, cb3[2].xyzx, v4.zzzz, r3.xyzx
  25: dp3 r3.w, r3.xyzx, r3.xyzx
  26: rsq r3.w, r3.w
  27: mul r3.xyz, r3.wwww, r3.xyzx
  28: mov o3.xyz, r3.xyzx
  29: mad r4.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
  30: mov o6.xyz, r2.xyzx
  31: mov o3.w, r4.x
  32: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  33: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  34: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  35: dp3 r3.w, r2.xyzx, r2.xyzx
  36: rsq r3.w, r3.w
  37: mul r2.xyz, r2.xyzx, r3.wwww
  38: mul r5.xyz, r3.yzxy, r2.zxyz
  39: mad r3.xyz, r2.yzxy, r3.zxyz, -r5.xyzx
  40: mov o5.xyz, r2.xyzx
  41: mul r2.x, v4.w, cb3[9].w
  42: mul o4.xyz, r2.xxxx, r3.xyzx
  43: mov o4.w, r4.y
  44: mov o5.w, r4.z
  45: mul r2.xy, r0.yyyy, cb0[12].xyxx
  46: mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
  47: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  48: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  49: mul r0.x, r1.y, cb1[4].x
  50: mul r0.w, r0.x, l(0.500000)
  51: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  52: add r0.xy, r0.zzzz, r0.xwxx
  53: mul r0.zw, r1.wwww, cb4[r2.w + 66].zzzw
  54: mad o8.xy, r0.xyxx, cb4[r2.w + 66].xyxx, r0.zwzz
  55: mov o8.zw, r1.zzzw
  56: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 109 math, 7 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_BumpMap" to slot 2
Set 2D Texture "_ShadowMapTexture" to slot 3 sampler slot 4
Set 2D Texture "_LightTexture0" to slot 4 sampler slot 5
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _BumpScale at 128
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v8.xyw
      dcl_output o0.xyzw
      dcl_temps 7
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s1
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: max r1.w, r0.y, r0.x
   4: max r1.w, r0.z, r1.w
   5: add r1.w, -r1.w, l(1.000000)
   6: mul r1.xyz, r1.wwww, r1.xyzx
   7: sample r2.xyzw, v1.xyxx, t2.xyzw, s2
   8: mul r2.x, r2.w, r2.x
   9: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  10: mul r2.xy, r2.xyxx, cb0[8].xxxx
  11: dp2 r1.w, r2.xyxx, r2.xyxx
  12: min r1.w, r1.w, l(1.000000)
  13: add r1.w, -r1.w, l(1.000000)
  14: sqrt r1.w, r1.w
  15: mul r2.yzw, r2.yyyy, v4.xxyz
  16: mad r2.xyz, v3.xyzx, r2.xxxx, r2.yzwy
  17: mad r2.xyz, v5.xyzx, r1.wwww, r2.xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul r2.xyz, r1.wwww, r2.xyzx
  21: dp3 r1.w, v2.xyzx, v2.xyzx
  22: rsq r1.w, r1.w
  23: mul r3.xyz, r1.wwww, v2.xyzx
  24: mul r4.xy, v6.yyyy, cb0[12].xyxx
  25: mad r4.xy, cb0[11].xyxx, v6.xxxx, r4.xyxx
  26: mad r4.xy, cb0[13].xyxx, v6.zzzz, r4.xyxx
  27: add r4.xy, r4.xyxx, cb0[14].xyxx
  28: mov r2.w, cb4[0].x
  29: add r5.xyz, -v6.xyzx, cb3[r2.w + 64].xyzx
  30: ishl r2.w, cb4[0].x, l(2)
  31: mov r6.x, cb3[r2.w + 8].z
  32: mov r6.y, cb3[r2.w + 9].z
  33: mov r6.z, cb3[r2.w + 10].z
  34: dp3 r2.w, r5.xyzx, r6.xyzx
  35: add r5.xyz, v6.xyzx, -cb2[25].xyzx
  36: dp3 r3.w, r5.xyzx, r5.xyzx
  37: sqrt r3.w, r3.w
  38: add r3.w, -r2.w, r3.w
  39: mad r2.w, cb2[25].w, r3.w, r2.w
  40: mad_sat r2.w, r2.w, cb2[24].z, cb2[24].w
  41: eq r3.w, cb5[0].x, l(1.000000)
  42: if_nz r3.w
  43:   eq r3.w, cb5[0].y, l(1.000000)
  44:   mul r5.xyz, v6.yyyy, cb5[2].xyzx
  45:   mad r5.xyz, cb5[1].xyzx, v6.xxxx, r5.xyzx
  46:   mad r5.xyz, cb5[3].xyzx, v6.zzzz, r5.xyzx
  47:   add r5.xyz, r5.xyzx, cb5[4].xyzx
  48:   movc r5.xyz, r3.wwww, r5.xyzx, v6.xyzx
  49:   add r5.xyz, r5.xyzx, -cb5[6].xyzx
  50:   mul r5.yzw, r5.xxyz, cb5[5].xxyz
  51:   mad r3.w, r5.y, l(0.250000), l(0.750000)
  52:   mad r4.z, cb5[0].z, l(0.500000), l(0.750000)
  53:   max r5.x, r3.w, r4.z
  54:   sample r5.xyzw, r5.xzwx, t5.xyzw, s0
  55: else 
  56:   mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  57: endif 
  58: dp4_sat r3.w, r5.xyzw, cb1[46].xyzw
  59: div r4.zw, v8.xxxy, v8.wwww
  60: sample r5.xyzw, r4.zwzz, t3.xyzw, s4
  61: add r3.w, r3.w, -r5.x
  62: mad r2.w, r2.w, r3.w, r5.x
  63: sample r4.xyzw, r4.xyxx, t4.xyzw, s5
  64: mul r2.w, r2.w, r4.w
  65: mul r4.xyz, r2.wwww, cb0[2].xyzx
  66: mad r0.w, -r0.w, cb0[9].x, l(1.000000)
  67: mov r5.x, v3.w
  68: mov r5.y, v4.w
  69: mov r5.z, v5.w
  70: mad r6.xyz, -v2.xyzx, r1.wwww, r5.xyzx
  71: dp3 r1.w, r6.xyzx, r6.xyzx
  72: max r1.w, r1.w, l(0.001000)
  73: rsq r1.w, r1.w
  74: mul r6.xyz, r1.wwww, r6.xyzx
  75: dp3 r1.w, r2.xyzx, -r3.xyzx
  76: dp3_sat r2.w, r2.xyzx, r5.xyzx
  77: dp3_sat r2.x, r2.xyzx, r6.xyzx
  78: dp3_sat r2.y, r5.xyzx, r6.xyzx
  79: mul r2.z, r2.y, r2.y
  80: dp2 r2.z, r2.zzzz, r0.wwww
  81: add r2.z, r2.z, l(-0.500000)
  82: add r3.x, -r2.w, l(1.000000)
  83: mul r3.y, r3.x, r3.x
  84: mul r3.y, r3.y, r3.y
  85: mul r3.x, r3.x, r3.y
  86: mad r3.x, r2.z, r3.x, l(1.000000)
  87: add r3.y, -|r1.w|, l(1.000000)
  88: mul r3.z, r3.y, r3.y
  89: mul r3.z, r3.z, r3.z
  90: mul r3.y, r3.y, r3.z
  91: mad r2.z, r2.z, r3.y, l(1.000000)
  92: mul r2.z, r2.z, r3.x
  93: mul r2.z, r2.w, r2.z
  94: mul r0.w, r0.w, r0.w
  95: max r0.w, r0.w, l(0.002000)
  96: add r3.x, -r0.w, l(1.000000)
  97: mad r3.y, |r1.w|, r3.x, r0.w
  98: mad r3.x, r2.w, r3.x, r0.w
  99: mul r1.w, |r1.w|, r3.x
 100: mad r1.w, r2.w, r3.y, r1.w
 101: add r1.w, r1.w, l(0.000010)
 102: div r1.w, l(0.500000), r1.w
 103: mul r0.w, r0.w, r0.w
 104: mad r3.x, r2.x, r0.w, -r2.x
 105: mad r2.x, r3.x, r2.x, l(1.000000)
 106: mul r0.w, r0.w, l(0.318310)
 107: mad r2.x, r2.x, r2.x, l(0.000000)
 108: div r0.w, r0.w, r2.x
 109: mul r0.w, r0.w, r1.w
 110: mul r0.w, r0.w, l(3.141593)
 111: mul r0.w, r2.w, r0.w
 112: max r0.w, r0.w, l(0.000000)
 113: dp3 r1.w, r0.xyzx, r0.xyzx
 114: ne r1.w, r1.w, l(0.000000)
 115: and r1.w, r1.w, l(0x3f800000)
 116: mul r0.w, r0.w, r1.w
 117: mul r2.xzw, r2.zzzz, r4.xxyz
 118: mul r3.xyz, r4.xyzx, r0.wwww
 119: add r0.w, -r2.y, l(1.000000)
 120: mul r1.w, r0.w, r0.w
 121: mul r1.w, r1.w, r1.w
 122: mul r0.w, r0.w, r1.w
 123: add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 124: mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
 125: mul r0.xyz, r0.xyzx, r3.xyzx
 126: mad o0.xyz, r1.xyzx, r2.xzwx, r0.xyzx
 127: mov o0.w, l(1.000000)
 128: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE SHADOWS_SCREEN 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
  Vector4 _ProjectionParams at 80
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad r1.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: mov o0.xyzw, r1.xyzw
  10: eq r2.x, cb0[9].w, l(0.000000)
  11: movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mul r2.xyz, v0.yyyy, cb3[1].xyzx
  15: mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
  16: mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
  17: mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
  18: add o2.xyz, r2.xyzx, -cb1[4].xyzx
  19: mov o2.w, l(0)
  20: mad r3.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
  21: mov o6.xyz, r2.xyzx
  22: mov r3.w, l(0)
  23: mov o3.xyzw, r3.wwwx
  24: mov o4.xyzw, r3.wwwy
  25: mov o5.w, r3.z
  26: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  27: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  28: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  29: dp3 r2.w, r2.xyzx, r2.xyzx
  30: rsq r2.w, r2.w
  31: mul o5.xyz, r2.wwww, r2.xyzx
  32: mul r2.xy, r0.yyyy, cb0[12].xyxx
  33: mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
  34: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  35: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  36: mul r0.x, r1.y, cb1[5].x
  37: mul r0.w, r0.x, l(0.500000)
  38: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  39: mov o8.zw, r1.zzzw
  40: add o8.xy, r0.zzzz, r0.xwxx
  41: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 98 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 3 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixV at 144
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[47], immediateIndexed
      dcl_constantbuffer CB3[26], immediateIndexed
      dcl_constantbuffer CB4[12], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v8.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: mul r3.xy, v6.yyyy, cb0[12].xyxx
  13: mad r3.xy, cb0[11].xyxx, v6.xxxx, r3.xyxx
  14: mad r3.xy, cb0[13].xyxx, v6.zzzz, r3.xyxx
  15: add r3.xy, r3.xyxx, cb0[14].xyxx
  16: add r4.xyz, -v6.xyzx, cb1[4].xyzx
  17: mov r5.x, cb4[9].z
  18: mov r5.y, cb4[10].z
  19: mov r5.z, cb4[11].z
  20: dp3 r1.w, r4.xyzx, r5.xyzx
  21: add r4.xyz, v6.xyzx, -cb3[25].xyzx
  22: dp3 r2.w, r4.xyzx, r4.xyzx
  23: sqrt r2.w, r2.w
  24: add r2.w, -r1.w, r2.w
  25: mad r1.w, cb3[25].w, r2.w, r1.w
  26: mad_sat r1.w, r1.w, cb3[24].z, cb3[24].w
  27: eq r2.w, cb5[0].x, l(1.000000)
  28: if_nz r2.w
  29:   eq r2.w, cb5[0].y, l(1.000000)
  30:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  31:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  32:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  33:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  34:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  35:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  36:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  37:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  38:   mad r3.z, cb5[0].z, l(0.500000), l(0.750000)
  39:   max r4.x, r2.w, r3.z
  40:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  41: else 
  42:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  43: endif 
  44: dp4_sat r2.w, r4.xyzw, cb2[46].xyzw
  45: div r3.zw, v8.xxxy, v8.wwww
  46: sample r4.xyzw, r3.zwzz, t1.xyzw, s2
  47: add r2.w, r2.w, -r4.x
  48: mad r1.w, r1.w, r2.w, r4.x
  49: sample r3.xyzw, r3.xyxx, t2.xyzw, s3
  50: mul r1.w, r1.w, r3.w
  51: mul r3.xyz, r1.wwww, cb0[2].xyzx
  52: add r1.w, -cb0[8].w, l(1.000000)
  53: mov r4.x, v3.w
  54: mov r4.y, v4.w
  55: mov r4.z, v5.w
  56: mad r5.xyz, -v2.xyzx, r0.wwww, r4.xyzx
  57: dp3 r0.w, r5.xyzx, r5.xyzx
  58: max r0.w, r0.w, l(0.001000)
  59: rsq r0.w, r0.w
  60: mul r5.xyz, r0.wwww, r5.xyzx
  61: dp3 r0.w, r1.xyzx, -r2.xyzx
  62: dp3_sat r2.x, r1.xyzx, r4.xyzx
  63: dp3_sat r1.x, r1.xyzx, r5.xyzx
  64: dp3_sat r1.y, r4.xyzx, r5.xyzx
  65: mul r1.z, r1.y, r1.y
  66: dp2 r1.z, r1.zzzz, r1.wwww
  67: add r1.z, r1.z, l(-0.500000)
  68: add r2.y, -r2.x, l(1.000000)
  69: mul r2.z, r2.y, r2.y
  70: mul r2.z, r2.z, r2.z
  71: mul r2.y, r2.y, r2.z
  72: mad r2.y, r1.z, r2.y, l(1.000000)
  73: add r2.z, -|r0.w|, l(1.000000)
  74: mul r2.w, r2.z, r2.z
  75: mul r2.w, r2.w, r2.w
  76: mul r2.z, r2.z, r2.w
  77: mad r1.z, r1.z, r2.z, l(1.000000)
  78: mul r1.z, r1.z, r2.y
  79: mul r1.z, r2.x, r1.z
  80: mul r1.w, r1.w, r1.w
  81: max r1.w, r1.w, l(0.002000)
  82: add r2.y, -r1.w, l(1.000000)
  83: mad r2.z, |r0.w|, r2.y, r1.w
  84: mad r2.y, r2.x, r2.y, r1.w
  85: mul r0.w, |r0.w|, r2.y
  86: mad r0.w, r2.x, r2.z, r0.w
  87: add r0.w, r0.w, l(0.000010)
  88: div r0.w, l(0.500000), r0.w
  89: mul r1.w, r1.w, r1.w
  90: mad r2.y, r1.x, r1.w, -r1.x
  91: mad r1.x, r2.y, r1.x, l(1.000000)
  92: mul r1.w, r1.w, l(0.318310)
  93: mad r1.x, r1.x, r1.x, l(0.000000)
  94: div r1.x, r1.w, r1.x
  95: mul r0.w, r0.w, r1.x
  96: mul r0.w, r0.w, l(3.141593)
  97: mul r0.w, r2.x, r0.w
  98: max r0.w, r0.w, l(0.000000)
  99: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
 100: ne r1.x, r1.x, l(0.000000)
 101: and r1.x, r1.x, l(0x3f800000)
 102: mul r0.w, r0.w, r1.x
 103: mul r1.xzw, r1.zzzz, r3.xxyz
 104: mul r2.xyz, r3.xyzx, r0.wwww
 105: add r0.w, -r1.y, l(1.000000)
 106: mul r1.y, r0.w, r0.w
 107: mul r1.y, r1.y, r1.y
 108: mul r0.w, r0.w, r1.y
 109: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 110: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
 111: mul r2.xyz, r2.xyzx, r3.xyzx
 112: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
 113: mov o0.w, l(1.000000)
 114: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: DIRECTIONAL_COOKIE SHADOWS_SCREEN UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (128 bytes) on slot 1 {
  Vector4 _ProjectionParams at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 4 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
  Vector4 unity_StereoScaleOffset[2] at 1056
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 5 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float   xy  
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[68], dynamicIndexed
      dcl_constantbuffer CB5[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xy
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb5[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb4[r2.x + 25].xyzw
   7: mad r3.xyzw, cb4[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb4[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad r1.xyzw, cb4[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: mov o0.xyzw, r1.xyzw
  11: eq r2.x, cb0[9].w, l(0.000000)
  12: movc r2.xy, r2.xxxx, v2.xyxx, v3.xyxx
  13: mad o1.zw, r2.xxxy, cb0[7].xxxy, cb0[7].zzzw
  14: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  15: mov o2.w, l(0)
  16: mul r2.xyz, v0.yyyy, cb3[1].xyzx
  17: mad r2.xyz, cb3[0].xyzx, v0.xxxx, r2.xyzx
  18: mad r2.xyz, cb3[2].xyzx, v0.zzzz, r2.xyzx
  19: mad r2.xyz, cb3[3].xyzx, v0.wwww, r2.xyzx
  20: mov r2.w, cb5[0].x
  21: add o2.xyz, r2.xyzx, -cb4[r2.w + 64].xyzx
  22: mad r3.xyz, -r2.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r2.xyzx
  24: mov r3.w, l(0)
  25: mov o3.xyzw, r3.wwwx
  26: mov o4.xyzw, r3.wwwy
  27: mov o5.w, r3.z
  28: dp3 r2.x, v1.xyzx, cb3[4].xyzx
  29: dp3 r2.y, v1.xyzx, cb3[5].xyzx
  30: dp3 r2.z, v1.xyzx, cb3[6].xyzx
  31: dp3 r3.x, r2.xyzx, r2.xyzx
  32: rsq r3.x, r3.x
  33: mul o5.xyz, r2.xyzx, r3.xxxx
  34: mul r2.xy, r0.yyyy, cb0[12].xyxx
  35: mad r0.xy, cb0[11].xyxx, r0.xxxx, r2.xyxx
  36: mad r0.xy, cb0[13].xyxx, r0.zzzz, r0.xyxx
  37: mad o7.xy, cb0[14].xyxx, r0.wwww, r0.xyxx
  38: mul r0.x, r1.y, cb1[4].x
  39: mul r0.w, r0.x, l(0.500000)
  40: mul r0.xz, r1.xxwx, l(0.500000, 0.000000, 0.500000, 0.000000)
  41: add r0.xy, r0.zzzz, r0.xwxx
  42: mul r0.zw, r1.wwww, cb4[r2.w + 66].zzzw
  43: mad o8.xy, r0.xyxx, cb4[r2.w + 66].xyxx, r0.zwzz
  44: mov o8.zw, r1.zzzw
  45: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 99 math, 6 temp registers, 4 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 1
Set 2D Texture "_ShadowMapTexture" to slot 1 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 3
Set 3D Texture "unity_ProbeVolumeSH" to slot 3 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
  Vector4 unity_ShadowFadeCenterAndType at 400
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixV[2] at 128
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 5 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xy          7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float   xy w
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[26], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_constantbuffer CB5[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture3d (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_input_ps linear v8.xyw
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t0.xyzw, s1
   1: mul r0.xyz, r0.xyzx, cb0[4].xyzx
   2: max r0.w, cb0[3].y, cb0[3].x
   3: max r0.w, r0.w, cb0[3].z
   4: add r0.w, -r0.w, l(1.000000)
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: dp3 r0.w, v5.xyzx, v5.xyzx
   7: rsq r0.w, r0.w
   8: mul r1.xyz, r0.wwww, v5.xyzx
   9: dp3 r0.w, v2.xyzx, v2.xyzx
  10: rsq r0.w, r0.w
  11: mul r2.xyz, r0.wwww, v2.xyzx
  12: mul r3.xy, v6.yyyy, cb0[12].xyxx
  13: mad r3.xy, cb0[11].xyxx, v6.xxxx, r3.xyxx
  14: mad r3.xy, cb0[13].xyxx, v6.zzzz, r3.xyxx
  15: add r3.xy, r3.xyxx, cb0[14].xyxx
  16: mov r1.w, cb4[0].x
  17: add r4.xyz, -v6.xyzx, cb3[r1.w + 64].xyzx
  18: ishl r1.w, cb4[0].x, l(2)
  19: mov r5.x, cb3[r1.w + 8].z
  20: mov r5.y, cb3[r1.w + 9].z
  21: mov r5.z, cb3[r1.w + 10].z
  22: dp3 r1.w, r4.xyzx, r5.xyzx
  23: add r4.xyz, v6.xyzx, -cb2[25].xyzx
  24: dp3 r2.w, r4.xyzx, r4.xyzx
  25: sqrt r2.w, r2.w
  26: add r2.w, -r1.w, r2.w
  27: mad r1.w, cb2[25].w, r2.w, r1.w
  28: mad_sat r1.w, r1.w, cb2[24].z, cb2[24].w
  29: eq r2.w, cb5[0].x, l(1.000000)
  30: if_nz r2.w
  31:   eq r2.w, cb5[0].y, l(1.000000)
  32:   mul r4.xyz, v6.yyyy, cb5[2].xyzx
  33:   mad r4.xyz, cb5[1].xyzx, v6.xxxx, r4.xyzx
  34:   mad r4.xyz, cb5[3].xyzx, v6.zzzz, r4.xyzx
  35:   add r4.xyz, r4.xyzx, cb5[4].xyzx
  36:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  37:   add r4.xyz, r4.xyzx, -cb5[6].xyzx
  38:   mul r4.yzw, r4.xxyz, cb5[5].xxyz
  39:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  40:   mad r3.z, cb5[0].z, l(0.500000), l(0.750000)
  41:   max r4.x, r2.w, r3.z
  42:   sample r4.xyzw, r4.xzwx, t3.xyzw, s0
  43: else 
  44:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  45: endif 
  46: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  47: div r3.zw, v8.xxxy, v8.wwww
  48: sample r4.xyzw, r3.zwzz, t1.xyzw, s2
  49: add r2.w, r2.w, -r4.x
  50: mad r1.w, r1.w, r2.w, r4.x
  51: sample r3.xyzw, r3.xyxx, t2.xyzw, s3
  52: mul r1.w, r1.w, r3.w
  53: mul r3.xyz, r1.wwww, cb0[2].xyzx
  54: add r1.w, -cb0[8].w, l(1.000000)
  55: mov r4.x, v3.w
  56: mov r4.y, v4.w
  57: mov r4.z, v5.w
  58: mad r5.xyz, -v2.xyzx, r0.wwww, r4.xyzx
  59: dp3 r0.w, r5.xyzx, r5.xyzx
  60: max r0.w, r0.w, l(0.001000)
  61: rsq r0.w, r0.w
  62: mul r5.xyz, r0.wwww, r5.xyzx
  63: dp3 r0.w, r1.xyzx, -r2.xyzx
  64: dp3_sat r2.x, r1.xyzx, r4.xyzx
  65: dp3_sat r1.x, r1.xyzx, r5.xyzx
  66: dp3_sat r1.y, r4.xyzx, r5.xyzx
  67: mul r1.z, r1.y, r1.y
  68: dp2 r1.z, r1.zzzz, r1.wwww
  69: add r1.z, r1.z, l(-0.500000)
  70: add r2.y, -r2.x, l(1.000000)
  71: mul r2.z, r2.y, r2.y
  72: mul r2.z, r2.z, r2.z
  73: mul r2.y, r2.y, r2.z
  74: mad r2.y, r1.z, r2.y, l(1.000000)
  75: add r2.z, -|r0.w|, l(1.000000)
  76: mul r2.w, r2.z, r2.z
  77: mul r2.w, r2.w, r2.w
  78: mul r2.z, r2.z, r2.w
  79: mad r1.z, r1.z, r2.z, l(1.000000)
  80: mul r1.z, r1.z, r2.y
  81: mul r1.z, r2.x, r1.z
  82: mul r1.w, r1.w, r1.w
  83: max r1.w, r1.w, l(0.002000)
  84: add r2.y, -r1.w, l(1.000000)
  85: mad r2.z, |r0.w|, r2.y, r1.w
  86: mad r2.y, r2.x, r2.y, r1.w
  87: mul r0.w, |r0.w|, r2.y
  88: mad r0.w, r2.x, r2.z, r0.w
  89: add r0.w, r0.w, l(0.000010)
  90: div r0.w, l(0.500000), r0.w
  91: mul r1.w, r1.w, r1.w
  92: mad r2.y, r1.x, r1.w, -r1.x
  93: mad r1.x, r2.y, r1.x, l(1.000000)
  94: mul r1.w, r1.w, l(0.318310)
  95: mad r1.x, r1.x, r1.x, l(0.000000)
  96: div r1.x, r1.w, r1.x
  97: mul r0.w, r0.w, r1.x
  98: mul r0.w, r0.w, l(3.141593)
  99: mul r0.w, r2.x, r0.w
 100: max r0.w, r0.w, l(0.000000)
 101: dp3 r1.x, cb0[3].xyzx, cb0[3].xyzx
 102: ne r1.x, r1.x, l(0.000000)
 103: and r1.x, r1.x, l(0x3f800000)
 104: mul r0.w, r0.w, r1.x
 105: mul r1.xzw, r1.zzzz, r3.xxyz
 106: mul r2.xyz, r3.xyzx, r0.wwww
 107: add r0.w, -r1.y, l(1.000000)
 108: mul r1.y, r0.w, r0.w
 109: mul r1.y, r1.y, r1.y
 110: mul r0.w, r0.w, r1.y
 111: add r3.xyz, -cb0[3].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
 112: mad r3.xyz, r3.xyzx, r0.wwww, cb0[3].xyzx
 113: mul r2.xyz, r2.xyzx, r3.xyzx
 114: mad o0.xyz, r0.xyzx, r1.xzwx, r2.xyzx
 115: mov o0.w, l(1.000000)
 116: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov r1.w, l(0)
  28: mov o3.xyzw, r1.wwwx
  29: mov o4.xyzw, r1.wwwy
  30: mov o5.w, r1.z
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul o5.xyz, r1.wwww, r1.xyzx
  37: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  38: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  39: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  40: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  41: mov o8.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 36 math, 3 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[3], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: add r0.xyz, v6.xyzx, -cb1[1].xyzx
   1: max r0.w, |r0.y|, |r0.x|
   2: max r0.w, |r0.z|, r0.w
   3: add r0.w, r0.w, -cb1[2].z
   4: max r0.w, r0.w, l(0.000010)
   5: mul r0.w, r0.w, cb1[2].w
   6: div r0.w, cb1[2].y, r0.w
   7: add r0.w, r0.w, -cb1[2].x
   8: add r0.w, -r0.w, l(1.000000)
   9: sample_c_lz r0.x, r0.xyzx, t4.xxxx, s1, r0.w
  10: add r0.y, -cb2[24].x, l(1.000000)
  11: mad r0.x, r0.x, r0.y, cb2[24].x
  12: mul r0.yzw, v6.yyyy, cb0[12].xxyz
  13: mad r0.yzw, cb0[11].xxyz, v6.xxxx, r0.yyzw
  14: mad r0.yzw, cb0[13].xxyz, v6.zzzz, r0.yyzw
  15: add r0.yzw, r0.yyzw, cb0[14].xxyz
  16: dp3 r0.y, r0.yzwy, r0.yzwy
  17: sample r1.xyzw, r0.yyyy, t2.xyzw, s4
  18: mul r0.x, r0.x, r1.x
  19: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  20: dp3 r0.w, v5.xyzx, v5.xyzx
  21: rsq r0.w, r0.w
  22: mul r1.xyz, r0.wwww, v5.xyzx
  23: mov r2.x, v3.w
  24: mov r2.y, v4.w
  25: mov r2.z, v5.w
  26: dp3_sat r0.w, r1.xyzx, r2.xyzx
  27: mul r0.xyz, r0.wwww, r0.xyzx
  28: dp3 r0.w, -v2.xyzx, r1.xyzx
  29: add r0.w, r0.w, r0.w
  30: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  31: dp3 r0.w, r1.xyzx, r2.xyzx
  32: mul r0.w, r0.w, r0.w
  33: mul r1.x, r0.w, r0.w
  34: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  35: mad r1.y, -r2.w, cb0[9].x, l(1.000000)
  36: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  37: mul r0.w, r1.x, l(16.000000)
  38: mul r1.xyz, r2.xyzx, r0.wwww
  39: add r0.w, -r2.x, l(1.000000)
  40: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
  41: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  42: mad r1.xyz, r2.xyzx, r0.wwww, r1.xyzx
  43: mul o0.xyz, r0.xyzx, r1.xyzx
  44: mov o0.w, l(1.000000)
  45: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add r2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: dp3 r1.x, r2.xyzx, r2.xyzx
  21: rsq r1.x, r1.x
  22: mul o2.xyz, r1.xxxx, r2.xyzx
  23: mov o2.w, l(0)
  24: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  25: mov o6.xyz, r1.yzwy
  26: dp3 r1.x, r2.xyzx, r2.xyzx
  27: rsq r1.x, r1.x
  28: mul r1.xyz, r1.xxxx, r2.xyzx
  29: mov r1.w, l(0)
  30: mov o3.xyzw, r1.wwwx
  31: mov o4.xyzw, r1.wwwy
  32: mov o5.w, r1.z
  33: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  34: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  35: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  36: dp3 r1.w, r1.xyzx, r1.xyzx
  37: rsq r1.w, r1.w
  38: mul o5.xyz, r1.wwww, r1.xyzx
  39: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  40: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  41: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  42: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  43: mov o8.xyzw, l(0,0,0,0)
  44: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 36 math, 3 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[3], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: add r0.xyz, v6.xyzx, -cb1[1].xyzx
   1: max r0.w, |r0.y|, |r0.x|
   2: max r0.w, |r0.z|, r0.w
   3: add r0.w, r0.w, -cb1[2].z
   4: max r0.w, r0.w, l(0.000010)
   5: mul r0.w, r0.w, cb1[2].w
   6: div r0.w, cb1[2].y, r0.w
   7: add r0.w, r0.w, -cb1[2].x
   8: add r0.w, -r0.w, l(1.000000)
   9: sample_c_lz r0.x, r0.xyzx, t4.xxxx, s1, r0.w
  10: add r0.y, -cb2[24].x, l(1.000000)
  11: mad r0.x, r0.x, r0.y, cb2[24].x
  12: mul r0.yzw, v6.yyyy, cb0[12].xxyz
  13: mad r0.yzw, cb0[11].xxyz, v6.xxxx, r0.yyzw
  14: mad r0.yzw, cb0[13].xxyz, v6.zzzz, r0.yyzw
  15: add r0.yzw, r0.yyzw, cb0[14].xxyz
  16: dp3 r0.y, r0.yzwy, r0.yzwy
  17: sample r1.xyzw, r0.yyyy, t2.xyzw, s4
  18: mul r0.x, r0.x, r1.x
  19: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  20: dp3 r0.w, v5.xyzx, v5.xyzx
  21: rsq r0.w, r0.w
  22: mul r1.xyz, r0.wwww, v5.xyzx
  23: mov r2.x, v3.w
  24: mov r2.y, v4.w
  25: mov r2.z, v5.w
  26: dp3_sat r0.w, r1.xyzx, r2.xyzx
  27: mul r0.xyz, r0.wwww, r0.xyzx
  28: dp3 r0.w, -v2.xyzx, r1.xyzx
  29: add r0.w, r0.w, r0.w
  30: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  31: dp3 r0.w, r1.xyzx, r2.xyzx
  32: mul r0.w, r0.w, r0.w
  33: mul r1.x, r0.w, r0.w
  34: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  35: mad r1.y, -r2.w, cb0[9].x, l(1.000000)
  36: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  37: mul r0.w, r1.x, l(16.000000)
  38: mul r1.xyz, r2.xyzx, r0.wwww
  39: add r0.w, -r2.x, l(1.000000)
  40: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
  41: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  42: mad r1.xyz, r2.xyzx, r0.wwww, r1.xyzx
  43: mul o0.xyz, r0.xyzx, r1.xyzx
  44: mov o0.w, l(1.000000)
  45: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 44 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov o3.w, r1.x
  28: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  29: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  30: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  31: dp3 r1.x, r2.xyzx, r2.xyzx
  32: rsq r1.x, r1.x
  33: mul r2.xyz, r1.xxxx, r2.xyzx
  34: mov o3.xyz, r2.xyzx
  35: dp3 r3.x, v1.xyzx, cb3[4].xyzx
  36: dp3 r3.y, v1.xyzx, cb3[5].xyzx
  37: dp3 r3.z, v1.xyzx, cb3[6].xyzx
  38: dp3 r1.x, r3.xyzx, r3.xyzx
  39: rsq r1.x, r1.x
  40: mul r3.xyz, r1.xxxx, r3.xyzx
  41: mul r4.xyz, r2.yzxy, r3.zxyz
  42: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  43: mov o5.xyz, r3.xyzx
  44: mul r1.x, v4.w, cb3[9].w
  45: mul o4.xyz, r1.xxxx, r2.xyzx
  46: mov o4.w, r1.y
  47: mov o5.w, r1.z
  48: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  49: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  50: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  51: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  52: mov o8.xyzw, l(0,0,0,0)
  53: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 42 math, 3 temp registers, 5 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 5 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[3], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: add r0.xyz, v6.xyzx, -cb1[1].xyzx
   1: max r0.w, |r0.y|, |r0.x|
   2: max r0.w, |r0.z|, r0.w
   3: add r0.w, r0.w, -cb1[2].z
   4: max r0.w, r0.w, l(0.000010)
   5: mul r0.w, r0.w, cb1[2].w
   6: div r0.w, cb1[2].y, r0.w
   7: add r0.w, r0.w, -cb1[2].x
   8: add r0.w, -r0.w, l(1.000000)
   9: sample_c_lz r0.x, r0.xyzx, t5.xxxx, s1, r0.w
  10: add r0.y, -cb2[24].x, l(1.000000)
  11: mad r0.x, r0.x, r0.y, cb2[24].x
  12: mul r0.yzw, v6.yyyy, cb0[12].xxyz
  13: mad r0.yzw, cb0[11].xxyz, v6.xxxx, r0.yyzw
  14: mad r0.yzw, cb0[13].xxyz, v6.zzzz, r0.yyzw
  15: add r0.yzw, r0.yyzw, cb0[14].xxyz
  16: dp3 r0.y, r0.yzwy, r0.yzwy
  17: sample r1.xyzw, r0.yyyy, t3.xyzw, s5
  18: mul r0.x, r0.x, r1.x
  19: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  20: sample r1.xyzw, v1.xyxx, t2.xyzw, s3
  21: mul r1.x, r1.w, r1.x
  22: mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  23: mul r2.xyz, r1.yyyy, v4.xyzx
  24: mad r2.xyz, v3.xyzx, r1.xxxx, r2.xyzx
  25: dp2 r0.w, r1.xyxx, r1.xyxx
  26: min r0.w, r0.w, l(1.000000)
  27: add r0.w, -r0.w, l(1.000000)
  28: sqrt r0.w, r0.w
  29: mad r1.xyz, v5.xyzx, r0.wwww, r2.xyzx
  30: mov r2.x, v3.w
  31: mov r2.y, v4.w
  32: mov r2.z, v5.w
  33: dp3_sat r0.w, r1.xyzx, r2.xyzx
  34: mul r0.xyz, r0.wwww, r0.xyzx
  35: dp3 r0.w, -v2.xyzx, r1.xyzx
  36: add r0.w, r0.w, r0.w
  37: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  38: dp3 r0.w, r1.xyzx, r2.xyzx
  39: mul r0.w, r0.w, r0.w
  40: mul r1.x, r0.w, r0.w
  41: sample r2.xyzw, v1.xyxx, t1.xyzw, s4
  42: mad r1.y, -r2.w, cb0[9].x, l(1.000000)
  43: sample r1.xyzw, r1.xyxx, t4.xyzw, s0
  44: mul r0.w, r1.x, l(16.000000)
  45: mul r1.xyz, r2.xyzx, r0.wwww
  46: add r0.w, -r2.x, l(1.000000)
  47: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
  48: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  49: mad r1.xyz, r2.xyzx, r0.wwww, r1.xyzx
  50: mul o0.xyz, r0.xyzx, r1.xyzx
  51: mov o0.w, l(1.000000)
  52: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 45 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add r2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: dp3 r1.x, r2.xyzx, r2.xyzx
  21: rsq r1.x, r1.x
  22: mul o2.xyz, r1.xxxx, r2.xyzx
  23: mov o2.w, l(0)
  24: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  25: mov o6.xyz, r1.yzwy
  26: dp3 r1.x, r2.xyzx, r2.xyzx
  27: rsq r1.x, r1.x
  28: mul r1.xyz, r1.xxxx, r2.xyzx
  29: mov o3.w, r1.x
  30: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  31: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  32: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  33: dp3 r1.x, r2.xyzx, r2.xyzx
  34: rsq r1.x, r1.x
  35: mul r2.xyz, r1.xxxx, r2.xyzx
  36: mov o3.xyz, r2.xyzx
  37: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  38: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  39: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  40: dp3 r1.x, r3.xyzx, r3.xyzx
  41: rsq r1.x, r1.x
  42: mul r3.xyz, r1.xxxx, r3.xyzx
  43: mul r4.xyz, r2.yzxy, r3.zxyz
  44: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  45: mov o5.xyz, r3.xyzx
  46: mul r1.x, v4.w, cb2[9].w
  47: mul o4.xyz, r1.xxxx, r2.xyzx
  48: mov o4.w, r1.y
  49: mov o5.w, r1.z
  50: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  51: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  52: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  53: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  54: mov o8.xyzw, l(0,0,0,0)
  55: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 42 math, 3 temp registers, 5 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 5 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[3], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: add r0.xyz, v6.xyzx, -cb1[1].xyzx
   1: max r0.w, |r0.y|, |r0.x|
   2: max r0.w, |r0.z|, r0.w
   3: add r0.w, r0.w, -cb1[2].z
   4: max r0.w, r0.w, l(0.000010)
   5: mul r0.w, r0.w, cb1[2].w
   6: div r0.w, cb1[2].y, r0.w
   7: add r0.w, r0.w, -cb1[2].x
   8: add r0.w, -r0.w, l(1.000000)
   9: sample_c_lz r0.x, r0.xyzx, t5.xxxx, s1, r0.w
  10: add r0.y, -cb2[24].x, l(1.000000)
  11: mad r0.x, r0.x, r0.y, cb2[24].x
  12: mul r0.yzw, v6.yyyy, cb0[12].xxyz
  13: mad r0.yzw, cb0[11].xxyz, v6.xxxx, r0.yyzw
  14: mad r0.yzw, cb0[13].xxyz, v6.zzzz, r0.yyzw
  15: add r0.yzw, r0.yyzw, cb0[14].xxyz
  16: dp3 r0.y, r0.yzwy, r0.yzwy
  17: sample r1.xyzw, r0.yyyy, t3.xyzw, s5
  18: mul r0.x, r0.x, r1.x
  19: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  20: sample r1.xyzw, v1.xyxx, t2.xyzw, s3
  21: mul r1.x, r1.w, r1.x
  22: mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  23: mul r2.xyz, r1.yyyy, v4.xyzx
  24: mad r2.xyz, v3.xyzx, r1.xxxx, r2.xyzx
  25: dp2 r0.w, r1.xyxx, r1.xyxx
  26: min r0.w, r0.w, l(1.000000)
  27: add r0.w, -r0.w, l(1.000000)
  28: sqrt r0.w, r0.w
  29: mad r1.xyz, v5.xyzx, r0.wwww, r2.xyzx
  30: mov r2.x, v3.w
  31: mov r2.y, v4.w
  32: mov r2.z, v5.w
  33: dp3_sat r0.w, r1.xyzx, r2.xyzx
  34: mul r0.xyz, r0.wwww, r0.xyzx
  35: dp3 r0.w, -v2.xyzx, r1.xyzx
  36: add r0.w, r0.w, r0.w
  37: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  38: dp3 r0.w, r1.xyzx, r2.xyzx
  39: mul r0.w, r0.w, r0.w
  40: mul r1.x, r0.w, r0.w
  41: sample r2.xyzw, v1.xyxx, t1.xyzw, s4
  42: mad r1.y, -r2.w, cb0[9].x, l(1.000000)
  43: sample r1.xyzw, r1.xyxx, t4.xyzw, s0
  44: mul r0.w, r1.x, l(16.000000)
  45: mul r1.xyz, r2.xyzx, r0.wwww
  46: add r0.w, -r2.x, l(1.000000)
  47: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
  48: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  49: mad r1.xyz, r2.xyzx, r0.wwww, r1.xyzx
  50: mul o0.xyz, r0.xyzx, r1.xyzx
  51: mov o0.w, l(1.000000)
  52: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov r1.w, l(0)
  28: mov o3.xyzw, r1.wwwx
  29: mov o4.xyzw, r1.wwwy
  30: mov o5.w, r1.z
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul o5.xyz, r1.wwww, r1.xyzx
  37: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  38: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  39: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  40: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  41: mov o8.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 36 math, 3 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 3 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[3], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: add r0.xyz, v6.xyzx, -cb1[1].xyzx
   1: max r0.w, |r0.y|, |r0.x|
   2: max r0.w, |r0.z|, r0.w
   3: add r0.w, r0.w, -cb1[2].z
   4: max r0.w, r0.w, l(0.000010)
   5: mul r0.w, r0.w, cb1[2].w
   6: div r0.w, cb1[2].y, r0.w
   7: add r0.w, r0.w, -cb1[2].x
   8: add r0.w, -r0.w, l(1.000000)
   9: sample_c_lz r0.x, r0.xyzx, t3.xxxx, s1, r0.w
  10: add r0.y, -cb2[24].x, l(1.000000)
  11: mad r0.x, r0.x, r0.y, cb2[24].x
  12: mul r0.yzw, v6.yyyy, cb0[12].xxyz
  13: mad r0.yzw, cb0[11].xxyz, v6.xxxx, r0.yyzw
  14: mad r0.yzw, cb0[13].xxyz, v6.zzzz, r0.yyzw
  15: add r0.yzw, r0.yyzw, cb0[14].xxyz
  16: dp3 r0.y, r0.yzwy, r0.yzwy
  17: sample r1.xyzw, r0.yyyy, t1.xyzw, s3
  18: mul r0.x, r0.x, r1.x
  19: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  20: dp3 r0.w, v5.xyzx, v5.xyzx
  21: rsq r0.w, r0.w
  22: mul r1.xyz, r0.wwww, v5.xyzx
  23: mov r2.x, v3.w
  24: mov r2.y, v4.w
  25: mov r2.z, v5.w
  26: dp3_sat r0.w, r1.xyzx, r2.xyzx
  27: mul r0.xyz, r0.wwww, r0.xyzx
  28: dp3 r0.w, -v2.xyzx, r1.xyzx
  29: add r0.w, r0.w, r0.w
  30: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  31: dp3 r0.w, r1.xyzx, r2.xyzx
  32: mul r0.w, r0.w, r0.w
  33: mul r1.x, r0.w, r0.w
  34: add r1.y, -cb0[8].w, l(1.000000)
  35: sample r1.xyzw, r1.xyxx, t2.xyzw, s0
  36: mul r0.w, r1.x, l(16.000000)
  37: mul r1.xyz, r0.wwww, cb0[3].xyzx
  38: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
  39: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  40: add r0.w, -cb0[3].x, l(1.000000)
  41: mad r1.xyz, r2.xyzx, r0.wwww, r1.xyzx
  42: mul o0.xyz, r0.xyzx, r1.xyzx
  43: mov o0.w, l(1.000000)
  44: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT SHADOWS_CUBE UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add r2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: dp3 r1.x, r2.xyzx, r2.xyzx
  21: rsq r1.x, r1.x
  22: mul o2.xyz, r1.xxxx, r2.xyzx
  23: mov o2.w, l(0)
  24: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  25: mov o6.xyz, r1.yzwy
  26: dp3 r1.x, r2.xyzx, r2.xyzx
  27: rsq r1.x, r1.x
  28: mul r1.xyz, r1.xxxx, r2.xyzx
  29: mov r1.w, l(0)
  30: mov o3.xyzw, r1.wwwx
  31: mov o4.xyzw, r1.wwwy
  32: mov o5.w, r1.z
  33: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  34: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  35: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  36: dp3 r1.w, r1.xyzx, r1.xyzx
  37: rsq r1.w, r1.w
  38: mul o5.xyz, r1.wwww, r1.xyzx
  39: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  40: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  41: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  42: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  43: mov o8.xyzw, l(0,0,0,0)
  44: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 36 math, 3 temp registers, 3 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTexture0" to slot 1 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 2 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 3 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[3], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: add r0.xyz, v6.xyzx, -cb1[1].xyzx
   1: max r0.w, |r0.y|, |r0.x|
   2: max r0.w, |r0.z|, r0.w
   3: add r0.w, r0.w, -cb1[2].z
   4: max r0.w, r0.w, l(0.000010)
   5: mul r0.w, r0.w, cb1[2].w
   6: div r0.w, cb1[2].y, r0.w
   7: add r0.w, r0.w, -cb1[2].x
   8: add r0.w, -r0.w, l(1.000000)
   9: sample_c_lz r0.x, r0.xyzx, t3.xxxx, s1, r0.w
  10: add r0.y, -cb2[24].x, l(1.000000)
  11: mad r0.x, r0.x, r0.y, cb2[24].x
  12: mul r0.yzw, v6.yyyy, cb0[12].xxyz
  13: mad r0.yzw, cb0[11].xxyz, v6.xxxx, r0.yyzw
  14: mad r0.yzw, cb0[13].xxyz, v6.zzzz, r0.yyzw
  15: add r0.yzw, r0.yyzw, cb0[14].xxyz
  16: dp3 r0.y, r0.yzwy, r0.yzwy
  17: sample r1.xyzw, r0.yyyy, t1.xyzw, s3
  18: mul r0.x, r0.x, r1.x
  19: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  20: dp3 r0.w, v5.xyzx, v5.xyzx
  21: rsq r0.w, r0.w
  22: mul r1.xyz, r0.wwww, v5.xyzx
  23: mov r2.x, v3.w
  24: mov r2.y, v4.w
  25: mov r2.z, v5.w
  26: dp3_sat r0.w, r1.xyzx, r2.xyzx
  27: mul r0.xyz, r0.wwww, r0.xyzx
  28: dp3 r0.w, -v2.xyzx, r1.xyzx
  29: add r0.w, r0.w, r0.w
  30: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  31: dp3 r0.w, r1.xyzx, r2.xyzx
  32: mul r0.w, r0.w, r0.w
  33: mul r1.x, r0.w, r0.w
  34: add r1.y, -cb0[8].w, l(1.000000)
  35: sample r1.xyzw, r1.xyxx, t2.xyzw, s0
  36: mul r0.w, r1.x, l(16.000000)
  37: mul r1.xyz, r0.wwww, cb0[3].xyzx
  38: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
  39: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  40: add r0.w, -cb0[3].x, l(1.000000)
  41: mad r1.xyz, r2.xyzx, r0.wwww, r1.xyzx
  42: mul o0.xyz, r0.xyzx, r1.xyzx
  43: mov o0.w, l(1.000000)
  44: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov r1.w, l(0)
  28: mov o3.xyzw, r1.wwwx
  29: mov o4.xyzw, r1.wwwy
  30: mov o5.w, r1.z
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul o5.xyz, r1.wwww, r1.xyzx
  37: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  38: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  39: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  40: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  41: mov o8.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 37 math, 3 temp registers, 5 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 5
Set CUBE Texture "_LightTexture0" to slot 3 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 5 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[3], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: add r0.xyz, v6.xyzx, -cb1[1].xyzx
   1: max r0.w, |r0.y|, |r0.x|
   2: max r0.w, |r0.z|, r0.w
   3: add r0.w, r0.w, -cb1[2].z
   4: max r0.w, r0.w, l(0.000010)
   5: mul r0.w, r0.w, cb1[2].w
   6: div r0.w, cb1[2].y, r0.w
   7: add r0.w, r0.w, -cb1[2].x
   8: add r0.w, -r0.w, l(1.000000)
   9: sample_c_lz r0.x, r0.xyzx, t5.xxxx, s1, r0.w
  10: add r0.y, -cb2[24].x, l(1.000000)
  11: mad r0.x, r0.x, r0.y, cb2[24].x
  12: mul r0.yzw, v6.yyyy, cb0[12].xxyz
  13: mad r0.yzw, cb0[11].xxyz, v6.xxxx, r0.yyzw
  14: mad r0.yzw, cb0[13].xxyz, v6.zzzz, r0.yyzw
  15: add r0.yzw, r0.yyzw, cb0[14].xxyz
  16: dp3 r1.x, r0.yzwy, r0.yzwy
  17: sample r2.xyzw, r0.yzwy, t3.xyzw, s4
  18: sample r1.xyzw, r1.xxxx, t2.xyzw, s5
  19: mul r0.y, r2.w, r1.x
  20: mul r0.x, r0.x, r0.y
  21: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  22: dp3 r0.w, v5.xyzx, v5.xyzx
  23: rsq r0.w, r0.w
  24: mul r1.xyz, r0.wwww, v5.xyzx
  25: mov r2.x, v3.w
  26: mov r2.y, v4.w
  27: mov r2.z, v5.w
  28: dp3_sat r0.w, r1.xyzx, r2.xyzx
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: dp3 r0.w, -v2.xyzx, r1.xyzx
  31: add r0.w, r0.w, r0.w
  32: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  33: dp3 r0.w, r1.xyzx, r2.xyzx
  34: mul r0.w, r0.w, r0.w
  35: mul r1.x, r0.w, r0.w
  36: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  37: mad r1.y, -r2.w, cb0[9].x, l(1.000000)
  38: sample r1.xyzw, r1.xyxx, t4.xyzw, s0
  39: mul r0.w, r1.x, l(16.000000)
  40: mul r1.xyz, r2.xyzx, r0.wwww
  41: add r0.w, -r2.x, l(1.000000)
  42: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
  43: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  44: mad r1.xyz, r2.xyzx, r0.wwww, r1.xyzx
  45: mul o0.xyz, r0.xyzx, r1.xyzx
  46: mov o0.w, l(1.000000)
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add r2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: dp3 r1.x, r2.xyzx, r2.xyzx
  21: rsq r1.x, r1.x
  22: mul o2.xyz, r1.xxxx, r2.xyzx
  23: mov o2.w, l(0)
  24: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  25: mov o6.xyz, r1.yzwy
  26: dp3 r1.x, r2.xyzx, r2.xyzx
  27: rsq r1.x, r1.x
  28: mul r1.xyz, r1.xxxx, r2.xyzx
  29: mov r1.w, l(0)
  30: mov o3.xyzw, r1.wwwx
  31: mov o4.xyzw, r1.wwwy
  32: mov o5.w, r1.z
  33: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  34: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  35: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  36: dp3 r1.w, r1.xyzx, r1.xyzx
  37: rsq r1.w, r1.w
  38: mul o5.xyz, r1.wwww, r1.xyzx
  39: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  40: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  41: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  42: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  43: mov o8.xyzw, l(0,0,0,0)
  44: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 37 math, 3 temp registers, 5 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 2 sampler slot 5
Set CUBE Texture "_LightTexture0" to slot 3 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 5 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[3], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texturecube (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texturecube (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: add r0.xyz, v6.xyzx, -cb1[1].xyzx
   1: max r0.w, |r0.y|, |r0.x|
   2: max r0.w, |r0.z|, r0.w
   3: add r0.w, r0.w, -cb1[2].z
   4: max r0.w, r0.w, l(0.000010)
   5: mul r0.w, r0.w, cb1[2].w
   6: div r0.w, cb1[2].y, r0.w
   7: add r0.w, r0.w, -cb1[2].x
   8: add r0.w, -r0.w, l(1.000000)
   9: sample_c_lz r0.x, r0.xyzx, t5.xxxx, s1, r0.w
  10: add r0.y, -cb2[24].x, l(1.000000)
  11: mad r0.x, r0.x, r0.y, cb2[24].x
  12: mul r0.yzw, v6.yyyy, cb0[12].xxyz
  13: mad r0.yzw, cb0[11].xxyz, v6.xxxx, r0.yyzw
  14: mad r0.yzw, cb0[13].xxyz, v6.zzzz, r0.yyzw
  15: add r0.yzw, r0.yyzw, cb0[14].xxyz
  16: dp3 r1.x, r0.yzwy, r0.yzwy
  17: sample r2.xyzw, r0.yzwy, t3.xyzw, s4
  18: sample r1.xyzw, r1.xxxx, t2.xyzw, s5
  19: mul r0.y, r2.w, r1.x
  20: mul r0.x, r0.x, r0.y
  21: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  22: dp3 r0.w, v5.xyzx, v5.xyzx
  23: rsq r0.w, r0.w
  24: mul r1.xyz, r0.wwww, v5.xyzx
  25: mov r2.x, v3.w
  26: mov r2.y, v4.w
  27: mov r2.z, v5.w
  28: dp3_sat r0.w, r1.xyzx, r2.xyzx
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: dp3 r0.w, -v2.xyzx, r1.xyzx
  31: add r0.w, r0.w, r0.w
  32: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  33: dp3 r0.w, r1.xyzx, r2.xyzx
  34: mul r0.w, r0.w, r0.w
  35: mul r1.x, r0.w, r0.w
  36: sample r2.xyzw, v1.xyxx, t1.xyzw, s3
  37: mad r1.y, -r2.w, cb0[9].x, l(1.000000)
  38: sample r1.xyzw, r1.xyxx, t4.xyzw, s0
  39: mul r0.w, r1.x, l(16.000000)
  40: mul r1.xyz, r2.xyzx, r0.wwww
  41: add r0.w, -r2.x, l(1.000000)
  42: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
  43: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  44: mad r1.xyz, r2.xyzx, r0.wwww, r1.xyzx
  45: mul o0.xyz, r0.xyzx, r1.xyzx
  46: mov o0.w, l(1.000000)
  47: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 44 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov o3.w, r1.x
  28: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  29: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  30: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  31: dp3 r1.x, r2.xyzx, r2.xyzx
  32: rsq r1.x, r1.x
  33: mul r2.xyz, r1.xxxx, r2.xyzx
  34: mov o3.xyz, r2.xyzx
  35: dp3 r3.x, v1.xyzx, cb3[4].xyzx
  36: dp3 r3.y, v1.xyzx, cb3[5].xyzx
  37: dp3 r3.z, v1.xyzx, cb3[6].xyzx
  38: dp3 r1.x, r3.xyzx, r3.xyzx
  39: rsq r1.x, r1.x
  40: mul r3.xyz, r1.xxxx, r3.xyzx
  41: mul r4.xyz, r2.yzxy, r3.zxyz
  42: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  43: mov o5.xyz, r3.xyzx
  44: mul r1.x, v4.w, cb3[9].w
  45: mul o4.xyz, r1.xxxx, r2.xyzx
  46: mov o4.w, r1.y
  47: mov o5.w, r1.z
  48: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  49: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  50: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  51: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  52: mov o8.xyzw, l(0,0,0,0)
  53: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 6 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 6
Set CUBE Texture "_LightTexture0" to slot 4 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 5 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 6 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[3], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: add r0.xyz, v6.xyzx, -cb1[1].xyzx
   1: max r0.w, |r0.y|, |r0.x|
   2: max r0.w, |r0.z|, r0.w
   3: add r0.w, r0.w, -cb1[2].z
   4: max r0.w, r0.w, l(0.000010)
   5: mul r0.w, r0.w, cb1[2].w
   6: div r0.w, cb1[2].y, r0.w
   7: add r0.w, r0.w, -cb1[2].x
   8: add r0.w, -r0.w, l(1.000000)
   9: sample_c_lz r0.x, r0.xyzx, t6.xxxx, s1, r0.w
  10: add r0.y, -cb2[24].x, l(1.000000)
  11: mad r0.x, r0.x, r0.y, cb2[24].x
  12: mul r0.yzw, v6.yyyy, cb0[12].xxyz
  13: mad r0.yzw, cb0[11].xxyz, v6.xxxx, r0.yyzw
  14: mad r0.yzw, cb0[13].xxyz, v6.zzzz, r0.yyzw
  15: add r0.yzw, r0.yyzw, cb0[14].xxyz
  16: dp3 r1.x, r0.yzwy, r0.yzwy
  17: sample r2.xyzw, r0.yzwy, t4.xyzw, s5
  18: sample r1.xyzw, r1.xxxx, t3.xyzw, s6
  19: mul r0.y, r2.w, r1.x
  20: mul r0.x, r0.x, r0.y
  21: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  22: sample r1.xyzw, v1.xyxx, t2.xyzw, s3
  23: mul r1.x, r1.w, r1.x
  24: mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  25: mul r2.xyz, r1.yyyy, v4.xyzx
  26: mad r2.xyz, v3.xyzx, r1.xxxx, r2.xyzx
  27: dp2 r0.w, r1.xyxx, r1.xyxx
  28: min r0.w, r0.w, l(1.000000)
  29: add r0.w, -r0.w, l(1.000000)
  30: sqrt r0.w, r0.w
  31: mad r1.xyz, v5.xyzx, r0.wwww, r2.xyzx
  32: mov r2.x, v3.w
  33: mov r2.y, v4.w
  34: mov r2.z, v5.w
  35: dp3_sat r0.w, r1.xyzx, r2.xyzx
  36: mul r0.xyz, r0.wwww, r0.xyzx
  37: dp3 r0.w, -v2.xyzx, r1.xyzx
  38: add r0.w, r0.w, r0.w
  39: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  40: dp3 r0.w, r1.xyzx, r2.xyzx
  41: mul r0.w, r0.w, r0.w
  42: mul r1.x, r0.w, r0.w
  43: sample r2.xyzw, v1.xyxx, t1.xyzw, s4
  44: mad r1.y, -r2.w, cb0[9].x, l(1.000000)
  45: sample r1.xyzw, r1.xyxx, t5.xyzw, s0
  46: mul r0.w, r1.x, l(16.000000)
  47: mul r1.xyz, r2.xyzx, r0.wwww
  48: add r0.w, -r2.x, l(1.000000)
  49: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
  50: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  51: mad r1.xyz, r2.xyzx, r0.wwww, r1.xyzx
  52: mul o0.xyz, r0.xyzx, r1.xyzx
  53: mov o0.w, l(1.000000)
  54: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 45 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add r2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: dp3 r1.x, r2.xyzx, r2.xyzx
  21: rsq r1.x, r1.x
  22: mul o2.xyz, r1.xxxx, r2.xyzx
  23: mov o2.w, l(0)
  24: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  25: mov o6.xyz, r1.yzwy
  26: dp3 r1.x, r2.xyzx, r2.xyzx
  27: rsq r1.x, r1.x
  28: mul r1.xyz, r1.xxxx, r2.xyzx
  29: mov o3.w, r1.x
  30: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  31: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  32: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  33: dp3 r1.x, r2.xyzx, r2.xyzx
  34: rsq r1.x, r1.x
  35: mul r2.xyz, r1.xxxx, r2.xyzx
  36: mov o3.xyz, r2.xyzx
  37: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  38: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  39: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  40: dp3 r1.x, r3.xyzx, r3.xyzx
  41: rsq r1.x, r1.x
  42: mul r3.xyz, r1.xxxx, r3.xyzx
  43: mul r4.xyz, r2.yzxy, r3.zxyz
  44: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  45: mov o5.xyz, r3.xyzx
  46: mul r1.x, v4.w, cb2[9].w
  47: mul o4.xyz, r1.xxxx, r2.xyzx
  48: mov o4.w, r1.y
  49: mov o5.w, r1.z
  50: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  51: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  52: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  53: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  54: mov o8.xyzw, l(0,0,0,0)
  55: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 3 temp registers, 6 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_LightTextureB0" to slot 3 sampler slot 6
Set CUBE Texture "_LightTexture0" to slot 4 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 5 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 6 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[3], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_sampler s6, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_resource_texture2d (float,float,float,float) t5
      dcl_resource_texturecube (float,float,float,float) t6
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: add r0.xyz, v6.xyzx, -cb1[1].xyzx
   1: max r0.w, |r0.y|, |r0.x|
   2: max r0.w, |r0.z|, r0.w
   3: add r0.w, r0.w, -cb1[2].z
   4: max r0.w, r0.w, l(0.000010)
   5: mul r0.w, r0.w, cb1[2].w
   6: div r0.w, cb1[2].y, r0.w
   7: add r0.w, r0.w, -cb1[2].x
   8: add r0.w, -r0.w, l(1.000000)
   9: sample_c_lz r0.x, r0.xyzx, t6.xxxx, s1, r0.w
  10: add r0.y, -cb2[24].x, l(1.000000)
  11: mad r0.x, r0.x, r0.y, cb2[24].x
  12: mul r0.yzw, v6.yyyy, cb0[12].xxyz
  13: mad r0.yzw, cb0[11].xxyz, v6.xxxx, r0.yyzw
  14: mad r0.yzw, cb0[13].xxyz, v6.zzzz, r0.yyzw
  15: add r0.yzw, r0.yyzw, cb0[14].xxyz
  16: dp3 r1.x, r0.yzwy, r0.yzwy
  17: sample r2.xyzw, r0.yzwy, t4.xyzw, s5
  18: sample r1.xyzw, r1.xxxx, t3.xyzw, s6
  19: mul r0.y, r2.w, r1.x
  20: mul r0.x, r0.x, r0.y
  21: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  22: sample r1.xyzw, v1.xyxx, t2.xyzw, s3
  23: mul r1.x, r1.w, r1.x
  24: mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  25: mul r2.xyz, r1.yyyy, v4.xyzx
  26: mad r2.xyz, v3.xyzx, r1.xxxx, r2.xyzx
  27: dp2 r0.w, r1.xyxx, r1.xyxx
  28: min r0.w, r0.w, l(1.000000)
  29: add r0.w, -r0.w, l(1.000000)
  30: sqrt r0.w, r0.w
  31: mad r1.xyz, v5.xyzx, r0.wwww, r2.xyzx
  32: mov r2.x, v3.w
  33: mov r2.y, v4.w
  34: mov r2.z, v5.w
  35: dp3_sat r0.w, r1.xyzx, r2.xyzx
  36: mul r0.xyz, r0.wwww, r0.xyzx
  37: dp3 r0.w, -v2.xyzx, r1.xyzx
  38: add r0.w, r0.w, r0.w
  39: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  40: dp3 r0.w, r1.xyzx, r2.xyzx
  41: mul r0.w, r0.w, r0.w
  42: mul r1.x, r0.w, r0.w
  43: sample r2.xyzw, v1.xyxx, t1.xyzw, s4
  44: mad r1.y, -r2.w, cb0[9].x, l(1.000000)
  45: sample r1.xyzw, r1.xyxx, t5.xyzw, s0
  46: mul r0.w, r1.x, l(16.000000)
  47: mul r1.xyz, r2.xyzx, r0.wwww
  48: add r0.w, -r2.x, l(1.000000)
  49: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
  50: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  51: mad r1.xyz, r2.xyzx, r0.wwww, r1.xyzx
  52: mul o0.xyz, r0.xyzx, r1.xyzx
  53: mov o0.w, l(1.000000)
  54: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov r1.w, l(0)
  28: mov o3.xyzw, r1.wwwx
  29: mov o4.xyzw, r1.wwwy
  30: mov o5.w, r1.z
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul o5.xyz, r1.wwww, r1.xyzx
  37: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  38: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  39: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  40: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  41: mov o8.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 37 math, 3 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[3], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: add r0.xyz, v6.xyzx, -cb1[1].xyzx
   1: max r0.w, |r0.y|, |r0.x|
   2: max r0.w, |r0.z|, r0.w
   3: add r0.w, r0.w, -cb1[2].z
   4: max r0.w, r0.w, l(0.000010)
   5: mul r0.w, r0.w, cb1[2].w
   6: div r0.w, cb1[2].y, r0.w
   7: add r0.w, r0.w, -cb1[2].x
   8: add r0.w, -r0.w, l(1.000000)
   9: sample_c_lz r0.x, r0.xyzx, t4.xxxx, s1, r0.w
  10: add r0.y, -cb2[24].x, l(1.000000)
  11: mad r0.x, r0.x, r0.y, cb2[24].x
  12: mul r0.yzw, v6.yyyy, cb0[12].xxyz
  13: mad r0.yzw, cb0[11].xxyz, v6.xxxx, r0.yyzw
  14: mad r0.yzw, cb0[13].xxyz, v6.zzzz, r0.yyzw
  15: add r0.yzw, r0.yyzw, cb0[14].xxyz
  16: dp3 r1.x, r0.yzwy, r0.yzwy
  17: sample r2.xyzw, r0.yzwy, t2.xyzw, s3
  18: sample r1.xyzw, r1.xxxx, t1.xyzw, s4
  19: mul r0.y, r2.w, r1.x
  20: mul r0.x, r0.x, r0.y
  21: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  22: dp3 r0.w, v5.xyzx, v5.xyzx
  23: rsq r0.w, r0.w
  24: mul r1.xyz, r0.wwww, v5.xyzx
  25: mov r2.x, v3.w
  26: mov r2.y, v4.w
  27: mov r2.z, v5.w
  28: dp3_sat r0.w, r1.xyzx, r2.xyzx
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: dp3 r0.w, -v2.xyzx, r1.xyzx
  31: add r0.w, r0.w, r0.w
  32: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  33: dp3 r0.w, r1.xyzx, r2.xyzx
  34: mul r0.w, r0.w, r0.w
  35: mul r1.x, r0.w, r0.w
  36: add r1.y, -cb0[8].w, l(1.000000)
  37: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  38: mul r0.w, r1.x, l(16.000000)
  39: mul r1.xyz, r0.wwww, cb0[3].xyzx
  40: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
  41: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  42: add r0.w, -cb0[3].x, l(1.000000)
  43: mad r1.xyz, r2.xyzx, r0.wwww, r1.xyzx
  44: mul o0.xyz, r0.xyzx, r1.xyzx
  45: mov o0.w, l(1.000000)
  46: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT_COOKIE SHADOWS_CUBE UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add r2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: dp3 r1.x, r2.xyzx, r2.xyzx
  21: rsq r1.x, r1.x
  22: mul o2.xyz, r1.xxxx, r2.xyzx
  23: mov o2.w, l(0)
  24: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  25: mov o6.xyz, r1.yzwy
  26: dp3 r1.x, r2.xyzx, r2.xyzx
  27: rsq r1.x, r1.x
  28: mul r1.xyz, r1.xxxx, r2.xyzx
  29: mov r1.w, l(0)
  30: mov o3.xyzw, r1.wwwx
  31: mov o4.xyzw, r1.wwwy
  32: mov o5.w, r1.z
  33: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  34: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  35: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  36: dp3 r1.w, r1.xyzx, r1.xyzx
  37: rsq r1.w, r1.w
  38: mul o5.xyz, r1.wwww, r1.xyzx
  39: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  40: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  41: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  42: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  43: mov o8.xyzw, l(0,0,0,0)
  44: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 37 math, 3 temp registers, 4 textures
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_LightTextureB0" to slot 1 sampler slot 4
Set CUBE Texture "_LightTexture0" to slot 2 sampler slot 3
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 0
Set CUBE Texture "_ShadowMapTexture" to slot 4 sampler slot 1

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _SpecColor at 48
  Vector4 _Color at 64
  Float _Glossiness at 140
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _LightPositionRange at 16
  Vector4 _LightProjectionParams at 32
}
Constant Buffer "UnityShadows" (416 bytes) on slot 2 {
  Vector4 _LightShadowData at 384
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[3], immediateIndexed
      dcl_constantbuffer CB2[25], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_comparison
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texturecube (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texturecube (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 3
   0: add r0.xyz, v6.xyzx, -cb1[1].xyzx
   1: max r0.w, |r0.y|, |r0.x|
   2: max r0.w, |r0.z|, r0.w
   3: add r0.w, r0.w, -cb1[2].z
   4: max r0.w, r0.w, l(0.000010)
   5: mul r0.w, r0.w, cb1[2].w
   6: div r0.w, cb1[2].y, r0.w
   7: add r0.w, r0.w, -cb1[2].x
   8: add r0.w, -r0.w, l(1.000000)
   9: sample_c_lz r0.x, r0.xyzx, t4.xxxx, s1, r0.w
  10: add r0.y, -cb2[24].x, l(1.000000)
  11: mad r0.x, r0.x, r0.y, cb2[24].x
  12: mul r0.yzw, v6.yyyy, cb0[12].xxyz
  13: mad r0.yzw, cb0[11].xxyz, v6.xxxx, r0.yyzw
  14: mad r0.yzw, cb0[13].xxyz, v6.zzzz, r0.yyzw
  15: add r0.yzw, r0.yyzw, cb0[14].xxyz
  16: dp3 r1.x, r0.yzwy, r0.yzwy
  17: sample r2.xyzw, r0.yzwy, t2.xyzw, s3
  18: sample r1.xyzw, r1.xxxx, t1.xyzw, s4
  19: mul r0.y, r2.w, r1.x
  20: mul r0.x, r0.x, r0.y
  21: mul r0.xyz, r0.xxxx, cb0[2].xyzx
  22: dp3 r0.w, v5.xyzx, v5.xyzx
  23: rsq r0.w, r0.w
  24: mul r1.xyz, r0.wwww, v5.xyzx
  25: mov r2.x, v3.w
  26: mov r2.y, v4.w
  27: mov r2.z, v5.w
  28: dp3_sat r0.w, r1.xyzx, r2.xyzx
  29: mul r0.xyz, r0.wwww, r0.xyzx
  30: dp3 r0.w, -v2.xyzx, r1.xyzx
  31: add r0.w, r0.w, r0.w
  32: mad r1.xyz, r1.xyzx, -r0.wwww, -v2.xyzx
  33: dp3 r0.w, r1.xyzx, r2.xyzx
  34: mul r0.w, r0.w, r0.w
  35: mul r1.x, r0.w, r0.w
  36: add r1.y, -cb0[8].w, l(1.000000)
  37: sample r1.xyzw, r1.xyxx, t3.xyzw, s0
  38: mul r0.w, r1.x, l(16.000000)
  39: mul r1.xyz, r0.wwww, cb0[3].xyzx
  40: sample r2.xyzw, v1.xyxx, t0.xyzw, s2
  41: mul r2.xyz, r2.xyzx, cb0[4].xyzx
  42: add r0.w, -cb0[3].x, l(1.000000)
  43: mad r1.xyz, r2.xyzx, r0.wwww, r1.xyzx
  44: mul o0.xyz, r0.xyzx, r1.xyzx
  45: mov o0.w, l(1.000000)
  46: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 34 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[7], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 3
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov r1.w, l(0)
  28: mov o3.xyzw, r1.wwwx
  29: mov o4.xyzw, r1.wwwy
  30: mov o5.w, r1.z
  31: dp3 r1.x, v1.xyzx, cb3[4].xyzx
  32: dp3 r1.y, v1.xyzx, cb3[5].xyzx
  33: dp3 r1.z, v1.xyzx, cb3[6].xyzx
  34: dp3 r1.w, r1.xyzx, r1.xyzx
  35: rsq r1.w, r1.w
  36: mul o5.xyz, r1.wwww, r1.xyzx
  37: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  38: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  39: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  40: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  41: mov o8.xyzw, l(0,0,0,0)
  42: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 37 math, 6 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: dp3 r2.x, v5.xyzx, v5.xyzx
   5: rsq r2.x, r2.x
   6: mul r2.xyz, r2.xxxx, v5.xyzx
   7: mul r3.xyz, v6.yyyy, cb0[12].xyzx
   8: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
   9: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  10: add r3.xyz, r3.xyzx, cb0[14].xyzx
  11: eq r2.w, cb2[0].x, l(1.000000)
  12: if_nz r2.w
  13:   eq r2.w, cb2[0].y, l(1.000000)
  14:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  15:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  16:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  17:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  18:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  19:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  20:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  21:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  22:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  23:   max r4.x, r2.w, r3.w
  24:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  25: else 
  26:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  27: endif 
  28: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  29: dp3 r3.x, r3.xyzx, r3.xyzx
  30: sample r3.xyzw, r3.xxxx, t2.xyzw, s4
  31: mul r2.w, r2.w, r3.x
  32: mul r3.xyz, r2.wwww, cb0[2].xyzx
  33: dp3 r2.w, -v2.xyzx, r2.xyzx
  34: add r2.w, r2.w, r2.w
  35: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  36: mov r5.x, v3.w
  37: mov r5.y, v4.w
  38: mov r5.z, v5.w
  39: dp3_sat r2.x, r2.xyzx, r5.xyzx
  40: dp3 r2.y, r4.xyzx, r5.xyzx
  41: mul r2.y, r2.y, r2.y
  42: mul r4.x, r2.y, r2.y
  43: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  44: sample r4.xyzw, r4.xyxx, t3.xyzw, s1
  45: mul r0.w, r4.x, l(16.000000)
  46: mul r0.xyz, r0.xyzx, r0.wwww
  47: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  48: mul r1.xyz, r2.xxxx, r3.xyzx
  49: mul o0.xyz, r0.xyzx, r1.xyzx
  50: mov o0.w, l(1.000000)
  51: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 35 math, 4 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 4
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add r2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: dp3 r1.x, r2.xyzx, r2.xyzx
  21: rsq r1.x, r1.x
  22: mul o2.xyz, r1.xxxx, r2.xyzx
  23: mov o2.w, l(0)
  24: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  25: mov o6.xyz, r1.yzwy
  26: dp3 r1.x, r2.xyzx, r2.xyzx
  27: rsq r1.x, r1.x
  28: mul r1.xyz, r1.xxxx, r2.xyzx
  29: mov r1.w, l(0)
  30: mov o3.xyzw, r1.wwwx
  31: mov o4.xyzw, r1.wwwy
  32: mov o5.w, r1.z
  33: dp3 r1.x, v1.xyzx, cb2[4].xyzx
  34: dp3 r1.y, v1.xyzx, cb2[5].xyzx
  35: dp3 r1.z, v1.xyzx, cb2[6].xyzx
  36: dp3 r1.w, r1.xyzx, r1.xyzx
  37: rsq r1.w, r1.w
  38: mul o5.xyz, r1.wwww, r1.xyzx
  39: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  40: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  41: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  42: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  43: mov o8.xyzw, l(0,0,0,0)
  44: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 37 math, 6 temp registers, 5 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 2 sampler slot 4
Set 2D Texture "unity_NHxRoughness" to slot 3 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 4 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float      w
// TEXCOORD                 3   xyzw        4     NONE   float      w
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture3d (float,float,float,float) t4
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.w
      dcl_input_ps linear v4.w
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s3
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: dp3 r2.x, v5.xyzx, v5.xyzx
   5: rsq r2.x, r2.x
   6: mul r2.xyz, r2.xxxx, v5.xyzx
   7: mul r3.xyz, v6.yyyy, cb0[12].xyzx
   8: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
   9: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  10: add r3.xyz, r3.xyzx, cb0[14].xyzx
  11: eq r2.w, cb2[0].x, l(1.000000)
  12: if_nz r2.w
  13:   eq r2.w, cb2[0].y, l(1.000000)
  14:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  15:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  16:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  17:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  18:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  19:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  20:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  21:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  22:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  23:   max r4.x, r2.w, r3.w
  24:   sample r4.xyzw, r4.xzwx, t4.xyzw, s0
  25: else 
  26:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  27: endif 
  28: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  29: dp3 r3.x, r3.xyzx, r3.xyzx
  30: sample r3.xyzw, r3.xxxx, t2.xyzw, s4
  31: mul r2.w, r2.w, r3.x
  32: mul r3.xyz, r2.wwww, cb0[2].xyzx
  33: dp3 r2.w, -v2.xyzx, r2.xyzx
  34: add r2.w, r2.w, r2.w
  35: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  36: mov r5.x, v3.w
  37: mov r5.y, v4.w
  38: mov r5.z, v5.w
  39: dp3_sat r2.x, r2.xyzx, r5.xyzx
  40: dp3 r2.y, r4.xyzx, r5.xyzx
  41: mul r2.y, r2.y, r2.y
  42: mul r4.x, r2.y, r2.y
  43: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  44: sample r4.xyzw, r4.xyxx, t3.xyzw, s1
  45: mul r0.w, r4.x, l(16.000000)
  46: mul r0.xyz, r0.xyzx, r0.wwww
  47: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  48: mul r1.xyz, r2.xxxx, r3.xyzx
  49: mul o0.xyz, r0.xyzx, r1.xyzx
  50: mov o0.w, l(1.000000)
  51: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 44 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityPerCamera" (144 bytes) on slot 1 {
  Vector3 _WorldSpaceCameraPos at 64
}
Constant Buffer "UnityLighting" (768 bytes) on slot 2 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 3 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 4 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[5], immediateIndexed
      dcl_constantbuffer CB2[1], immediateIndexed
      dcl_constantbuffer CB3[10], immediateIndexed
      dcl_constantbuffer CB4[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb3[1].xyzw
   1: mad r0.xyzw, cb3[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb3[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb3[3].xyzw
   4: mad r0.xyzw, cb3[3].xyzw, v0.wwww, r0.xyzw
   5: mul r2.xyzw, r1.yyyy, cb4[18].xyzw
   6: mad r2.xyzw, cb4[17].xyzw, r1.xxxx, r2.xyzw
   7: mad r2.xyzw, cb4[19].xyzw, r1.zzzz, r2.xyzw
   8: mad o0.xyzw, cb4[20].xyzw, r1.wwww, r2.xyzw
   9: eq r1.x, cb0[9].w, l(0.000000)
  10: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  11: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  12: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  13: mul r1.xyz, v0.yyyy, cb3[1].xyzx
  14: mad r1.xyz, cb3[0].xyzx, v0.xxxx, r1.xyzx
  15: mad r1.xyz, cb3[2].xyzx, v0.zzzz, r1.xyzx
  16: mad r1.xyz, cb3[3].xyzx, v0.wwww, r1.xyzx
  17: add r2.xyz, r1.xyzx, -cb1[4].xyzx
  18: dp3 r1.w, r2.xyzx, r2.xyzx
  19: rsq r1.w, r1.w
  20: mul o2.xyz, r1.wwww, r2.xyzx
  21: mov o2.w, l(0)
  22: mad r2.xyz, -r1.xyzx, cb2[0].wwww, cb2[0].xyzx
  23: mov o6.xyz, r1.xyzx
  24: dp3 r1.x, r2.xyzx, r2.xyzx
  25: rsq r1.x, r1.x
  26: mul r1.xyz, r1.xxxx, r2.xyzx
  27: mov o3.w, r1.x
  28: mul r2.xyz, v4.yyyy, cb3[1].xyzx
  29: mad r2.xyz, cb3[0].xyzx, v4.xxxx, r2.xyzx
  30: mad r2.xyz, cb3[2].xyzx, v4.zzzz, r2.xyzx
  31: dp3 r1.x, r2.xyzx, r2.xyzx
  32: rsq r1.x, r1.x
  33: mul r2.xyz, r1.xxxx, r2.xyzx
  34: mov o3.xyz, r2.xyzx
  35: dp3 r3.x, v1.xyzx, cb3[4].xyzx
  36: dp3 r3.y, v1.xyzx, cb3[5].xyzx
  37: dp3 r3.z, v1.xyzx, cb3[6].xyzx
  38: dp3 r1.x, r3.xyzx, r3.xyzx
  39: rsq r1.x, r1.x
  40: mul r3.xyz, r1.xxxx, r3.xyzx
  41: mul r4.xyz, r2.yzxy, r3.zxyz
  42: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  43: mov o5.xyz, r3.xyzx
  44: mul r1.x, v4.w, cb3[9].w
  45: mul o4.xyz, r1.xxxx, r2.xyzx
  46: mov o4.w, r1.y
  47: mov o5.w, r1.z
  48: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  49: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  50: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  51: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  52: mov o8.xyzw, l(0,0,0,0)
  53: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 6 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   5: mul r2.x, r2.w, r2.x
   6: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   7: dp2 r2.z, r2.xyxx, r2.xyxx
   8: min r2.z, r2.z, l(1.000000)
   9: add r2.z, -r2.z, l(1.000000)
  10: sqrt r2.z, r2.z
  11: mul r3.xyz, r2.yyyy, v4.xyzx
  12: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  13: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  14: mul r3.xyz, v6.yyyy, cb0[12].xyzx
  15: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  16: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  17: add r3.xyz, r3.xyzx, cb0[14].xyzx
  18: eq r2.w, cb2[0].x, l(1.000000)
  19: if_nz r2.w
  20:   eq r2.w, cb2[0].y, l(1.000000)
  21:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  22:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  23:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  24:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  25:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  26:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  27:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  28:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  29:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  30:   max r4.x, r2.w, r3.w
  31:   sample r4.xyzw, r4.xzwx, t5.xyzw, s0
  32: else 
  33:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  34: endif 
  35: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  36: dp3 r3.x, r3.xyzx, r3.xyzx
  37: sample r3.xyzw, r3.xxxx, t3.xyzw, s5
  38: mul r2.w, r2.w, r3.x
  39: mul r3.xyz, r2.wwww, cb0[2].xyzx
  40: dp3 r2.w, -v2.xyzx, r2.xyzx
  41: add r2.w, r2.w, r2.w
  42: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  43: mov r5.x, v3.w
  44: mov r5.y, v4.w
  45: mov r5.z, v5.w
  46: dp3_sat r2.x, r2.xyzx, r5.xyzx
  47: dp3 r2.y, r4.xyzx, r5.xyzx
  48: mul r2.y, r2.y, r2.y
  49: mul r4.x, r2.y, r2.y
  50: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  51: sample r4.xyzw, r4.xyxx, t4.xyzw, s1
  52: mul r0.w, r4.x, l(16.000000)
  53: mul r0.xyz, r0.xyzx, r0.wwww
  54: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  55: mul r1.xyz, r2.xxxx, r3.xyzx
  56: mul o0.xyz, r0.xyzx, r1.xyzx
  57: mov o0.w, l(1.000000)
  58: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: POINT UNITY_SINGLE_PASS_STEREO 
Local Keywords: _NORMALMAP _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 45 math, 5 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"
Uses vertex data channel "TexCoord0"
Uses vertex data channel "TexCoord1"
Uses vertex data channel "Tangent"

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _MainTex_ST at 96
  Vector4 _DetailAlbedoMap_ST at 112
  Float _UVSec at 156
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
  Vector4 unity_WorldTransformParams at 144
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
  Vector3 unity_StereoWorldSpaceCameraPos[2] at 1024
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xy          3     NONE   float   xy  
// TANGENT                  0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[1], immediateIndexed
      dcl_constantbuffer CB2[10], immediateIndexed
      dcl_constantbuffer CB3[66], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_input v2.xy
      dcl_input v3.xy
      dcl_input v4.xyzw
      dcl_output_siv o0.xyzw, position
      dcl_output o1.xyzw
      dcl_output o2.xyzw
      dcl_output o3.xyzw
      dcl_output o4.xyzw
      dcl_output o5.xyzw
      dcl_output o6.xyz
      dcl_output o7.xyz
      dcl_output o8.xyzw
      dcl_temps 5
   0: mul r0.xyzw, v0.yyyy, cb2[1].xyzw
   1: mad r0.xyzw, cb2[0].xyzw, v0.xxxx, r0.xyzw
   2: mad r0.xyzw, cb2[2].xyzw, v0.zzzz, r0.xyzw
   3: add r1.xyzw, r0.xyzw, cb2[3].xyzw
   4: mad r0.xyzw, cb2[3].xyzw, v0.wwww, r0.xyzw
   5: ishl r2.x, cb4[0].x, l(2)
   6: mul r3.xyzw, r1.yyyy, cb3[r2.x + 25].xyzw
   7: mad r3.xyzw, cb3[r2.x + 24].xyzw, r1.xxxx, r3.xyzw
   8: mad r3.xyzw, cb3[r2.x + 26].xyzw, r1.zzzz, r3.xyzw
   9: mad o0.xyzw, cb3[r2.x + 27].xyzw, r1.wwww, r3.xyzw
  10: eq r1.x, cb0[9].w, l(0.000000)
  11: movc r1.xy, r1.xxxx, v2.xyxx, v3.xyxx
  12: mad o1.zw, r1.xxxy, cb0[7].xxxy, cb0[7].zzzw
  13: mad o1.xy, v2.xyxx, cb0[6].xyxx, cb0[6].zwzz
  14: mov r1.x, cb4[0].x
  15: mul r1.yzw, v0.yyyy, cb2[1].xxyz
  16: mad r1.yzw, cb2[0].xxyz, v0.xxxx, r1.yyzw
  17: mad r1.yzw, cb2[2].xxyz, v0.zzzz, r1.yyzw
  18: mad r1.yzw, cb2[3].xxyz, v0.wwww, r1.yyzw
  19: add r2.xyz, r1.yzwy, -cb3[r1.x + 64].xyzx
  20: dp3 r1.x, r2.xyzx, r2.xyzx
  21: rsq r1.x, r1.x
  22: mul o2.xyz, r1.xxxx, r2.xyzx
  23: mov o2.w, l(0)
  24: mad r2.xyz, -r1.yzwy, cb1[0].wwww, cb1[0].xyzx
  25: mov o6.xyz, r1.yzwy
  26: dp3 r1.x, r2.xyzx, r2.xyzx
  27: rsq r1.x, r1.x
  28: mul r1.xyz, r1.xxxx, r2.xyzx
  29: mov o3.w, r1.x
  30: mul r2.xyz, v4.yyyy, cb2[1].xyzx
  31: mad r2.xyz, cb2[0].xyzx, v4.xxxx, r2.xyzx
  32: mad r2.xyz, cb2[2].xyzx, v4.zzzz, r2.xyzx
  33: dp3 r1.x, r2.xyzx, r2.xyzx
  34: rsq r1.x, r1.x
  35: mul r2.xyz, r1.xxxx, r2.xyzx
  36: mov o3.xyz, r2.xyzx
  37: dp3 r3.x, v1.xyzx, cb2[4].xyzx
  38: dp3 r3.y, v1.xyzx, cb2[5].xyzx
  39: dp3 r3.z, v1.xyzx, cb2[6].xyzx
  40: dp3 r1.x, r3.xyzx, r3.xyzx
  41: rsq r1.x, r1.x
  42: mul r3.xyz, r1.xxxx, r3.xyzx
  43: mul r4.xyz, r2.yzxy, r3.zxyz
  44: mad r2.xyz, r3.yzxy, r2.zxyz, -r4.xyzx
  45: mov o5.xyz, r3.xyzx
  46: mul r1.x, v4.w, cb2[9].w
  47: mul o4.xyz, r1.xxxx, r2.xyzx
  48: mov o4.w, r1.y
  49: mov o5.w, r1.z
  50: mul r1.xyz, r0.yyyy, cb0[12].xyzx
  51: mad r1.xyz, cb0[11].xyzx, r0.xxxx, r1.xyzx
  52: mad r0.xyz, cb0[13].xyzx, r0.zzzz, r1.xyzx
  53: mad o7.xyz, cb0[14].xyzx, r0.wwww, r0.xyzx
  54: mov o8.xyzw, l(0,0,0,0)
  55: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
// Stats: 43 math, 6 temp registers, 6 textures, 2 branches
Set 2D Texture "_MainTex" to slot 0 sampler slot 2
Set 2D Texture "_SpecGlossMap" to slot 1 sampler slot 4
Set 2D Texture "_BumpMap" to slot 2 sampler slot 3
Set 2D Texture "_LightTexture0" to slot 3 sampler slot 5
Set 2D Texture "unity_NHxRoughness" to slot 4 sampler slot 1
Set 3D Texture "unity_ProbeVolumeSH" to slot 5 sampler slot 0

Constant Buffer "$Globals" (240 bytes) on slot 0 {
  Matrix4x4 unity_WorldToLight at 176
  Vector4 _LightColor0 at 32
  Vector4 _Color at 64
  Float _GlossMapScale at 144
}
Constant Buffer "UnityLighting" (768 bytes) on slot 1 {
  Vector4 unity_OcclusionMaskSelector at 736
}
Constant Buffer "UnityProbeVolume" (112 bytes) on slot 2 {
  Matrix4x4 unity_ProbeVolumeWorldToObject at 16
  Vector4 unity_ProbeVolumeParams at 0
  Vector3 unity_ProbeVolumeSizeInv at 80
  Vector3 unity_ProbeVolumeMin at 96
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyz 
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
// TEXCOORD                 4   xyzw        5     NONE   float   xyzw
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float       
// TEXCOORD                 7   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_constantbuffer CB0[15], immediateIndexed
      dcl_constantbuffer CB1[47], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_sampler s0, mode_default
      dcl_sampler s1, mode_default
      dcl_sampler s2, mode_default
      dcl_sampler s3, mode_default
      dcl_sampler s4, mode_default
      dcl_sampler s5, mode_default
      dcl_resource_texture2d (float,float,float,float) t0
      dcl_resource_texture2d (float,float,float,float) t1
      dcl_resource_texture2d (float,float,float,float) t2
      dcl_resource_texture2d (float,float,float,float) t3
      dcl_resource_texture2d (float,float,float,float) t4
      dcl_resource_texture3d (float,float,float,float) t5
      dcl_input_ps linear v1.xy
      dcl_input_ps linear v2.xyz
      dcl_input_ps linear v3.xyzw
      dcl_input_ps linear v4.xyzw
      dcl_input_ps linear v5.xyzw
      dcl_input_ps linear v6.xyz
      dcl_output o0.xyzw
      dcl_temps 6
   0: sample r0.xyzw, v1.xyxx, t1.xyzw, s4
   1: sample r1.xyzw, v1.xyxx, t0.xyzw, s2
   2: mul r1.xyz, r1.xyzx, cb0[4].xyzx
   3: add r1.w, -r0.x, l(1.000000)
   4: sample r2.xyzw, v1.xyxx, t2.xyzw, s3
   5: mul r2.x, r2.w, r2.x
   6: mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
   7: dp2 r2.z, r2.xyxx, r2.xyxx
   8: min r2.z, r2.z, l(1.000000)
   9: add r2.z, -r2.z, l(1.000000)
  10: sqrt r2.z, r2.z
  11: mul r3.xyz, r2.yyyy, v4.xyzx
  12: mad r2.xyw, v3.xyxz, r2.xxxx, r3.xyxz
  13: mad r2.xyz, v5.xyzx, r2.zzzz, r2.xywx
  14: mul r3.xyz, v6.yyyy, cb0[12].xyzx
  15: mad r3.xyz, cb0[11].xyzx, v6.xxxx, r3.xyzx
  16: mad r3.xyz, cb0[13].xyzx, v6.zzzz, r3.xyzx
  17: add r3.xyz, r3.xyzx, cb0[14].xyzx
  18: eq r2.w, cb2[0].x, l(1.000000)
  19: if_nz r2.w
  20:   eq r2.w, cb2[0].y, l(1.000000)
  21:   mul r4.xyz, v6.yyyy, cb2[2].xyzx
  22:   mad r4.xyz, cb2[1].xyzx, v6.xxxx, r4.xyzx
  23:   mad r4.xyz, cb2[3].xyzx, v6.zzzz, r4.xyzx
  24:   add r4.xyz, r4.xyzx, cb2[4].xyzx
  25:   movc r4.xyz, r2.wwww, r4.xyzx, v6.xyzx
  26:   add r4.xyz, r4.xyzx, -cb2[6].xyzx
  27:   mul r4.yzw, r4.xxyz, cb2[5].xxyz
  28:   mad r2.w, r4.y, l(0.250000), l(0.750000)
  29:   mad r3.w, cb2[0].z, l(0.500000), l(0.750000)
  30:   max r4.x, r2.w, r3.w
  31:   sample r4.xyzw, r4.xzwx, t5.xyzw, s0
  32: else 
  33:   mov r4.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  34: endif 
  35: dp4_sat r2.w, r4.xyzw, cb1[46].xyzw
  36: dp3 r3.x, r3.xyzx, r3.xyzx
  37: sample r3.xyzw, r3.xxxx, t3.xyzw, s5
  38: mul r2.w, r2.w, r3.x
  39: mul r3.xyz, r2.wwww, cb0[2].xyzx
  40: dp3 r2.w, -v2.xyzx, r2.xyzx
  41: add r2.w, r2.w, r2.w
  42: mad r4.xyz, r2.xyzx, -r2.wwww, -v2.xyzx
  43: mov r5.x, v3.w
  44: mov r5.y, v4.w
  45: mov r5.z, v5.w
  46: dp3_sat r2.x, r2.xyzx, r5.xyzx
  47: dp3 r2.y, r4.xyzx, r5.xyzx
  48: mul r2.y, r2.y, r2.y
  49: mul r4.x, r2.y, r2.y
  50: mad r4.y, -r0.w, cb0[9].x, l(1.000000)
  51: sample r4.xyzw, r4.xyxx, t4.xyzw, s1
  52: mul r0.w, r4.x, l(16.000000)
  53: mul r0.xyz, r0.xyzx, r0.wwww
  54: mad r0.xyz, r1.xyzx, r1.wwww, r0.xyzx
  55: mul r1.xyz, r2.xxxx, r3.xyzx
  56: mul o0.xyz, r0.xyzx, r1.xyzx
  57: mov o0.w, l(1.000000)
  58: ret 
// Approximately 0 instruction slots used


 }


 // Stats for Vertex shader:
 //        d3d11: 29 avg math (27..32)
 Pass {
  Name "ShadowCaster"
  Tags { "LIGHTMODE"="SHADOWCASTER" "SHADOWSUPPORT"="true" "RenderType"="Opaque" "PerformanceChecks"="False" }
  //////////////////////////////////
  //                              //
  //      Compiled programs       //
  //                              //
  //////////////////////////////////
//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb2[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb2[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb2[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb3[18].xyzw
  22: mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
  25: div r1.x, cb1[5].x, r0.w
  26: min r1.x, r1.x, l(0.000000)
  27: max r1.x, r1.x, l(-1.000000)
  28: add r0.z, r0.z, r1.x
  29: min r1.x, r0.w, r0.z
  30: mov o0.xyw, r0.xyxw
  31: add r0.x, -r0.z, r1.x
  32: mad o0.z, cb1[5].y, r0.x, r0.z
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[32], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb2[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb2[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb2[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: ishl r0.w, cb4[0].x, l(2)
  22: mul r2.xyzw, r0.yyyy, cb3[r0.w + 25].xyzw
  23: mad r2.xyzw, cb3[r0.w + 24].xyzw, r0.xxxx, r2.xyzw
  24: mad r2.xyzw, cb3[r0.w + 26].xyzw, r0.zzzz, r2.xyzw
  25: mad r0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
  26: div r1.x, cb1[5].x, r0.w
  27: min r1.x, r1.x, l(0.000000)
  28: max r1.x, r1.x, l(-1.000000)
  29: add r0.z, r0.z, r1.x
  30: min r1.x, r0.w, r0.z
  31: mov o0.xyw, r0.xyxw
  32: add r0.x, -r0.z, r1.x
  33: mad o0.z, cb1[5].y, r0.x, r0.z
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_CUBE 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 27 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb2[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb2[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb2[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb3[18].xyzw
  22: mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
  25: min r1.x, r0.w, r0.z
  26: add r1.x, -r0.z, r1.x
  27: mad o0.z, cb1[5].y, r1.x, r0.z
  28: mov o0.xyw, r0.xyxw
  29: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_CUBE UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[32], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb2[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb2[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb2[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: ishl r0.w, cb4[0].x, l(2)
  22: mul r2.xyzw, r0.yyyy, cb3[r0.w + 25].xyzw
  23: mad r2.xyzw, cb3[r0.w + 24].xyzw, r0.xxxx, r2.xyzw
  24: mad r2.xyzw, cb3[r0.w + 26].xyzw, r0.zzzz, r2.xyzw
  25: mad r0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
  26: min r1.x, r0.w, r0.z
  27: add r1.x, -r0.z, r1.x
  28: mad o0.z, cb1[5].y, r1.x, r0.z
  29: mov o0.xyw, r0.xyxw
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_CUBE 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 27 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb2[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb2[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb2[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb3[18].xyzw
  22: mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
  25: min r1.x, r0.w, r0.z
  26: add r1.x, -r0.z, r1.x
  27: mad o0.z, cb1[5].y, r1.x, r0.z
  28: mov o0.xyw, r0.xyxw
  29: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_CUBE UNITY_SINGLE_PASS_STEREO 
Local Keywords: <none>
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 28 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[32], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb2[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb2[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb2[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: ishl r0.w, cb4[0].x, l(2)
  22: mul r2.xyzw, r0.yyyy, cb3[r0.w + 25].xyzw
  23: mad r2.xyzw, cb3[r0.w + 24].xyzw, r0.xxxx, r2.xyzw
  24: mad r2.xyzw, cb3[r0.w + 26].xyzw, r0.zzzz, r2.xyzw
  25: mad r0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
  26: min r1.x, r0.w, r0.z
  27: add r1.x, -r0.z, r1.x
  28: mad o0.z, cb1[5].y, r1.x, r0.z
  29: mov o0.xyw, r0.xyxw
  30: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 31 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityPerFrame" (368 bytes) on slot 3 {
  Matrix4x4 unity_MatrixVP at 272
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[21], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb2[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb2[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb2[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: mul r2.xyzw, r0.yyyy, cb3[18].xyzw
  22: mad r2.xyzw, cb3[17].xyzw, r0.xxxx, r2.xyzw
  23: mad r0.xyzw, cb3[19].xyzw, r0.zzzz, r2.xyzw
  24: mad r0.xyzw, cb3[20].xyzw, r1.wwww, r0.xyzw
  25: div r1.x, cb1[5].x, r0.w
  26: min r1.x, r1.x, l(0.000000)
  27: max r1.x, r1.x, l(-1.000000)
  28: add r0.z, r0.z, r1.x
  29: min r1.x, r0.w, r0.z
  30: mov o0.xyw, r0.xyxw
  31: add r0.x, -r0.z, r1.x
  32: mad o0.z, cb1[5].y, r0.x, r0.z
  33: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


//////////////////////////////////////////////////////
Global Keywords: SHADOWS_DEPTH UNITY_SINGLE_PASS_STEREO 
Local Keywords: _SPECGLOSSMAP 
-- Hardware tier variant: Tier 1
-- Vertex shader for "d3d11":
// Stats: 32 math, 3 temp registers
Uses vertex data channel "Vertex"
Uses vertex data channel "Normal"

Constant Buffer "UnityLighting" (768 bytes) on slot 0 {
  Vector4 _WorldSpaceLightPos0 at 0
}
Constant Buffer "UnityShadows" (416 bytes) on slot 1 {
  Vector4 unity_LightShadowBias at 80
}
Constant Buffer "UnityPerDraw" (176 bytes) on slot 2 {
  Matrix4x4 unity_ObjectToWorld at 0
  Matrix4x4 unity_WorldToObject at 64
}
Constant Buffer "UnityStereoGlobals" (1088 bytes) on slot 3 {
  Matrix4x4 unity_StereoMatrixVP[2] at 384
}
Constant Buffer "UnityStereoEyeIndex" (16 bytes) on slot 4 {
  ScalarInt unity_StereoEyeIndex at 0
}

Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
//
      vs_4_0
      dcl_constantbuffer CB0[1], immediateIndexed
      dcl_constantbuffer CB1[6], immediateIndexed
      dcl_constantbuffer CB2[7], immediateIndexed
      dcl_constantbuffer CB3[32], dynamicIndexed
      dcl_constantbuffer CB4[1], immediateIndexed
      dcl_input v0.xyzw
      dcl_input v1.xyz
      dcl_output_siv o0.xyzw, position
      dcl_temps 3
   0: dp3 r0.x, v1.xyzx, cb2[4].xyzx
   1: dp3 r0.y, v1.xyzx, cb2[5].xyzx
   2: dp3 r0.z, v1.xyzx, cb2[6].xyzx
   3: dp3 r0.w, r0.xyzx, r0.xyzx
   4: rsq r0.w, r0.w
   5: mul r0.xyz, r0.wwww, r0.xyzx
   6: mul r1.xyzw, v0.yyyy, cb2[1].xyzw
   7: mad r1.xyzw, cb2[0].xyzw, v0.xxxx, r1.xyzw
   8: mad r1.xyzw, cb2[2].xyzw, v0.zzzz, r1.xyzw
   9: mad r1.xyzw, cb2[3].xyzw, v0.wwww, r1.xyzw
  10: mad r2.xyz, -r1.xyzx, cb0[0].wwww, cb0[0].xyzx
  11: dp3 r0.w, r2.xyzx, r2.xyzx
  12: rsq r0.w, r0.w
  13: mul r2.xyz, r0.wwww, r2.xyzx
  14: dp3 r0.w, r0.xyzx, r2.xyzx
  15: mad r0.w, -r0.w, r0.w, l(1.000000)
  16: sqrt r0.w, r0.w
  17: mul r0.w, r0.w, cb1[5].z
  18: mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
  19: ne r0.w, cb1[5].z, l(0.000000)
  20: movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
  21: ishl r0.w, cb4[0].x, l(2)
  22: mul r2.xyzw, r0.yyyy, cb3[r0.w + 25].xyzw
  23: mad r2.xyzw, cb3[r0.w + 24].xyzw, r0.xxxx, r2.xyzw
  24: mad r2.xyzw, cb3[r0.w + 26].xyzw, r0.zzzz, r2.xyzw
  25: mad r0.xyzw, cb3[r0.w + 27].xyzw, r1.wwww, r2.xyzw
  26: div r1.x, cb1[5].x, r0.w
  27: min r1.x, r1.x, l(0.000000)
  28: max r1.x, r1.x, l(-1.000000)
  29: add r0.z, r0.z, r1.x
  30: min r1.x, r0.w, r0.z
  31: mov o0.xyw, r0.xyxw
  32: add r0.x, -r0.z, r1.x
  33: mad o0.z, cb1[5].y, r0.x, r0.z
  34: ret 
// Approximately 0 instruction slots used


-- Hardware tier variant: Tier 1
-- Fragment shader for "d3d11":
Shader Disassembly:
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
      ps_4_0
      dcl_output o0.xyzw
   0: mov o0.xyzw, l(0,0,0,0)
   1: ret 
// Approximately 0 instruction slots used


 }
}
CustomEditor "StandardShaderGUI"
Fallback "VertexLit"
}